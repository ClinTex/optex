import {core_data} from "../../canisters/core_data"
(function ($global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var haxe_ui_backend_ComponentSurface = function() {
};
$hxClasses["haxe.ui.backend.ComponentSurface"] = haxe_ui_backend_ComponentSurface;
haxe_ui_backend_ComponentSurface.__name__ = "haxe.ui.backend.ComponentSurface";
haxe_ui_backend_ComponentSurface.prototype = {
	__class__: haxe_ui_backend_ComponentSurface
};
var haxe_ui_core_ComponentCommon = function() {
	haxe_ui_backend_ComponentSurface.call(this);
};
$hxClasses["haxe.ui.core.ComponentCommon"] = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentCommon.__name__ = "haxe.ui.core.ComponentCommon";
haxe_ui_core_ComponentCommon.__super__ = haxe_ui_backend_ComponentSurface;
haxe_ui_core_ComponentCommon.prototype = $extend(haxe_ui_backend_ComponentSurface.prototype,{
	getTextDisplay: function() {
		return null;
	}
	,hasTextDisplay: function() {
		return false;
	}
	,getTextInput: function() {
		return null;
	}
	,hasTextInput: function() {
		return false;
	}
	,getImageDisplay: function() {
		return null;
	}
	,hasImageDisplay: function() {
		return false;
	}
	,__class__: haxe_ui_core_ComponentCommon
});
var haxe_ui_core_IClonable = function() { };
$hxClasses["haxe.ui.core.IClonable"] = haxe_ui_core_IClonable;
haxe_ui_core_IClonable.__name__ = "haxe.ui.core.IClonable";
haxe_ui_core_IClonable.__isInterface__ = true;
haxe_ui_core_IClonable.prototype = {
	cloneComponent: null
	,self: null
	,__class__: haxe_ui_core_IClonable
};
var haxe_ui_core_ComponentContainer = function() {
	this._id = null;
	this._layoutLocked = false;
	this._layout = null;
	this._ready = false;
	this.parentComponent = null;
	haxe_ui_core_ComponentCommon.call(this);
	this.behaviours = new haxe_ui_behaviours_Behaviours(js_Boot.__cast(this , haxe_ui_core_Component));
};
$hxClasses["haxe.ui.core.ComponentContainer"] = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentContainer.__name__ = "haxe.ui.core.ComponentContainer";
haxe_ui_core_ComponentContainer.__interfaces__ = [haxe_ui_core_IClonable];
haxe_ui_core_ComponentContainer.__super__ = haxe_ui_core_ComponentCommon;
haxe_ui_core_ComponentContainer.prototype = $extend(haxe_ui_core_ComponentCommon.prototype,{
	behaviours: null
	,parentComponent: null
	,dispatch: function(event) {
	}
	,_ready: null
	,isReady: null
	,get_isReady: function() {
		return this._ready;
	}
	,_children: null
	,childComponents: null
	,get_childComponents: function() {
		if(this._children == null) {
			return [];
		}
		return this._children;
	}
	,registerBehaviours: function() {
		this.behaviours.register("disabled",haxe_ui_core_ComponentDisabledBehaviour);
		this.behaviours.register("tooltip",haxe_ui_core_ComponentToolTipBehaviour,null);
		this.behaviours.register("tooltipRenderer",haxe_ui_core_ComponentToolTipRendererBehaviour,null);
		this.behaviours.register("text",haxe_ui_core_ComponentTextBehaviour);
		this.behaviours.register("value",haxe_ui_core_ComponentValueBehaviour);
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,moveComponentToBack: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,0);
	}
	,moveComponentBackward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == 0) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index - 1);
	}
	,moveComponentToFront: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,this.parentComponent.get_numComponents() - 1);
	}
	,moveComponentFrontward: function() {
		if(this.parentComponent == null || this.parentComponent.get_numComponents() <= 1) {
			return;
		}
		var index = this.parentComponent.getComponentIndex(this);
		if(index == this.parentComponent.get_numComponents() - 1) {
			return;
		}
		this.parentComponent.setComponentIndex(this,index + 1);
	}
	,bottomComponent: null
	,get_bottomComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[0];
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this._children == null || this._children.length == 0) {
			return null;
		}
		return this._children[this._children.length - 1];
	}
	,_layout: null
	,_layoutLocked: null
	,_style: null
	,_id: null
	,get_id: function() {
		return this._id;
	}
	,set_id: function(value) {
		if(this._id != value) {
			this._id = value;
		}
		return this._id;
	}
	,get_disabled: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("disabled"));
	}
	,set_disabled: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("disabled",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"disabled"));
		return value;
	}
	,get_tooltip: function() {
		return this.behaviours.getDynamic("tooltip");
	}
	,set_tooltip: function(value) {
		this.behaviours.setDynamic("tooltip",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltip"));
		return value;
	}
	,get_tooltipRenderer: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("tooltipRenderer"));
	}
	,set_tooltipRenderer: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tooltipRenderer",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tooltipRenderer"));
		return value;
	}
	,get_text: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("text"));
	}
	,set_text: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"text",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("text",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"text"));
		return value;
	}
	,get_value: function() {
		return this.behaviours.getDynamic("value");
	}
	,set_value: function(value) {
		this.behaviours.setDynamic("value",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"value"));
		return value;
	}
	,cloneComponent: function() {
		var c = this.self();
		if(this.get_id() != null) {
			c.set_id(this.get_id());
		}
		c.set_disabled(this.get_disabled());
		if(this.get_tooltip() != null) {
			c.set_tooltip(this.get_tooltip());
		}
		if(this.get_tooltipRenderer() != null) {
			c.set_tooltipRenderer(this.get_tooltipRenderer());
		}
		if(this.get_text() != null) {
			c.set_text(this.get_text());
		}
		if(this.get_value() != null) {
			c.set_value(this.get_value());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentContainer();
	}
	,__class__: haxe_ui_core_ComponentContainer
	,__properties__: {set_value:"set_value",get_value:"get_value",set_text:"set_text",get_text:"get_text",set_tooltipRenderer:"set_tooltipRenderer",get_tooltipRenderer:"get_tooltipRenderer",set_tooltip:"set_tooltip",get_tooltip:"get_tooltip",set_disabled:"set_disabled",get_disabled:"get_disabled",set_id:"set_id",get_id:"get_id",get_topComponent:"get_topComponent",get_bottomComponent:"get_bottomComponent",get_childComponents:"get_childComponents",get_isReady:"get_isReady"}
});
var haxe_ui_core_ComponentEvents = function() {
	this._pausedEvents = null;
	this._interactivityDisabledCounter = 0;
	this._interactivityDisabled = false;
	this._internalEventsClass = null;
	this._internalEvents = null;
	haxe_ui_core_ComponentContainer.call(this);
};
$hxClasses["haxe.ui.core.ComponentEvents"] = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentEvents.__name__ = "haxe.ui.core.ComponentEvents";
haxe_ui_core_ComponentEvents.__super__ = haxe_ui_core_ComponentContainer;
haxe_ui_core_ComponentEvents.prototype = $extend(haxe_ui_core_ComponentContainer.prototype,{
	_internalEvents: null
	,_internalEventsClass: null
	,registerInternalEvents: function(eventsClass,reregister) {
		if(reregister == null) {
			reregister = false;
		}
		if(this._internalEvents == null && eventsClass != null) {
			this._internalEvents = Type.createInstance(eventsClass,[this]);
			this._internalEvents.register();
		}
		if(reregister == true && this._internalEvents != null) {
			this._internalEvents.register();
		}
	}
	,unregisterInternalEvents: function() {
		if(this._internalEvents == null) {
			return;
		}
		this._internalEvents.unregister();
		this._internalEvents = null;
	}
	,__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if((js_Boot.__cast(this , haxe_ui_core_Component)).classes.indexOf(":mobile") != -1 && (type == "mouseover" || type == "mouseout")) {
			return;
		}
		if(this.get_disabled() == true && this.isInteractiveEvent(type) == true) {
			if(this._disabledEvents == null) {
				this._disabledEvents = new haxe_ui_util_EventMap();
			}
			this._disabledEvents.add(type,listener,priority);
			return;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		if(this.__events.add(type,listener,priority) == true) {
			this.mapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._disabledEvents != null && !this._interactivityDisabled) {
			this._disabledEvents.remove(type,listener);
		}
		if(this.__events != null) {
			if(this.__events.remove(type,listener) == true) {
				this.unmapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,dispatch: function(event) {
		if(event != null) {
			if(this.__events != null) {
				this.__events.invoke(event.type,event,js_Boot.__cast(this , haxe_ui_core_Component));
			}
			if(event.bubble == true && event.canceled == false && this.parentComponent != null) {
				this.parentComponent.dispatch(event);
			}
		}
	}
	,dispatchRecursively: function(event) {
		this.dispatch(event);
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.dispatchRecursively(event);
		}
	}
	,dispatchRecursivelyWhen: function(event,condition) {
		if(condition(this) == true) {
			this.dispatch(event);
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(condition(child) == true) {
				child.dispatchRecursivelyWhen(event,condition);
			}
		}
	}
	,_onMappedEvent: function(event) {
		this.dispatch(event);
	}
	,_disabledEvents: null
	,isInteractiveEvent: function(type) {
		return haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS.indexOf(type) != -1;
	}
	,disableInteractiveEvents: function(disable) {
		if(disable == true) {
			if(this.__events != null) {
				var eventType = this.__events.keys();
				while(eventType.hasNext()) {
					var eventType1 = eventType.next();
					if(!this.isInteractiveEvent(eventType1)) {
						continue;
					}
					var listeners = this.__events.listeners(eventType1);
					if(listeners != null) {
						var listener = listeners.copy().iterator();
						while(listener.hasNext()) {
							var listener1 = listener.next();
							if(this._disabledEvents == null) {
								this._disabledEvents = new haxe_ui_util_EventMap();
							}
							this._disabledEvents.add(eventType1,haxe_ui_util_Listener.toFunc(listener1));
							this.unregisterEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
						}
					}
				}
			}
		} else if(this._disabledEvents != null) {
			var eventType = this._disabledEvents.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				var listeners = this._disabledEvents.listeners(eventType1);
				if(listeners != null) {
					var listener = listeners.copy().iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						this.registerEvent(eventType1,haxe_ui_util_Listener.toFunc(listener1));
					}
				}
			}
			this._disabledEvents = null;
		}
	}
	,_interactivityDisabled: null
	,_interactivityDisabledCounter: null
	,disableInteractivity: function(disable,recursive,updateStyle,force) {
		if(force == null) {
			force = false;
		}
		if(updateStyle == null) {
			updateStyle = false;
		}
		if(recursive == null) {
			recursive = true;
		}
		if(force == true) {
			this._interactivityDisabledCounter = 0;
		}
		if(disable == true) {
			this._interactivityDisabledCounter++;
		} else {
			this._interactivityDisabledCounter--;
		}
		if(this._interactivityDisabledCounter > 0 && this._interactivityDisabled == false) {
			this._interactivityDisabled = true;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).swapClass(":disabled",":hover");
			}
			this.disableInteractiveEvents(true);
			this.dispatch(new haxe_ui_events_UIEvent("disabled"));
		} else if(this._interactivityDisabledCounter < 1 && this._interactivityDisabled == true) {
			this._interactivityDisabled = false;
			if(updateStyle == true) {
				(js_Boot.__cast(this , haxe_ui_core_Component)).removeClass(":disabled");
			}
			this.disableInteractiveEvents(false);
			this.dispatch(new haxe_ui_events_UIEvent("enabled"));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.disableInteractivity(disable,recursive,updateStyle);
			}
		}
	}
	,unregisterEvents: function() {
		if(this.__events != null) {
			var copy = [];
			var eventType = this.__events.keys();
			while(eventType.hasNext()) {
				var eventType1 = eventType.next();
				copy.push(eventType1);
			}
			var _g = 0;
			while(_g < copy.length) {
				var eventType = copy[_g];
				++_g;
				var listeners = this.__events.listeners(eventType);
				if(listeners != null) {
					var listener = listeners.iterator();
					while(listener.hasNext()) {
						var listener1 = listener.next();
						if(listener1 != null) {
							if(this.__events.remove(eventType,haxe_ui_util_Listener.toFunc(listener1)) == true) {
								this.unmapEvent(eventType,$bind(this,this._onMappedEvent));
							}
						}
					}
				}
			}
		}
	}
	,_pausedEvents: null
	,pauseEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this.__events == null || this.__events.contains(type) == false) {
			return;
		}
		if(this._pausedEvents == null) {
			this._pausedEvents = new haxe_ds_StringMap();
		}
		var pausedList = this._pausedEvents.h[type];
		if(pausedList == null) {
			pausedList = [];
			this._pausedEvents.h[type] = pausedList;
		}
		var listeners = this.__events.listeners(type).copy();
		var l = listeners.iterator();
		while(l.hasNext()) {
			var l1 = l.next();
			pausedList.push(haxe_ui_util_Listener.toFunc(l1));
			this.unregisterEvent(type,haxe_ui_util_Listener.toFunc(l1));
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.pauseEvent(type,recursive);
			}
		}
	}
	,resumeEvent: function(type,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		var _gthis = this;
		if(this.__events == null) {
			return;
		}
		if(this._pausedEvents == null) {
			return;
		}
		if(Object.prototype.hasOwnProperty.call(this._pausedEvents.h,type) == false) {
			return;
		}
		haxe_ui_Toolkit.callLater(function() {
			var pausedList = _gthis._pausedEvents.h[type];
			var _g = 0;
			while(_g < pausedList.length) {
				var l = pausedList[_g];
				++_g;
				_gthis.registerEvent(type,l);
			}
			var _this = _gthis._pausedEvents;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
		});
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				c.resumeEvent(type,recursive);
			}
		}
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentContainer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentContainer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentEvents();
	}
	,__class__: haxe_ui_core_ComponentEvents
});
var haxe_ui_core_ComponentValidation = function() {
	this._depth = -1;
	this._invalidateCount = 0;
	this._isDisposed = false;
	this._isInitialized = false;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._delayedInvalidationFlags = new haxe_ds_StringMap();
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_core_ComponentEvents.call(this);
};
$hxClasses["haxe.ui.core.ComponentValidation"] = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentValidation.__name__ = "haxe.ui.core.ComponentValidation";
haxe_ui_core_ComponentValidation.__super__ = haxe_ui_core_ComponentEvents;
haxe_ui_core_ComponentValidation.prototype = $extend(haxe_ui_core_ComponentEvents.prototype,{
	_invalidationFlags: null
	,_delayedInvalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,_isInitialized: null
	,_isDisposed: null
	,_invalidateCount: null
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(flag == null) {
			flag = "all";
		}
		if(this._ready == false) {
			return;
		}
		var isAlreadyInvalid = this.isComponentInvalid(flag);
		var isAlreadyDelayedInvalid = false;
		if(this._isValidating == true) {
			var h = this._delayedInvalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				isAlreadyDelayedInvalid = true;
				break;
			}
		}
		if(flag == "all") {
			if(this._isValidating == true) {
				this._delayedInvalidationFlags.h["all"] = true;
			} else {
				this._isAllInvalid = true;
			}
		} else if(this._isValidating == true) {
			this._delayedInvalidationFlags.h[flag] = true;
		} else if(flag != "all" && !Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
		}
		if(this._isValidating == true) {
			if(isAlreadyDelayedInvalid == true) {
				return;
			}
			this._invalidateCount++;
			if(this._invalidateCount >= 10) {
				throw haxe_Exception.thrown("The validation queue returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation.");
			}
			haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		} else if(isAlreadyInvalid == true) {
			return;
		}
		this._invalidateCount = 0;
		haxe_ui_validation_ValidationManager.get_instance().add(js_Boot.__cast(this , haxe_ui_core_Component));
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.invalidateComponent(flag,recursive);
			}
		}
	}
	,invalidateComponentData: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("data",recursive);
	}
	,invalidateComponentLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layout == null || this._layoutLocked == true) {
			return;
		}
		this.invalidateComponent("layout",recursive);
	}
	,invalidateComponentPosition: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("position",recursive);
	}
	,invalidateComponentDisplay: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		this.invalidateComponent("display",recursive);
	}
	,invalidateComponentStyle: function(force,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(force == null) {
			force = false;
		}
		this.invalidateComponent("style",recursive);
		if(force == true) {
			this._style = null;
		}
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._ready == false || this._isDisposed == true || this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		var isInitialized = this._isInitialized;
		if(isInitialized == false) {
			this.initializeComponent();
		}
		this._isValidating = true;
		this.validateComponentInternal(nextFrame);
		this.validateInitialSize(isInitialized);
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		var h = this._delayedInvalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			if(flag == "all") {
				this._isAllInvalid = true;
			} else {
				this._invalidationFlags.h[flag] = true;
			}
		}
		this._delayedInvalidationFlags.h = Object.create(null);
		this._isValidating = false;
	}
	,validateNow: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.validateNow();
		}
		this.invalidateComponent();
		this.syncComponentValidation(false);
	}
	,syncComponentValidation: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var count = 0;
		while(this.isComponentInvalid()) {
			this.validateComponent(nextFrame);
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.syncComponentValidation(nextFrame);
			}
			if(++count >= 10) {
				if(this._isDisposed) {
					var c = js_Boot.getClass(this);
					throw haxe_Exception.thrown("There was a problem validating this component as it has already been destroyed (" + c.__name__ + "#" + this.get_id() + ")");
				} else {
					var c1 = js_Boot.getClass(this);
					throw haxe_Exception.thrown("The syncValidation returned too many times during validation. This may be an infinite loop. Try to avoid doing anything that calls invalidate() during validation (" + c1.__name__ + "#" + this.get_id() + ").");
				}
			}
		}
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var textDisplayInvalid = this.isComponentInvalid("textDisplay") && this.hasTextDisplay();
		var textInputInvalid = this.isComponentInvalid("textInput") && this.hasTextInput();
		var imageDisplayInvalid = this.isComponentInvalid("imageDisplay") && this.hasImageDisplay();
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var layoutInvalid = this.isComponentInvalid("layout") && this._layoutLocked == false;
		if(dataInvalid) {
			this.validateComponentData();
		}
		if(styleInvalid) {
			this.validateComponentStyle();
		}
		if(textDisplayInvalid) {
			this.getTextDisplay().validateComponent();
		}
		if(textInputInvalid) {
			this.getTextInput().validateComponent();
		}
		if(imageDisplayInvalid) {
			this.getImageDisplay().validateComponent();
		}
		if(positionInvalid) {
			this.validateComponentPosition();
		}
		if(layoutInvalid) {
			if(this.validateComponentLayout()) {
				displayInvalid = true;
			}
		}
		if(displayInvalid || styleInvalid) {
			haxe_ui_validation_ValidationManager.get_instance().addDisplay(js_Boot.__cast(this , haxe_ui_core_Component),nextFrame);
		}
	}
	,initializeComponent: function() {
	}
	,validateInitialSize: function(isInitialized) {
	}
	,validateComponentData: function() {
		this.behaviours.validateData();
	}
	,validateComponentLayout: function() {
		return false;
	}
	,validateComponentStyle: function() {
	}
	,validateComponentPosition: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentEvents.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentEvents.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentValidation();
	}
	,__class__: haxe_ui_core_ComponentValidation
	,__properties__: $extend(haxe_ui_core_ComponentEvents.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth"})
});
var haxe_ui_core_ComponentLayout = function() {
	haxe_ui_core_ComponentValidation.call(this);
};
$hxClasses["haxe.ui.core.ComponentLayout"] = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentLayout.__name__ = "haxe.ui.core.ComponentLayout";
haxe_ui_core_ComponentLayout.__super__ = haxe_ui_core_ComponentValidation;
haxe_ui_core_ComponentLayout.prototype = $extend(haxe_ui_core_ComponentValidation.prototype,{
	get_style: function() {
		return this._style;
	}
	,set_style: function(value) {
		this._style = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentValidation.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentValidation.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentLayout();
	}
	,__class__: haxe_ui_core_ComponentLayout
	,__properties__: $extend(haxe_ui_core_ComponentValidation.prototype.__properties__,{set_style:"set_style",get_style:"get_style"})
});
var haxe_ui_core_ComponentBounds = function() {
	this._componentClipRect = null;
	this._top = 0;
	this._left = 0;
	this._hasScreen = null;
	this._cachedPercentHeight = null;
	this._cachedPercentWidth = null;
	haxe_ui_core_ComponentLayout.call(this);
};
$hxClasses["haxe.ui.core.ComponentBounds"] = haxe_ui_core_ComponentBounds;
haxe_ui_core_ComponentBounds.__name__ = "haxe.ui.core.ComponentBounds";
haxe_ui_core_ComponentBounds.__super__ = haxe_ui_core_ComponentLayout;
haxe_ui_core_ComponentBounds.prototype = $extend(haxe_ui_core_ComponentLayout.prototype,{
	autoWidth: null
	,get_autoWidth: function() {
		if(this._percentWidth != null || this._width != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoWidth == null) {
			return false;
		}
		return this.get_style().autoWidth;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(this._percentHeight != null || this._height != null || this.get_style() == null) {
			return false;
		}
		if(this.get_style().autoHeight == null) {
			return false;
		}
		return this.get_style().autoHeight;
	}
	,resizeComponent: function(w,h) {
		var invalidate = false;
		if(w != null && this._componentWidth != w) {
			this._componentWidth = w;
			invalidate = true;
		}
		if(h != null && this._componentHeight != h) {
			this._componentHeight = h;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("layout") == false) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,actualComponentWidth: null
	,get_actualComponentWidth: function() {
		return this.get_componentWidth() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualComponentHeight: null
	,get_actualComponentHeight: function() {
		return this.get_componentHeight() * haxe_ui_Toolkit.get_scaleY();
	}
	,_componentWidth: null
	,get_componentWidth: function() {
		if(this._componentWidth == null) {
			return 0;
		}
		return this._componentWidth;
	}
	,set_componentWidth: function(value) {
		this.resizeComponent(value,null);
		return value;
	}
	,_componentHeight: null
	,get_componentHeight: function() {
		if(this._componentHeight == null) {
			return 0;
		}
		return this._componentHeight;
	}
	,set_componentHeight: function(value) {
		this.resizeComponent(null,value);
		return value;
	}
	,_percentWidth: null
	,get_percentWidth: function() {
		return this._percentWidth;
	}
	,set_percentWidth: function(value) {
		if(this._percentWidth == value) {
			return value;
		}
		this._percentWidth = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_percentHeight: null
	,get_percentHeight: function() {
		return this._percentHeight;
	}
	,set_percentHeight: function(value) {
		if(this._percentHeight == value) {
			return value;
		}
		this._percentHeight = value;
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			haxe_ui_core_Screen.get_instance().resizeRootComponents();
		}
		return value;
	}
	,_cachedPercentWidth: null
	,_cachedPercentHeight: null
	,cachePercentSizes: function(clearExisting) {
		if(clearExisting == null) {
			clearExisting = true;
		}
		if(this._percentWidth != null) {
			this._cachedPercentWidth = this._percentWidth;
			if(clearExisting == true) {
				this._percentWidth = null;
			}
		}
		if(this._percentHeight != null) {
			this._cachedPercentHeight = this._percentHeight;
			if(clearExisting == true) {
				this._percentHeight = null;
			}
		}
	}
	,restorePercentSizes: function() {
		if(this._cachedPercentWidth != null) {
			this.set_percentWidth(this._cachedPercentWidth);
		}
		if(this._cachedPercentHeight != null) {
			this.set_percentHeight(this._cachedPercentHeight);
		}
	}
	,_width: null
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.set_componentWidth(value);
		return value;
	}
	,get_width: function() {
		var f = this.get_componentWidth();
		return f;
	}
	,_height: null
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.set_componentHeight(value);
		return value;
	}
	,get_height: function() {
		var f = this.get_componentHeight();
		return f;
	}
	,_actualWidth: null
	,_actualHeight: null
	,_hasScreen: null
	,hasScreen: null
	,get_hasScreen: function() {
		var p = this;
		while(p != null) {
			if(p._hasScreen == false) {
				return false;
			}
			p = p.parentComponent;
		}
		return true;
	}
	,hitTest: function(left,top,allowZeroSized) {
		if(allowZeroSized == null) {
			allowZeroSized = false;
		}
		if(this.get_hasScreen() == false) {
			return false;
		}
		left *= haxe_ui_Toolkit.get_scale();
		top *= haxe_ui_Toolkit.get_scale();
		var b = false;
		var sx = this.get_screenLeft();
		var sy = this.get_screenTop();
		var cx = 0;
		if(this.get_componentWidth() != null) {
			cx = this.get_actualComponentWidth();
		}
		var cy = 0;
		if(this.get_componentHeight() != null) {
			cy = this.get_actualComponentHeight();
		}
		if(allowZeroSized == true) {
			if(this.get_width() <= 0 || this.get_height() <= 0) {
				return true;
			}
		}
		if(left >= sx && left < sx + cx && top >= sy && top < sy + cy) {
			b = true;
		}
		return b;
	}
	,autoSize: function() {
		if(this._ready == false || this._layout == null) {
			return false;
		}
		return this._layout.autoSize();
	}
	,moveComponent: function(left,top) {
		var invalidate = false;
		if(left != null && this._left != left) {
			this._left = left;
			invalidate = true;
		}
		if(top != null && this._top != top) {
			this._top = top;
			invalidate = true;
		}
		if(invalidate == true && this.isComponentInvalid("position") == false) {
			this.invalidateComponent("position",false);
		}
	}
	,_left: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		this.moveComponent(value,null);
		return value;
	}
	,_top: null
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		this.moveComponent(null,value);
		return value;
	}
	,screenLeft: null
	,get_screenLeft: function() {
		var c = this;
		var xpos = 0;
		while(c != null) {
			var l = c.get_left();
			if(c.parentComponent != null) {
				l *= haxe_ui_Toolkit.get_scale();
			}
			xpos += l;
			if(c.get_componentClipRect() != null) {
				xpos -= c.get_componentClipRect().left * haxe_ui_Toolkit.get_scaleX();
			}
			c = c.parentComponent;
		}
		return xpos;
	}
	,screenTop: null
	,get_screenTop: function() {
		var c = this;
		var ypos = 0;
		while(c != null) {
			var t = c.get_top();
			if(c.parentComponent != null) {
				t *= haxe_ui_Toolkit.get_scale();
			}
			ypos += t;
			if(c.get_componentClipRect() != null) {
				ypos -= c.get_componentClipRect().top * haxe_ui_Toolkit.get_scaleY();
			}
			c = c.parentComponent;
		}
		return ypos;
	}
	,_componentClipRect: null
	,get_componentClipRect: function() {
		if(this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			return new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight());
		}
		return this._componentClipRect;
	}
	,set_componentClipRect: function(value) {
		this._componentClipRect = value;
		this.invalidateComponent("display",false);
		return value;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this.get_componentClipRect() != null;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		if(this.get_width() == 0 && this.get_height() == 0) {
			return false;
		}
		var x = this.get_screenLeft();
		var y = this.get_screenTop();
		var w = this.get_width();
		var h = this.get_height();
		var thisRect = new haxe_ui_geom_Rectangle(x,y,w,h);
		var screenRect = new haxe_ui_geom_Rectangle(0,0,haxe_ui_core_Screen.get_instance().get_width(),haxe_ui_core_Screen.get_instance().get_height());
		return !screenRect.intersects(thisRect);
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentLayout.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentLayout.prototype.cloneComponent.call(this);
		if(this.get_componentWidth() != null) {
			c.set_componentWidth(this.get_componentWidth());
		}
		if(this.get_componentHeight() != null) {
			c.set_componentHeight(this.get_componentHeight());
		}
		if(this.get_percentWidth() != null) {
			c.set_percentWidth(this.get_percentWidth());
		}
		if(this.get_percentHeight() != null) {
			c.set_percentHeight(this.get_percentHeight());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ComponentBounds();
	}
	,__class__: haxe_ui_core_ComponentBounds
	,__properties__: $extend(haxe_ui_core_ComponentLayout.prototype.__properties__,{get_isComponentOffscreen:"get_isComponentOffscreen",get_isComponentClipped:"get_isComponentClipped",set_componentClipRect:"set_componentClipRect",get_componentClipRect:"get_componentClipRect",get_screenTop:"get_screenTop",get_screenLeft:"get_screenLeft",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",get_hasScreen:"get_hasScreen",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_percentHeight:"set_percentHeight",get_percentHeight:"get_percentHeight",set_percentWidth:"set_percentWidth",get_percentWidth:"get_percentWidth",set_componentHeight:"set_componentHeight",get_componentHeight:"get_componentHeight",set_componentWidth:"set_componentWidth",get_componentWidth:"get_componentWidth",get_actualComponentHeight:"get_actualComponentHeight",get_actualComponentWidth:"get_actualComponentWidth",get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_ComponentBase = function() {
	this._nativeClassName = null;
	this._className = null;
	haxe_ui_core_ComponentBounds.call(this);
};
$hxClasses["haxe.ui.backend.ComponentBase"] = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentBase.__name__ = "haxe.ui.backend.ComponentBase";
haxe_ui_backend_ComponentBase.__super__ = haxe_ui_core_ComponentBounds;
haxe_ui_backend_ComponentBase.prototype = $extend(haxe_ui_core_ComponentBounds.prototype,{
	handleCreate: function(native) {
	}
	,handlePosition: function(left,top,style) {
	}
	,handleSize: function(width,height,style) {
	}
	,handleReady: function() {
	}
	,handleClipRect: function(value) {
	}
	,handleVisibility: function(show) {
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,isNativeScroller: null
	,get_isNativeScroller: function() {
		return false;
	}
	,isScroller: null
	,get_isScroller: function() {
		return false;
	}
	,handleFrameworkProperty: function(id,value) {
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,handleAddComponent: function(child) {
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,applyStyle: function(style) {
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,_textDisplay: null
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			this._textDisplay = new haxe_ui_core_TextDisplay();
			this._textDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textDisplay.set_text(text);
		}
		return this._textDisplay;
	}
	,getTextDisplay: function() {
		return this.createTextDisplay();
	}
	,hasTextDisplay: function() {
		return this._textDisplay != null;
	}
	,_textInput: null
	,createTextInput: function(text) {
		if(this._textInput == null) {
			this._textInput = new haxe_ui_core_TextInput();
			this._textInput.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		if(text != null) {
			this._textInput.set_text(text);
		}
		return this._textInput;
	}
	,getTextInput: function() {
		return this.createTextInput();
	}
	,hasTextInput: function() {
		return this._textInput != null;
	}
	,_imageDisplay: null
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			this._imageDisplay = new haxe_ui_core_ImageDisplay();
			this._imageDisplay.parentComponent = js_Boot.__cast(this , haxe_ui_core_Component);
		}
		return this._imageDisplay;
	}
	,getImageDisplay: function() {
		return this.createImageDisplay();
	}
	,hasImageDisplay: function() {
		return this._imageDisplay != null;
	}
	,removeImageDisplay: function() {
		if(this._imageDisplay != null) {
			this._imageDisplay.dispose();
			this._imageDisplay = null;
		}
	}
	,handlePreReposition: function() {
	}
	,handlePostReposition: function() {
	}
	,getClassProperty: function(name) {
		var v = null;
		if(this._classProperties != null) {
			v = this._classProperties.h[name];
		}
		if(v == null) {
			var c = js_Boot.getClass(this);
			var c1 = c.__name__.toLowerCase() + "." + name;
			v = haxe_ui_Toolkit.properties.h[c1];
		}
		return v;
	}
	,_classProperties: null
	,setClassProperty: function(name,value) {
		if(this._classProperties == null) {
			this._classProperties = new haxe_ds_StringMap();
		}
		this._classProperties.h[name] = value;
	}
	,_hasNativeEntry: null
	,hasNativeEntry: null
	,get_hasNativeEntry: function() {
		if(this._hasNativeEntry == null) {
			this._hasNativeEntry = this.getNativeConfigProperty(".@id") != null;
		}
		return this._hasNativeEntry;
	}
	,getNativeConfigProperty: function(query,defaultValue) {
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.query(query,defaultValue,this);
	}
	,getNativeConfigPropertyBool: function(query,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryBool(query,defaultValue,this);
	}
	,getNativeConfigProperties: function(query) {
		if(query == null) {
			query = "";
		}
		query = "component[id=" + this.get_nativeClassName() + "]" + query;
		return haxe_ui_Toolkit.nativeConfig.queryValues(query,this);
	}
	,_className: null
	,className: null
	,get_className: function() {
		if(this._className != null) {
			return this._className;
		}
		var c = js_Boot.getClass(this);
		this._className = c.__name__;
		return this._className;
	}
	,_nativeClassName: null
	,nativeClassName: null
	,get_nativeClassName: function() {
		if(this._nativeClassName != null) {
			return this._nativeClassName;
		}
		var r = js_Boot.getClass(this);
		while(r != null) {
			var c = r.__name__;
			var t = haxe_ui_Toolkit.nativeConfig.query("component[id=" + c + "].@class",null,this);
			if(t != null) {
				this._nativeClassName = c;
				break;
			}
			r = r.__super__;
			if(r == haxe_ui_core_Component) {
				break;
			}
		}
		if(this._nativeClassName == null) {
			this._nativeClassName = this.get_className();
		}
		return this._nativeClassName;
	}
	,registerBehaviours: function() {
		haxe_ui_core_ComponentBounds.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ComponentBounds.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentBase();
	}
	,__class__: haxe_ui_backend_ComponentBase
	,__properties__: $extend(haxe_ui_core_ComponentBounds.prototype.__properties__,{get_nativeClassName:"get_nativeClassName",get_className:"get_className",get_hasNativeEntry:"get_hasNativeEntry",get_isScroller:"get_isScroller",get_isNativeScroller:"get_isNativeScroller"})
});
var haxe_ui_backend_ComponentImpl = function() {
	this._over = false;
	this._canvas = null;
	haxe_ui_backend_ComponentBase.call(this);
	this._eventMap = new haxe_ds_StringMap();
	if(haxe_ui_backend_ComponentImpl._mutationObserver == null) {
		haxe_ui_backend_ComponentImpl._mutationObserver = new MutationObserver(haxe_ui_backend_ComponentImpl.onMutationEvent);
		haxe_ui_backend_ComponentImpl._mutationObserver.observe(haxe_ui_core_Screen.get_instance().get_container(),{ childList : true});
	}
	if(window.document.styleSheets.length == 0) {
		var style = window.document.createElement("style");
		style.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(style);
	}
	if(haxe_ui_backend_ComponentImpl._stylesAdded == false) {
		haxe_ui_backend_ComponentImpl._stylesAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container .haxeui-component, .haxeui-component:focus {\n                position: absolute;\n                box-sizing: border-box;\n                -webkit-touch-callout: none;\n                -webkit-user-select: none;\n                -khtml-user-select: none;\n                -moz-user-select: none;\n                -ms-user-select: none;\n                user-select: none;\n                -webkit-tap-highlight-color: transparent;\n                webkit-user-select;\n                outline: none !important;\n            }",sheet.cssRules.length);
		haxe_ui_core_Screen.get_instance().get_container().classList.add("haxeui-theme-" + haxe_ui_Toolkit.get_theme());
	}
};
$hxClasses["haxe.ui.backend.ComponentImpl"] = haxe_ui_backend_ComponentImpl;
haxe_ui_backend_ComponentImpl.__name__ = "haxe.ui.backend.ComponentImpl";
haxe_ui_backend_ComponentImpl.onMutationEvent = function(records,o) {
	var done = false;
	var _g = 0;
	while(_g < records.length) {
		var record = records[_g];
		++_g;
		var _g1 = 0;
		var _g2 = record.addedNodes.length;
		while(_g1 < _g2) {
			var i = _g1++;
			var node = record.addedNodes.item(i);
			var c = haxe_ui_backend_ComponentImpl.elementToComponent.h[node.__id__];
			if(c != null) {
				c.recursiveReady();
			}
		}
		if(done == true) {
			break;
		}
	}
};
haxe_ui_backend_ComponentImpl.__super__ = haxe_ui_backend_ComponentBase;
haxe_ui_backend_ComponentImpl.prototype = $extend(haxe_ui_backend_ComponentBase.prototype,{
	element: null
	,_eventMap: null
	,get_isNativeScroller: function() {
		return false;
	}
	,recursiveReady: function() {
		haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
		var component = js_Boot.__cast(this , haxe_ui_core_Component);
		if(!(component._layout == null || component._layoutLocked == true)) {
			component.invalidateComponent("layout",false);
		}
		component.ready();
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.recursiveReady();
		}
	}
	,handleCreate: function(native) {
		if(this.get_isScroller()) {
			if(this.element == null) {
				this.element = window.document.createElement("div");
			}
			this.element.scrollTop = 0;
			this.element.scrollLeft = 0;
			this.element.classList.add("haxeui-component");
			haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
			return;
		}
		var newElement = window.document.createElement("div");
		newElement.classList.add("haxeui-component");
		if(((this) instanceof haxe_ui_components_Image)) {
			newElement.style.boxSizing = "initial";
		}
		if(this.element != null) {
			var p = this.element.parentElement;
			if(p != null) {
				haxe_ui_backend_ComponentImpl.elementToComponent.remove(this.element);
				p.replaceChild(newElement,this.element);
			}
		}
		this.element = newElement;
		haxe_ui_backend_ComponentImpl.elementToComponent.set(this.element,js_Boot.__cast(this , haxe_ui_core_Component));
		this.remapEvents();
	}
	,remapEvents: function() {
		if(this._eventMap == null) {
			return;
		}
		var copy_h = Object.create(null);
		var h = this._eventMap.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var fn = this._eventMap.h[k];
			copy_h[k] = fn;
			this.unmapEvent(k,fn);
		}
		this._eventMap = new haxe_ds_StringMap();
		var h = copy_h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.mapEvent(k,copy_h[k]);
		}
	}
	,handlePosition: function(left,top,style) {
		if(this.element == null) {
			return;
		}
		if(left != null) {
			this.element.style.left = "" + left + "px";
		}
		if(top != null) {
			this.element.style.top = "" + top + "px";
		}
	}
	,handleSize: function(width,height,style) {
		if(width == null || height == null || width <= 0 || height <= 0) {
			return;
		}
		if(this.element == null) {
			return;
		}
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var css = this.element.style;
		haxe_ui_backend_html5_StyleHelper.apply(this,width,height,style);
		var parent = c.parentComponent;
		if(parent != null && parent.element.style.borderWidth != null) {
			css.marginTop = "-" + parent.element.style.borderWidth;
			css.marginLeft = "-" + parent.element.style.borderWidth;
		} else if(parent != null) {
			css.marginTop = "";
			css.marginLeft = "";
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(style.borderLeftSize != null && style.borderLeftSize > 0) {
				child.element.style.marginLeft = "-" + style.borderLeftSize + "px";
			} else {
				child.element.style.marginLeft = "";
			}
			if(style.borderTopSize != null && style.borderTopSize > 0) {
				child.element.style.marginTop = "-" + style.borderTopSize + "px";
			} else {
				child.element.style.marginTop = "";
			}
		}
	}
	,handleReady: function() {
		if((js_Boot.__cast(this , haxe_ui_core_Component)).get_id() != null) {
			this.element.id = (js_Boot.__cast(this , haxe_ui_core_Component)).get_id();
		}
	}
	,handleFrameworkProperty: function(id,value) {
		if(id == "allowMouseInteraction") {
			if(value == true && this.element.style.getPropertyValue("pointer-events") != null) {
				this.element.style.removeProperty("pointer-events");
			} else if(this.element.style.getPropertyValue("pointer-events") != "none") {
				this.element.style.setProperty("pointer-events","none");
				this.setCursor(null);
			}
		}
	}
	,handleClipRect: function(value) {
		var c = js_Boot.__cast(this , haxe_ui_core_Component);
		var parent = c.parentComponent;
		value.toInts();
		if(value != null && parent != null) {
			var tmp = "rect(" + ("" + value.top + "px") + "," + ("" + value.get_right() + "px") + "," + ("" + value.get_bottom() + "px") + ",";
			this.element.style.clip = tmp + ("" + value.left + "px") + ")";
			var tmp = "" + (c.get_left() - value.left | 0) + "px";
			this.element.style.left = "" + tmp;
			var tmp = "" + (c.get_top() - value.top | 0) + "px";
			this.element.style.top = "" + tmp;
		} else {
			this.element.style.removeProperty("clip");
		}
	}
	,handleVisibility: function(show) {
		this.element.style.display = show == true ? "" : "none";
	}
	,createTextDisplay: function(text) {
		if(this._textDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextDisplay.call(this,text);
			this.element.appendChild(this._textDisplay.element);
		}
		return this._textDisplay;
	}
	,createTextInput: function(text) {
		if(this._textInput == null) {
			haxe_ui_backend_ComponentBase.prototype.createTextInput.call(this,text);
			this.element.appendChild(this._textInput.element);
		}
		return this._textInput;
	}
	,createImageDisplay: function() {
		if(this._imageDisplay == null) {
			haxe_ui_backend_ComponentBase.prototype.createImageDisplay.call(this);
			this.element.appendChild(this._imageDisplay.element);
		}
		return this._imageDisplay;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (this._children == null ? [] : this._children).length - 1) {
			this.element.appendChild(child.element);
		} else if(index == (this._children == null ? [] : this._children).indexOf(child) - 1) {
			var before = (this._children == null ? [] : this._children)[index];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		} else {
			var before = (this._children == null ? [] : this._children)[index + 1];
			haxe_ui_backend_html5_HtmlUtils.insertBefore(before.element,child.element);
		}
	}
	,handleAddComponent: function(child) {
		this.element.appendChild(child.element);
		return child;
	}
	,handleAddComponentAt: function(child,index) {
		this.handleAddComponent(child);
		this.handleSetComponentIndex(child,index);
		return child;
	}
	,handleRemoveComponent: function(child,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,handleRemoveComponentAt: function(index,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		var child = (js_Boot.__cast(this , haxe_ui_core_Component))._children[index];
		haxe_ui_backend_html5_HtmlUtils.removeElement(child.element);
		return child;
	}
	,applyStyle: function(style) {
		if(this.element == null) {
			return;
		}
		this.setCursor(style.cursor);
		if(style.filter != null) {
			if(((style.filter[0]) instanceof haxe_ui_filters_DropShadow)) {
				var dropShadow = style.filter[0];
				if(dropShadow.inner == false) {
					var tmp = "" + dropShadow.distance + "px " + (dropShadow.distance + 2) + "px " + (dropShadow.blurX - 1) + "px " + (dropShadow.blurY - 1) + "px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				} else {
					var tmp = "inset " + dropShadow.distance + "px " + dropShadow.distance + "px " + dropShadow.blurX + "px 0px ";
					var tmp1 = haxe_ui_backend_html5_HtmlUtils.rgba(dropShadow.color,dropShadow.alpha);
					this.element.style.boxShadow = tmp + tmp1;
				}
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.filter[0];
				this.element.style.setProperty("-webkit-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-moz-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("-o-filter","blur(" + blur.amount + "px)");
				this.element.style.setProperty("filter","blur(" + blur.amount + "px)");
			} else if(((style.filter[0]) instanceof haxe_ui_filters_Grayscale)) {
				var grayscale = style.filter[0];
				this.element.style.setProperty("-webkit-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-moz-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("-o-filter","grayscale(" + grayscale.amount + "%)");
				this.element.style.setProperty("filter","grayscale(" + grayscale.amount + "%)");
			}
		} else {
			this.element.style.filter = null;
			this.element.style.boxShadow = null;
			this.element.style.removeProperty("box-shadow");
			this.element.style.removeProperty("-webkit-filter");
			this.element.style.removeProperty("-moz-filter");
			this.element.style.removeProperty("-o-filter");
			this.element.style.removeProperty("filter");
		}
		if(style.backdropFilter != null) {
			if(((style.backdropFilter[0]) instanceof haxe_ui_filters_Blur)) {
				var blur = style.backdropFilter[0];
				this.element.style.setProperty("backdrop-filter","blur(" + blur.amount + "px)");
			}
		} else {
			this.element.style.removeProperty("backdrop-filter");
		}
		if(style.opacity != null) {
			this.element.style.opacity = "" + style.opacity;
		}
		if(style.fontName != null) {
			this.element.style.fontFamily = style.fontName;
		}
		if(style.fontSize != null) {
			this.element.style.fontSize = "" + style.fontSize + "px";
		}
		if(style.color != null) {
			this.element.style.color = haxe_ui_backend_html5_HtmlUtils.color(style.color);
		}
		if(this.hasImageDisplay()) {
			this._imageDisplay.applyStyle();
		}
	}
	,setCursor: function(cursor) {
		var tmp = cursor == null;
		if(cursor == null) {
			this.element.style.removeProperty("cursor");
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.removeProperty("cursor");
			}
		} else {
			this.element.style.cursor = cursor;
			if(this.hasImageDisplay()) {
				this.getImageDisplay().element.style.cursor = cursor;
			}
			if(this.hasTextDisplay()) {
				this.getTextDisplay().element.style.cursor = cursor;
			}
		}
		var _g = 0;
		var _this = js_Boot.__cast(this , haxe_ui_core_Component);
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.element.style.cursor == null) {
				c.setCursor("inherit");
			}
		}
	}
	,_canvas: null
	,getCanvas: function(width,height) {
		if(this._canvas == null) {
			this._canvas = window.document.createElement("canvas");
			this._canvas.style.setProperty("-webkit-backface-visibility","hidden");
			this._canvas.style.setProperty("-moz-backface-visibility","hidden");
			this._canvas.style.setProperty("-ms-backface-visibility","hidden");
			this._canvas.style.position = "absolute";
			this._canvas.style.setProperty("pointer-events","none");
			this._canvas.width = width;
			this._canvas.height = height;
			this.element.insertBefore(this._canvas,this.element.firstChild);
		}
		if(width != this._canvas.width) {
			this._canvas.width = width;
		}
		if(height != this._canvas.height) {
			this._canvas.height = height;
		}
		return this._canvas;
	}
	,hasCanvas: function() {
		return this._canvas != null;
	}
	,removeCanvas: function() {
		if(this._canvas != null && this.element.contains(this._canvas)) {
			this.element.removeChild(this._canvas);
			this._canvas = null;
		}
	}
	,mapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(this.hasTextInput() == true) {
					this._eventMap.h[type] = listener;
					var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
					this.getTextInput().element.addEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
				}
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					this.element.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent),{ passive : true});
				}
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			}
			break;
		case "mousewheel":
			this._eventMap.h[type] = listener;
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.addEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.addEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			if(Object.prototype.hasOwnProperty.call(this._eventMap.h,type) == false) {
				this._eventMap.h[type] = listener;
				this.element.addEventListener("contextmenu",$bind(this,this.__onContextMenu));
			}
			break;
		case "scrollchange":
			this._eventMap.h[type] = listener;
			this.element.addEventListener("scroll",$bind(this,this.__onScrollEvent));
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		switch(type) {
		case "change":
			if(this.hasTextInput()) {
				var _this = this._eventMap;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				var tmp = haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["keyup"];
				this.getTextInput().element.removeEventListener(tmp,$bind(this,this.__onTextFieldChangeEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		case "keydown":case "keyup":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyboardEvent));
			break;
		case "mousewheel":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			if(haxe_ui_backend_html5_UserAgent.get_instance().get_firefox() == true) {
				this.element.removeEventListener("DOMMouseScroll",$bind(this,this.__onMouseWheelEvent));
			} else {
				this.element.removeEventListener("mousewheel",$bind(this,this.__onMouseWheelEvent));
			}
			break;
		case "rightclick":
			var _this = this._eventMap;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			this.element.removeEventListener("contextmenu",$bind(this,this.__onContextMenu));
			break;
		}
	}
	,__onContextMenu: function(event) {
		event.preventDefault();
		var type = "rightclick";
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_MouseEvent(type);
				uiEvent.screenX = event.pageX;
				uiEvent.screenY = event.pageY;
				fn(uiEvent);
			}
		}
		return false;
	}
	,__onChangeEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var uiEvent = new haxe_ui_events_UIEvent(type);
				fn(uiEvent);
			}
		}
	}
	,__onTextFieldChangeEvent: function(event) {
		var fn = this._eventMap.h["change"];
		if(fn != null) {
			var uiEvent = new haxe_ui_events_UIEvent("change");
			fn(uiEvent);
		}
	}
	,_over: null
	,__onMouseEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			try {
				var tmp = type == "mousedown";
			} catch( _g ) {
			}
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				var touchEvent = false;
				try {
					touchEvent = ((event) instanceof TouchEvent);
				} catch( _g ) {
				}
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				if(type == "mouseover") {
					this._over = true;
				} else if(type == "mouseout") {
					this._over = false;
				}
				fn(mouseEvent);
			}
		}
	}
	,getComponentOffset: function() {
		return new haxe_ui_geom_Point(0,0);
	}
	,__onMouseWheelEvent: function(event) {
		var fn = this._eventMap.h["mousewheel"];
		if(fn == null) {
			return;
		}
		var delta = 0;
		if(Reflect.field(event,"wheelDelta") != null) {
			delta = Reflect.field(event,"wheelDelta");
		} else if(((event) instanceof WheelEvent)) {
			delta = (js_Boot.__cast(event , WheelEvent)).deltaY;
		} else {
			delta = -event.detail;
		}
		delta = Math.max(-1,Math.min(1,delta));
		var mouseEvent = new haxe_ui_events_MouseEvent("mousewheel");
		mouseEvent._originalEvent = event;
		mouseEvent.screenX = (event.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
		mouseEvent.screenY = (event.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
		mouseEvent.ctrlKey = event.ctrlKey;
		mouseEvent.shiftKey = event.shiftKey;
		mouseEvent.delta = delta;
		fn(mouseEvent);
	}
	,__onKeyboardEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			var fn = this._eventMap.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				if(((event) instanceof KeyboardEvent)) {
					var me = js_Boot.__cast(event , KeyboardEvent);
					keyboardEvent.keyCode = me.keyCode;
					keyboardEvent.altKey = me.altKey;
					keyboardEvent.ctrlKey = me.ctrlKey;
					keyboardEvent.shiftKey = me.shiftKey;
				}
				fn(keyboardEvent);
			}
		}
	}
	,__onScrollEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		var fn = this._eventMap.h[type];
		if(fn != null) {
			var scrollEvent = new haxe_ui_events_ScrollEvent("scrollchange");
			fn(scrollEvent);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_ComponentImpl();
	}
	,__class__: haxe_ui_backend_ComponentImpl
});
var haxe_ui_validation_IValidating = function() { };
$hxClasses["haxe.ui.validation.IValidating"] = haxe_ui_validation_IValidating;
haxe_ui_validation_IValidating.__name__ = "haxe.ui.validation.IValidating";
haxe_ui_validation_IValidating.__isInterface__ = true;
haxe_ui_validation_IValidating.prototype = {
	get_depth: null
	,set_depth: null
	,get_id: null
	,set_id: null
	,get_isComponentOffscreen: null
	,validateComponent: null
	,updateComponentDisplay: null
	,isComponentOffscreen: null
	,__class__: haxe_ui_validation_IValidating
	,__properties__: {get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id",set_depth:"set_depth",get_depth:"get_depth"}
};
var haxe_ui_core_Component = function() {
	this._initialSizeApplied = false;
	this._scriptAccess = true;
	this._includeInLayout = true;
	this._styleSheet = null;
	this._cachedStyleSheetRef = null;
	this._useCachedStyleSheetRef = false;
	this.cascadeActive = false;
	this.classes = [];
	this._customStyle = null;
	this._hidden = false;
	this.bindingRoot = false;
	this._dragOptions = null;
	this._dragInitiator = null;
	this.userData = null;
	this._animatable = true;
	this._native = null;
	this._defaultLayoutClass = null;
	this.componentTabIndex = 0;
	haxe_ui_backend_ComponentImpl.call(this);
	this.addClass(haxe_ui_Backend.get_id(),false);
	var c = js_Boot.getClass(this);
	while(c != null) {
		var css = c.__name__;
		var className = css.split(".").pop();
		this.addClass(className.toLowerCase(),false);
		this.addClass(haxe_ui_util_StringUtil.toDashes(className),false);
		if(className.toLowerCase() == "component") {
			break;
		}
		c = c.__super__;
	}
	var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
	if(s.native != null && this.get_hasNativeEntry() == true) {
		this.set_native(s.native);
	} else {
		this.create();
	}
	if(haxe_ui_Toolkit.get_initialized() == false) {
		haxe_Log.trace("WARNING: You are trying to create a component before the toolkit has been initialized. This could have undefined results.",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 76, className : "haxe.ui.core.Component", methodName : "new"});
	}
};
$hxClasses["haxe.ui.core.Component"] = haxe_ui_core_Component;
haxe_ui_core_Component.__name__ = "haxe.ui.core.Component";
haxe_ui_core_Component.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_Component.addNamedComponentsFrom = function(parent,list) {
	if(parent == null) {
		return;
	}
	if(parent.get_id() != null) {
		list.push(parent);
	}
	var _g = 0;
	var _g1 = parent._children == null ? [] : parent._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_core_Component.addNamedComponentsFrom(child,list);
	}
};
haxe_ui_core_Component.__super__ = haxe_ui_backend_ComponentImpl;
haxe_ui_core_Component.prototype = $extend(haxe_ui_backend_ComponentImpl.prototype,{
	componentTabIndex: null
	,_defaultLayoutClass: null
	,create: function() {
		if(this.get_native() == false || this.get_native() == null) {
			this.registerComposite();
		}
		this.createDefaults();
		this.handleCreate(this.get_native());
		this.destroyChildren();
		this.registerBehaviours();
		this.behaviours.replaceNative();
		if(this.get_native() == false || this.get_native() == null) {
			if(this._compositeBuilderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance(this._compositeBuilderClass,[this]);
				}
				this._compositeBuilder.create();
			}
			this.createChildren();
			if(this._internalEventsClass != null && this._internalEvents == null) {
				this.registerInternalEvents(this._internalEventsClass);
			}
		} else {
			var builderClass = this.getNativeConfigProperty(".builder.@class");
			if(builderClass != null) {
				if(this._compositeBuilder == null) {
					this._compositeBuilder = Type.createInstance($hxClasses[builderClass],[this]);
				}
				this._compositeBuilder.create();
			}
		}
		this.behaviours.applyDefaults();
	}
	,_compositeBuilderClass: null
	,_compositeBuilder: null
	,registerComposite: function() {
	}
	,createDefaults: function() {
	}
	,createChildren: function() {
	}
	,destroyChildren: function() {
		this.unregisterInternalEvents();
	}
	,createLayout: function() {
		var l = null;
		if(this.get_native() == true) {
			var sizeProps = this.getNativeConfigProperties(".size");
			if(sizeProps != null && Object.prototype.hasOwnProperty.call(sizeProps.h,"class")) {
				var name = sizeProps.h["class"];
				var size = Type.createInstance($hxClasses[name],[]);
				size.config = sizeProps;
				l = new haxe_ui_layouts_DelegateLayout(size);
			} else {
				var layoutProps = this.getNativeConfigProperties(".layout");
				if(layoutProps != null && Object.prototype.hasOwnProperty.call(layoutProps.h,"class")) {
					var name = layoutProps.h["class"];
					l = Type.createInstance($hxClasses[name],[]);
				}
			}
		}
		if(l == null) {
			if(this._defaultLayoutClass != null) {
				l = Type.createInstance(this._defaultLayoutClass,[]);
			} else {
				l = new haxe_ui_layouts_DefaultLayout();
			}
		}
		return l;
	}
	,_native: null
	,get_native: function() {
		if(this._native == null) {
			return false;
		}
		if(this.get_hasNativeEntry() == false) {
			return false;
		}
		return this._native;
	}
	,set_native: function(value) {
		if(this.get_hasNativeEntry() == false) {
			return value;
		}
		if(this._native == value) {
			return value;
		}
		this._native = value;
		this.get_customStyle().native = value;
		if(this._native == true && this.get_hasNativeEntry()) {
			this.addClass(":native");
		} else {
			this.removeClass(":native");
		}
		this.behaviours.cache();
		this.behaviours.detatch();
		this.create();
		if(this.get_layout() != null) {
			this.set_layout(this.createLayout());
		}
		this.behaviours.restore();
		return value;
	}
	,_animatable: null
	,get_animatable: function() {
		return false;
	}
	,set_animatable: function(value) {
		if(this._animatable != value) {
			if(value == false && this._componentAnimation != null) {
				this._componentAnimation.stop();
				this._componentAnimation = null;
			}
			this._animatable = value;
		}
		this._animatable = value;
		return value;
	}
	,_componentAnimation: null
	,get_componentAnimation: function() {
		return this._componentAnimation;
	}
	,set_componentAnimation: function(value) {
		if(this._componentAnimation != value && this._animatable == true) {
			if(this._componentAnimation != null) {
				this._componentAnimation.stop();
			}
			this._componentAnimation = value;
		}
		return value;
	}
	,userData: null
	,screen: null
	,get_screen: function() {
		return haxe_ui_Toolkit.get_screen();
	}
	,get_draggable: function() {
		return haxe_ui_dragdrop_DragManager.get_instance().isRegisteredDraggable(this);
	}
	,set_draggable: function(value) {
		if(value == true) {
			haxe_ui_dragdrop_DragManager.get_instance().registerDraggable(this,this.get_dragOptions());
		} else {
			haxe_ui_dragdrop_DragManager.get_instance().unregisterDraggable(this);
		}
		return value;
	}
	,_dragInitiator: null
	,get_dragInitiator: function() {
		return this._dragInitiator;
	}
	,set_dragInitiator: function(value) {
		this._dragInitiator = value;
		if(this._dragOptions != null) {
			this._dragOptions.mouseTarget = value;
		}
		this.set_draggable(true);
		return value;
	}
	,_dragOptions: null
	,get_dragOptions: function() {
		if(this._dragOptions == null) {
			this._dragOptions = { mouseTarget : this._dragInitiator};
		}
		return this._dragOptions;
	}
	,set_dragOptions: function(value) {
		this._dragOptions = value;
		this.set_draggable(true);
		return value;
	}
	,bindingRoot: null
	,get_rootComponent: function() {
		var r = this;
		while(r.parentComponent != null) r = r.parentComponent;
		return r;
	}
	,get_numComponents: function() {
		var n = 0;
		if(this._compositeBuilder != null) {
			var builderCount = this._compositeBuilder.get_numComponents();
			if(builderCount != null) {
				n = builderCount;
			} else if(this._children != null) {
				n = this._children.length;
			}
		} else if(this._children != null) {
			n = this._children.length;
		}
		return n;
	}
	,addComponent: function(child) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponent(child);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.push(child);
		this.handleAddComponent(child);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,containsComponent: function(child) {
		if(child == null) {
			return false;
		}
		var contains = false;
		this.walkComponents(function(c) {
			if(child == c) {
				contains = true;
			}
			return !contains;
		});
		return contains;
	}
	,addComponentAt: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.addComponentAt(child,index);
			if(v != null) {
				v.set_scriptAccess(this.get_scriptAccess());
				return v;
			}
		}
		if(this.get_native() == true) {
			var allowChildren = this.getNativeConfigPropertyBool(".@allowChildren",true);
			if(allowChildren == false) {
				return child;
			}
		}
		child.parentComponent = this;
		child._isDisposed = false;
		if(this._children == null) {
			this._children = [];
		}
		this._children.splice(index,0,child);
		this.handleAddComponentAt(child,index);
		if(this._ready) {
			child.ready();
		}
		this.assignPositionClasses();
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		if(this.get_disabled()) {
			child.set_disabled(true);
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentAdded(child);
		}
		this.onComponentAdded(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentAdded"));
		child.set_scriptAccess(this.get_scriptAccess());
		return child;
	}
	,onComponentAdded: function(child) {
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child == null) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponent(child,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		if(this._children != null) {
			if(this._children.indexOf(child) == -1) {
				haxe_Log.trace("WARNING: trying to remove a child that is not a child of this component",{ fileName : "haxe/ui/core/Component.hx", lineNumber : 488, className : "haxe.ui.core.Component", methodName : "removeComponent"});
				return child;
			}
			if(HxOverrides.remove(this._children,child)) {
				child.parentComponent = null;
				child.set_depth(-1);
			}
			if(dispose == true) {
				child.disposeComponent();
			}
		}
		this.handleRemoveComponent(child,dispose);
		this.assignPositionClasses(invalidate);
		if(this._children != null && invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	,disposeComponent: function() {
		this._isDisposed = true;
		this.removeAllComponents(true);
		this.destroyComponent();
		this.unregisterEvents();
		if(this.hasTextDisplay()) {
			this.getTextDisplay().dispose();
		}
		if(this.hasTextInput()) {
			this.getTextInput().dispose();
		}
		if(this.hasImageDisplay()) {
			this.getImageDisplay().dispose();
		}
		if(this.behaviours != null) {
			this.behaviours.dispose();
			this.behaviours = null;
		}
		if(this._layout != null) {
			this._layout.set_component(null);
			this._layout = null;
		}
		if(this._internalEvents != null) {
			this._internalEvents._target = null;
			this._internalEvents = null;
		}
		this.parentComponent = null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(this._children == null) {
			return null;
		}
		var childCount = this._children.length;
		if(this._compositeBuilder != null) {
			var compositeChildCount = this._compositeBuilder.get_numComponents();
			if(compositeChildCount != null) {
				childCount = compositeChildCount;
			}
		}
		if(index < 0 || index > childCount - 1) {
			return null;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.removeComponentAt(index,dispose,invalidate);
			if(v != null) {
				return v;
			}
		}
		var child = this._children[index];
		if(child == null) {
			return null;
		}
		if(dispose == true) {
			child._isDisposed = true;
			child.removeAllComponents(true);
		}
		this.handleRemoveComponentAt(index,dispose);
		if(HxOverrides.remove(this._children,child)) {
			child.parentComponent = null;
			child.set_depth(-1);
		}
		if(dispose == true) {
			child.destroyComponent();
			child.unregisterEvents();
		}
		this.assignPositionClasses(invalidate);
		if(invalidate == true) {
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onComponentRemoved(child);
		}
		this.onComponentRemoved(child);
		this.dispatch(new haxe_ui_events_UIEvent("componentRemoved"));
		return child;
	}
	,onComponentRemoved: function(child) {
	}
	,assignPositionClasses: function(invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if((this._children == null ? [] : this._children).length == 1) {
			(this._children == null ? [] : this._children)[0].addClasses(["first","last"],invalidate);
			return;
		}
		var _g = 0;
		var _g1 = (this._children == null ? [] : this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var c = (this._children == null ? [] : this._children)[i];
			if(i == 0) {
				c.swapClass("first","last",invalidate);
			} else if((this._children == null ? [] : this._children).length > 1 && i == (this._children == null ? [] : this._children).length - 1) {
				c.swapClass("last","first",invalidate);
			} else {
				c.removeClasses(["first","last"],invalidate);
			}
		}
	}
	,destroyComponent: function() {
		if(this._compositeBuilder != null) {
			this._compositeBuilder.destroy();
		}
		haxe_ui_locale_LocaleManager.get_instance().unregisterComponent(this);
		this.onDestroy();
	}
	,onDestroy: function() {
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.onDestroy();
		}
		this.dispatch(new haxe_ui_events_UIEvent("destroy"));
	}
	,walkComponents: function(callback) {
		if(callback(this) == false) {
			return;
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(callback(child) == false) {
				return;
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var cont = [true];
			child.walkComponents((function(cont) {
				return function(c) {
					cont[0] = callback(c);
					return cont[0];
				};
			})(cont));
			if(cont[0] == false) {
				break;
			}
		}
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this._compositeBuilder != null) {
			var b = this._compositeBuilder.removeAllComponents(dispose);
			if(b == true) {
				return;
			}
		}
		if(this._children != null) {
			while(this._children.length > 0) {
				this._children[0].removeAllComponents(dispose);
				this.removeComponent(this._children[0],dispose,false);
			}
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
	}
	,matchesSearch: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(criteria != null) {
			if(searchType == "id" && this.get_id() == criteria || searchType == "css" && this.classes.indexOf(criteria) != -1 == true) {
				if(type != null) {
					return js_Boot.__instanceof(this,type);
				}
				return true;
			}
		} else if(type != null) {
			return js_Boot.__instanceof(this,type);
		}
		return false;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(recursive == null && criteria != null && searchType == "id") {
			recursive = true;
		}
		var match = null;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.matchesSearch(criteria,type,searchType)) {
				match = child;
				break;
			}
		}
		if(match == null && recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				var temp = child.findComponent(criteria,type,recursive,searchType);
				if(temp != null) {
					match = temp;
					break;
				}
			}
			if(match == null && this._compositeBuilder != null) {
				match = this._compositeBuilder.findComponent(criteria,type,recursive,searchType);
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(maxDepth == -1) {
			maxDepth = 100;
		}
		if(maxDepth <= 0) {
			return [];
		}
		--maxDepth;
		var r = [];
		if(this._compositeBuilder != null) {
			var childArray = this._compositeBuilder.findComponents(styleName,type,maxDepth);
			if(childArray != null) {
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && child.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(child,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(child);
			} else {
				var childArray = child.findComponents(styleName,type,maxDepth);
				var _g2 = 0;
				while(_g2 < childArray.length) {
					var c = childArray[_g2];
					++_g2;
					r.push(c);
				}
			}
		}
		return r;
	}
	,findAncestor: function(criteria,type,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		var match = null;
		var p = this.parentComponent;
		while(p != null) if(p.matchesSearch(criteria,type,searchType)) {
			match = p;
			break;
		} else {
			p = p.parentComponent;
		}
		return match;
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var c = [];
		if(this.hitTest(screenX,screenY,true)) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,true)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == true) {
						c.push(child);
					}
					c = c.concat(child.findComponentsUnderPoint(screenX,screenY,type));
				}
			}
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var b = false;
		if(this.hitTest(screenX,screenY,true)) {
			if(type == null) {
				return true;
			}
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.hitTest(screenX,screenY,true)) {
					var match = true;
					if(type != null && js_Boot.__instanceof(child,type) == false) {
						match = false;
					}
					if(match == false) {
						match = child.hasComponentUnderPoint(screenX,screenY,type);
					}
					if(match == true) {
						b = match;
						break;
					}
				}
			}
		}
		return b;
	}
	,getComponentIndex: function(child) {
		if(this._compositeBuilder != null) {
			var index = this._compositeBuilder.getComponentIndex(child);
			if(index != -2147483648) {
				return index;
			}
		}
		var index = -1;
		if(this._children != null && child != null) {
			index = this._children.indexOf(child);
		}
		return index;
	}
	,setComponentIndex: function(child,index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.setComponentIndex(child,index);
			if(v != null) {
				return v;
			}
		}
		if(index >= 0 && index <= this._children.length && child.parentComponent == this) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this._children,child);
			this._children.splice(index,0,child);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return child;
	}
	,getComponentAt: function(index) {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.getComponentAt(index);
			if(v != null) {
				return v;
			}
		}
		if(this._children == null) {
			return null;
		}
		return this._children[index];
	}
	,hide: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
		}
	}
	,hideInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.hide();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == false) {
			this._hidden = true;
			this.handleVisibility(false);
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("hidden"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("hidden"));
			}
		}
	}
	,show: function() {
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
		}
	}
	,showInternal: function(dispatchChildren) {
		if(dispatchChildren == null) {
			dispatchChildren = false;
		}
		if(this._compositeBuilder != null) {
			var v = this._compositeBuilder.show();
			if(v == true) {
				return;
			}
		}
		if(this._hidden == true) {
			this._hidden = false;
			this.handleVisibility(true);
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			if(dispatchChildren == true) {
				this.dispatchRecursively(new haxe_ui_events_UIEvent("shown"));
			} else {
				this.dispatch(new haxe_ui_events_UIEvent("shown"));
			}
		}
	}
	,fadeIn: function(onEnd,show) {
		if(show == null) {
			show = true;
		}
		var _gthis = this;
		if(onEnd != null || show == true) {
			var prevStart = this.onAnimationStart;
			var prevEnd = this.onAnimationEnd;
			if(show == true) {
				prevStart = this.onAnimationStart;
				this.set_onAnimationStart(function(e) {
					_gthis.show();
					_gthis.set_onAnimationStart(prevStart);
				});
			}
			this.set_onAnimationEnd(function(e) {
				if(onEnd != null) {
					onEnd();
				}
				_gthis.removeClass("fade-in");
				_gthis.set_onAnimationEnd(prevEnd);
			});
		}
		this.swapClass("fade-in","fade-out");
	}
	,fadeOut: function(onEnd,hide) {
		if(hide == null) {
			hide = true;
		}
		var _gthis = this;
		if(onEnd != null || hide == true) {
			var prevEnd = this.onAnimationEnd;
			this.set_onAnimationEnd(function(e) {
				if(hide == true) {
					_gthis.hide();
				}
				if(onEnd != null) {
					onEnd();
				}
				_gthis.set_onAnimationEnd(prevEnd);
				_gthis.removeClass("fade-out");
			});
		}
		this.swapClass("fade-out","fade-in");
	}
	,_hidden: null
	,get_hidden: function() {
		if(this._hidden == true) {
			return true;
		}
		if(this.parentComponent != null) {
			return this.parentComponent.get_hidden();
		}
		return false;
	}
	,set_hidden: function(value) {
		if(value == this._hidden) {
			return value;
		}
		if(value == true) {
			this.hide();
		} else {
			this.show();
		}
		return value;
	}
	,_customStyle: null
	,get_customStyle: function() {
		if(this._customStyle == null) {
			this._customStyle = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		return this._customStyle;
	}
	,set_customStyle: function(value) {
		if(value != this._customStyle) {
			this.invalidateComponent("style",false);
		}
		this._customStyle = value;
		return value;
	}
	,classes: null
	,cascadeActive: null
	,addClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) == -1) {
			this.classes.push(name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(name,invalidate,recursive);
			}
		}
	}
	,addClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) == -1) {
				this.classes.push(name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClasses(names,invalidate,recursive);
			}
		}
	}
	,removeClass: function(name,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		if(this.classes.indexOf(name) != -1) {
			HxOverrides.remove(this.classes,name);
			if(invalidate == true) {
				this.invalidateComponent("style",false);
			}
		}
		if(recursive == true || this.cascadeActive == true && name == ":active") {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(name,invalidate,recursive);
			}
		}
	}
	,removeClasses: function(names,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		var _g = 0;
		while(_g < names.length) {
			var name = names[_g];
			++_g;
			if(this.classes.indexOf(name) != -1) {
				HxOverrides.remove(this.classes,name);
				if(invalidate == true) {
					needsInvalidate = true;
				}
			}
		}
		if(needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClasses(names,invalidate,recursive);
			}
		}
	}
	,hasClass: function(name) {
		return this.classes.indexOf(name) != -1;
	}
	,swapClass: function(classToAdd,classToRemove,invalidate,recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(invalidate == null) {
			invalidate = true;
		}
		var needsInvalidate = false;
		if(classToAdd != null && this.classes.indexOf(classToAdd) == -1) {
			this.classes.push(classToAdd);
			needsInvalidate = true;
		}
		if(classToRemove != null && this.classes.indexOf(classToRemove) != -1) {
			HxOverrides.remove(this.classes,classToRemove);
			needsInvalidate = true;
		}
		if(invalidate == true && needsInvalidate == true) {
			this.invalidateComponent("style",false);
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.swapClass(classToAdd,classToRemove,invalidate,recursive);
			}
		}
	}
	,get_styleNames: function() {
		return this.classes.join(" ");
	}
	,set_styleNames: function(value) {
		if(value == null) {
			return value;
		}
		var _g = 0;
		var _g1 = value.split(" ");
		while(_g < _g1.length) {
			var x = _g1[_g];
			++_g;
			this.addClass(x);
		}
		return value;
	}
	,_styleString: null
	,get_styleString: function() {
		return this._styleString;
	}
	,set_styleString: function(value) {
		if(value == null || value == this._styleString) {
			return value;
		}
		var cssString = StringTools.trim(value);
		if(cssString.length == 0) {
			return value;
		}
		if(StringTools.endsWith(cssString,";") == false) {
			cssString += ";";
		}
		cssString = "_ { " + cssString + "}";
		var s = new haxe_ui_styles_Parser().parse(cssString);
		this.get_customStyle().mergeDirectives(s.get_rules()[0].directives);
		this._styleString = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,_useCachedStyleSheetRef: null
	,_cachedStyleSheetRef: null
	,_styleSheet: null
	,get_styleSheet: function() {
		if(this._useCachedStyleSheetRef == true) {
			return this._cachedStyleSheetRef;
		}
		var s = null;
		var ref = this;
		while(ref != null) {
			if(ref._styleSheet != null) {
				s = ref._styleSheet;
				break;
			}
			ref = ref.parentComponent;
		}
		this._useCachedStyleSheetRef = true;
		this._cachedStyleSheetRef = s;
		return s;
	}
	,set_styleSheet: function(value) {
		this._styleSheet = value;
		this.resetCachedStyleSheetRef();
		return value;
	}
	,resetCachedStyleSheetRef: function() {
		this._cachedStyleSheetRef = null;
		this._useCachedStyleSheetRef = false;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			c.resetCachedStyleSheetRef();
		}
	}
	,_includeInLayout: null
	,get_includeInLayout: function() {
		if(this._hidden == true) {
			return false;
		}
		return this._includeInLayout;
	}
	,set_includeInLayout: function(value) {
		this._includeInLayout = value;
		return value;
	}
	,get_layout: function() {
		return this._layout;
	}
	,set_layout: function(value) {
		if(value == null) {
			return value;
		}
		var tmp;
		if(this._layout != null) {
			var c = js_Boot.getClass(value);
			var tmp1 = c.__name__;
			var c = js_Boot.getClass(this._layout);
			tmp = tmp1 == c.__name__;
		} else {
			tmp = false;
		}
		if(tmp) {
			return value;
		}
		this._layout = value;
		this._layout.set_component(this);
		return value;
	}
	,lockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == true) {
			return;
		}
		this._layoutLocked = true;
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.lockLayout(recursive);
			}
		}
	}
	,unlockLayout: function(recursive) {
		if(recursive == null) {
			recursive = false;
		}
		if(this._layoutLocked == false) {
			return;
		}
		if(recursive == true) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.unlockLayout(recursive);
			}
		}
		this._layoutLocked = false;
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,ready: function() {
		var _gthis = this;
		this.set_depth(haxe_ui_util_ComponentUtil.getDepth(this));
		if(this.isComponentInvalid()) {
			this._invalidateCount = 0;
			haxe_ui_validation_ValidationManager.get_instance().add(this);
		}
		if(this._ready == false) {
			this._ready = true;
			this.handleReady();
			if((this._children == null ? [] : this._children) != null) {
				var _g = 0;
				var _g1 = this._children == null ? [] : this._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.ready();
				}
			}
			this.invalidateComponent();
			this.behaviours.ready();
			this.behaviours.update();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.invalidateComponent("data",false);
				_gthis.invalidateComponent("style",false);
				if(_gthis._compositeBuilder != null) {
					_gthis._compositeBuilder.onReady();
				}
				_gthis.onReady();
				_gthis.dispatch(new haxe_ui_events_UIEvent("ready"));
				if(_gthis._hidden == false) {
					_gthis.dispatch(new haxe_ui_events_UIEvent("shown"));
				}
			});
		}
	}
	,onReady: function() {
	}
	,onInitialize: function() {
	}
	,onResized: function() {
	}
	,onMoved: function() {
	}
	,_scriptAccess: null
	,get_scriptAccess: function() {
		return this._scriptAccess;
	}
	,set_scriptAccess: function(value) {
		if(value == this._scriptAccess) {
			return value;
		}
		this._scriptAccess = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_scriptAccess(value);
		}
		return value;
	}
	,namedComponents: null
	,get_namedComponents: function() {
		var list = [];
		haxe_ui_core_Component.addNamedComponentsFrom(this,list);
		return list;
	}
	,onThemeChanged: function() {
		this._initialSizeApplied = false;
		if(this._style != null) {
			if(this._style.initialWidth != null) {
				this.set_width(0);
			}
			if(this._style.initialPercentWidth != null) {
				this.set_percentWidth(null);
			}
			if(this._style.initialHeight != null) {
				this.set_height(0);
			}
			if(this._style.initialPercentHeight != null) {
				this.set_percentHeight(null);
			}
		}
	}
	,initializeComponent: function() {
		if(this._isInitialized == true) {
			return;
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.onInitialize();
		}
		this.onInitialize();
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		this._isInitialized = true;
		if(this.hasEvent("initialize")) {
			this.dispatch(new haxe_ui_events_UIEvent("initialize"));
		}
	}
	,_initialSizeApplied: null
	,validateInitialSize: function(isInitialized) {
		if(isInitialized == false && this._style != null && this._initialSizeApplied == false) {
			if((this._style.initialWidth != null || this._style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(this._style.initialWidth != null) {
					this.set_width(this._style.initialWidth);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentWidth != null) {
					this.set_percentWidth(this._style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if((this._style.initialHeight != null || this._style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(this._style.initialHeight != null) {
					this.set_height(this._style.initialHeight);
					this._initialSizeApplied = true;
				} else if(this._style.initialPercentHeight != null) {
					this.set_percentHeight(this._style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
	}
	,validateComponentLayout: function() {
		this.get_layout().refresh();
		while(this.validateComponentAutoSize()) this.get_layout().refresh();
		var sizeChanged = false;
		if(this._componentWidth != this._actualWidth || this._componentHeight != this._actualHeight) {
			this._actualWidth = this._componentWidth;
			this._actualHeight = this._componentHeight;
			this.enforceSizeConstraints();
			if(this.parentComponent != null) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this.onResized();
			this.dispatch(new haxe_ui_events_UIEvent("resize"));
			sizeChanged = true;
		}
		if(this._compositeBuilder != null) {
			if(this._compositeBuilder.validateComponentLayout()) {
				sizeChanged = true;
			}
		}
		return sizeChanged;
	}
	,enforceSizeConstraints: function() {
		if(this.get_style() != null) {
			if(this.get_style().minWidth != null && this._componentWidth < this.get_style().minWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().minWidth;
			}
			if(this.get_style().maxWidth != null && this.get_style().maxPercentWidth == null && this._componentWidth > this.get_style().maxWidth) {
				this._componentWidth = this._actualWidth = this._width = this.get_style().maxWidth;
			} else if(this.get_style().maxWidth == null && this.get_style().maxPercentWidth != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentWidth == null) {
						max += p.get_width();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingLeft + p.get_style().paddingRight;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentWidth / 100;
				if(max > 0 && this._componentWidth > max) {
					this._componentWidth = this._actualWidth = this._width = max;
				}
			}
			if(this.get_style().minHeight != null && this._componentHeight < this.get_style().minHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().minHeight;
			}
			if(this.get_style().maxHeight != null && this.get_style().maxPercentHeight == null && this._componentHeight > this.get_style().maxHeight) {
				this._componentHeight = this._actualHeight = this._height = this.get_style().maxHeight;
			} else if(this.get_style().maxHeight == null && this.get_style().maxPercentHeight != null) {
				var p = this;
				var max = 0;
				while(p != null) {
					if(p.get_style() != null && p.get_style().maxPercentHeight == null) {
						max += p.get_height();
						break;
					}
					if(p.get_style() != null && p != this) {
						max -= p.get_style().paddingTop + p.get_style().paddingBottom;
					}
					p = p.parentComponent;
				}
				max = max * this.get_style().maxPercentHeight / 100;
				if(max > 0 && this._componentHeight > max) {
					this._componentHeight = this._actualHeight = this._height = max;
				}
			}
		}
	}
	,validateComponentStyle: function() {
		var s = haxe_ui_Toolkit.styleSheet.buildStyleFor(this);
		if(this.get_styleSheet() != null) {
			var localStyle = this.get_styleSheet().buildStyleFor(this);
			s.apply(localStyle);
		}
		s.apply(this.get_customStyle());
		if(this._style == null || this._style.equalTo(s) == false) {
			var marginsChanged = false;
			if(this.parentComponent != null && this._style != null) {
				marginsChanged = this._style.marginLeft != s.marginLeft || this._style.marginRight != s.marginRight || this._style.marginTop != s.marginTop || this._style.marginBottom != s.marginBottom;
			}
			var bordersChanged = false;
			if(this._style != null && this._style.get_fullBorderSize() != s.get_fullBorderSize()) {
				bordersChanged = true;
			}
			this._style = s;
			this.applyStyle(s);
			if(bordersChanged == true) {
				if(!(this._layout == null || this._layoutLocked == true)) {
					this.invalidateComponent("layout",false);
				}
			}
			if(marginsChanged == true) {
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
	}
	,validateComponentPosition: function() {
		this.handlePosition(this._left,this._top,this._style);
		this.onMoved();
		this.dispatch(new haxe_ui_events_UIEvent("move"));
	}
	,updateComponentDisplay: function() {
		if(this.get_componentWidth() == null || this.get_componentHeight() == null) {
			return;
		}
		this.handleSize(this.get_componentWidth(),this.get_componentHeight(),this._style);
		if(this._componentClipRect != null || this.get_style() != null && this.get_style().clip != null && this.get_style().clip == true) {
			this.handleClipRect(this._componentClipRect != null ? this._componentClipRect : new haxe_ui_geom_Rectangle(0,0,this.get_componentWidth(),this.get_componentHeight()));
		}
	}
	,validateComponentAutoSize: function() {
		var invalidate = false;
		if(this.get_autoWidth() == true || this.get_autoHeight() == true) {
			var s = this.get_layout().calcAutoSize();
			if(this.get_autoWidth() == true) {
				if(s.width != this._componentWidth) {
					this._componentWidth = s.width;
					invalidate = true;
				}
			}
			if(this.get_autoHeight() == true) {
				if(s.height != this._componentHeight) {
					this._componentHeight = s.height;
					invalidate = true;
				}
			}
		}
		return invalidate;
	}
	,applyStyle: function(style) {
		haxe_ui_backend_ComponentImpl.prototype.applyStyle.call(this,style);
		if(style != null && this._initialSizeApplied == false) {
			if((style.initialWidth != null || style.initialPercentWidth != null) && (this.get_width() <= 0 && this.get_percentWidth() == null)) {
				if(style.initialWidth != null) {
					this.set_width(style.initialWidth);
					this._initialSizeApplied = true;
				} else if(style.initialPercentWidth != null) {
					this.set_percentWidth(style.initialPercentWidth);
					this._initialSizeApplied = true;
				}
			}
			if(style.autoHeight != true && (style.initialHeight != null || style.initialPercentHeight != null) && (this.get_height() <= 0 && this.get_percentHeight() == null)) {
				if(style.initialHeight != null) {
					this.set_height(style.initialHeight);
					this._initialSizeApplied = true;
				} else if(style.initialPercentHeight != null) {
					this.set_percentHeight(style.initialPercentHeight);
					this._initialSizeApplied = true;
				}
			}
		}
		if(style.left != null) {
			this.set_left(style.left);
		}
		if(style.top != null) {
			this.set_top(style.top);
		}
		if(style.percentWidth != null) {
			this.set_componentWidth(null);
			this.set_percentWidth(style.percentWidth);
		}
		if(style.percentHeight != null) {
			this.set_componentHeight(null);
			this.set_percentHeight(style.percentHeight);
		}
		if(style.width != null) {
			this.set_percentWidth(null);
			this.set_width(style.width);
		}
		if(style.height != null) {
			this.set_percentHeight(null);
			this.set_height(style.height);
		}
		if(style.native != null) {
			this.set_native(style.native);
		}
		if(style.hidden != null) {
			this.set_hidden(style.hidden);
		}
		if(style.animationName != null) {
			var animationKeyFrames = haxe_ui_Toolkit.styleSheet.get_animations().h[style.animationName];
			this.applyAnimationKeyFrame(animationKeyFrames,style.animationOptions);
		} else if(this.get_componentAnimation() != null) {
			this.set_componentAnimation(null);
		}
		if(style.pointerEvents != null && style.pointerEvents != "none") {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == false) {
				if(style.cursor == null) {
					this.get_customStyle().cursor = "pointer";
				}
				this.registerEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == false) {
				this.registerEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == false) {
				this.registerEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == false) {
				this.registerEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",true);
		} else if(style.pointerEvents != null) {
			if(this.hasEvent("mouseover",$bind(this,this.onPointerEventsMouseOver)) == true) {
				this.get_customStyle().cursor = null;
				this.unregisterEvent("mouseover",$bind(this,this.onPointerEventsMouseOver));
			}
			if(this.hasEvent("mouseout",$bind(this,this.onPointerEventsMouseOut)) == true) {
				this.unregisterEvent("mouseout",$bind(this,this.onPointerEventsMouseOut));
			}
			if(this.hasEvent("mousedown",$bind(this,this.onPointerEventsMouseDown)) == true) {
				this.unregisterEvent("mousedown",$bind(this,this.onPointerEventsMouseDown));
			}
			if(this.hasEvent("mouseup",$bind(this,this.onPointerEventsMouseUp)) == true) {
				this.unregisterEvent("mouseup",$bind(this,this.onPointerEventsMouseUp));
			}
			this.handleFrameworkProperty("allowMouseInteraction",false);
		}
		if(this.classes.indexOf("listview") != -1 || this.classes.indexOf("tableview") != -1 || this.classes.indexOf("treeview") != -1) {
			if(style.get_borderType() == haxe_ui_styles_StyleBorderType.None) {
				this.addClass("borderless");
			} else {
				this.removeClass("borderless");
			}
		}
		if(this._compositeBuilder != null) {
			this._compositeBuilder.applyStyle(style);
		}
	}
	,onPointerEventsMouseOver: function(e) {
		this.addClass(":hover",true,true);
	}
	,onPointerEventsMouseOut: function(e) {
		this.removeClass(":hover",true,true);
	}
	,onPointerEventsMouseDown: function(e) {
		this.addClass(":down",true,true);
	}
	,onPointerEventsMouseUp: function(e) {
		this.removeClass(":down",true,true);
	}
	,applyAnimationKeyFrame: function(animationKeyFrames,options) {
		var _gthis = this;
		if(this._animatable == false || options == null || options.duration == 0 || this._componentAnimation != null && this._componentAnimation.name == animationKeyFrames.id && options.compareToAnimation(this._componentAnimation) == true) {
			return;
		}
		if(this.hasEvent("animationstart")) {
			this.dispatch(new haxe_ui_events_AnimationEvent("animationstart"));
		}
		this.set_componentAnimation(haxe_ui_styles_animation_Animation.createWithKeyFrames(animationKeyFrames,this,options));
		this.get_componentAnimation().run(function() {
			if(_gthis.hasEvent("animationend")) {
				_gthis.dispatch(new haxe_ui_events_AnimationEvent("animationend"));
			}
		});
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_ComponentImpl.prototype.cloneComponent.call(this);
		c.set_hidden(this.get_hidden());
		if(this.get_styleNames() != null) {
			c.set_styleNames(this.get_styleNames());
		}
		if(this.get_styleString() != null) {
			c.set_styleString(this.get_styleString());
		}
		var tmp = this._ready == false;
		if(this.get_autoWidth() == false && this.get_width() > 0) {
			c.set_width(this.get_width());
		}
		if(this.get_autoHeight() == false && this.get_height() > 0) {
			c.set_height(this.get_height());
		}
		if(this.get_customStyle() != null) {
			if(c.get_customStyle() == null) {
				c.set_customStyle(new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null));
			}
			c.get_customStyle().apply(this.get_customStyle());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,get_isComponentClipped: function() {
		if(this._compositeBuilder != null) {
			return this._compositeBuilder.get_isComponentClipped();
		}
		return this.get_componentClipRect() != null;
	}
	,cssName: null
	,get_cssName: function() {
		var cssName = null;
		if(this._compositeBuilder != null) {
			cssName = this._compositeBuilder.get_cssName();
		}
		if(cssName == null) {
			var c = js_Boot.getClass(this);
			cssName = c.__name__.split(".").pop().toLowerCase();
		}
		return cssName;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_ComponentImpl.prototype.registerBehaviours.call(this);
	}
	,get_color: function() {
		if(this.get_customStyle().color != null) {
			return this.get_customStyle().color;
		}
		if(this.get_style() == null || this.get_style().color == null) {
			return null;
		}
		return this.get_style().color;
	}
	,set_color: function(value) {
		if(this.get_customStyle().color == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().color = null;
		} else {
			this.get_customStyle().color = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundColor: function() {
		if(this.get_customStyle().backgroundColor != null) {
			return this.get_customStyle().backgroundColor;
		}
		if(this.get_style() == null || this.get_style().backgroundColor == null) {
			return null;
		}
		return this.get_style().backgroundColor;
	}
	,set_backgroundColor: function(value) {
		if(this.get_customStyle().backgroundColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundColor = null;
		} else {
			this.get_customStyle().backgroundColor = haxe_ui_util_Color.toInt(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_backgroundImage: function() {
		if(this.get_customStyle().backgroundImage != null) {
			return this.get_customStyle().backgroundImage;
		}
		if(this.get_style() == null || this.get_style().backgroundImage == null) {
			return null;
		}
		return this.get_style().backgroundImage;
	}
	,set_backgroundImage: function(value) {
		if(this.get_customStyle().backgroundImage == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().backgroundImage = null;
		} else {
			this.get_customStyle().backgroundImage = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderColor: function() {
		if(this.get_customStyle().borderColor != null) {
			return this.get_customStyle().borderColor;
		}
		if(this.get_style() == null || this.get_style().borderColor == null) {
			return null;
		}
		return this.get_style().borderColor;
	}
	,set_borderColor: function(value) {
		if(this.get_customStyle().borderColor == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderColor = null;
		} else {
			this.get_customStyle().borderColor = haxe_ui_util_Color.toInt(value);
		}
		this.get_customStyle().borderTopColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderLeftColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderBottomColor = haxe_ui_util_Color.toInt(value);
		this.get_customStyle().borderRightColor = haxe_ui_util_Color.toInt(value);
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderSize: function() {
		if(this.get_customStyle().borderSize != null) {
			return this.get_customStyle().borderSize;
		}
		if(this.get_style() == null || this.get_style().borderSize == null) {
			return null;
		}
		return this.get_style().borderSize;
	}
	,set_borderSize: function(value) {
		if(this.get_customStyle().borderSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderSize = null;
		} else {
			this.get_customStyle().borderSize = value;
		}
		this.get_customStyle().borderTopSize = value;
		this.get_customStyle().borderLeftSize = value;
		this.get_customStyle().borderBottomSize = value;
		this.get_customStyle().borderRightSize = value;
		this.invalidateComponent("style",false);
		return value;
	}
	,get_borderRadius: function() {
		if(this.get_customStyle().borderRadius != null) {
			return this.get_customStyle().borderRadius;
		}
		if(this.get_style() == null || this.get_style().borderRadius == null) {
			return null;
		}
		return this.get_style().borderRadius;
	}
	,set_borderRadius: function(value) {
		if(this.get_customStyle().borderRadius == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().borderRadius = null;
		} else {
			this.get_customStyle().borderRadius = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_padding: function() {
		if(this.get_customStyle().padding != null) {
			return this.get_customStyle().padding;
		}
		if(this.get_style() == null || this.get_style().padding == null) {
			return null;
		}
		return this.get_style().padding;
	}
	,set_padding: function(value) {
		if(this.get_customStyle().padding == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().set_padding(null);
		} else {
			this.get_customStyle().set_padding(value);
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingLeft: function() {
		if(this.get_customStyle().paddingLeft != null) {
			return this.get_customStyle().paddingLeft;
		}
		if(this.get_style() == null || this.get_style().paddingLeft == null) {
			return null;
		}
		return this.get_style().paddingLeft;
	}
	,set_paddingLeft: function(value) {
		if(this.get_customStyle().paddingLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingLeft = null;
		} else {
			this.get_customStyle().paddingLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingRight: function() {
		if(this.get_customStyle().paddingRight != null) {
			return this.get_customStyle().paddingRight;
		}
		if(this.get_style() == null || this.get_style().paddingRight == null) {
			return null;
		}
		return this.get_style().paddingRight;
	}
	,set_paddingRight: function(value) {
		if(this.get_customStyle().paddingRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingRight = null;
		} else {
			this.get_customStyle().paddingRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingTop: function() {
		if(this.get_customStyle().paddingTop != null) {
			return this.get_customStyle().paddingTop;
		}
		if(this.get_style() == null || this.get_style().paddingTop == null) {
			return null;
		}
		return this.get_style().paddingTop;
	}
	,set_paddingTop: function(value) {
		if(this.get_customStyle().paddingTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingTop = null;
		} else {
			this.get_customStyle().paddingTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_paddingBottom: function() {
		if(this.get_customStyle().paddingBottom != null) {
			return this.get_customStyle().paddingBottom;
		}
		if(this.get_style() == null || this.get_style().paddingBottom == null) {
			return null;
		}
		return this.get_style().paddingBottom;
	}
	,set_paddingBottom: function(value) {
		if(this.get_customStyle().paddingBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().paddingBottom = null;
		} else {
			this.get_customStyle().paddingBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginLeft: function() {
		if(this.get_customStyle().marginLeft != null) {
			return this.get_customStyle().marginLeft;
		}
		if(this.get_style() == null || this.get_style().marginLeft == null) {
			return null;
		}
		return this.get_style().marginLeft;
	}
	,set_marginLeft: function(value) {
		if(this.get_customStyle().marginLeft == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginLeft = null;
		} else {
			this.get_customStyle().marginLeft = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginRight: function() {
		if(this.get_customStyle().marginRight != null) {
			return this.get_customStyle().marginRight;
		}
		if(this.get_style() == null || this.get_style().marginRight == null) {
			return null;
		}
		return this.get_style().marginRight;
	}
	,set_marginRight: function(value) {
		if(this.get_customStyle().marginRight == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginRight = null;
		} else {
			this.get_customStyle().marginRight = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginTop: function() {
		if(this.get_customStyle().marginTop != null) {
			return this.get_customStyle().marginTop;
		}
		if(this.get_style() == null || this.get_style().marginTop == null) {
			return null;
		}
		return this.get_style().marginTop;
	}
	,set_marginTop: function(value) {
		if(this.get_customStyle().marginTop == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginTop = null;
		} else {
			this.get_customStyle().marginTop = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_marginBottom: function() {
		if(this.get_customStyle().marginBottom != null) {
			return this.get_customStyle().marginBottom;
		}
		if(this.get_style() == null || this.get_style().marginBottom == null) {
			return null;
		}
		return this.get_style().marginBottom;
	}
	,set_marginBottom: function(value) {
		if(this.get_customStyle().marginBottom == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().marginBottom = null;
		} else {
			this.get_customStyle().marginBottom = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_clip: function() {
		if(this.get_customStyle().clip != null) {
			return this.get_customStyle().clip;
		}
		if(this.get_style() == null || this.get_style().clip == null) {
			return null;
		}
		return this.get_style().clip;
	}
	,set_clip: function(value) {
		if(this.get_customStyle().clip == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().clip = null;
		} else {
			this.get_customStyle().clip = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_opacity: function() {
		if(this.get_customStyle().opacity != null) {
			return this.get_customStyle().opacity;
		}
		if(this.get_style() == null || this.get_style().opacity == null) {
			return null;
		}
		return this.get_style().opacity;
	}
	,set_opacity: function(value) {
		if(this.get_customStyle().opacity == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().opacity = null;
		} else {
			this.get_customStyle().opacity = value;
		}
		this.invalidateComponent("style",false);
		return value;
	}
	,get_horizontalAlign: function() {
		if(this.get_customStyle().horizontalAlign != null) {
			return this.get_customStyle().horizontalAlign;
		}
		if(this.get_style() == null || this.get_style().horizontalAlign == null) {
			return null;
		}
		return this.get_style().horizontalAlign;
	}
	,set_horizontalAlign: function(value) {
		if(this.get_customStyle().horizontalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().horizontalAlign = null;
		} else {
			this.get_customStyle().horizontalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_verticalAlign: function() {
		if(this.get_customStyle().verticalAlign != null) {
			return this.get_customStyle().verticalAlign;
		}
		if(this.get_style() == null || this.get_style().verticalAlign == null) {
			return null;
		}
		return this.get_style().verticalAlign;
	}
	,set_verticalAlign: function(value) {
		if(this.get_customStyle().verticalAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().verticalAlign = null;
		} else {
			this.get_customStyle().verticalAlign = value;
		}
		this.invalidateComponent("style",false);
		if(this.parentComponent != null) {
			var _this = this.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,self: function() {
		return new haxe_ui_core_Component();
	}
	,_internal__onDragStart: null
	,onDragStart: null
	,set_onDragStart: function(value) {
		if(this._internal__onDragStart != null) {
			this.unregisterEvent("dragStart",this._internal__onDragStart);
			this._internal__onDragStart = null;
		}
		if(value != null) {
			this._internal__onDragStart = value;
			this.registerEvent("dragStart",value);
		}
		return value;
	}
	,_internal__onDrag: null
	,onDrag: null
	,set_onDrag: function(value) {
		if(this._internal__onDrag != null) {
			this.unregisterEvent("drag",this._internal__onDrag);
			this._internal__onDrag = null;
		}
		if(value != null) {
			this._internal__onDrag = value;
			this.registerEvent("drag",value);
		}
		return value;
	}
	,_internal__onDragEnd: null
	,onDragEnd: null
	,set_onDragEnd: function(value) {
		if(this._internal__onDragEnd != null) {
			this.unregisterEvent("dragEnd",this._internal__onDragEnd);
			this._internal__onDragEnd = null;
		}
		if(value != null) {
			this._internal__onDragEnd = value;
			this.registerEvent("dragEnd",value);
		}
		return value;
	}
	,_internal__onAnimationStart: null
	,onAnimationStart: null
	,set_onAnimationStart: function(value) {
		if(this._internal__onAnimationStart != null) {
			this.unregisterEvent("animationstart",this._internal__onAnimationStart);
			this._internal__onAnimationStart = null;
		}
		if(value != null) {
			this._internal__onAnimationStart = value;
			this.registerEvent("animationstart",value);
		}
		return value;
	}
	,_internal__onAnimationEnd: null
	,onAnimationEnd: null
	,set_onAnimationEnd: function(value) {
		if(this._internal__onAnimationEnd != null) {
			this.unregisterEvent("animationend",this._internal__onAnimationEnd);
			this._internal__onAnimationEnd = null;
		}
		if(value != null) {
			this._internal__onAnimationEnd = value;
			this.registerEvent("animationend",value);
		}
		return value;
	}
	,_internal__onClick: null
	,onClick: null
	,set_onClick: function(value) {
		if(this._internal__onClick != null) {
			this.unregisterEvent("click",this._internal__onClick);
			this._internal__onClick = null;
		}
		if(value != null) {
			this._internal__onClick = value;
			this.registerEvent("click",value);
		}
		return value;
	}
	,_internal__onMouseOver: null
	,onMouseOver: null
	,set_onMouseOver: function(value) {
		if(this._internal__onMouseOver != null) {
			this.unregisterEvent("mouseover",this._internal__onMouseOver);
			this._internal__onMouseOver = null;
		}
		if(value != null) {
			this._internal__onMouseOver = value;
			this.registerEvent("mouseover",value);
		}
		return value;
	}
	,_internal__onMouseOut: null
	,onMouseOut: null
	,set_onMouseOut: function(value) {
		if(this._internal__onMouseOut != null) {
			this.unregisterEvent("mouseout",this._internal__onMouseOut);
			this._internal__onMouseOut = null;
		}
		if(value != null) {
			this._internal__onMouseOut = value;
			this.registerEvent("mouseout",value);
		}
		return value;
	}
	,_internal__onDblClick: null
	,onDblClick: null
	,set_onDblClick: function(value) {
		if(this._internal__onDblClick != null) {
			this.unregisterEvent("doubleclick",this._internal__onDblClick);
			this._internal__onDblClick = null;
		}
		if(value != null) {
			this._internal__onDblClick = value;
			this.registerEvent("doubleclick",value);
		}
		return value;
	}
	,_internal__onRightClick: null
	,onRightClick: null
	,set_onRightClick: function(value) {
		if(this._internal__onRightClick != null) {
			this.unregisterEvent("rightclick",this._internal__onRightClick);
			this._internal__onRightClick = null;
		}
		if(value != null) {
			this._internal__onRightClick = value;
			this.registerEvent("rightclick",value);
		}
		return value;
	}
	,_internal__onChange: null
	,onChange: null
	,set_onChange: function(value) {
		if(this._internal__onChange != null) {
			this.unregisterEvent("change",this._internal__onChange);
			this._internal__onChange = null;
		}
		if(value != null) {
			this._internal__onChange = value;
			this.registerEvent("change",value);
		}
		return value;
	}
	,__class__: haxe_ui_core_Component
	,__properties__: $extend(haxe_ui_backend_ComponentImpl.prototype.__properties__,{set_onChange:"set_onChange",set_onRightClick:"set_onRightClick",set_onDblClick:"set_onDblClick",set_onMouseOut:"set_onMouseOut",set_onMouseOver:"set_onMouseOver",set_onClick:"set_onClick",set_onAnimationEnd:"set_onAnimationEnd",set_onAnimationStart:"set_onAnimationStart",set_onDragEnd:"set_onDragEnd",set_onDrag:"set_onDrag",set_onDragStart:"set_onDragStart",set_verticalAlign:"set_verticalAlign",get_verticalAlign:"get_verticalAlign",set_horizontalAlign:"set_horizontalAlign",get_horizontalAlign:"get_horizontalAlign",set_opacity:"set_opacity",get_opacity:"get_opacity",set_clip:"set_clip",get_clip:"get_clip",set_marginBottom:"set_marginBottom",get_marginBottom:"get_marginBottom",set_marginTop:"set_marginTop",get_marginTop:"get_marginTop",set_marginRight:"set_marginRight",get_marginRight:"get_marginRight",set_marginLeft:"set_marginLeft",get_marginLeft:"get_marginLeft",set_paddingBottom:"set_paddingBottom",get_paddingBottom:"get_paddingBottom",set_paddingTop:"set_paddingTop",get_paddingTop:"get_paddingTop",set_paddingRight:"set_paddingRight",get_paddingRight:"get_paddingRight",set_paddingLeft:"set_paddingLeft",get_paddingLeft:"get_paddingLeft",set_padding:"set_padding",get_padding:"get_padding",set_borderRadius:"set_borderRadius",get_borderRadius:"get_borderRadius",set_borderSize:"set_borderSize",get_borderSize:"get_borderSize",set_borderColor:"set_borderColor",get_borderColor:"get_borderColor",set_backgroundImage:"set_backgroundImage",get_backgroundImage:"get_backgroundImage",set_backgroundColor:"set_backgroundColor",get_backgroundColor:"get_backgroundColor",set_color:"set_color",get_color:"get_color",get_cssName:"get_cssName",get_namedComponents:"get_namedComponents",set_scriptAccess:"set_scriptAccess",get_scriptAccess:"get_scriptAccess",set_layout:"set_layout",get_layout:"get_layout",set_includeInLayout:"set_includeInLayout",get_includeInLayout:"get_includeInLayout",set_styleSheet:"set_styleSheet",get_styleSheet:"get_styleSheet",set_styleString:"set_styleString",get_styleString:"get_styleString",set_styleNames:"set_styleNames",get_styleNames:"get_styleNames",set_customStyle:"set_customStyle",get_customStyle:"get_customStyle",set_hidden:"set_hidden",get_hidden:"get_hidden",get_numComponents:"get_numComponents",get_rootComponent:"get_rootComponent",set_dragOptions:"set_dragOptions",get_dragOptions:"get_dragOptions",set_dragInitiator:"set_dragInitiator",get_dragInitiator:"get_dragInitiator",set_draggable:"set_draggable",get_draggable:"get_draggable",get_screen:"get_screen",set_componentAnimation:"set_componentAnimation",get_componentAnimation:"get_componentAnimation",set_animatable:"set_animatable",get_animatable:"get_animatable",set_native:"set_native",get_native:"get_native"})
});
var haxe_ui_containers_Box = function() {
	this._direction = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.Box"] = haxe_ui_containers_Box;
haxe_ui_containers_Box.__name__ = "haxe.ui.containers.Box";
haxe_ui_containers_Box.__super__ = haxe_ui_core_Component;
haxe_ui_containers_Box.prototype = $extend(haxe_ui_core_Component.prototype,{
	_layoutName: null
	,get_layoutName: function() {
		return this._layoutName;
	}
	,set_layoutName: function(value) {
		if(this._layoutName == value) {
			return value;
		}
		this._layoutName = value;
		this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this.get_layoutName()));
		return value;
	}
	,createDefaults: function() {
		haxe_ui_core_Component.prototype.createDefaults.call(this);
		if(this._defaultLayoutClass == null) {
			this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
		}
	}
	,_direction: null
	,applyStyle: function(style) {
		haxe_ui_core_Component.prototype.applyStyle.call(this,style);
		if(style.direction != null && style.direction != this._direction) {
			this._direction = style.direction;
			this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(this._direction));
		}
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_DefaultLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("icon",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_layoutName() != null) {
			c.set_layoutName(this.get_layoutName());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Box();
	}
	,__class__: haxe_ui_containers_Box
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_layoutName:"set_layoutName",get_layoutName:"get_layoutName"})
});
var haxe_ui_containers_VBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_VerticalLayout());
};
$hxClasses["haxe.ui.containers.VBox"] = haxe_ui_containers_VBox;
haxe_ui_containers_VBox.__name__ = "haxe.ui.containers.VBox";
haxe_ui_containers_VBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_VBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VBox();
	}
	,__class__: haxe_ui_containers_VBox
});
var AdminView = function() {
	this.currentUser = new core_data_UserData();
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n        .label, .textfield, .textarea {\n            font-name: \"fonts/Roboto-Regular.ttf\";\n        }\n\n        .bottom-buttons  {\n        }\n\n        .bottom-buttons .button {\n            background-color: #eeeeee;\n            border: none;\n            border-radius:0px;\n        }\n\n        .bottom-buttons .button:hover {\n            background-color: #f5f5f5;\n        }\n\n        .bottom-buttons .button:down {\n            background-color: #d2d2d2;\n        }\n\n        .portlet.no-border {\n            filter: none;\n            border: none;\n            border-radius: 0;\n            padding: 0;\n        }\n    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_id("mainContent");
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	c0.set_styleString("padding:0px;spacing:0px;");
	var c1 = new haxe_ui_containers_menus_MenuBar();
	c1.set_id("mainMenu");
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_containers_menus_Menu();
	c2.set_id("adminMenu");
	c2.set_text("Tools");
	var c3 = new haxe_ui_containers_menus_MenuItem();
	c3.set_id("removeCurrentDatabase");
	c3.set_text("Remove Current Database");
	c2.addComponent(c3);
	var c4 = new haxe_ui_containers_menus_MenuItem();
	c4.set_id("clearAll");
	c4.set_text("Clear All");
	c2.addComponent(c4);
	var c5 = new haxe_ui_containers_menus_MenuItem();
	c5.set_id("transformBrowser");
	c5.set_text("Transform Browser");
	c2.addComponent(c5);
	var c6 = new haxe_ui_containers_menus_MenuItem();
	c6.set_id("permissionChecker");
	c6.set_text("Permission Checker");
	c2.addComponent(c6);
	c1.addComponent(c2);
	var c7 = new haxe_ui_components_Spacer();
	c7.set_percentWidth(100.);
	c1.addComponent(c7);
	var c8 = new haxe_ui_containers_menus_Menu();
	c8.set_id("userMenu");
	c8.set_text("Username");
	var c9 = new haxe_ui_containers_menus_MenuItem();
	c9.set_id("myRoles");
	c9.set_text("My Roles");
	c8.addComponent(c9);
	var c10 = new haxe_ui_containers_menus_MenuItem();
	c10.set_id("logout");
	c10.set_text("Logout");
	c8.addComponent(c10);
	c1.addComponent(c8);
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_HBox();
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	var c12 = new haxe_ui_containers_VBox();
	c12.set_id("mainContent");
	c12.set_percentWidth(100.);
	c12.set_percentHeight(100.);
	var c13 = new haxe_ui_containers_Stack();
	c13.set_id("mainStack");
	c13.set_percentWidth(100.);
	c13.set_percentHeight(100.);
	var c14 = new views_HomeView();
	c14.set_id("homeView");
	c13.addComponent(c14);
	var c15 = new views_DataView();
	c15.set_id("dataView");
	c13.addComponent(c15);
	var c16 = new views_DashboardsView();
	c16.set_id("dashboardsView");
	c13.addComponent(c16);
	var c17 = new views_OrganizationsView();
	c17.set_id("organizationsView");
	c13.addComponent(c17);
	var c18 = new views_SettingsView();
	c18.set_id("settingsView");
	c13.addComponent(c18);
	c12.addComponent(c13);
	c11.addComponent(c12);
	var c19 = new haxe_ui_containers_VerticalButtonBar();
	c19.set_id("mainButtons");
	c19.set_percentHeight(100.);
	c19.set_styleNames("right-menu with-bottom-button");
	c19.set_styleString("margin-top: -1px");
	c19.set_selectedIndex(0);
	var c20 = new haxe_ui_components_Button();
	c20.set_text("Home");
	c20.userData = "homeView";
	c20.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-top-menu-48.png"));
	c19.addComponent(c20);
	var c21 = new haxe_ui_components_Button();
	c21.set_text("Data");
	c21.userData = "dataView";
	c21.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-data-protection-48.png"));
	c19.addComponent(c21);
	var c22 = new haxe_ui_components_Button();
	c22.set_text("Dashboards");
	c22.userData = "dashboardsView";
	c22.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-dashboard-layout-48.png"));
	c19.addComponent(c22);
	var c23 = new haxe_ui_components_Button();
	c23.set_text("Access");
	c23.userData = "organizationsView";
	c23.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-data-protection-48.png"));
	c19.addComponent(c23);
	var c24 = new haxe_ui_components_Spacer();
	c24.set_percentHeight(100.);
	c19.addComponent(c24);
	var c25 = new haxe_ui_components_Button();
	c25.set_text("Settings");
	c25.userData = "settingsView";
	c25.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-services-48.png"));
	c19.addComponent(c25);
	c11.addComponent(c19);
	c0.addComponent(c11);
	this.addComponent(c0);
	c19.registerEvent("change",function(event) {
		var __this__ = c19;
		var userMenu = c8;
		var transformBrowser = c5;
		var settingsView = c18;
		var removeCurrentDatabase = c3;
		var permissionChecker = c6;
		var organizationsView = c17;
		var myRoles = c9;
		var mainStack = c13;
		var mainMenu = c1;
		var mainContent = c12;
		var mainButtons = c19;
		var logout = c10;
		var homeView = c14;
		var dataView = c15;
		var dashboardsView = c16;
		var clearAll = c4;
		var adminMenu = c2;
		mainStack.set_selectedId(__this__.get_selectedButton().userData);
	});
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.set_styleNames("default-background");
	this.set_styleString("padding:0px;spacing:0px;");
	this.bindingRoot = true;
	this.userMenu = c8;
	this.transformBrowser = c5;
	this.settingsView = c18;
	this.removeCurrentDatabase = c3;
	this.permissionChecker = c6;
	this.organizationsView = c17;
	this.myRoles = c9;
	this.mainStack = c13;
	this.mainMenu = c1;
	this.mainContent = c12;
	this.mainButtons = c19;
	this.logout = c10;
	this.homeView = c14;
	this.dataView = c15;
	this.dashboardsView = c16;
	this.clearAll = c4;
	this.adminMenu = c2;
	AdminView.instance = this;
	this.currentUser.set_firstName("Ian");
	this.currentUser.set_lastName("Harrigan");
	this.currentUser.set_isAdmin(true);
	var userLabel = this.currentUser.get_firstName() + " " + this.currentUser.get_lastName();
	if(this.currentUser.get_isAdmin()) {
		userLabel += " (Admin)";
	}
	this.userMenu.set_text(userLabel);
	var c = this.mainMenu;
	if(c != null) {
		c.registerEvent("menuselected",$bind(this,this.onMenuMenu));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "mainMenu" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "AdminView", methodName : "new"});
	}
	var c = this.mainStack;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onMainStackChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "mainStack" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "AdminView", methodName : "new"});
	}
};
$hxClasses["AdminView"] = AdminView;
AdminView.__name__ = "AdminView";
AdminView.__super__ = haxe_ui_containers_VBox;
AdminView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	currentUser: null
	,onMenuMenu: function(e) {
		switch(e.menuItem.get_id()) {
		case "clearAll":
			this.clearAllDbs();
			break;
		case "permissionChecker":
			var dialog = new dialogs_PermissionCheckerDialog();
			dialog.show();
			break;
		case "removeCurrentDatabase":
			views_DataView.instance.removeCurrentDatabase();
			break;
		case "transformBrowser":
			var dialog = new dialogs_TransformBrowserDialog();
			dialog.show();
			break;
		}
	}
	,clearAllDbs: function() {
	}
	,onMainStackChanged: function(_) {
		this.mainButtons.set_selectedIndex(this.mainStack.get_selectedIndex());
	}
	,changeView: function(id) {
		this.mainStack.set_selectedId(id);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new AdminView();
	}
	,userMenu: null
	,transformBrowser: null
	,settingsView: null
	,removeCurrentDatabase: null
	,permissionChecker: null
	,organizationsView: null
	,myRoles: null
	,mainStack: null
	,mainMenu: null
	,mainContent: null
	,mainButtons: null
	,logout: null
	,homeView: null
	,dataView: null
	,dashboardsView: null
	,clearAll: null
	,adminMenu: null
	,__class__: AdminView
});
var DateTools = function() { };
$hxClasses["DateTools"] = DateTools;
DateTools.__name__ = "DateTools";
DateTools.__format_get = function(d,e) {
	switch(e) {
	case "%":
		return "%";
	case "A":
		return DateTools.DAY_NAMES[d.getDay()];
	case "B":
		return DateTools.MONTH_NAMES[d.getMonth()];
	case "C":
		return StringTools.lpad(Std.string(d.getFullYear() / 100 | 0),"0",2);
	case "D":
		return DateTools.__format(d,"%m/%d/%y");
	case "F":
		return DateTools.__format(d,"%Y-%m-%d");
	case "I":case "l":
		var hour = d.getHours() % 12;
		return StringTools.lpad(Std.string(hour == 0 ? 12 : hour),e == "I" ? "0" : " ",2);
	case "M":
		return StringTools.lpad(Std.string(d.getMinutes()),"0",2);
	case "R":
		return DateTools.__format(d,"%H:%M");
	case "S":
		return StringTools.lpad(Std.string(d.getSeconds()),"0",2);
	case "T":
		return DateTools.__format(d,"%H:%M:%S");
	case "Y":
		return Std.string(d.getFullYear());
	case "a":
		return DateTools.DAY_SHORT_NAMES[d.getDay()];
	case "b":case "h":
		return DateTools.MONTH_SHORT_NAMES[d.getMonth()];
	case "d":
		return StringTools.lpad(Std.string(d.getDate()),"0",2);
	case "e":
		return Std.string(d.getDate());
	case "H":case "k":
		return StringTools.lpad(Std.string(d.getHours()),e == "H" ? "0" : " ",2);
	case "m":
		return StringTools.lpad(Std.string(d.getMonth() + 1),"0",2);
	case "n":
		return "\n";
	case "p":
		if(d.getHours() > 11) {
			return "PM";
		} else {
			return "AM";
		}
		break;
	case "r":
		return DateTools.__format(d,"%I:%M:%S %p");
	case "s":
		return Std.string(d.getTime() / 1000 | 0);
	case "t":
		return "\t";
	case "u":
		var t = d.getDay();
		if(t == 0) {
			return "7";
		} else if(t == null) {
			return "null";
		} else {
			return "" + t;
		}
		break;
	case "w":
		return Std.string(d.getDay());
	case "y":
		return StringTools.lpad(Std.string(d.getFullYear() % 100),"0",2);
	default:
		throw new haxe_exceptions_NotImplementedException("Date.format %" + e + "- not implemented yet.",null,{ fileName : "DateTools.hx", lineNumber : 101, className : "DateTools", methodName : "__format_get"});
	}
};
DateTools.__format = function(d,f) {
	var r_b = "";
	var p = 0;
	while(true) {
		var np = f.indexOf("%",p);
		if(np < 0) {
			break;
		}
		var len = np - p;
		r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
		r_b += Std.string(DateTools.__format_get(d,HxOverrides.substr(f,np + 1,1)));
		p = np + 2;
	}
	var len = f.length - p;
	r_b += len == null ? HxOverrides.substr(f,p,null) : HxOverrides.substr(f,p,len);
	return r_b;
};
DateTools.format = function(d,f) {
	return DateTools.__format(d,f);
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw haxe_Exception.thrown("EReg::matched");
		}
	}
	,matchedPos: function() {
		if(this.r.m == null) {
			throw haxe_Exception.thrown("No string matched");
		}
		return { pos : this.r.m.index, len : this.r.m[0].length};
	}
	,matchSub: function(s,pos,len) {
		if(len == null) {
			len = -1;
		}
		if(this.r.global) {
			this.r.lastIndex = pos;
			this.r.m = this.r.exec(len < 0 ? s : HxOverrides.substr(s,0,pos + len));
			var b = this.r.m != null;
			if(b) {
				this.r.s = s;
			}
			return b;
		} else {
			var b = this.match(len < 0 ? HxOverrides.substr(s,pos,null) : HxOverrides.substr(s,pos,len));
			if(b) {
				this.r.s = s;
				this.r.m.index += pos;
			}
			return b;
		}
	}
	,split: function(s) {
		var d = "#__delim__#";
		return s.replace(this.r,d).split(d);
	}
	,map: function(s,f) {
		var offset = 0;
		var buf_b = "";
		while(true) {
			if(offset >= s.length) {
				break;
			} else if(!this.matchSub(s,offset)) {
				buf_b += Std.string(HxOverrides.substr(s,offset,null));
				break;
			}
			var p = this.matchedPos();
			buf_b += Std.string(HxOverrides.substr(s,offset,p.pos - offset));
			buf_b += Std.string(f(this));
			if(p.len == 0) {
				buf_b += Std.string(HxOverrides.substr(s,p.pos,1));
				offset = p.pos + 1;
			} else {
				offset = p.pos + p.len;
			}
			if(!this.r.global) {
				break;
			}
		}
		if(!this.r.global && offset > 0 && offset < s.length) {
			buf_b += Std.string(HxOverrides.substr(s,offset,null));
		}
		return buf_b;
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = "HxOverrides";
HxOverrides.dateStr = function(date) {
	var m = date.getMonth() + 1;
	var d = date.getDate();
	var h = date.getHours();
	var mi = date.getMinutes();
	var s = date.getSeconds();
	return date.getFullYear() + "-" + (m < 10 ? "0" + m : "" + m) + "-" + (d < 10 ? "0" + d : "" + d) + " " + (h < 10 ? "0" + h : "" + h) + ":" + (mi < 10 ? "0" + mi : "" + mi) + ":" + (s < 10 ? "0" + s : "" + s);
};
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k = s.split("-");
		return new Date(k[0],k[1] - 1,k[2],0,0,0);
	case 19:
		var k = s.split(" ");
		var y = k[0].split("-");
		var t = k[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw haxe_Exception.thrown("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.now = function() {
	return Date.now();
};
var Main = function() { };
$hxClasses["Main"] = Main;
Main.__name__ = "Main";
Main.main = function() {
	var app = new haxe_ui_HaxeUIApp();
	app.ready(function() {
		app.addComponent(new MainView());
		app.start();
	});
};
var MainView = function() {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("vbox",haxe_ui_containers_VBox.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("hbox",haxe_ui_containers_HBox.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("box",haxe_ui_containers_Box.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("portlet",core_dashboards_Portlet.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("card",haxe_ui_containers_Card.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("image",haxe_ui_components_Image.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("link",haxe_ui_components_Link.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("label",haxe_ui_components_Label.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("spacer",haxe_ui_components_Spacer.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("vertical-splitter",haxe_ui_containers_VerticalSplitter.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("horizontal-splitter",haxe_ui_containers_HorizontalSplitter.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("vsplitter",haxe_ui_containers_VerticalSplitter.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("hsplitter",haxe_ui_containers_HorizontalSplitter.__name__);
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName("Grid",haxe_ui_containers_Grid.__name__);
};
$hxClasses["MainView"] = MainView;
MainView.__name__ = "MainView";
MainView.__super__ = haxe_ui_containers_VBox;
MainView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	onReady: function() {
		var _gthis = this;
		haxe_ui_containers_VBox.prototype.onReady.call(this);
		var working = new components_WorkingIndicator();
		working.showWorking();
		core_data_DatabaseManager.get_instance().init().then(function(r) {
			haxe_Log.trace("database manager ready",{ fileName : "haxe/MainView.hx", lineNumber : 59, className : "MainView", methodName : "onReady"});
			working.workComplete();
			_gthis.showLogin();
		});
	}
	,showLogin: function() {
		var _gthis = this;
		var dialog = new dialogs_LoginDialog();
		dialog.set_onDialogClosed(function(e) {
			var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
			if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Login")) != -1) {
				_gthis.startLogin();
			}
		});
		dialog.show();
	}
	,_workingLogin: null
	,startLogin: function() {
		var _gthis = this;
		var fakeFail = false;
		this._workingLogin = new components_WorkingIndicator();
		this._workingLogin.showWorking();
		haxe_ui_util_Timer.delay(function() {
			if(fakeFail == true) {
				_gthis._workingLogin.workComplete();
				_gthis._workingLogin = null;
				_gthis.showLogin();
			} else {
				_gthis.completeLogin();
			}
		},0);
	}
	,completeLogin: function() {
		var _gthis = this;
		core_data_DatabaseManager.get_instance().start().then(function(r) {
			_gthis._workingLogin.workComplete();
			_gthis._workingLogin = null;
			haxe_ui_core_Screen.get_instance().removeComponent(_gthis);
			var adminView = new AdminView();
			haxe_ui_core_Screen.get_instance().addComponent(adminView);
		});
	}
	,clearAllDbs: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new MainView();
	}
	,__class__: MainView
});
Math.__name__ = "Math";
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = "Reflect";
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( _g ) {
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + field];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[field] = value;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = "Std";
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = x.charCodeAt(i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var nc = x.charCodeAt(i + 1);
				var v = parseInt(x,nc == 120 || nc == 88 ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf_b = "";
	var _g_offset = 0;
	var _g_s = s;
	while(_g_offset < _g_s.length) {
		var s = _g_s;
		var index = _g_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g_offset;
		}
		var code = c1;
		switch(code) {
		case 34:
			if(quotes) {
				buf_b += "&quot;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 38:
			buf_b += "&amp;";
			break;
		case 39:
			if(quotes) {
				buf_b += "&#039;";
			} else {
				buf_b += String.fromCodePoint(code);
			}
			break;
		case 60:
			buf_b += "&lt;";
			break;
		case 62:
			buf_b += "&gt;";
			break;
		default:
			buf_b += String.fromCodePoint(code);
		}
	}
	return buf_b;
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return s.indexOf(end,slen - elen) == slen - elen;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.lpad = function(s,c,l) {
	if(c.length <= 0) {
		return s;
	}
	var buf_b = "";
	l -= s.length;
	while(buf_b.length < l) buf_b += c == null ? "null" : "" + c;
	buf_b += s == null ? "null" : "" + s;
	return buf_b;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var ValueType = $hxEnums["ValueType"] = { __ename__:true,__constructs__:null
	,TNull: {_hx_name:"TNull",_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_name:"TInt",_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_name:"TFloat",_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_name:"TBool",_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_name:"TObject",_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_name:"TFunction",_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TClass",$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_._hx_name="TEnum",$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_name:"TUnknown",_hx_index:8,__enum__:"ValueType",toString:$estr}
};
ValueType.__constructs__ = [ValueType.TNull,ValueType.TInt,ValueType.TFloat,ValueType.TBool,ValueType.TObject,ValueType.TFunction,ValueType.TClass,ValueType.TEnum,ValueType.TUnknown];
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = "Type";
Type.createInstance = function(cl,args) {
	var ctor = Function.prototype.bind.apply(cl,[null].concat(args));
	return new (ctor);
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw haxe_Exception.thrown("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw haxe_Exception.thrown("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw haxe_Exception.thrown("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(v.__name__ || v.__ename__) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var XmlType = {};
XmlType.toString = function(this1) {
	switch(this1) {
	case 0:
		return "Element";
	case 1:
		return "PCData";
	case 2:
		return "CData";
	case 3:
		return "Comment";
	case 4:
		return "DocType";
	case 5:
		return "ProcessingInstruction";
	case 6:
		return "Document";
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = "Xml";
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, unexpected " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	nodeType: null
	,nodeName: null
	,nodeValue: null
	,parent: null
	,children: null
	,attributeMap: null
	,get: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return this.attributeMap.h[att];
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		this.attributeMap.h[att] = value;
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return Object.prototype.hasOwnProperty.call(this.attributeMap.h,att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		return new haxe_ds__$StringMap_StringMapKeyIterator(this.attributeMap.h);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			var tmp;
			if(child.nodeType == Xml.Element) {
				if(child.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				tmp = child.nodeName == name;
			} else {
				tmp = false;
			}
			if(tmp) {
				_g.push(child);
			}
		}
		var ret = _g;
		return new haxe_iterators_ArrayIterator(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) {
				return child;
			}
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(x.parent != null) {
			x.parent.removeChild(x);
		}
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (this.nodeType == null ? "null" : XmlType.toString(this.nodeType)));
		}
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,toString: function() {
		return haxe_xml_Printer.print(this);
	}
	,__class__: Xml
};
var haxe_ui_containers_HBox = function() {
	haxe_ui_containers_Box.call(this);
	this.set_layout(new haxe_ui_layouts_HorizontalLayout());
};
$hxClasses["haxe.ui.containers.HBox"] = haxe_ui_containers_HBox;
haxe_ui_containers_HBox.__name__ = "haxe.ui.containers.HBox";
haxe_ui_containers_HBox.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_HBox.prototype = $extend(haxe_ui_containers_Box.prototype,{
	get_continuous: function() {
		return ((this._layout) instanceof haxe_ui_layouts_HorizontalContinuousLayout);
	}
	,set_continuous: function(value) {
		if(value == true) {
			this.set_layout(new haxe_ui_layouts_HorizontalContinuousLayout());
		} else {
			this.set_layout(new haxe_ui_layouts_HorizontalLayout());
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_continuous(this.get_continuous());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HBox();
	}
	,__class__: haxe_ui_containers_HBox
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_continuous:"set_continuous",get_continuous:"get_continuous"})
});
var components_FileSelector = function() {
	this._file = null;
	var _gthis = this;
	haxe_ui_containers_HBox.call(this);
	this._label = new haxe_ui_components_Label();
	this._label.set_verticalAlign("center");
	this._label.set_text("No file selected");
	this.addComponent(this._label);
	this._button = new haxe_ui_components_Button();
	this.addComponent(this._button);
	this._button.set_onClick(function(_) {
		_gthis._fileInput.click();
	});
};
$hxClasses["components.FileSelector"] = components_FileSelector;
components_FileSelector.__name__ = "components.FileSelector";
components_FileSelector.__super__ = haxe_ui_containers_HBox;
components_FileSelector.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	_fileInput: null
	,_label: null
	,_button: null
	,_file: null
	,onReady: function() {
		var _gthis = this;
		haxe_ui_containers_HBox.prototype.onReady.call(this);
		this._fileInput = window.document.createElement("input");
		this._fileInput.type = "file";
		this._fileInput.style.display = "none";
		this.element.appendChild(this._fileInput);
		this._fileInput.onchange = function(e) {
			_gthis._file = e.target.files[0];
			_gthis._label.set_text(_gthis._file.name);
			_gthis.dispatch(new haxe_ui_events_UIEvent("change"));
		};
	}
	,get_text: function() {
		return this._label.get_text();
	}
	,readContents: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis._file == null) {
				resolve(null);
			} else {
				var reader = new FileReader();
				reader.readAsText(_gthis._file,"UTF-8");
				reader.onload = function(readerEvent) {
					var content = readerEvent.target.result;
					resolve(content);
				};
			}
		});
	}
	,set_text: function(value) {
		haxe_ui_containers_HBox.prototype.set_text.call(this,value);
		this._button.set_text(value);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new components_FileSelector();
	}
	,__class__: components_FileSelector
});
var components_WorkingIndicator = function() {
	this._overlay = null;
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n        .working-indicator {\n            background-color: white;\n            padding: 10px;\n            border-radius: 6px;\n            border: 1px solid $normal-border-color;\n            filter: drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false);\n            padding-bottom: 10px;\n        }\n    ","user");
	var c0 = new haxe_ui_containers_Box();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Image();
	c1.set_id("statusImage");
	c1.set_width(100.);
	c1.set_height(100.);
	c1.set_verticalAlign("center");
	c1.set_resource(haxe_ui_util_Variant.fromString("icons/Double Ring-1.6s-100px.gif"));
	c1.set_horizontalAlign("center");
	c0.addComponent(c1);
	this.addComponent(c0);
	var c2 = new haxe_ui_containers_VBox();
	c2.set_horizontalAlign("center");
	var c3 = new haxe_ui_components_Label();
	c3.set_id("messageLabel");
	c3.set_styleString("_font-size: 14px;color:#888888;");
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("closeButton");
	c4.set_text("Close");
	c4.set_horizontalAlign("center");
	c4.set_hidden(true);
	c2.addComponent(c4);
	this.addComponent(c2);
	this.set_width(270.);
	this.set_height(170.);
	this.bindingRoot = true;
	this.statusImage = c1;
	this.messageLabel = c3;
	this.closeButton = c4;
};
$hxClasses["components.WorkingIndicator"] = components_WorkingIndicator;
components_WorkingIndicator.__name__ = "components.WorkingIndicator";
components_WorkingIndicator.__super__ = haxe_ui_containers_VBox;
components_WorkingIndicator.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	get_message: function() {
		return this.messageLabel.get_text();
	}
	,set_message: function(value) {
		this.messageLabel.set_text(value);
		return value;
	}
	,showWorking: function(message,target) {
		if(message == null) {
			message = "Working, please wait...";
		}
		var targetCX = haxe_ui_core_Screen.get_instance().get_width();
		var targetCY = haxe_ui_core_Screen.get_instance().get_height();
		var cx = this.get_width();
		var cy = this.get_height();
		var xpos = targetCX / 2 - cx / 2;
		var ypos = targetCY / 2 - cy / 2;
		this.messageLabel.set_text(message);
		this.showOverlay();
		haxe_ui_core_Screen.get_instance().addComponent(this);
		this.set_left(xpos);
		this.set_top(ypos);
	}
	,workComplete: function(message,errored,autoClose,closeButtonText,closeCallback) {
		if(autoClose == null) {
			autoClose = true;
		}
		if(errored == null) {
			errored = false;
		}
		var _gthis = this;
		if(errored == true) {
			autoClose = false;
		}
		var icon = "icons/icons8-checked.gif";
		if(errored == true) {
			icon = "icons/icons8-error.gif";
		}
		if(message == null) {
			if(errored == false) {
				message = "Completed successfully";
			} else {
				message = "Completed unsuccessfully";
			}
		}
		if(closeButtonText == null) {
			closeButtonText = "Close";
		}
		this.messageLabel.set_text(message);
		this.statusImage.set_resource(haxe_ui_util_Variant.fromString(icon));
		if(autoClose == true) {
			this.hideOverlay();
			haxe_ui_core_Screen.get_instance().removeComponent(this);
			if(closeCallback != null) {
				closeCallback();
			}
		} else {
			this.closeButton.show();
			this.closeButton.set_onClick(function(_) {
				_gthis.hideOverlay();
				haxe_ui_core_Screen.get_instance().removeComponent(_gthis);
				if(closeCallback != null) {
					closeCallback();
				}
			});
		}
	}
	,_overlay: null
	,showOverlay: function() {
		this._overlay = new haxe_ui_core_Component();
		this._overlay.set_id("modal-background");
		this._overlay.addClass("modal-background");
		this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
		haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
	}
	,hideOverlay: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
		this._overlay = null;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new components_WorkingIndicator();
	}
	,statusImage: null
	,messageLabel: null
	,closeButton: null
	,__class__: components_WorkingIndicator
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_message:"set_message",get_message:"get_message"})
});
var core_Event = function(type) {
	this.type = type;
};
$hxClasses["core.Event"] = core_Event;
core_Event.__name__ = "core.Event";
core_Event.prototype = {
	type: null
	,__class__: core_Event
};
var core_EventDispatcher = function() {
	this._listeners = new haxe_ds_StringMap();
};
$hxClasses["core.EventDispatcher"] = core_EventDispatcher;
core_EventDispatcher.__name__ = "core.EventDispatcher";
core_EventDispatcher.prototype = {
	_listeners: null
	,listen: function(type,listener) {
		var list = this._listeners.h[type];
		if(list == null) {
			list = [];
			this._listeners.h[type] = list;
		}
		list.push(listener);
	}
	,unlisten: function(type,listener) {
		var list = this._listeners.h[type];
		if(list != null) {
			HxOverrides.remove(list,listener);
		}
	}
	,dispatch: function(event) {
		var list = this._listeners.h[event.type];
		if(list != null) {
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				l(event);
			}
		}
	}
	,__class__: core_EventDispatcher
};
var haxe_ui_focus_IFocusable = function() { };
$hxClasses["haxe.ui.focus.IFocusable"] = haxe_ui_focus_IFocusable;
haxe_ui_focus_IFocusable.__name__ = "haxe.ui.focus.IFocusable";
haxe_ui_focus_IFocusable.__isInterface__ = true;
haxe_ui_focus_IFocusable.prototype = {
	get_focus: null
	,set_focus: null
	,get_allowFocus: null
	,set_allowFocus: null
	,get_disabled: null
	,set_disabled: null
	,__class__: haxe_ui_focus_IFocusable
	,__properties__: {set_disabled:"set_disabled",get_disabled:"get_disabled",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"}
};
var haxe_ui_core_InteractiveComponent = function() {
	this._allowFocus = true;
	this._focus = false;
	this.actionRepeatInterval = 100;
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.core.InteractiveComponent"] = haxe_ui_core_InteractiveComponent;
haxe_ui_core_InteractiveComponent.__name__ = "haxe.ui.core.InteractiveComponent";
haxe_ui_core_InteractiveComponent.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_core_InteractiveComponent.__super__ = haxe_ui_core_Component;
haxe_ui_core_InteractiveComponent.prototype = $extend(haxe_ui_core_Component.prototype,{
	actionRepeatInterval: null
	,_focus: null
	,get_focus: function() {
		return this._focus;
	}
	,set_focus: function(value) {
		if(this._focus == value || this.get_allowFocus() == false) {
			return value;
		}
		this._focus = value;
		var eventType = null;
		if(this._focus == true) {
			eventType = "focusin";
			haxe_ui_focus_FocusManager.get_instance().set_focus(js_Boot.__cast(this , haxe_ui_focus_IFocusable));
			var scrollview = this.findScroller();
			if(scrollview != null) {
				scrollview.ensureVisible(this);
			}
		} else {
			eventType = "focusout";
			haxe_ui_focus_FocusManager.get_instance().set_focus(null);
		}
		this.invalidateComponent("data",false);
		this.dispatch(new haxe_ui_events_FocusEvent(eventType));
		return value;
	}
	,_allowFocus: null
	,get_allowFocus: function() {
		return this._allowFocus;
	}
	,set_allowFocus: function(value) {
		if(this._allowFocus == value) {
			return value;
		}
		this._allowFocus = value;
		var _g = 0;
		var _g1 = this._children == null ? [] : this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(js_Boot.__implements(child,haxe_ui_focus_IFocusable)) {
				(js_Boot.__cast(child , haxe_ui_focus_IFocusable)).set_allowFocus(value);
			}
		}
		return value;
	}
	,findScroller: function() {
		var view = null;
		var ref = this;
		while(ref != null) {
			if(js_Boot.__implements(ref,haxe_ui_core_IScrollView)) {
				view = js_Boot.__cast(ref , haxe_ui_core_IScrollView);
				break;
			}
			ref = ref.parentComponent;
		}
		return view;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("allowInteraction",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
	}
	,get_allowInteraction: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowInteraction"));
	}
	,set_allowInteraction: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowInteraction",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"allowInteraction"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		c.set_allowInteraction(this.get_allowInteraction());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_InteractiveComponent();
	}
	,__class__: haxe_ui_core_InteractiveComponent
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_allowInteraction:"set_allowInteraction",get_allowInteraction:"get_allowInteraction",set_allowFocus:"set_allowFocus",get_allowFocus:"get_allowFocus",set_focus:"set_focus",get_focus:"get_focus"})
});
var haxe_ui_components_Button = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.Button"] = haxe_ui_components_Button;
haxe_ui_components_Button.__name__ = "haxe.ui.components.Button";
haxe_ui_components_Button.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Button.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(50));
		this.behaviours.register("easeInRepeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("remainPressed",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("toggle",haxe_ui_components__$Button_ToggleBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$Button_SelectedBehaviour);
		this.behaviours.register("text",haxe_ui_components__$Button_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$Button_IconBehaviour);
		this.behaviours.register("componentGroup",haxe_ui_components__$Button_GroupBehaviour);
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeatInterval"));
		return value;
	}
	,get_easeInRepeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("easeInRepeater"));
	}
	,set_easeInRepeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("easeInRepeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"easeInRepeater"));
		return value;
	}
	,get_remainPressed: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("remainPressed"));
	}
	,set_remainPressed: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("remainPressed",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"remainPressed"));
		return value;
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"toggle"));
		return value;
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("icon");
	}
	,set_icon: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("icon",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		return value;
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"componentGroup"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_iconPosition: function() {
		if(this.get_customStyle().iconPosition != null) {
			return this.get_customStyle().iconPosition;
		}
		if(this.get_style() == null || this.get_style().iconPosition == null) {
			return null;
		}
		return this.get_style().iconPosition;
	}
	,set_iconPosition: function(value) {
		if(this.get_customStyle().iconPosition == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().iconPosition = null;
		} else {
			this.get_customStyle().iconPosition = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_fontSize: function() {
		if(this.get_customStyle().fontSize != null) {
			return this.get_customStyle().fontSize;
		}
		if(this.get_style() == null || this.get_style().fontSize == null) {
			return null;
		}
		return this.get_style().fontSize;
	}
	,set_fontSize: function(value) {
		if(this.get_customStyle().fontSize == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().fontSize = null;
		} else {
			this.get_customStyle().fontSize = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		c.set_easeInRepeater(this.get_easeInRepeater());
		c.set_remainPressed(this.get_remainPressed());
		c.set_toggle(this.get_toggle());
		c.set_selected(this.get_selected());
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Button();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_ButtonEvents;
		this._compositeBuilderClass = haxe_ui_components_ButtonBuilder;
		this._defaultLayoutClass = haxe_ui_components_ButtonLayout;
	}
	,__class__: haxe_ui_components_Button
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_fontSize:"set_fontSize",get_fontSize:"get_fontSize",set_iconPosition:"set_iconPosition",get_iconPosition:"get_iconPosition",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup",set_icon:"set_icon",get_icon:"get_icon",set_selected:"set_selected",get_selected:"get_selected",set_toggle:"set_toggle",get_toggle:"get_toggle",set_remainPressed:"set_remainPressed",get_remainPressed:"get_remainPressed",set_easeInRepeater:"set_easeInRepeater",get_easeInRepeater:"get_easeInRepeater",set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater"})
});
var haxe_ui_core_IDataComponent = function() { };
$hxClasses["haxe.ui.core.IDataComponent"] = haxe_ui_core_IDataComponent;
haxe_ui_core_IDataComponent.__name__ = "haxe.ui.core.IDataComponent";
haxe_ui_core_IDataComponent.__isInterface__ = true;
haxe_ui_core_IDataComponent.prototype = {
	get_dataSource: null
	,set_dataSource: null
	,__class__: haxe_ui_core_IDataComponent
	,__properties__: {set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_components_DropDown = function() {
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.DropDown"] = haxe_ui_components_DropDown;
haxe_ui_components_DropDown.__name__ = "haxe.ui.components.DropDown";
haxe_ui_components_DropDown.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_components_DropDown.__super__ = haxe_ui_components_Button;
haxe_ui_components_DropDown.prototype = $extend(haxe_ui_components_Button.prototype,{
	hideDropDown: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("hideDropDown",null);
	}
	,onThemeChanged: function() {
		haxe_ui_components_Button.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_components_DropDownBuilder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components_DropDownEvents;
		this._compositeBuilderClass = haxe_ui_components_DropDownBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
		this.behaviours.register("handlerStyleNames",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dataSource",haxe_ui_components__$DropDown_DataSourceBehaviour);
		this.behaviours.register("type",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("list"));
		this.behaviours.register("virtual",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("dropdownWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownHeight",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("dropdownSize",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("selectedIndex",haxe_ui_components__$DropDown_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_components__$DropDown_SelectedItemBehaviour);
		this.behaviours.register("searchable",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("searchPrompt",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromString("{{dropdown.search}}"));
		this.behaviours.register("hideDropDown",haxe_ui_components__$DropDown_HideDropDown);
	}
	,get_handlerStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("handlerStyleNames"));
	}
	,set_handlerStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"handlerStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("handlerStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"handlerStyleNames"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		return value;
	}
	,get_type: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("type"));
	}
	,set_type: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"type",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("type",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"type"));
		return value;
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"virtual"));
		return value;
	}
	,get_dropdownWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownWidth"));
	}
	,set_dropdownWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dropdownWidth"));
		return value;
	}
	,get_dropdownHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("dropdownHeight"));
	}
	,set_dropdownHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dropdownHeight"));
		return value;
	}
	,get_dropdownSize: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("dropdownSize"));
	}
	,set_dropdownSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dropdownSize",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dropdownSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItem"));
		return value;
	}
	,get_searchable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("searchable"));
	}
	,set_searchable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("searchable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"searchable"));
		return value;
	}
	,get_searchPrompt: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("searchPrompt"));
	}
	,set_searchPrompt: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"searchPrompt",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("searchPrompt",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"searchPrompt"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedItem();
	}
	,set_value: function(value) {
		this.set_selectedItem(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if(this.get_handlerStyleNames() != null) {
			c.set_handlerStyleNames(this.get_handlerStyleNames());
		}
		if(this.get_dataSource() != null) {
			c.set_dataSource(this.get_dataSource());
		}
		if(this.get_type() != null) {
			c.set_type(this.get_type());
		}
		c.set_virtual(this.get_virtual());
		if(this.get_dropdownWidth() != null) {
			c.set_dropdownWidth(this.get_dropdownWidth());
		}
		if(this.get_dropdownHeight() != null) {
			c.set_dropdownHeight(this.get_dropdownHeight());
		}
		if(this.get_dropdownSize() != null) {
			c.set_dropdownSize(this.get_dropdownSize());
		}
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedItem() != null) {
			c.set_selectedItem(this.get_selectedItem());
		}
		c.set_searchable(this.get_searchable());
		if(this.get_searchPrompt() != null) {
			c.set_searchPrompt(this.get_searchPrompt());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_DropDown();
	}
	,__class__: haxe_ui_components_DropDown
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_searchPrompt:"set_searchPrompt",get_searchPrompt:"get_searchPrompt",set_searchable:"set_searchable",get_searchable:"get_searchable",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_dropdownSize:"set_dropdownSize",get_dropdownSize:"get_dropdownSize",set_dropdownHeight:"set_dropdownHeight",get_dropdownHeight:"get_dropdownHeight",set_dropdownWidth:"set_dropdownWidth",get_dropdownWidth:"get_dropdownWidth",set_virtual:"set_virtual",get_virtual:"get_virtual",set_type:"set_type",get_type:"get_type",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_handlerStyleNames:"set_handlerStyleNames",get_handlerStyleNames:"get_handlerStyleNames"})
});
var core_components_DashboardGroupSelector = function() {
	haxe_ui_components_DropDown.call(this);
	var ds = new haxe_ui_data_ArrayDataSource();
	var _g = 0;
	var _g1 = core_data_InternalDB.dashboardGroups.data;
	while(_g < _g1.length) {
		var group = _g1[_g];
		++_g;
		ds.add({ text : group.get_name(), groupData : group});
	}
	this.set_dataSource(ds);
};
$hxClasses["core.components.DashboardGroupSelector"] = core_components_DashboardGroupSelector;
core_components_DashboardGroupSelector.__name__ = "core.components.DashboardGroupSelector";
core_components_DashboardGroupSelector.__super__ = haxe_ui_components_DropDown;
core_components_DashboardGroupSelector.prototype = $extend(haxe_ui_components_DropDown.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_DropDown.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_DropDown.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_components_DashboardGroupSelector();
	}
	,__class__: core_components_DashboardGroupSelector
});
var core_components_IconSelector = function() {
	haxe_ui_components_DropDown.call(this);
	var ds = new haxe_ui_data_ArrayDataSource();
	var _g = 0;
	var _g1 = core_data_InternalDB.icons.data;
	while(_g < _g1.length) {
		var icon = _g1[_g];
		++_g;
		ds.add({ text : icon.get_name(), icon : "themes/optex/" + icon.get_path(), iconData : icon});
	}
	this.set_dataSource(ds);
};
$hxClasses["core.components.IconSelector"] = core_components_IconSelector;
core_components_IconSelector.__name__ = "core.components.IconSelector";
core_components_IconSelector.__super__ = haxe_ui_components_DropDown;
core_components_IconSelector.prototype = $extend(haxe_ui_components_DropDown.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_DropDown.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_DropDown.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_components_IconSelector();
	}
	,__class__: core_components_IconSelector
});
var haxe_ui_backend_EventBase = function() { };
$hxClasses["haxe.ui.backend.EventBase"] = haxe_ui_backend_EventBase;
haxe_ui_backend_EventBase.__name__ = "haxe.ui.backend.EventBase";
haxe_ui_backend_EventBase.prototype = {
	cancel: function() {
	}
	,postClone: function(event) {
	}
	,__class__: haxe_ui_backend_EventBase
};
var haxe_ui_backend_EventImpl = function() { };
$hxClasses["haxe.ui.backend.EventImpl"] = haxe_ui_backend_EventImpl;
haxe_ui_backend_EventImpl.__name__ = "haxe.ui.backend.EventImpl";
haxe_ui_backend_EventImpl.__super__ = haxe_ui_backend_EventBase;
haxe_ui_backend_EventImpl.prototype = $extend(haxe_ui_backend_EventBase.prototype,{
	_originalEvent: null
	,cancel: function() {
		if(this._originalEvent != null) {
			this._originalEvent.preventDefault();
			this._originalEvent.stopImmediatePropagation();
			this._originalEvent.stopPropagation();
		}
	}
	,postClone: function(event) {
		event._originalEvent = this._originalEvent;
	}
	,__class__: haxe_ui_backend_EventImpl
});
var haxe_ui_events_UIEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.relatedEvent = null;
	this.type = type;
	this.bubble = bubble;
	this.data = data;
	this.canceled = false;
};
$hxClasses["haxe.ui.events.UIEvent"] = haxe_ui_events_UIEvent;
haxe_ui_events_UIEvent.__name__ = "haxe.ui.events.UIEvent";
haxe_ui_events_UIEvent.__super__ = haxe_ui_backend_EventImpl;
haxe_ui_events_UIEvent.prototype = $extend(haxe_ui_backend_EventImpl.prototype,{
	bubble: null
	,type: null
	,target: null
	,data: null
	,canceled: null
	,relatedEvent: null
	,value: null
	,previousValue: null
	,cancel: function() {
		haxe_ui_backend_EventImpl.prototype.cancel.call(this);
		this.canceled = true;
	}
	,clone: function() {
		var c = new haxe_ui_events_UIEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.value = this.value;
		c.previousValue = this.previousValue;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
	}
	,__class__: haxe_ui_events_UIEvent
});
var core_dashboards_DashboardInstanceEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["core.dashboards.DashboardInstanceEvent"] = core_dashboards_DashboardInstanceEvent;
core_dashboards_DashboardInstanceEvent.__name__ = "core.dashboards.DashboardInstanceEvent";
core_dashboards_DashboardInstanceEvent.__super__ = haxe_ui_events_UIEvent;
core_dashboards_DashboardInstanceEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: core_dashboards_DashboardInstanceEvent
});
var core_dashboards_DashboardInstance = function() {
	this._userInputs = new haxe_ds_StringMap();
	this._filter = new haxe_ds_StringMap();
	this.onTempFilterChanged = null;
	this._tableCache = new haxe_ds_StringMap();
	this._databaseCache = new haxe_ds_StringMap();
	this._container = new haxe_ui_containers_Box();
	haxe_ui_containers_Box.call(this);
	this._container.set_percentWidth(100);
	this._container.set_percentHeight(100);
	this.addComponent(this._container);
};
$hxClasses["core.dashboards.DashboardInstance"] = core_dashboards_DashboardInstance;
core_dashboards_DashboardInstance.__name__ = "core.dashboards.DashboardInstance";
core_dashboards_DashboardInstance.__super__ = haxe_ui_containers_Box;
core_dashboards_DashboardInstance.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_container: null
	,buildDashboard: function(dashboard) {
		var xml = Xml.parse(dashboard.get_layoutData()).firstElement();
		var layoutNode = xml.elementsNamed("layout").next();
		var layoutDataNode = layoutNode.firstElement();
		var layoutData = haxe_xml_Printer.print(layoutDataNode);
		var c = haxe_ui_RuntimeComponentBuilder.fromString(layoutData);
		this._container.removeAllComponents();
		this._container.addComponent(c);
		var _g = 0;
		var _g1 = this.get_portlets();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.onFilterChanged(this._filter);
		}
	}
	,clearDashboard: function() {
		this._container.removeAllComponents();
	}
	,portlets: null
	,get_portlets: function() {
		var list = this.findComponents(null,core_dashboards_Portlet,20);
		return list;
	}
	,refreshAllPortlets: function() {
		var _g = 0;
		var _g1 = this.get_portlets();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.refresh();
		}
	}
	,onFilterChanged: function() {
		this.refreshAllPortlets();
	}
	,_databaseCache: null
	,getDatabase: function(databaseName) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(Object.prototype.hasOwnProperty.call(_gthis._databaseCache.h,databaseName)) {
				resolve(_gthis._databaseCache.h[databaseName]);
				return;
			}
			core_data_DatabaseManager.get_instance().getDatabase(databaseName).then(function(db) {
				_gthis._databaseCache.h[databaseName] = db;
				resolve(db);
			});
		});
	}
	,_tableCache: null
	,fetchTableData: function(databaseName,tableName) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var key = databaseName + "." + tableName;
			if(Object.prototype.hasOwnProperty.call(_gthis._tableCache.h,key)) {
				var table = _gthis._tableCache.h[key];
				var copy = table.clone(true);
				resolve(copy);
				return;
			}
			_gthis.getDatabase(databaseName).then(function(db) {
				var table = db.getTable(tableName);
				table.fetch().then(function(_) {
					var copy = table.clone(true);
					_gthis._tableCache.h[key] = copy;
					resolve(copy);
				});
			});
		});
	}
	,onTempFilterChanged: null
	,_filter: null
	,filter: null
	,get_filter: function() {
		return this._filter;
	}
	,addFilterItem: function(field,value) {
		if(Object.prototype.hasOwnProperty.call(this._filter.h,field) && this._filter.h[field] == value) {
			return;
		}
		haxe_Log.trace("adding filter item: " + field + " = " + (value == null ? "null" : Std.string(value)),{ fileName : "../../haxe/core/dashboards/DashboardInstance.hx", lineNumber : 111, className : "core.dashboards.DashboardInstance", methodName : "addFilterItem"});
		this._filter.h[field] = value;
		var _g = 0;
		var _g1 = this.get_portlets();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.onFilterChanged(this._filter);
		}
		if(this.onTempFilterChanged != null) {
			this.onTempFilterChanged(this._filter);
		}
	}
	,_userInputs: null
	,userInputs: null
	,get_userInputs: function() {
		return this._userInputs;
	}
	,addUserInputItem: function(inputId,value) {
		if(Object.prototype.hasOwnProperty.call(this._userInputs.h,inputId) && this._userInputs.h[inputId] == value) {
			return;
		}
		haxe_Log.trace("adding using input item: " + inputId + " = " + (value == null ? "null" : Std.string(value)),{ fileName : "../../haxe/core/dashboards/DashboardInstance.hx", lineNumber : 133, className : "core.dashboards.DashboardInstance", methodName : "addUserInputItem"});
		this._userInputs.h[inputId] = value;
		var _g = 0;
		var _g1 = this.get_portlets();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.onUserInputChanged(this._userInputs);
		}
	}
	,removeFilterItem: function(field) {
		if(Object.prototype.hasOwnProperty.call(this._filter.h,field) == false) {
			return;
		}
		haxe_Log.trace("removing filter item: " + field,{ fileName : "../../haxe/core/dashboards/DashboardInstance.hx", lineNumber : 144, className : "core.dashboards.DashboardInstance", methodName : "removeFilterItem"});
		var _this = this._filter;
		if(Object.prototype.hasOwnProperty.call(_this.h,field)) {
			delete(_this.h[field]);
		}
		var _g = 0;
		var _g1 = this.get_portlets();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p.onFilterChanged(this._filter);
		}
		if(this.onTempFilterChanged != null) {
			this.onTempFilterChanged(this._filter);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_DashboardInstance();
	}
	,__class__: core_dashboards_DashboardInstance
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{get_userInputs:"get_userInputs",get_filter:"get_filter",get_portlets:"get_portlets"})
});
var core_dashboards_Portlet = function() {
	this._border = true;
	this._dataSource = new haxe_ui_data_ArrayDataSource();
	this._titleAlign = "center";
	this._title = null;
	this._waitForFilterItem = null;
	this._table = null;
	this._additionalConfigParams = new haxe_ds_StringMap();
	haxe_ui_containers_VBox.call(this);
	this.addClass("card");
};
$hxClasses["core.dashboards.Portlet"] = core_dashboards_Portlet;
core_dashboards_Portlet.__name__ = "core.dashboards.Portlet";
core_dashboards_Portlet.__interfaces__ = [haxe_ui_core_IDataComponent];
core_dashboards_Portlet.__super__ = haxe_ui_containers_VBox;
core_dashboards_Portlet.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	_instance: null
	,_databaseName: null
	,_tableName: null
	,_transformList: null
	,_additionalConfigParams: null
	,onFilterChanged: function(filter) {
		if(this._waitForFilterItem != null) {
			var filter1 = this.get_dashboardInstance().get_filter();
			if(Object.prototype.hasOwnProperty.call(filter1.h,this._waitForFilterItem) == true) {
				this.refreshData();
			} else {
				this.clearData();
			}
			return;
		}
		if(this._instance != null) {
			this._instance.onFilterChanged(filter);
		}
	}
	,onUserInputChanged: function(inputs) {
	}
	,onReady: function() {
		haxe_ui_containers_VBox.prototype.onReady.call(this);
		if(this._border == false) {
			this.addClass("no-border");
			this.removeClass("card");
		}
		this.parseConfigData();
		this._instance.set_additionalConfigParams(this._additionalConfigParams);
		this.refreshData();
		if(this._title != null) {
			var label = new haxe_ui_components_Label();
			label.set_text(this._title);
			label.set_id("portletTitle");
			label.set_horizontalAlign(this._titleAlign);
			label.addClass("card-title-label");
			label.addClass("portlet-title");
			label.addClass(this._type + "-title");
			this.addComponent(label);
		}
		this.addComponent(this._instance);
	}
	,clearData: function() {
		if(this._instance != null) {
			this._instance.clearData();
		}
	}
	,_table: null
	,_waitForFilterItem: null
	,refreshData: function() {
		var _gthis = this;
		if(this._databaseName == null || this._databaseName.length == 0) {
			return;
		}
		if(this._tableName == null || this._tableName.length == 0) {
			return;
		}
		if(this._waitForFilterItem != null) {
			var filter = this.get_dashboardInstance().get_filter();
			if(Object.prototype.hasOwnProperty.call(filter.h,this._waitForFilterItem) == false) {
				return;
			}
		}
		this.get_dashboardInstance().fetchTableData(this._databaseName,this._tableName).then(function(table) {
			_gthis._table = table;
			var _gthis1 = _gthis._table;
			var _gthis2 = _gthis._transformList;
			var tmp = _gthis.get_dashboardInstance().get_filter();
			_gthis._table = _gthis1.transform(_gthis2,tmp);
			_gthis._instance.onDataRefreshed(_gthis._table);
		});
	}
	,parseConfigData: function() {
		var _g = 0;
		var _g1 = this._dataSource.get_size();
		while(_g < _g1) {
			var i = _g++;
			var item = this._dataSource.get(i);
			if(item.id == "source") {
				var _g2 = 0;
				var _g3 = Reflect.fields(item);
				while(_g2 < _g3.length) {
					var f = _g3[_g2];
					++_g2;
					switch(f) {
					case "database":
						this._databaseName = Reflect.field(item,f);
						break;
					case "table":
						this._tableName = Reflect.field(item,f);
						break;
					case "transform":
						this._transformList = Reflect.field(item,f);
						break;
					case "waitForFilterItem":
						this._waitForFilterItem = Reflect.field(item,f);
						break;
					default:
						this._additionalConfigParams.h[f] = Reflect.field(item,f);
					}
				}
			}
		}
	}
	,dashboardInstance: null
	,get_dashboardInstance: function() {
		return this.findAncestor(null,core_dashboards_DashboardInstance);
	}
	,_title: null
	,get_title: function() {
		return this._title;
	}
	,set_title: function(value) {
		this._title = value;
		return value;
	}
	,_titleAlign: null
	,get_titleAlign: function() {
		return this._titleAlign;
	}
	,set_titleAlign: function(value) {
		this._titleAlign = value;
		return value;
	}
	,_type: null
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		if(value == this._type) {
			return value;
		}
		this._type = value;
		switch(this._type) {
		case "chart-bar":
			this._instance = new core_dashboards_portlets_BarGraphPortletInstance();
			this._instance.set_percentWidth(100);
			this._instance.set_percentHeight(100);
			break;
		case "chart-gauge":
			this._instance = new core_dashboards_portlets_GaugeGraphPortletInstance();
			this._instance.set_percentWidth(100);
			this._instance.set_percentHeight(100);
			break;
		case "chart-horizontal-bar":
			this._instance = new core_dashboards_portlets_HorizontalBarGraphPortletInstance();
			this._instance.set_percentWidth(100);
			this._instance.set_percentHeight(100);
			break;
		case "chart-scatter":
			this._instance = new core_dashboards_portlets_ScatterGraphPortletInstance();
			this._instance.set_percentWidth(100);
			this._instance.set_percentHeight(100);
			break;
		case "field-value":
			this._instance = new core_dashboards_portlets_FieldValuePortletInstance();
			break;
		case "table":
			this._instance = new core_dashboards_portlets_TableDataPortletInstance();
			this._instance.set_percentWidth(100);
			this._instance.set_percentHeight(100);
			break;
		case "user-input":
			this._instance = new core_dashboards_portlets_UserInputPortletInstance();
			break;
		}
		return value;
	}
	,_dataSource: null
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,_border: null
	,get_border: function() {
		return this._border;
	}
	,set_border: function(value) {
		if(value == this._border) {
			return value;
		}
		this._border = value;
		return value;
	}
	,refresh: function() {
		if(this._instance == null) {
			return;
		}
		this._instance.refresh();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_Portlet();
	}
	,__class__: core_dashboards_Portlet
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_border:"set_border",get_border:"get_border",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_type:"set_type",get_type:"get_type",set_titleAlign:"set_titleAlign",get_titleAlign:"get_titleAlign",set_title:"set_title",get_title:"get_title",get_dashboardInstance:"get_dashboardInstance"})
});
var core_dashboards_portlets_PortletInstance = function() {
	this._additionalConfigParams = new haxe_ds_StringMap();
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["core.dashboards.portlets.PortletInstance"] = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_PortletInstance.__name__ = "core.dashboards.portlets.PortletInstance";
core_dashboards_portlets_PortletInstance.__super__ = haxe_ui_containers_VBox;
core_dashboards_portlets_PortletInstance.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	_additionalConfigParams: null
	,get_additionalConfigParams: function() {
		return this._additionalConfigParams;
	}
	,set_additionalConfigParams: function(value) {
		this._additionalConfigParams = value;
		this.onConfigChanged();
		return value;
	}
	,onConfigChanged: function() {
	}
	,refresh: function() {
	}
	,clearData: function() {
	}
	,onDataRefreshed: function(table) {
	}
	,onFilterChanged: function(filter) {
	}
	,config: function(name,defaultValue) {
		var this1 = this.get_additionalConfigParams();
		if(Object.prototype.hasOwnProperty.call(this1.h,name) == false) {
			return defaultValue;
		}
		return this.get_additionalConfigParams().h[name];
	}
	,configBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var this1 = this.get_additionalConfigParams();
		if(Object.prototype.hasOwnProperty.call(this1.h,name) == false) {
			return defaultValue;
		}
		return this.get_additionalConfigParams().h[name] == "true";
	}
	,configFloat: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var this1 = this.get_additionalConfigParams();
		if(Object.prototype.hasOwnProperty.call(this1.h,name) == false) {
			return defaultValue;
		}
		return parseFloat(this.get_additionalConfigParams().h[name]);
	}
	,dashboardInstance: null
	,get_dashboardInstance: function() {
		return this.findAncestor(null,core_dashboards_DashboardInstance);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_PortletInstance();
	}
	,__class__: core_dashboards_portlets_PortletInstance
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{get_dashboardInstance:"get_dashboardInstance",set_additionalConfigParams:"set_additionalConfigParams",get_additionalConfigParams:"get_additionalConfigParams"})
});
var core_dashboards_portlets_BarGraphPortletInstance = function() {
	this.hasSize = false;
	this._table = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this._bar = new core_graphs_BarGraph();
	this._bar.set_percentWidth(100);
	this._bar.set_percentHeight(100);
	this._bar.labelRotation = -45;
	this._bar.registerEvent("barSelected",$bind(this,this.onBarSelected));
	this._bar.registerEvent("barUnselected",$bind(this,this.onBarUnselected));
	this.addComponent(this._bar);
};
$hxClasses["core.dashboards.portlets.BarGraphPortletInstance"] = core_dashboards_portlets_BarGraphPortletInstance;
core_dashboards_portlets_BarGraphPortletInstance.__name__ = "core.dashboards.portlets.BarGraphPortletInstance";
core_dashboards_portlets_BarGraphPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_BarGraphPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_bar: null
	,onConfigChanged: function() {
		this._bar.set_showLegend(this.configBool("showLegend",true));
	}
	,clearData: function() {
		this._bar.set_data([]);
	}
	,onBarSelected: function(e) {
		var axisX = this.config("axisX");
		var value = e.data.xValue;
		this.get_dashboardInstance().addFilterItem(axisX,value);
	}
	,onBarUnselected: function(e) {
		var axisX = this.config("axisX");
		this.get_dashboardInstance().removeFilterItem(axisX);
	}
	,onFilterChanged: function(filter) {
		var axisX = this.config("axisX");
		var value = filter.h[axisX];
		if(value == null) {
			this._bar.unselectBars();
			return;
		}
		this._bar.selectBarFromData(value);
	}
	,getColourCalculator: function() {
		var s = this.config("colorCalculator");
		if(s == null || StringTools.trim(s) == "") {
			return null;
		}
		var cc = null;
		var parts = s.split(":");
		var id = parts.shift();
		if(id == "threshold") {
			cc = new core_graphs_ThresholdBasedColourCalculator(parseFloat(parts[0]));
		}
		return cc;
	}
	,_table: null
	,onDataRefreshed: function(table) {
		this._table = table;
		var axisX = this.config("axisX");
		var axisY = this.config("axisY");
		var records = table.records;
		records.sort(function(o1,o2) {
			if(Std.string(o1.getFieldValue(axisX)) < Std.string(o2.getFieldValue(axisX))) {
				return -1;
			}
			if(Std.string(o1.getFieldValue(axisX)) > Std.string(o2.getFieldValue(axisX))) {
				return 1;
			}
			return 0;
		});
		this._bar.set_colourCalculator(this.getColourCalculator());
		var tmp = this.config("markerFunction");
		this._bar.getMarkerValueY = core_graphs_MarkerFunctions.get(tmp);
		this._bar.markerBehind = this.configBool("markerBehind");
		var graphData = [];
		var axisYParts = axisY.split(",");
		var _g = 0;
		while(_g < axisYParts.length) {
			var part = axisYParts[_g];
			++_g;
			part = StringTools.trim(part);
			if(part.length == 0) {
				continue;
			}
			var values = [];
			var n = 0;
			var _g1 = 0;
			while(_g1 < records.length) {
				var row = records[_g1];
				++_g1;
				var valueX = row.getFieldValue(axisX);
				var valueY = parseFloat(row.getFieldValue(part));
				values.push({ x : valueX, y : valueY});
				++n;
			}
			graphData.push({ key : part, values : values});
		}
		if(this.get_width() > 0 && this.get_height() > 0) {
			this._bar.set_data(graphData);
			this.onFilterChanged(this.get_dashboardInstance().get_filter());
		}
	}
	,refresh: function() {
	}
	,hasSize: null
	,validateComponentLayout: function() {
		var b = core_dashboards_portlets_PortletInstance.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			if(this.hasSize == false) {
				this.hasSize = true;
				if(this._table != null) {
					this.onDataRefreshed(this._table);
				}
			}
		}
		return b;
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_BarGraphPortletInstance();
	}
	,__class__: core_dashboards_portlets_BarGraphPortletInstance
});
var core_dashboards_portlets_FieldValuePortletInstance = function() {
	this._colorCalculator = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this.set_horizontalAlign("center");
	var box = new haxe_ui_containers_VBox();
	this._promptLabel = new haxe_ui_components_Label();
	this._promptLabel.set_horizontalAlign("center");
	this._promptLabel.set_text("Enter value:");
	box.addComponent(this._promptLabel);
	this._valueLabel = new haxe_ui_components_Label();
	this._valueLabel.set_text("-");
	this._valueLabel.set_horizontalAlign("center");
	this._valueLabel.get_customStyle().opacity = .7;
	box.addComponent(this._valueLabel);
	this.addComponent(box);
};
$hxClasses["core.dashboards.portlets.FieldValuePortletInstance"] = core_dashboards_portlets_FieldValuePortletInstance;
core_dashboards_portlets_FieldValuePortletInstance.__name__ = "core.dashboards.portlets.FieldValuePortletInstance";
core_dashboards_portlets_FieldValuePortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_FieldValuePortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_promptLabel: null
	,_valueLabel: null
	,clearData: function() {
		this._valueLabel.set_text("-");
		this._valueLabel.get_customStyle().color = null;
		var _this = this._valueLabel;
		_this.invalidateComponent("style",false);
	}
	,_colorCalculator: null
	,onConfigChanged: function() {
		this._promptLabel.set_text(this.config("prompt"));
		var promptFontSize = this.configFloat("promptFontSize",-1);
		if(promptFontSize > 0) {
			this._promptLabel.get_customStyle().fontSize = promptFontSize;
			var _this = this._promptLabel;
			_this.invalidateComponent("style",false);
		}
		var valueFontSize = this.configFloat("valueFontSize",-1);
		if(valueFontSize > 0) {
			this._valueLabel.get_customStyle().fontSize = valueFontSize;
			var _this = this._valueLabel;
			_this.invalidateComponent("style",false);
		}
		var colorCalculator = this.config("colorCalculator");
		if(colorCalculator != null) {
			haxe_Log.trace("------------------> " + colorCalculator,{ fileName : "../../haxe/core/dashboards/portlets/FieldValuePortletInstance.hx", lineNumber : 62, className : "core.dashboards.portlets.FieldValuePortletInstance", methodName : "onConfigChanged"});
			var details = new core_util_FunctionDetails(colorCalculator);
			this._colorCalculator = core_util_color_ColorCalculatorFactory.getColorCalculator(details.name);
			this._colorCalculator.configure(details.params);
			haxe_Log.trace(details.name,{ fileName : "../../haxe/core/dashboards/portlets/FieldValuePortletInstance.hx", lineNumber : 66, className : "core.dashboards.portlets.FieldValuePortletInstance", methodName : "onConfigChanged"});
			haxe_Log.trace(details.params,{ fileName : "../../haxe/core/dashboards/portlets/FieldValuePortletInstance.hx", lineNumber : 67, className : "core.dashboards.portlets.FieldValuePortletInstance", methodName : "onConfigChanged"});
		}
	}
	,applyColor: function() {
		if(this._colorCalculator == null) {
			return;
		}
		var data = parseFloat(this._valueLabel.get_text());
		var col = this._colorCalculator.getColor(data);
		if(col != null) {
			var tmp = haxe_ui_util_Color.fromString(col);
			this._valueLabel.get_customStyle().color = haxe_ui_util_Color.toInt(tmp);
			var _this = this._valueLabel;
			_this.invalidateComponent("style",false);
		}
	}
	,onDataRefreshed: function(table) {
		var fieldType = table.getFieldType(table.getFieldIndex(this.config("fieldName")));
		var value = table.records[0].getFieldValue(this.config("fieldName"));
		if(fieldType == 2) {
			var precision = 2;
			if(precision == null) {
				precision = 0;
			}
			value = Math.round(value * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		this._valueLabel.set_text(Std.string(value));
		this.applyColor();
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_FieldValuePortletInstance();
	}
	,__class__: core_dashboards_portlets_FieldValuePortletInstance
});
var core_dashboards_portlets_GaugeGraphPortletInstance = function() {
	this.hasSize = false;
	this._table = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this._gauge = new core_graphs_GaugeGraph();
	this._gauge.set_horizontalAlign("center");
	this._gauge.set_width(300);
	this._gauge.set_height(150);
	this.addComponent(this._gauge);
};
$hxClasses["core.dashboards.portlets.GaugeGraphPortletInstance"] = core_dashboards_portlets_GaugeGraphPortletInstance;
core_dashboards_portlets_GaugeGraphPortletInstance.__name__ = "core.dashboards.portlets.GaugeGraphPortletInstance";
core_dashboards_portlets_GaugeGraphPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_GaugeGraphPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_gauge: null
	,_table: null
	,onDataRefreshed: function(table) {
		this._table = table;
		var valueField = this.config("value");
		var value = parseFloat(table.records[0].getFieldValue(valueField));
		var userInput1 = this.get_dashboardInstance().get_filter().h["Predicted Expected Number of Visits"];
		if(userInput1 == null) {
			userInput1 = 0;
		}
		var userInput2 = this.get_dashboardInstance().get_filter().h["Predicted Actual Number of Visits"];
		if(userInput2 == null) {
			userInput2 = 0;
		}
		var userInput3 = this.get_dashboardInstance().get_filter().h["Predicted Number Completed Visits"];
		if(userInput3 == null) {
			userInput3 = 0;
		}
		value *= userInput1;
		value *= userInput2;
		value *= userInput3;
		value /= 1000;
		haxe_Log.trace(parseFloat(table.records[0].getFieldValue(valueField)),{ fileName : "../../haxe/core/dashboards/portlets/GaugeGraphPortletInstance.hx", lineNumber : 44, className : "core.dashboards.portlets.GaugeGraphPortletInstance", methodName : "onDataRefreshed", customParams : [userInput1,userInput2,userInput3,value]});
		this._gauge.setValue(value);
	}
	,hasSize: null
	,validateComponentLayout: function() {
		var b = core_dashboards_portlets_PortletInstance.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			if(this.hasSize == false) {
				this.hasSize = true;
				if(this._table != null) {
					this.onDataRefreshed(this._table);
				}
			}
		}
		return b;
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_GaugeGraphPortletInstance();
	}
	,__class__: core_dashboards_portlets_GaugeGraphPortletInstance
});
var core_dashboards_portlets_HorizontalBarGraphPortletInstance = function() {
	this.hasSize = false;
	this._table = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this._bar = new core_graphs_HorizontalBarGraph();
	this._bar.set_percentWidth(100);
	this._bar.set_percentHeight(100);
	this._bar.labelRotation = -45;
	this._bar.registerEvent("barSelected",$bind(this,this.onBarSelected));
	this._bar.registerEvent("barUnselected",$bind(this,this.onBarUnselected));
	this.addComponent(this._bar);
};
$hxClasses["core.dashboards.portlets.HorizontalBarGraphPortletInstance"] = core_dashboards_portlets_HorizontalBarGraphPortletInstance;
core_dashboards_portlets_HorizontalBarGraphPortletInstance.__name__ = "core.dashboards.portlets.HorizontalBarGraphPortletInstance";
core_dashboards_portlets_HorizontalBarGraphPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_HorizontalBarGraphPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_bar: null
	,onConfigChanged: function() {
		this._bar.set_showLegend(this.configBool("showLegend",true));
		this._bar.set_noDataLabel(this.config("noDataLabel",""));
	}
	,clearData: function() {
		this._bar.set_data([]);
	}
	,onBarSelected: function(e) {
		var axisX = this.config("axisX");
		var value = e.data.xValue;
		this.get_dashboardInstance().addFilterItem(axisX,value);
	}
	,onBarUnselected: function(e) {
		var axisX = this.config("axisX");
		this.get_dashboardInstance().removeFilterItem(axisX);
	}
	,onFilterChanged: function(filter) {
		var axisX = this.config("axisX");
		var value = filter.h[axisX];
		if(value == null) {
			this._bar.unselectBars();
			return;
		}
		this._bar.selectBarFromData(value);
	}
	,getColourCalculator: function() {
		var s = this.config("colorCalculator");
		if(s == null || StringTools.trim(s) == "") {
			return null;
		}
		var cc = null;
		var parts = s.split(":");
		var id = parts.shift();
		if(id == "threshold") {
			cc = new core_graphs_ThresholdBasedColourCalculator(parseFloat(parts[0]));
		}
		return cc;
	}
	,_table: null
	,onDataRefreshed: function(table) {
		this._table = table;
		var axisX = this.config("axisX");
		var axisY = this.config("axisY");
		var records = table.records;
		records.sort(function(o1,o2) {
			if(Std.string(o1.getFieldValue(axisX)) < Std.string(o2.getFieldValue(axisX))) {
				return -1;
			}
			if(Std.string(o1.getFieldValue(axisX)) > Std.string(o2.getFieldValue(axisX))) {
				return 1;
			}
			return 0;
		});
		this._bar.set_colourCalculator(this.getColourCalculator());
		var tmp = this.config("markerFunction");
		this._bar.getMarkerValueY = core_graphs_MarkerFunctions.get(tmp);
		this._bar.markerBehind = this.configBool("markerBehind");
		var graphData = [];
		var axisYParts = axisY.split(",");
		var _g = 0;
		while(_g < axisYParts.length) {
			var part = axisYParts[_g];
			++_g;
			part = StringTools.trim(part);
			if(part.length == 0) {
				continue;
			}
			var values = [];
			var n = 0;
			var _g1 = 0;
			while(_g1 < records.length) {
				var row = records[_g1];
				++_g1;
				var valueX = row.getFieldValue(axisX);
				var valueY = parseFloat(row.getFieldValue(part));
				values.push({ x : valueX, y : valueY});
				++n;
			}
			graphData.push({ key : part, values : values});
		}
		if(this.get_width() > 0 && this.get_height() > 0) {
			this._bar.set_data(graphData);
			this.onFilterChanged(this.get_dashboardInstance().get_filter());
		}
	}
	,refresh: function() {
	}
	,hasSize: null
	,validateComponentLayout: function() {
		var b = core_dashboards_portlets_PortletInstance.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			if(this.hasSize == false) {
				this.hasSize = true;
				if(this._table != null) {
					this.onDataRefreshed(this._table);
				}
			}
		}
		return b;
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_HorizontalBarGraphPortletInstance();
	}
	,__class__: core_dashboards_portlets_HorizontalBarGraphPortletInstance
});
var core_dashboards_portlets_ScatterGraphPortletInstance = function() {
	this.hasSize = false;
	this._table = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this._scatter = new core_graphs_ScatterGraph();
	this._scatter.set_percentWidth(100);
	this._scatter.set_percentHeight(100);
	this._scatter.registerEvent("pointSelected",$bind(this,this.onPointSelected));
	this._scatter.registerEvent("pointUnselected",$bind(this,this.onPointUnselected));
	this.addComponent(this._scatter);
};
$hxClasses["core.dashboards.portlets.ScatterGraphPortletInstance"] = core_dashboards_portlets_ScatterGraphPortletInstance;
core_dashboards_portlets_ScatterGraphPortletInstance.__name__ = "core.dashboards.portlets.ScatterGraphPortletInstance";
core_dashboards_portlets_ScatterGraphPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_ScatterGraphPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_scatter: null
	,onPointSelected: function(e) {
		var axisX = this.config("axisX");
		var value = e.data.originalX;
		this.get_dashboardInstance().addFilterItem(axisX,value);
	}
	,onPointUnselected: function(e) {
		var axisX = this.config("axisX");
		this.get_dashboardInstance().removeFilterItem(axisX);
	}
	,onFilterChanged: function(filter) {
		var axisX = this.config("axisX");
		var value = filter.h[axisX];
		if(value == null) {
			this._scatter.unselectPoints();
			return;
		}
		this._scatter.selectPointFromData(value);
	}
	,_table: null
	,onDataRefreshed: function(table) {
		this._table = table;
		var axisX = this.config("axisX");
		var axisY = this.config("axisY");
		var size = this.config("size");
		var records = table.records;
		records.sort(function(o1,o2) {
			if(Std.string(o1.getFieldValue(axisX)) < Std.string(o2.getFieldValue(axisX))) {
				return -1;
			}
			if(Std.string(o1.getFieldValue(axisX)) > Std.string(o2.getFieldValue(axisX))) {
				return 1;
			}
			return 0;
		});
		var tmp = this.config("markerFunction");
		this._scatter.getMarkerValueY = core_graphs_MarkerFunctions.get(tmp);
		this._scatter.markerBehind = this.configBool("markerBehind");
		var graphData = [];
		var axisYParts = axisY.split(",");
		var _g = 0;
		while(_g < axisYParts.length) {
			var part = axisYParts[_g];
			++_g;
			part = StringTools.trim(part);
			if(part.length == 0) {
				continue;
			}
			var fieldIndexY = table.getFieldIndex(part);
			var values = [];
			var n = 0;
			var _g1 = 0;
			while(_g1 < records.length) {
				var row = records[_g1];
				++_g1;
				var valueX = row.getFieldValue(axisX);
				var valueY = parseFloat(row.getFieldValue(axisY));
				var valueSize = parseFloat(row.getFieldValue(size));
				values.push({ x : valueX, y : valueY, size : valueSize * 30});
				++n;
			}
			graphData.push({ key : part, values : values});
		}
		if(this.get_width() > 0 && this.get_height() > 0) {
			this._scatter.set_data(graphData);
			this.onFilterChanged(this.get_dashboardInstance().get_filter());
		}
	}
	,hasSize: null
	,validateComponentLayout: function() {
		var b = core_dashboards_portlets_PortletInstance.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0) {
			if(this.hasSize == false) {
				this.hasSize = true;
				if(this._table != null) {
					this.onDataRefreshed(this._table);
				}
			}
		}
		return b;
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_ScatterGraphPortletInstance();
	}
	,__class__: core_dashboards_portlets_ScatterGraphPortletInstance
});
var core_dashboards_portlets_TableDataPortletInstance = function() {
	this._previousTableSelectedIndex = -1;
	this._header = null;
	core_dashboards_portlets_PortletInstance.call(this);
	this._table = new haxe_ui_containers_TableView();
	this._table.set_percentWidth(100);
	this._table.set_percentHeight(100);
	this._table.set_virtual(true);
	this._table.registerEvent("change",$bind(this,this.onTableSelectionChanged));
	this.addComponent(this._table);
};
$hxClasses["core.dashboards.portlets.TableDataPortletInstance"] = core_dashboards_portlets_TableDataPortletInstance;
core_dashboards_portlets_TableDataPortletInstance.__name__ = "core.dashboards.portlets.TableDataPortletInstance";
core_dashboards_portlets_TableDataPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_TableDataPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_table: null
	,_header: null
	,_previousTableSelectedIndex: null
	,onTableSelectionChanged: function(_) {
		var selectedItem = this._table.get_selectedItem();
		if(selectedItem == null) {
			return;
		}
		var field = "Investigator Site";
		if(this._previousTableSelectedIndex != -1 && this._table.get_selectedIndex() == this._previousTableSelectedIndex) {
			this._previousTableSelectedIndex = -1;
			this._table.set_selectedIndex(-1);
			this.get_dashboardInstance().removeFilterItem(field);
			return;
		}
		this._previousTableSelectedIndex = this._table.get_selectedIndex();
		var safeField = StringTools.replace(field," ","_");
		var value = Reflect.field(selectedItem,safeField);
		this.get_dashboardInstance().addFilterItem(field,value);
		haxe_Log.trace(selectedItem,{ fileName : "../../haxe/core/dashboards/portlets/TableDataPortletInstance.hx", lineNumber : 49, className : "core.dashboards.portlets.TableDataPortletInstance", methodName : "onTableSelectionChanged"});
	}
	,onFilterChanged: function(filter) {
		var ds = this._table.get_dataSource();
		ds.clearFilter();
		ds.filter(function(index,item) {
			var use = true;
			var h = filter.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var filterValue = filter.h[key];
				var safeKey = StringTools.replace(key," ","_");
				if(Object.prototype.hasOwnProperty.call(item,safeKey)) {
					var value = Reflect.field(item,safeKey);
					if(value != filterValue) {
						use = false;
					}
				}
			}
			return use;
		});
	}
	,onDataRefreshed: function(table) {
		if(this._header == null) {
			this._header = new haxe_ui_containers_Header();
			var pcx = 100 / table.info.fieldDefinitions.length;
			this._header.set_percentWidth(100);
			this._table.addComponent(this._header);
			var _g = 0;
			var _g1 = table.info.fieldDefinitions;
			while(_g < _g1.length) {
				var fd = _g1[_g];
				++_g;
				var col = new haxe_ui_components_Column();
				col.set_id(StringTools.replace(fd.fieldName," ","_"));
				col.set_percentWidth(pcx);
				col.set_text(fd.fieldName);
				this._header.addComponent(col);
			}
		}
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		var _g1 = table.records;
		while(_g < _g1.length) {
			var row = _g1[_g];
			++_g;
			var fieldIndex = 0;
			var item = { };
			var _g2 = 0;
			var _g3 = table.info.fieldDefinitions;
			while(_g2 < _g3.length) {
				var fd = _g3[_g2];
				++_g2;
				item[StringTools.replace(fd.fieldName," ","_")] = row.getFieldValue(fd.fieldName);
				++fieldIndex;
			}
			ds.add(item);
		}
		this._table.set_dataSource(ds);
		this.onFilterChanged(this.get_dashboardInstance().get_filter());
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_TableDataPortletInstance();
	}
	,__class__: core_dashboards_portlets_TableDataPortletInstance
});
var core_dashboards_portlets_UserInputPortletInstance = function() {
	var _gthis = this;
	core_dashboards_portlets_PortletInstance.call(this);
	this.set_horizontalAlign("center");
	var box = new haxe_ui_containers_VBox();
	this._promptLabel = new haxe_ui_components_Label();
	this._promptLabel.set_horizontalAlign("center");
	this._promptLabel.set_text("Enter value:");
	box.addComponent(this._promptLabel);
	this._stepper = new haxe_ui_components_NumberStepper();
	this._stepper.set_horizontalAlign("center");
	this._stepper.set_onChange(function(e) {
		if(_gthis.get_isReady()) {
			_gthis.get_dashboardInstance().addFilterItem(_gthis.config("userInputId"),_gthis._stepper.get_value());
		}
	});
	box.addComponent(this._stepper);
	this.addComponent(box);
};
$hxClasses["core.dashboards.portlets.UserInputPortletInstance"] = core_dashboards_portlets_UserInputPortletInstance;
core_dashboards_portlets_UserInputPortletInstance.__name__ = "core.dashboards.portlets.UserInputPortletInstance";
core_dashboards_portlets_UserInputPortletInstance.__super__ = core_dashboards_portlets_PortletInstance;
core_dashboards_portlets_UserInputPortletInstance.prototype = $extend(core_dashboards_portlets_PortletInstance.prototype,{
	_promptLabel: null
	,_stepper: null
	,onConfigChanged: function() {
		this._promptLabel.set_text(this.config("prompt"));
		this._stepper.set_pos(this.configFloat("initialValue"));
	}
	,registerBehaviours: function() {
		core_dashboards_portlets_PortletInstance.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = core_dashboards_portlets_PortletInstance.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_dashboards_portlets_UserInputPortletInstance();
	}
	,__class__: core_dashboards_portlets_UserInputPortletInstance
});
var core_data_ActionType = function() { };
$hxClasses["core.data.ActionType"] = core_data_ActionType;
core_data_ActionType.__name__ = "core.data.ActionType";
core_data_ActionType.toString = function(actionType) {
	switch(actionType) {
	case 1:
		return "View";
	case 2:
		return "Update";
	case 3:
		return "Add";
	case 4:
		return "Delete";
	default:
		return "Unknown";
	}
};
var core_data_CachedDataTable = function(table,utils) {
	this.data = null;
	this.utils = utils;
	this._table = table;
};
$hxClasses["core.data.CachedDataTable"] = core_data_CachedDataTable;
core_data_CachedDataTable.__name__ = "core.data.CachedDataTable";
core_data_CachedDataTable.prototype = {
	utils: null
	,_table: null
	,data: null
	,fillCache: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis._table.fetch().then(function(results) {
				_gthis.data = results;
				resolve(true);
			});
		});
	}
	,createObject: function() {
		var o = this._table.createObject();
		o.set_primaryKey(this.get_nextPrimaryKey());
		return o;
	}
	,addObject: function(o,refreshCache) {
		if(refreshCache == null) {
			refreshCache = true;
		}
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis._table.addObject(o).then(function(r) {
				if(r == true && refreshCache == true) {
					_gthis.fillCache().then(function(r) {
						resolve(r);
					});
				} else {
					resolve(r);
				}
			});
		});
	}
	,updateObject: function(o,refreshCache) {
		if(refreshCache == null) {
			refreshCache = true;
		}
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis._table.updateObject(o).then(function(r) {
				if(r == true && refreshCache == true) {
					_gthis.fillCache().then(function(r) {
						resolve(r);
					});
				} else {
					resolve(r);
				}
			});
		});
	}
	,nextPrimaryKey: null
	,get_nextPrimaryKey: function() {
		var n = -1;
		var _g = 0;
		var _g1 = this.data;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.get_primaryKey() > n) {
				n = d.get_primaryKey();
			}
		}
		return ++n;
	}
	,__class__: core_data_CachedDataTable
	,__properties__: {get_nextPrimaryKey:"get_nextPrimaryKey"}
};
var core_data_CachedInternalDB = function() {
};
$hxClasses["core.data.CachedInternalDB"] = core_data_CachedInternalDB;
core_data_CachedInternalDB.__name__ = "core.data.CachedInternalDB";
core_data_CachedInternalDB.prototype = {
	organizations: null
	,users: null
	,userGroups: null
	,userOrganizationLinks: null
	,dashboards: null
	,dashboardGroups: null
	,icons: null
	,roles: null
	,permissions: null
	,userGroupLinks: null
	,userGroupRoleLinks: null
	,sites: null
	,pages: null
	,layouts: null
	,portletInstances: null
	,__class__: core_data_CachedInternalDB
};
var core_data_dao_IDataObject = function() { };
$hxClasses["core.data.dao.IDataObject"] = core_data_dao_IDataObject;
core_data_dao_IDataObject.__name__ = "core.data.dao.IDataObject";
core_data_dao_IDataObject.__isInterface__ = true;
core_data_dao_IDataObject.prototype = {
	get_primaryKey: null
	,set_primaryKey: null
	,get_primaryKeyName: null
	,primaryKeyName: null
	,fromArray: null
	,toArray: null
	,getFieldValue: null
	,update: null
	,add: null
	,__class__: core_data_dao_IDataObject
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey"}
};
var core_data_dao_IBuiltDataObject = function() { };
$hxClasses["core.data.dao.IBuiltDataObject"] = core_data_dao_IBuiltDataObject;
core_data_dao_IBuiltDataObject.__name__ = "core.data.dao.IBuiltDataObject";
core_data_dao_IBuiltDataObject.__isInterface__ = true;
core_data_dao_IBuiltDataObject.__interfaces__ = [core_data_dao_IDataObject];
var core_data_DashboardData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.DashboardData"] = core_data_DashboardData;
core_data_DashboardData.__name__ = "core.data.DashboardData";
core_data_DashboardData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_DashboardData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_dashboardId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_order(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.set_layoutData(core_data_utils_ConversionUtils.fromString(data[3],1));
		this.set_iconId(core_data_utils_ConversionUtils.fromString(data[4],2));
		this.set_dashboardGroupId(core_data_utils_ConversionUtils.fromString(data[5],2));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[6],2));
		this.set_creatorUserId(core_data_utils_ConversionUtils.fromString(data[7],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_dashboardId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_order()));
		data.push(Std.string(this.get_layoutData()));
		data.push(Std.string(this.get_iconId()));
		data.push(Std.string(this.get_dashboardGroupId()));
		data.push(Std.string(this.get_organizationId()));
		data.push(Std.string(this.get_creatorUserId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
		if(fieldId == "dashboardGroupId") {
			this._group = object;
			this.links.h["group"] = this._group;
		}
		if(fieldId == "iconId") {
			this._icon = object;
			this.links.h["icon"] = this._icon;
		}
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "dashboardId") {
			return this.get_dashboardId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "order") {
			return this.get_order();
		}
		if(fieldId == "layoutData") {
			return this.get_layoutData();
		}
		if(fieldId == "iconId") {
			return this.get_iconId();
		}
		if(fieldId == "dashboardGroupId") {
			return this.get_dashboardGroupId();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		if(fieldId == "creatorUserId") {
			return this.get_creatorUserId();
		}
		if(fieldId == "group") {
			return this.get_group();
		}
		if(fieldId == "icon") {
			return this.get_icon();
		}
		return null;
	}
	,_dashboardId: null
	,get_dashboardId: function() {
		return this._dashboardId;
	}
	,set_dashboardId: function(value) {
		if(this._dashboardId == value) {
			return value;
		}
		this.dataChanged = true;
		this._dashboardId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_order: null
	,get_order: function() {
		return this._order;
	}
	,set_order: function(value) {
		if(this._order == value) {
			return value;
		}
		this.dataChanged = true;
		this._order = value;
		return value;
	}
	,_layoutData: null
	,get_layoutData: function() {
		return this._layoutData;
	}
	,set_layoutData: function(value) {
		if(this._layoutData == value) {
			return value;
		}
		this.dataChanged = true;
		this._layoutData = value;
		return value;
	}
	,_iconId: null
	,get_iconId: function() {
		return this._iconId;
	}
	,set_iconId: function(value) {
		if(this._iconId == value) {
			return value;
		}
		this.dataChanged = true;
		this._iconId = value;
		return value;
	}
	,_dashboardGroupId: null
	,get_dashboardGroupId: function() {
		return this._dashboardGroupId;
	}
	,set_dashboardGroupId: function(value) {
		if(this._dashboardGroupId == value) {
			return value;
		}
		this.dataChanged = true;
		this._dashboardGroupId = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,_creatorUserId: null
	,get_creatorUserId: function() {
		return this._creatorUserId;
	}
	,set_creatorUserId: function(value) {
		if(this._creatorUserId == value) {
			return value;
		}
		this.dataChanged = true;
		this._creatorUserId = value;
		return value;
	}
	,_group: null
	,get_group: function() {
		return this._group;
	}
	,set_group: function(value) {
		if(this._group == value) {
			return value;
		}
		this.setLinkObject(value.get_primaryKeyName(),value);
		this._group = value;
		return value;
	}
	,_icon: null
	,get_icon: function() {
		return this._icon;
	}
	,set_icon: function(value) {
		if(this._icon == value) {
			return value;
		}
		this.setLinkObject(value.get_primaryKeyName(),value);
		this._icon = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_dashboardId();
	}
	,set_primaryKey: function(value) {
		return this.set_dashboardId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "dashboardId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_DashboardData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_icon:"set_icon",get_icon:"get_icon",set_group:"set_group",get_group:"get_group",set_creatorUserId:"set_creatorUserId",get_creatorUserId:"get_creatorUserId",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_dashboardGroupId:"set_dashboardGroupId",get_dashboardGroupId:"get_dashboardGroupId",set_iconId:"set_iconId",get_iconId:"get_iconId",set_layoutData:"set_layoutData",get_layoutData:"get_layoutData",set_order:"set_order",get_order:"get_order",set_name:"set_name",get_name:"get_name",set_dashboardId:"set_dashboardId",get_dashboardId:"get_dashboardId"}
};
var core_data_dao_IDataTable = function() { };
$hxClasses["core.data.dao.IDataTable"] = core_data_dao_IDataTable;
core_data_dao_IDataTable.__name__ = "core.data.dao.IDataTable";
core_data_dao_IDataTable.__isInterface__ = true;
core_data_dao_IDataTable.prototype = {
	db: null
	,name: null
	,init: null
	,create: null
	,fetch: null
	,updateObject: null
	,addObject: null
	,createObject: null
	,__class__: core_data_dao_IDataTable
};
var core_data_DashboardDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.DashboardDataTable"] = core_data_DashboardDataTable;
core_data_DashboardDataTable.__name__ = "core.data.DashboardDataTable";
core_data_DashboardDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_DashboardDataTable.prototype = {
	getDashboardsByGroup: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.fetch().then(function(dashboards) {
				var map = new haxe_ds_ObjectMap();
				var _g = 0;
				while(_g < dashboards.length) {
					var d = dashboards[_g];
					++_g;
					var key = d.get_group();
					var list = map.h[key.__id__];
					if(list == null) {
						list = [];
						map.set(d.get_group(),list);
					}
					list.push(d);
				}
				resolve(map);
			});
		});
	}
	,info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"dashboarddata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_DashboardData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_DashboardData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "dashboarddata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_DashboardData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"dashboarddata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "dashboarddata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"dashboarddata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_DashboardData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "dashboarddata" + " building links for " + "dashboarddata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "dashboarddata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"dashboarddata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "dashboarddata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "dashboarddata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"dashboarddata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "dashboarddata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_DashboardData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"dashboarddata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "dashboarddata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"dashboarddata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "dashboarddata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "dashboarddata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"dashboarddata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_DashboardDataTable
};
var core_data_DashboardGroupData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.DashboardGroupData"] = core_data_DashboardGroupData;
core_data_DashboardGroupData.__name__ = "core.data.DashboardGroupData";
core_data_DashboardGroupData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_DashboardGroupData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_dashboardGroupId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_order(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.set_iconId(core_data_utils_ConversionUtils.fromString(data[3],2));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[4],2));
		this.set_creatorUserId(core_data_utils_ConversionUtils.fromString(data[5],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_dashboardGroupId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_order()));
		data.push(Std.string(this.get_iconId()));
		data.push(Std.string(this.get_organizationId()));
		data.push(Std.string(this.get_creatorUserId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
		if(fieldId == "iconId") {
			this._icon = object;
			this.links.h["icon"] = this._icon;
		}
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "dashboardGroupId") {
			return this.get_dashboardGroupId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "order") {
			return this.get_order();
		}
		if(fieldId == "iconId") {
			return this.get_iconId();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		if(fieldId == "creatorUserId") {
			return this.get_creatorUserId();
		}
		if(fieldId == "icon") {
			return this.get_icon();
		}
		return null;
	}
	,_dashboardGroupId: null
	,get_dashboardGroupId: function() {
		return this._dashboardGroupId;
	}
	,set_dashboardGroupId: function(value) {
		if(this._dashboardGroupId == value) {
			return value;
		}
		this.dataChanged = true;
		this._dashboardGroupId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_order: null
	,get_order: function() {
		return this._order;
	}
	,set_order: function(value) {
		if(this._order == value) {
			return value;
		}
		this.dataChanged = true;
		this._order = value;
		return value;
	}
	,_iconId: null
	,get_iconId: function() {
		return this._iconId;
	}
	,set_iconId: function(value) {
		if(this._iconId == value) {
			return value;
		}
		this.dataChanged = true;
		this._iconId = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,_creatorUserId: null
	,get_creatorUserId: function() {
		return this._creatorUserId;
	}
	,set_creatorUserId: function(value) {
		if(this._creatorUserId == value) {
			return value;
		}
		this.dataChanged = true;
		this._creatorUserId = value;
		return value;
	}
	,_icon: null
	,get_icon: function() {
		return this._icon;
	}
	,set_icon: function(value) {
		if(this._icon == value) {
			return value;
		}
		this.setLinkObject(value.get_primaryKeyName(),value);
		this._icon = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_dashboardGroupId();
	}
	,set_primaryKey: function(value) {
		return this.set_dashboardGroupId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "dashboardGroupId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_DashboardGroupData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_icon:"set_icon",get_icon:"get_icon",set_creatorUserId:"set_creatorUserId",get_creatorUserId:"get_creatorUserId",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_iconId:"set_iconId",get_iconId:"get_iconId",set_order:"set_order",get_order:"get_order",set_name:"set_name",get_name:"get_name",set_dashboardGroupId:"set_dashboardGroupId",get_dashboardGroupId:"get_dashboardGroupId"}
};
var core_data_DashboardGroupDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.DashboardGroupDataTable"] = core_data_DashboardGroupDataTable;
core_data_DashboardGroupDataTable.__name__ = "core.data.DashboardGroupDataTable";
core_data_DashboardGroupDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_DashboardGroupDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"dashboardgroupdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_DashboardGroupData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_DashboardGroupData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "dashboardgroupdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_DashboardGroupData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"dashboardgroupdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "dashboardgroupdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"dashboardgroupdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_DashboardGroupData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "dashboardgroupdata" + " building links for " + "dashboardgroupdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "dashboardgroupdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"dashboardgroupdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "dashboardgroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"dashboardgroupdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_DashboardGroupData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"dashboardgroupdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"dashboardgroupdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "dashboardgroupdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "dashboardgroupdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"dashboardgroupdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_DashboardGroupDataTable
};
var core_data_DashboardUtils = function() {
};
$hxClasses["core.data.DashboardUtils"] = core_data_DashboardUtils;
core_data_DashboardUtils.__name__ = "core.data.DashboardUtils";
core_data_DashboardUtils.prototype = {
	byGroup: null
	,get_byGroup: function() {
		var map = new haxe_ds_ObjectMap();
		var _g = 0;
		var _g1 = core_data_InternalDB.dashboards.data;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			var group = d.get_group();
			if(group == null) {
				group = new core_data_DashboardGroupData();
				group.set_icon(new core_data_IconData());
				group.set_name("Unknown");
			}
			var list = map.h[group.__id__];
			if(list == null) {
				list = [];
				map.set(group,list);
			}
			list.push(d);
		}
		return map;
	}
	,__class__: core_data_DashboardUtils
	,__properties__: {get_byGroup:"get_byGroup"}
};
var core_data_DatabaseBatchOperationType = $hxEnums["core.data.DatabaseBatchOperationType"] = { __ename__:true,__constructs__:null
	,CreateDatabase: {_hx_name:"CreateDatabase",_hx_index:0,__enum__:"core.data.DatabaseBatchOperationType",toString:$estr}
	,CreateTable: {_hx_name:"CreateTable",_hx_index:1,__enum__:"core.data.DatabaseBatchOperationType",toString:$estr}
	,AddTableData: {_hx_name:"AddTableData",_hx_index:2,__enum__:"core.data.DatabaseBatchOperationType",toString:$estr}
};
core_data_DatabaseBatchOperationType.__constructs__ = [core_data_DatabaseBatchOperationType.CreateDatabase,core_data_DatabaseBatchOperationType.CreateTable,core_data_DatabaseBatchOperationType.AddTableData];
var core_data_DatabaseEvent = function(type) {
	core_Event.call(this,type);
};
$hxClasses["core.data.DatabaseEvent"] = core_data_DatabaseEvent;
core_data_DatabaseEvent.__name__ = "core.data.DatabaseEvent";
core_data_DatabaseEvent.__super__ = core_Event;
core_data_DatabaseEvent.prototype = $extend(core_Event.prototype,{
	__class__: core_data_DatabaseEvent
});
var core_data_DatabaseManager = function() {
	this._batchOperations = null;
	this._cachedDatabases = null;
	this.internal = null;
	core_EventDispatcher.call(this);
	this.internal = core_data_InternalDB.get_instance();
};
$hxClasses["core.data.DatabaseManager"] = core_data_DatabaseManager;
core_data_DatabaseManager.__name__ = "core.data.DatabaseManager";
core_data_DatabaseManager.__properties__ = {get_instance:"get_instance"};
core_data_DatabaseManager.get_instance = function() {
	if(core_data_DatabaseManager._instance == null) {
		core_data_DatabaseManager._instance = new core_data_DatabaseManager();
	}
	return core_data_DatabaseManager._instance;
};
core_data_DatabaseManager.__super__ = core_EventDispatcher;
core_data_DatabaseManager.prototype = $extend(core_EventDispatcher.prototype,{
	internal: null
	,_cachedDatabases: null
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var promises = [_gthis.internal.init()];
			core_data_utils_PromiseUtils.runSequentially(promises,function() {
				resolve(true);
				_gthis.dispatch(new core_data_DatabaseEvent("dbInitialized"));
			});
		});
	}
	,start: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var promises = [_gthis.internal.start()];
			core_data_utils_PromiseUtils.runSequentially(promises,function() {
				resolve(true);
			});
		});
	}
	,getDatabase: function(name) {
		return new Promise(function(resolve,reject) {
			core_data.getDatabaseInfo(name).then(function(databaseDef) {
				var db = new core_data_dao_Database();
				db.name = databaseDef.databaseName;
				db.info = databaseDef;
				var _g = 0;
				var _g1 = databaseDef.tables;
				while(_g < _g1.length) {
					var tableDef = _g1[_g];
					++_g;
					var table = new core_data_GenericTable();
					table.info = tableDef;
					db.registerTable(tableDef.tableName,table);
				}
				resolve(db);
			});
		});
	}
	,listDatabases: function(useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(useCache == true && _gthis._cachedDatabases != null) {
				resolve(_gthis._cachedDatabases);
				return;
			}
			core_data.listDatabases().then(function(databaseDefs) {
				var dbs = [];
				var _g = 0;
				while(_g < databaseDefs.length) {
					var databaseDef = databaseDefs[_g];
					++_g;
					var db = new core_data_dao_Database();
					db.name = databaseDef.databaseName;
					db.info = databaseDef;
					dbs.push(db);
					var _g1 = 0;
					var _g2 = databaseDef.tables;
					while(_g1 < _g2.length) {
						var tableDef = _g2[_g1];
						++_g1;
						var table = new core_data_GenericTable();
						table.info = tableDef;
						db.registerTable(tableDef.tableName,table);
					}
				}
				_gthis._cachedDatabases = dbs;
				resolve(dbs);
			});
		});
	}
	,_batchOperations: null
	,addBatchOperation: function(type,data) {
		if(this._batchOperations == null) {
			this._batchOperations = [];
		}
		this._batchOperations.push({ type : type, data : data});
	}
	,performBatchOperations: function(onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.performBatches(_gthis._batchOperations.slice(),0,_gthis._batchOperations.length,function() {
				resolve(true);
			},onProgress);
		});
	}
	,performBatches: function(list,current,max,onComplete,onProgress) {
		var _gthis = this;
		if(list.length == 0) {
			onComplete();
			return;
		}
		var item = list.shift();
		if(onProgress != null) {
			onProgress(item,current + 1,max);
		}
		switch(item.type._hx_index) {
		case 0:
			var db = js_Boot.__cast(item.data , core_data_dao_Database);
			db.create().then(function(r) {
				_gthis.performBatches(list,current + 1,max,onComplete,onProgress);
			});
			break;
		case 1:
			var table = js_Boot.__cast(item.data , core_data_GenericTable);
			table.create().then(function(r) {
				_gthis.performBatches(list,current + 1,max,onComplete,onProgress);
			});
			break;
		case 2:
			var table = js_Boot.__cast(item.data , core_data_GenericTable);
			table.commitData().then(function(r) {
				_gthis.performBatches(list,current + 1,max,onComplete,onProgress);
			});
			break;
		}
	}
	,__class__: core_data_DatabaseManager
});
var core_data_GenericData = function() {
	this.data = [];
	this.table = null;
};
$hxClasses["core.data.GenericData"] = core_data_GenericData;
core_data_GenericData.__name__ = "core.data.GenericData";
core_data_GenericData.__interfaces__ = [core_data_dao_IDataObject];
core_data_GenericData.prototype = {
	table: null
	,data: null
	,fromArray: function(data) {
		this.data = [];
		var _g = 0;
		while(_g < data.length) {
			var d = data[_g];
			++_g;
			this.data.push(Std.string(d));
		}
	}
	,toArray: function() {
		return this.data;
	}
	,getFieldValue: function(fieldName) {
		var fieldIndex = this.table.getFieldIndex(fieldName);
		if(fieldIndex == -1) {
			return null;
		}
		return this.getFieldValueByIndex(fieldIndex);
	}
	,getFieldValueByIndex: function(fieldIndex) {
		var fieldDef = this.table.info.fieldDefinitions[fieldIndex];
		var fieldValue = this.data[fieldIndex];
		var convertedValue = core_data_utils_ConversionUtils.fromString(fieldValue,fieldDef.fieldType);
		return convertedValue;
	}
	,update: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,add: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return null;
	}
	,get_primaryKey: function() {
		return -1;
	}
	,set_primaryKey: function(value) {
		return value;
	}
	,__class__: core_data_GenericData
	,__properties__: {set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",get_primaryKeyName:"get_primaryKeyName"}
};
var core_data_GenericTable = function(name) {
	this.batchSize = 5000;
	this._cachedFieldIndex = new haxe_ds_StringMap();
	this._dataToAdd = null;
	this.primaryKeyName = null;
	this.records = [];
	this.info = null;
	this.name = name;
	if(name != null) {
		this.info = { tableName : name, recordCount : 0, fieldDefinitions : []};
	}
};
$hxClasses["core.data.GenericTable"] = core_data_GenericTable;
core_data_GenericTable.__name__ = "core.data.GenericTable";
core_data_GenericTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_GenericTable.prototype = {
	db: null
	,name: null
	,info: null
	,records: null
	,primaryKeyName: null
	,createRecord: function(add) {
		if(add == null) {
			add = true;
		}
		var record = new core_data_GenericData();
		record.table = this;
		this.records.push(record);
		this.info.recordCount++;
		return record;
	}
	,clone: function(includeData) {
		if(includeData == null) {
			includeData = false;
		}
		var copy = new core_data_GenericTable();
		copy.primaryKeyName = this.primaryKeyName;
		copy.info = { tableName : this.info.tableName, fieldDefinitions : this.info.fieldDefinitions.slice(), recordCount : 0};
		if(includeData == true) {
			copy.records = this.records.slice();
			copy.info.recordCount = this.records.length;
		}
		return copy;
	}
	,transform: function(transformList,context) {
		var s = transformList;
		if(s != null && StringTools.trim(s).length == 0) {
			s = null;
		}
		var transformedTable = this;
		if(s != null) {
			var transformStack = [];
			var parts = s.split("->");
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				p = StringTools.trim(p);
				if(p.length == 0) {
					continue;
				}
				var functionDetails = new core_util_FunctionDetails(p);
				transformStack.push({ transformId : functionDetails.name, transformParameters : functionDetails.params});
			}
			var _g = 0;
			while(_g < transformStack.length) {
				var item = transformStack[_g];
				++_g;
				var t = core_data_transforms_TransformFactory.getTransform(item.transformId);
				if(t != null) {
					transformedTable = t.applyTransform(transformedTable,item,context);
				}
			}
		}
		return transformedTable;
	}
	,recordCount: null
	,get_recordCount: function() {
		if(this.info == null) {
			return 0;
		}
		return this.info.recordCount;
	}
	,_dataToAdd: null
	,addData: function(data) {
		if(this._dataToAdd == null) {
			this._dataToAdd = [];
		}
		this._dataToAdd.push(data);
	}
	,addDatas: function(datas) {
		var _g = 0;
		while(_g < datas.length) {
			var d = datas[_g];
			++_g;
			this.addData(d);
		}
	}
	,getFieldType: function(fieldIndex) {
		var fieldDef = this.info.fieldDefinitions[fieldIndex];
		return fieldDef.fieldType;
	}
	,commitData: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis._dataToAdd == null || _gthis._dataToAdd.length == 0) {
				resolve(true);
				return;
			}
			var objects = [];
			var _g = 0;
			var _g1 = _gthis._dataToAdd;
			while(_g < _g1.length) {
				var d = _g1[_g];
				++_g;
				var object = new core_data_GenericData();
				object.fromArray(d);
				objects.push(object);
			}
			_gthis.addObjects(objects,null).then(function(r) {
				_gthis._dataToAdd = null;
				resolve(true);
			});
		});
	}
	,defineField: function(fieldName,fieldType) {
		if(this.info == null) {
			this.info = { tableName : this.name, recordCount : 0, fieldDefinitions : []};
		}
		var index = this.getFieldIndex(fieldName);
		if(index != -1) {
			throw haxe_Exception.thrown("field " + fieldName + " already defined");
		}
		if(this.info.fieldDefinitions == null) {
			this.info.fieldDefinitions = [];
		}
		this.info.fieldDefinitions.push({ fieldName : fieldName, fieldType : fieldType});
	}
	,_cachedFieldIndex: null
	,getFieldIndex: function(fieldName) {
		if(this.info == null) {
			return -1;
		}
		if(this.info.fieldDefinitions == null) {
			return -1;
		}
		if(Object.prototype.hasOwnProperty.call(this._cachedFieldIndex.h,fieldName)) {
			return this._cachedFieldIndex.h[fieldName];
		}
		var defs = this.info.fieldDefinitions;
		var n = 0;
		var _g = 0;
		while(_g < defs.length) {
			var def = defs[_g];
			++_g;
			if(def.fieldName == fieldName) {
				this._cachedFieldIndex.h[fieldName] = n;
				return n;
			}
			++n;
		}
		return -1;
	}
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				if(params.transformId == null) {
					var tmp = "" + _gthis.db.name + "." + _gthis.name;
					core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
					core_data.getTableData(_gthis.db.name,_gthis.name,params.start,params.end).then(function(frag) {
						var tmp = "" + _gthis.db.name + "." + _gthis.name + " data retrieved (" + frag.count + " of " + frag.total;
						core_data_dao_Logger.get_instance().log(tmp + ")");
						var records = [];
						var _g = 0;
						var _g1 = frag.data;
						while(_g < _g1.length) {
							var rawRecord = _g1[_g];
							++_g;
							var record = new core_data_GenericData();
							record.table = _gthis;
							record.fromArray(rawRecord);
							records.push(record);
						}
						_gthis.records = records;
						resolve(records);
					});
				} else {
					var transformParams = [];
					if(params.transformParameters != null) {
						var h = params.transformParameters.h;
						var key_h = h;
						var key_keys = Object.keys(h);
						var key_length = key_keys.length;
						var key_current = 0;
						while(key_current < key_length) {
							var key = key_keys[key_current++];
							var paramsSet = [key,params.transformParameters.h[key]];
							transformParams.push(paramsSet);
						}
					}
					var tmp = "" + _gthis.db.name + "." + _gthis.name + " retrieving transformed table data (transformId: " + params.transformId + ", transformParams: " + Std.string(transformParams);
					core_data_dao_Logger.get_instance().log(tmp + ")");
					core_data.applyTableTransform(_gthis.db.name,_gthis.name,params.transformId,transformParams).then(function(frag) {
						var tmp = "" + _gthis.db.name + "." + _gthis.name + " transformed data retrieved (" + frag.data.length + " of " + frag.data.length;
						core_data_dao_Logger.get_instance().log(tmp + ")");
						var records = [];
						var _g = 0;
						var _g1 = frag.data;
						while(_g < _g1.length) {
							var rawRecord = _g1[_g];
							++_g;
							var record = new core_data_GenericData();
							record.table = _gthis;
							record.fromArray(rawRecord);
							records.push(record);
						}
						_gthis.info.fieldDefinitions = frag.fieldDefinitions;
						_gthis._cachedFieldIndex = new haxe_ds_StringMap();
						_gthis.records = records;
						resolve(records);
					});
				}
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_GenericData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				resolve(true);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				resolve(true);
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + _gthis.name + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + this.name + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,this.name,batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + _gthis.name;
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + _gthis.name;
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			core_data.hasTable(_gthis.db.name,_gthis.name).then(function(hasTable) {
				if(hasTable == false) {
					_gthis.create().then(function(createResult) {
						resolve(true);
					}).catch(function(e) {
						var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to create table during initialization (" + e;
						core_data_dao_Logger.get_instance().error(tmp + ")");
						reject(e);
					});
				} else {
					var tmp = "" + _gthis.db.name + "." + _gthis.name;
					core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
					core_data.getTableInfo(_gthis.db.name,_gthis.name).then(function(tableInfo) {
						resolve(true);
						_gthis.info = tableInfo;
					}).catch(function(e) {
						var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to retrieve table info (" + e;
						core_data_dao_Logger.get_instance().error(tmp + ")");
						reject(e);
					});
				}
				resolve(true);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to initialize (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,remove: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = "" + _gthis.db.name + "." + _gthis.name;
			core_data_dao_Logger.get_instance().log(tmp + " removing table");
			core_data.removeTable(_gthis.db.name,_gthis.name).then(function(r) {
				resolve(true);
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = "" + _gthis.db.name + "." + _gthis.name;
			core_data_dao_Logger.get_instance().log(tmp + " creating table");
			if(_gthis.db == null) {
				reject("no assocated database");
				return;
			}
			if(_gthis.info == null) {
				reject("no table info");
				return;
			}
			if(_gthis.info.tableName == null || _gthis.info.tableName.length == 0) {
				reject("no table name");
				return;
			}
			var fieldDefs = _gthis.info.fieldDefinitions;
			if(fieldDefs == null || fieldDefs.length == 0) {
				reject("no field definitions");
				return;
			}
			core_data.createTable(_gthis.db.name,_gthis.name,fieldDefs).then(function(createTableResult) {
				var tmp = "" + _gthis.db.name + "." + _gthis.name;
				core_data_dao_Logger.get_instance().log(tmp + " table created");
				_gthis.addDefaultData().then(function(r) {
					core_data.getTableInfo(_gthis.db.name,_gthis.name).then(function(tableInfo) {
						_gthis.info = tableInfo;
						resolve(true);
					}).catch(function(e) {
						var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to retrieve table info (" + e;
						core_data_dao_Logger.get_instance().error(tmp + ")");
						reject(e);
					});
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + _gthis.name + " failed to create table (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_GenericTable
	,__properties__: {get_recordCount:"get_recordCount"}
};
var core_data_IconData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.IconData"] = core_data_IconData;
core_data_IconData.__name__ = "core.data.IconData";
core_data_IconData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_IconData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_iconId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_path(core_data_utils_ConversionUtils.fromString(data[2],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_iconId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_path()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "iconId") {
			return this.get_iconId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "path") {
			return this.get_path();
		}
		return null;
	}
	,_iconId: null
	,get_iconId: function() {
		return this._iconId;
	}
	,set_iconId: function(value) {
		if(this._iconId == value) {
			return value;
		}
		this.dataChanged = true;
		this._iconId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_path: null
	,get_path: function() {
		return this._path;
	}
	,set_path: function(value) {
		if(this._path == value) {
			return value;
		}
		this.dataChanged = true;
		this._path = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_iconId();
	}
	,set_primaryKey: function(value) {
		return this.set_iconId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "iconId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_IconData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_path:"set_path",get_path:"get_path",set_name:"set_name",get_name:"get_name",set_iconId:"set_iconId",get_iconId:"get_iconId"}
};
var core_data_IconDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.IconDataTable"] = core_data_IconDataTable;
core_data_IconDataTable.__name__ = "core.data.IconDataTable";
core_data_IconDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_IconDataTable.prototype = {
	addDefaultData: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var icons = [_gthis.createObject([1,"database","database-solid.png"]),_gthis.createObject([2,"directions","directions-solid.png"]),_gthis.createObject([3,"dot","dot.png"]),_gthis.createObject([4,"exclamation","exclamation-solid.png"]),_gthis.createObject([5,"exclamation (triangle)","exclamation-triangle-solid.png"]),_gthis.createObject([6,"map marker","map-marker-alt-solid.png"]),_gthis.createObject([7,"search","search-solid.png"]),_gthis.createObject([8,"tachometer","tachometer-alt-solid.png"])];
			_gthis.addObjects(icons).then(function(r) {
				resolve(true);
			});
		});
	}
	,info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "icondata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"icondata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_IconData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_IconData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "icondata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "icondata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_IconData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"icondata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "icondata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"icondata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_IconData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "icondata" + " building links for " + "icondata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "icondata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "icondata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"icondata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "icondata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "icondata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"icondata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "icondata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_IconData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"icondata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "icondata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"icondata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "icondata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "icondata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "icondata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"icondata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,__class__: core_data_IconDataTable
};
var core_data_IconUtils = function() {
};
$hxClasses["core.data.IconUtils"] = core_data_IconUtils;
core_data_IconUtils.__name__ = "core.data.IconUtils";
core_data_IconUtils.prototype = {
	icon: function(iconId) {
		var icon = null;
		var _g = 0;
		var _g1 = core_data_InternalDB.icons.data;
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(i.get_iconId() == iconId) {
				icon = i;
				break;
			}
		}
		return icon;
	}
	,__class__: core_data_IconUtils
};
var core_data_dao_Database = function() {
	this._tables = new haxe_ds_StringMap();
	this.info = null;
	this.name = null;
};
$hxClasses["core.data.dao.Database"] = core_data_dao_Database;
core_data_dao_Database.__name__ = "core.data.dao.Database";
core_data_dao_Database.prototype = {
	name: null
	,info: null
	,_tables: null
	,listTables: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			core_data_dao_Logger.get_instance().log(_gthis.name + " - retrieving database tables");
			core_data.getDatabaseInfo(_gthis.name).then(function(databaseDef) {
				_gthis.info = databaseDef;
				_gthis._tables = new haxe_ds_StringMap();
				var tables = [];
				var _g = 0;
				var _g1 = _gthis.info.tables;
				while(_g < _g1.length) {
					var tableDef = _g1[_g];
					++_g;
					var table = new core_data_GenericTable();
					table.db = _gthis;
					table.name = tableDef.tableName;
					table.info = tableDef;
					_gthis._tables.h[table.name] = table;
					tables.push(table);
				}
				resolve(tables);
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			core_data.hasDatabase(_gthis.name).then(function(exists) {
				if(exists == true) {
					core_data_dao_Logger.get_instance().log(_gthis.name + " already exists, skipping");
					resolve(true);
				} else {
					core_data_dao_Logger.get_instance().log(_gthis.name + " - creating database");
					core_data.createDatabase(_gthis.name).then(function(result) {
						core_data.getDatabaseInfo(_gthis.name).then(function(info) {
							_gthis.info = info;
							resolve(true);
						});
					});
				}
			});
		});
	}
	,remove: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			core_data_dao_Logger.get_instance().log(_gthis.name + " - removing database");
			core_data.removeDatabase(_gthis.name).then(function(result) {
				resolve(true);
			});
		});
	}
	,tables: null
	,get_tables: function() {
		var t = [];
		var h = this._tables.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var table = this._tables.h[key];
			t.push(table);
		}
		return t;
	}
	,registerTable: function(tableName,table) {
		table.db = this;
		table.name = tableName;
		this._tables.h[tableName] = table;
	}
	,getTable: function(tableName) {
		return this._tables.h[tableName];
	}
	,__class__: core_data_dao_Database
	,__properties__: {get_tables:"get_tables"}
};
var core_data_InternalDB = function() {
	this.caches = new core_data_CachedInternalDB();
	core_data_dao_Database.call(this);
	this.name = "__optex_data";
	this.organizationData = new core_data_OrganizationDataTable();
	this.userData = new core_data_UserDataTable();
	this.userGroupData = new core_data_UserGroupDataTable();
	this.userOrganizationLinkData = new core_data_UserOrganizationLinkDataTable();
	this.dashboardData = new core_data_DashboardDataTable();
	this.dashboardGroupData = new core_data_DashboardGroupDataTable();
	this.iconData = new core_data_IconDataTable();
	this.roleData = new core_data_RoleDataTable();
	this.permissionData = new core_data_PermissionDataTable();
	this.userGroupLinkData = new core_data_UserUserGroupLinkDataTable();
	this.userGroupRoleLinkData = new core_data_UserGroupRoleLinkDataTable();
	this.siteData = new core_data_SiteDataTable();
	this.pageData = new core_data_PageDataTable();
	this.layoutData = new core_data_LayoutDataTable();
	this.portletInstanceData = new core_data_PortletInstanceDataTable();
	this.registerTable(core_data_OrganizationDataTable.TableName,this.organizationData);
	this.registerTable(core_data_UserDataTable.TableName,this.userData);
	this.registerTable(core_data_UserGroupDataTable.TableName,this.userGroupData);
	this.registerTable(core_data_UserOrganizationLinkDataTable.TableName,this.userOrganizationLinkData);
	this.registerTable(core_data_DashboardDataTable.TableName,this.dashboardData);
	this.registerTable(core_data_DashboardGroupDataTable.TableName,this.dashboardGroupData);
	this.registerTable(core_data_IconDataTable.TableName,this.iconData);
	this.registerTable(core_data_RoleDataTable.TableName,this.roleData);
	this.registerTable(core_data_PermissionDataTable.TableName,this.permissionData);
	this.registerTable(core_data_UserUserGroupLinkDataTable.TableName,this.userGroupLinkData);
	this.registerTable(core_data_UserGroupRoleLinkDataTable.TableName,this.userGroupRoleLinkData);
	this.registerTable(core_data_SiteDataTable.TableName,this.siteData);
	this.registerTable(core_data_PageDataTable.TableName,this.pageData);
	this.registerTable(core_data_LayoutDataTable.TableName,this.layoutData);
	this.registerTable(core_data_PortletInstanceDataTable.TableName,this.portletInstanceData);
	this.caches.organizations = new core_data_CachedDataTable(this.organizationData);
	this.caches.users = new core_data_CachedDataTable(this.userData,new core_data_UserUtils());
	this.caches.userGroups = new core_data_CachedDataTable(this.userGroupData,new core_data_UserGroupUtils());
	this.caches.userOrganizationLinks = new core_data_CachedDataTable(this.userOrganizationLinkData);
	this.caches.dashboards = new core_data_CachedDataTable(this.dashboardData,new core_data_DashboardUtils());
	this.caches.dashboardGroups = new core_data_CachedDataTable(this.dashboardGroupData);
	this.caches.icons = new core_data_CachedDataTable(this.iconData,new core_data_IconUtils());
	this.caches.roles = new core_data_CachedDataTable(this.roleData,new core_data_RoleUtils());
	this.caches.permissions = new core_data_CachedDataTable(this.permissionData);
	this.caches.userGroupLinks = new core_data_CachedDataTable(this.userGroupLinkData);
	this.caches.userGroupRoleLinks = new core_data_CachedDataTable(this.userGroupRoleLinkData);
	this.caches.sites = new core_data_CachedDataTable(this.siteData,new core_data_SiteUtils());
	this.caches.pages = new core_data_CachedDataTable(this.pageData,new core_data_PageUtils());
	this.caches.layouts = new core_data_CachedDataTable(this.layoutData,new core_data_LayoutUtils());
	this.caches.portletInstances = new core_data_CachedDataTable(this.portletInstanceData,new core_data_PortletInstanceUtils());
	core_data_InternalDB.organizations = this.caches.organizations;
	core_data_InternalDB.users = this.caches.users;
	core_data_InternalDB.userGroups = this.caches.userGroups;
	core_data_InternalDB.userOrganizationLinks = this.caches.userOrganizationLinks;
	core_data_InternalDB.dashboards = this.caches.dashboards;
	core_data_InternalDB.dashboardGroups = this.caches.dashboardGroups;
	core_data_InternalDB.icons = this.caches.icons;
	core_data_InternalDB.roles = this.caches.roles;
	core_data_InternalDB.permissions = this.caches.permissions;
	core_data_InternalDB.userGroupLinks = this.caches.userGroupLinks;
	core_data_InternalDB.userGroupRoleLinks = this.caches.userGroupRoleLinks;
	core_data_InternalDB.sites = this.caches.sites;
	core_data_InternalDB.pages = this.caches.pages;
	core_data_InternalDB.layouts = this.caches.layouts;
	core_data_InternalDB.portletInstances = this.caches.portletInstances;
};
$hxClasses["core.data.InternalDB"] = core_data_InternalDB;
core_data_InternalDB.__name__ = "core.data.InternalDB";
core_data_InternalDB.__properties__ = {get_instance:"get_instance"};
core_data_InternalDB.get_instance = function() {
	if(core_data_InternalDB._instance == null) {
		core_data_InternalDB._instance = new core_data_InternalDB();
	}
	return core_data_InternalDB._instance;
};
core_data_InternalDB.__super__ = core_data_dao_Database;
core_data_InternalDB.prototype = $extend(core_data_dao_Database.prototype,{
	organizationData: null
	,userData: null
	,userGroupData: null
	,userOrganizationLinkData: null
	,dashboardData: null
	,dashboardGroupData: null
	,iconData: null
	,roleData: null
	,permissionData: null
	,userGroupLinkData: null
	,userGroupRoleLinkData: null
	,siteData: null
	,pageData: null
	,layoutData: null
	,portletInstanceData: null
	,caches: null
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var promises = [_gthis.organizationData.init(),_gthis.userData.init(),_gthis.userGroupData.init(),_gthis.userOrganizationLinkData.init(),_gthis.dashboardData.init(),_gthis.dashboardGroupData.init(),_gthis.iconData.init(),_gthis.roleData.init(),_gthis.permissionData.init(),_gthis.userGroupLinkData.init(),_gthis.userGroupRoleLinkData.init(),_gthis.siteData.init(),_gthis.pageData.init(),_gthis.layoutData.init(),_gthis.portletInstanceData.init()];
			core_data_utils_PromiseUtils.runSequentially(promises,function() {
				resolve(true);
			});
		});
	}
	,start: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var promises = [_gthis.caches.organizations.fillCache(),_gthis.caches.users.fillCache(),_gthis.caches.userGroups.fillCache(),_gthis.caches.userOrganizationLinks.fillCache(),_gthis.caches.dashboards.fillCache(),_gthis.caches.dashboardGroups.fillCache(),_gthis.caches.icons.fillCache(),_gthis.caches.roles.fillCache(),_gthis.caches.permissions.fillCache(),_gthis.caches.userGroupLinks.fillCache(),_gthis.caches.userGroupRoleLinks.fillCache(),_gthis.caches.sites.fillCache(),_gthis.caches.pages.fillCache(),_gthis.caches.layouts.fillCache(),_gthis.caches.portletInstances.fillCache()];
			core_data_utils_PromiseUtils.runSequentially(promises,function() {
				resolve(true);
			});
		});
	}
	,__class__: core_data_InternalDB
});
var core_data_LayoutData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.LayoutData"] = core_data_LayoutData;
core_data_LayoutData.__name__ = "core.data.LayoutData";
core_data_LayoutData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_LayoutData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_layoutId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[2],1));
		this.set_layoutData(core_data_utils_ConversionUtils.fromString(data[3],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_layoutId()));
		data.push(Std.string(this.get_organizationId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_layoutData()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "layoutId") {
			return this.get_layoutId();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "layoutData") {
			return this.get_layoutData();
		}
		return null;
	}
	,_layoutId: null
	,get_layoutId: function() {
		return this._layoutId;
	}
	,set_layoutId: function(value) {
		if(this._layoutId == value) {
			return value;
		}
		this.dataChanged = true;
		this._layoutId = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_layoutData: null
	,get_layoutData: function() {
		return this._layoutData;
	}
	,set_layoutData: function(value) {
		if(this._layoutData == value) {
			return value;
		}
		this.dataChanged = true;
		this._layoutData = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_layoutId();
	}
	,set_primaryKey: function(value) {
		return this.set_layoutId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "layoutId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_LayoutData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_layoutData:"set_layoutData",get_layoutData:"get_layoutData",set_name:"set_name",get_name:"get_name",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_layoutId:"set_layoutId",get_layoutId:"get_layoutId"}
};
var core_data_LayoutDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.LayoutDataTable"] = core_data_LayoutDataTable;
core_data_LayoutDataTable.__name__ = "core.data.LayoutDataTable";
core_data_LayoutDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_LayoutDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"layoutdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_LayoutData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_LayoutData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "layoutdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "layoutdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_LayoutData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"layoutdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "layoutdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"layoutdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_LayoutData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "layoutdata" + " building links for " + "layoutdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "layoutdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"layoutdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "layoutdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "layoutdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"layoutdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "layoutdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_LayoutData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"layoutdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "layoutdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"layoutdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "layoutdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "layoutdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "layoutdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"layoutdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_LayoutDataTable
};
var core_data_LayoutUtils = function() {
};
$hxClasses["core.data.LayoutUtils"] = core_data_LayoutUtils;
core_data_LayoutUtils.__name__ = "core.data.LayoutUtils";
core_data_LayoutUtils.prototype = {
	__class__: core_data_LayoutUtils
};
var core_data_NullUtils = function() {
};
$hxClasses["core.data.NullUtils"] = core_data_NullUtils;
core_data_NullUtils.__name__ = "core.data.NullUtils";
core_data_NullUtils.prototype = {
	__class__: core_data_NullUtils
};
var core_data_OrganizationData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.OrganizationData"] = core_data_OrganizationData;
core_data_OrganizationData.__name__ = "core.data.OrganizationData";
core_data_OrganizationData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_OrganizationData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_organizationId()));
		data.push(Std.string(this.get_name()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		return null;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_organizationId();
	}
	,set_primaryKey: function(value) {
		return this.set_organizationId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "organizationId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_OrganizationData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_name:"set_name",get_name:"get_name",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId"}
};
var core_data_OrganizationDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.OrganizationDataTable"] = core_data_OrganizationDataTable;
core_data_OrganizationDataTable.__name__ = "core.data.OrganizationDataTable";
core_data_OrganizationDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_OrganizationDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"organizationdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_OrganizationData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_OrganizationData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "organizationdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "organizationdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_OrganizationData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"organizationdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "organizationdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"organizationdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_OrganizationData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "organizationdata" + " building links for " + "organizationdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "organizationdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"organizationdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "organizationdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "organizationdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"organizationdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "organizationdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_OrganizationData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"organizationdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "organizationdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"organizationdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "organizationdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "organizationdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "organizationdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"organizationdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_OrganizationDataTable
};
var core_data_PageData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.PageData"] = core_data_PageData;
core_data_PageData.__name__ = "core.data.PageData";
core_data_PageData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_PageData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_pageId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_parentPageId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.set_siteId(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.set_layoutId(core_data_utils_ConversionUtils.fromString(data[3],2));
		this.set_iconId(core_data_utils_ConversionUtils.fromString(data[4],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[5],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_pageId()));
		data.push(Std.string(this.get_parentPageId()));
		data.push(Std.string(this.get_siteId()));
		data.push(Std.string(this.get_layoutId()));
		data.push(Std.string(this.get_iconId()));
		data.push(Std.string(this.get_name()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "pageId") {
			return this.get_pageId();
		}
		if(fieldId == "parentPageId") {
			return this.get_parentPageId();
		}
		if(fieldId == "siteId") {
			return this.get_siteId();
		}
		if(fieldId == "layoutId") {
			return this.get_layoutId();
		}
		if(fieldId == "iconId") {
			return this.get_iconId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		return null;
	}
	,_pageId: null
	,get_pageId: function() {
		return this._pageId;
	}
	,set_pageId: function(value) {
		if(this._pageId == value) {
			return value;
		}
		this.dataChanged = true;
		this._pageId = value;
		return value;
	}
	,_parentPageId: null
	,get_parentPageId: function() {
		return this._parentPageId;
	}
	,set_parentPageId: function(value) {
		if(this._parentPageId == value) {
			return value;
		}
		this.dataChanged = true;
		this._parentPageId = value;
		return value;
	}
	,_siteId: null
	,get_siteId: function() {
		return this._siteId;
	}
	,set_siteId: function(value) {
		if(this._siteId == value) {
			return value;
		}
		this.dataChanged = true;
		this._siteId = value;
		return value;
	}
	,_layoutId: null
	,get_layoutId: function() {
		return this._layoutId;
	}
	,set_layoutId: function(value) {
		if(this._layoutId == value) {
			return value;
		}
		this.dataChanged = true;
		this._layoutId = value;
		return value;
	}
	,_iconId: null
	,get_iconId: function() {
		return this._iconId;
	}
	,set_iconId: function(value) {
		if(this._iconId == value) {
			return value;
		}
		this.dataChanged = true;
		this._iconId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_pageId();
	}
	,set_primaryKey: function(value) {
		return this.set_pageId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "pageId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_PageData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_name:"set_name",get_name:"get_name",set_iconId:"set_iconId",get_iconId:"get_iconId",set_layoutId:"set_layoutId",get_layoutId:"get_layoutId",set_siteId:"set_siteId",get_siteId:"get_siteId",set_parentPageId:"set_parentPageId",get_parentPageId:"get_parentPageId",set_pageId:"set_pageId",get_pageId:"get_pageId"}
};
var core_data_PageDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.PageDataTable"] = core_data_PageDataTable;
core_data_PageDataTable.__name__ = "core.data.PageDataTable";
core_data_PageDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_PageDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "pagedata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"pagedata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_PageData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_PageData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "pagedata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "pagedata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_PageData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"pagedata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "pagedata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"pagedata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_PageData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "pagedata" + " building links for " + "pagedata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "pagedata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "pagedata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"pagedata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "pagedata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "pagedata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"pagedata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "pagedata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_PageData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"pagedata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "pagedata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"pagedata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "pagedata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "pagedata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "pagedata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"pagedata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_PageDataTable
};
var core_data_PageUtils = function() {
};
$hxClasses["core.data.PageUtils"] = core_data_PageUtils;
core_data_PageUtils.__name__ = "core.data.PageUtils";
core_data_PageUtils.prototype = {
	__class__: core_data_PageUtils
};
var core_data_PermissionData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.PermissionData"] = core_data_PermissionData;
core_data_PermissionData.__name__ = "core.data.PermissionData";
core_data_PermissionData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_PermissionData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_permissionId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_roleId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.set_resourceId(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.set_resourceType(core_data_utils_ConversionUtils.fromString(data[3],2));
		this.set_permissionAction(core_data_utils_ConversionUtils.fromString(data[4],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_permissionId()));
		data.push(Std.string(this.get_roleId()));
		data.push(Std.string(this.get_resourceId()));
		data.push(Std.string(this.get_resourceType()));
		data.push(Std.string(this.get_permissionAction()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "permissionId") {
			return this.get_permissionId();
		}
		if(fieldId == "roleId") {
			return this.get_roleId();
		}
		if(fieldId == "resourceId") {
			return this.get_resourceId();
		}
		if(fieldId == "resourceType") {
			return this.get_resourceType();
		}
		if(fieldId == "permissionAction") {
			return this.get_permissionAction();
		}
		return null;
	}
	,_permissionId: null
	,get_permissionId: function() {
		return this._permissionId;
	}
	,set_permissionId: function(value) {
		if(this._permissionId == value) {
			return value;
		}
		this.dataChanged = true;
		this._permissionId = value;
		return value;
	}
	,_roleId: null
	,get_roleId: function() {
		return this._roleId;
	}
	,set_roleId: function(value) {
		if(this._roleId == value) {
			return value;
		}
		this.dataChanged = true;
		this._roleId = value;
		return value;
	}
	,_resourceId: null
	,get_resourceId: function() {
		return this._resourceId;
	}
	,set_resourceId: function(value) {
		if(this._resourceId == value) {
			return value;
		}
		this.dataChanged = true;
		this._resourceId = value;
		return value;
	}
	,_resourceType: null
	,get_resourceType: function() {
		return this._resourceType;
	}
	,set_resourceType: function(value) {
		if(this._resourceType == value) {
			return value;
		}
		this.dataChanged = true;
		this._resourceType = value;
		return value;
	}
	,_permissionAction: null
	,get_permissionAction: function() {
		return this._permissionAction;
	}
	,set_permissionAction: function(value) {
		if(this._permissionAction == value) {
			return value;
		}
		this.dataChanged = true;
		this._permissionAction = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_permissionId();
	}
	,set_primaryKey: function(value) {
		return this.set_permissionId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "permissionId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_PermissionData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_permissionAction:"set_permissionAction",get_permissionAction:"get_permissionAction",set_resourceType:"set_resourceType",get_resourceType:"get_resourceType",set_resourceId:"set_resourceId",get_resourceId:"get_resourceId",set_roleId:"set_roleId",get_roleId:"get_roleId",set_permissionId:"set_permissionId",get_permissionId:"get_permissionId"}
};
var core_data_PermissionDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.PermissionDataTable"] = core_data_PermissionDataTable;
core_data_PermissionDataTable.__name__ = "core.data.PermissionDataTable";
core_data_PermissionDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_PermissionDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"permissiondata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_PermissionData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_PermissionData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "permissiondata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "permissiondata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_PermissionData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"permissiondata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "permissiondata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"permissiondata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_PermissionData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "permissiondata" + " building links for " + "permissiondata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "permissiondata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"permissiondata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "permissiondata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "permissiondata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"permissiondata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "permissiondata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_PermissionData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"permissiondata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "permissiondata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"permissiondata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "permissiondata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "permissiondata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "permissiondata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"permissiondata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_PermissionDataTable
};
var core_data_PortletInstanceData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.PortletInstanceData"] = core_data_PortletInstanceData;
core_data_PortletInstanceData.__name__ = "core.data.PortletInstanceData";
core_data_PortletInstanceData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_PortletInstanceData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_portletInstanceId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_pageId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.set_portletData(core_data_utils_ConversionUtils.fromString(data[2],1));
		this.set_layoutData(core_data_utils_ConversionUtils.fromString(data[3],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_portletInstanceId()));
		data.push(Std.string(this.get_pageId()));
		data.push(Std.string(this.get_portletData()));
		data.push(Std.string(this.get_layoutData()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "portletInstanceId") {
			return this.get_portletInstanceId();
		}
		if(fieldId == "pageId") {
			return this.get_pageId();
		}
		if(fieldId == "portletData") {
			return this.get_portletData();
		}
		if(fieldId == "layoutData") {
			return this.get_layoutData();
		}
		return null;
	}
	,_portletInstanceId: null
	,get_portletInstanceId: function() {
		return this._portletInstanceId;
	}
	,set_portletInstanceId: function(value) {
		if(this._portletInstanceId == value) {
			return value;
		}
		this.dataChanged = true;
		this._portletInstanceId = value;
		return value;
	}
	,_pageId: null
	,get_pageId: function() {
		return this._pageId;
	}
	,set_pageId: function(value) {
		if(this._pageId == value) {
			return value;
		}
		this.dataChanged = true;
		this._pageId = value;
		return value;
	}
	,_portletData: null
	,get_portletData: function() {
		return this._portletData;
	}
	,set_portletData: function(value) {
		if(this._portletData == value) {
			return value;
		}
		this.dataChanged = true;
		this._portletData = value;
		return value;
	}
	,_layoutData: null
	,get_layoutData: function() {
		return this._layoutData;
	}
	,set_layoutData: function(value) {
		if(this._layoutData == value) {
			return value;
		}
		this.dataChanged = true;
		this._layoutData = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_portletInstanceId();
	}
	,set_primaryKey: function(value) {
		return this.set_portletInstanceId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "portletInstanceId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_PortletInstanceData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_layoutData:"set_layoutData",get_layoutData:"get_layoutData",set_portletData:"set_portletData",get_portletData:"get_portletData",set_pageId:"set_pageId",get_pageId:"get_pageId",set_portletInstanceId:"set_portletInstanceId",get_portletInstanceId:"get_portletInstanceId"}
};
var core_data_PortletInstanceDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.PortletInstanceDataTable"] = core_data_PortletInstanceDataTable;
core_data_PortletInstanceDataTable.__name__ = "core.data.PortletInstanceDataTable";
core_data_PortletInstanceDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_PortletInstanceDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"portletinstancedata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_PortletInstanceData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_PortletInstanceData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "portletinstancedata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_PortletInstanceData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"portletinstancedata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "portletinstancedata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"portletinstancedata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_PortletInstanceData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "portletinstancedata" + " building links for " + "portletinstancedata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "portletinstancedata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"portletinstancedata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "portletinstancedata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "portletinstancedata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"portletinstancedata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "portletinstancedata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_PortletInstanceData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"portletinstancedata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "portletinstancedata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"portletinstancedata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "portletinstancedata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "portletinstancedata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"portletinstancedata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_PortletInstanceDataTable
};
var core_data_PortletInstanceUtils = function() {
};
$hxClasses["core.data.PortletInstanceUtils"] = core_data_PortletInstanceUtils;
core_data_PortletInstanceUtils.__name__ = "core.data.PortletInstanceUtils";
core_data_PortletInstanceUtils.prototype = {
	__class__: core_data_PortletInstanceUtils
};
var core_data_ResourceType = function() { };
$hxClasses["core.data.ResourceType"] = core_data_ResourceType;
core_data_ResourceType.__name__ = "core.data.ResourceType";
core_data_ResourceType.toString = function(actionType) {
	switch(actionType) {
	case 1:
		return "Organization";
	case 2:
		return "User";
	case 3:
		return "User Group";
	case 4:
		return "Role";
	case 5:
		return "Site";
	case 6:
		return "Dashboard";
	case 7:
		return "Dashboard Group";
	case 8:
		return "Data Source";
	default:
		return "Unknown";
	}
};
var core_data_RoleData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.RoleData"] = core_data_RoleData;
core_data_RoleData.__name__ = "core.data.RoleData";
core_data_RoleData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_RoleData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_roleId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_roleId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_organizationId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "roleId") {
			return this.get_roleId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		return null;
	}
	,_roleId: null
	,get_roleId: function() {
		return this._roleId;
	}
	,set_roleId: function(value) {
		if(this._roleId == value) {
			return value;
		}
		this.dataChanged = true;
		this._roleId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_roleId();
	}
	,set_primaryKey: function(value) {
		return this.set_roleId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "roleId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_RoleData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_name:"set_name",get_name:"get_name",set_roleId:"set_roleId",get_roleId:"get_roleId"}
};
var core_data_RoleDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.RoleDataTable"] = core_data_RoleDataTable;
core_data_RoleDataTable.__name__ = "core.data.RoleDataTable";
core_data_RoleDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_RoleDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "roledata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"roledata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_RoleData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_RoleData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "roledata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "roledata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_RoleData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"roledata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "roledata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"roledata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_RoleData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "roledata" + " building links for " + "roledata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "roledata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "roledata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"roledata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "roledata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "roledata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"roledata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "roledata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_RoleData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"roledata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "roledata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"roledata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "roledata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "roledata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "roledata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"roledata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_RoleDataTable
};
var core_data_RoleUtils = function() {
};
$hxClasses["core.data.RoleUtils"] = core_data_RoleUtils;
core_data_RoleUtils.__name__ = "core.data.RoleUtils";
core_data_RoleUtils.prototype = {
	role: function(roleId) {
		var role = null;
		var _g = 0;
		var _g1 = core_data_InternalDB.roles.data;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.get_roleId() == roleId) {
				role = r;
				break;
			}
		}
		return role;
	}
	,permissions: function(roleId) {
		var list = [];
		var _g = 0;
		var _g1 = core_data_InternalDB.permissions.data;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(p.get_roleId() == roleId) {
				list.push(p);
			}
		}
		return list;
	}
	,__class__: core_data_RoleUtils
};
var core_data_SiteData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.SiteData"] = core_data_SiteData;
core_data_SiteData.__name__ = "core.data.SiteData";
core_data_SiteData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_SiteData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_siteId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[2],1));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_siteId()));
		data.push(Std.string(this.get_organizationId()));
		data.push(Std.string(this.get_name()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "siteId") {
			return this.get_siteId();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		return null;
	}
	,_siteId: null
	,get_siteId: function() {
		return this._siteId;
	}
	,set_siteId: function(value) {
		if(this._siteId == value) {
			return value;
		}
		this.dataChanged = true;
		this._siteId = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_siteId();
	}
	,set_primaryKey: function(value) {
		return this.set_siteId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "siteId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_SiteData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_name:"set_name",get_name:"get_name",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_siteId:"set_siteId",get_siteId:"get_siteId"}
};
var core_data_SiteDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.SiteDataTable"] = core_data_SiteDataTable;
core_data_SiteDataTable.__name__ = "core.data.SiteDataTable";
core_data_SiteDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_SiteDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "sitedata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"sitedata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_SiteData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_SiteData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "sitedata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "sitedata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_SiteData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"sitedata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "sitedata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"sitedata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_SiteData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "sitedata" + " building links for " + "sitedata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "sitedata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "sitedata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"sitedata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "sitedata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "sitedata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"sitedata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "sitedata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_SiteData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"sitedata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "sitedata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"sitedata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "sitedata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "sitedata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "sitedata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"sitedata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_SiteDataTable
};
var core_data_SiteUtils = function() {
};
$hxClasses["core.data.SiteUtils"] = core_data_SiteUtils;
core_data_SiteUtils.__name__ = "core.data.SiteUtils";
core_data_SiteUtils.prototype = {
	__class__: core_data_SiteUtils
};
var core_data_UserData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.UserData"] = core_data_UserData;
core_data_UserData.__name__ = "core.data.UserData";
core_data_UserData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_UserData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_userId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_username(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_password(core_data_utils_ConversionUtils.fromString(data[2],1));
		this.set_firstName(core_data_utils_ConversionUtils.fromString(data[3],1));
		this.set_lastName(core_data_utils_ConversionUtils.fromString(data[4],1));
		this.set_emailAddress(core_data_utils_ConversionUtils.fromString(data[5],1));
		this.set_isAdmin(core_data_utils_ConversionUtils.fromString(data[6],3));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_userId()));
		data.push(Std.string(this.get_username()));
		data.push(Std.string(this.get_password()));
		data.push(Std.string(this.get_firstName()));
		data.push(Std.string(this.get_lastName()));
		data.push(Std.string(this.get_emailAddress()));
		data.push(Std.string(this.get_isAdmin()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "userId") {
			return this.get_userId();
		}
		if(fieldId == "username") {
			return this.get_username();
		}
		if(fieldId == "password") {
			return this.get_password();
		}
		if(fieldId == "firstName") {
			return this.get_firstName();
		}
		if(fieldId == "lastName") {
			return this.get_lastName();
		}
		if(fieldId == "emailAddress") {
			return this.get_emailAddress();
		}
		if(fieldId == "isAdmin") {
			return this.get_isAdmin();
		}
		return null;
	}
	,_userId: null
	,get_userId: function() {
		return this._userId;
	}
	,set_userId: function(value) {
		if(this._userId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userId = value;
		return value;
	}
	,_username: null
	,get_username: function() {
		return this._username;
	}
	,set_username: function(value) {
		if(this._username == value) {
			return value;
		}
		this.dataChanged = true;
		this._username = value;
		return value;
	}
	,_password: null
	,get_password: function() {
		return this._password;
	}
	,set_password: function(value) {
		if(this._password == value) {
			return value;
		}
		this.dataChanged = true;
		this._password = value;
		return value;
	}
	,_firstName: null
	,get_firstName: function() {
		return this._firstName;
	}
	,set_firstName: function(value) {
		if(this._firstName == value) {
			return value;
		}
		this.dataChanged = true;
		this._firstName = value;
		return value;
	}
	,_lastName: null
	,get_lastName: function() {
		return this._lastName;
	}
	,set_lastName: function(value) {
		if(this._lastName == value) {
			return value;
		}
		this.dataChanged = true;
		this._lastName = value;
		return value;
	}
	,_emailAddress: null
	,get_emailAddress: function() {
		return this._emailAddress;
	}
	,set_emailAddress: function(value) {
		if(this._emailAddress == value) {
			return value;
		}
		this.dataChanged = true;
		this._emailAddress = value;
		return value;
	}
	,_isAdmin: null
	,get_isAdmin: function() {
		return this._isAdmin;
	}
	,set_isAdmin: function(value) {
		if(this._isAdmin == value) {
			return value;
		}
		this.dataChanged = true;
		this._isAdmin = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_userId();
	}
	,set_primaryKey: function(value) {
		return this.set_userId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "userId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_UserData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_isAdmin:"set_isAdmin",get_isAdmin:"get_isAdmin",set_emailAddress:"set_emailAddress",get_emailAddress:"get_emailAddress",set_lastName:"set_lastName",get_lastName:"get_lastName",set_firstName:"set_firstName",get_firstName:"get_firstName",set_password:"set_password",get_password:"get_password",set_username:"set_username",get_username:"get_username",set_userId:"set_userId",get_userId:"get_userId"}
};
var core_data_UserDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.UserDataTable"] = core_data_UserDataTable;
core_data_UserDataTable.__name__ = "core.data.UserDataTable";
core_data_UserDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_UserDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"userdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_UserData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_UserData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "userdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_UserData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"userdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"userdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_UserData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "userdata" + " building links for " + "userdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "userdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "userdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"userdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "userdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "userdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"userdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_UserData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"userdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "userdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"userdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "userdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "userdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"userdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_UserDataTable
};
var core_data_UserGroupData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.UserGroupData"] = core_data_UserGroupData;
core_data_UserGroupData.__name__ = "core.data.UserGroupData";
core_data_UserGroupData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_UserGroupData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_userGroupId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_name(core_data_utils_ConversionUtils.fromString(data[1],1));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[2],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_userGroupId()));
		data.push(Std.string(this.get_name()));
		data.push(Std.string(this.get_organizationId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "userGroupId") {
			return this.get_userGroupId();
		}
		if(fieldId == "name") {
			return this.get_name();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		return null;
	}
	,_userGroupId: null
	,get_userGroupId: function() {
		return this._userGroupId;
	}
	,set_userGroupId: function(value) {
		if(this._userGroupId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userGroupId = value;
		return value;
	}
	,_name: null
	,get_name: function() {
		return this._name;
	}
	,set_name: function(value) {
		if(this._name == value) {
			return value;
		}
		this.dataChanged = true;
		this._name = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_userGroupId();
	}
	,set_primaryKey: function(value) {
		return this.set_userGroupId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "userGroupId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_UserGroupData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_name:"set_name",get_name:"get_name",set_userGroupId:"set_userGroupId",get_userGroupId:"get_userGroupId"}
};
var core_data_UserGroupDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.UserGroupDataTable"] = core_data_UserGroupDataTable;
core_data_UserGroupDataTable.__name__ = "core.data.UserGroupDataTable";
core_data_UserGroupDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_UserGroupDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"usergroupdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_UserGroupData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_UserGroupData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "usergroupdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_UserGroupData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"usergroupdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "usergroupdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"usergroupdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_UserGroupData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "usergroupdata" + " building links for " + "usergroupdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "usergroupdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"usergroupdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "usergroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "usergroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"usergroupdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "usergroupdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_UserGroupData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"usergroupdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "usergroupdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"usergroupdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "usergroupdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "usergroupdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"usergroupdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_UserGroupDataTable
};
var core_data_UserGroupRoleLinkData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.UserGroupRoleLinkData"] = core_data_UserGroupRoleLinkData;
core_data_UserGroupRoleLinkData.__name__ = "core.data.UserGroupRoleLinkData";
core_data_UserGroupRoleLinkData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_UserGroupRoleLinkData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_userGroupId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_roleId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_userGroupId()));
		data.push(Std.string(this.get_roleId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "userGroupId") {
			return this.get_userGroupId();
		}
		if(fieldId == "roleId") {
			return this.get_roleId();
		}
		return null;
	}
	,_userGroupId: null
	,get_userGroupId: function() {
		return this._userGroupId;
	}
	,set_userGroupId: function(value) {
		if(this._userGroupId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userGroupId = value;
		return value;
	}
	,_roleId: null
	,get_roleId: function() {
		return this._roleId;
	}
	,set_roleId: function(value) {
		if(this._roleId == value) {
			return value;
		}
		this.dataChanged = true;
		this._roleId = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_userGroupId();
	}
	,set_primaryKey: function(value) {
		return this.set_userGroupId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "userGroupId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_UserGroupRoleLinkData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_roleId:"set_roleId",get_roleId:"get_roleId",set_userGroupId:"set_userGroupId",get_userGroupId:"get_userGroupId"}
};
var core_data_UserGroupRoleLinkDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.UserGroupRoleLinkDataTable"] = core_data_UserGroupRoleLinkDataTable;
core_data_UserGroupRoleLinkDataTable.__name__ = "core.data.UserGroupRoleLinkDataTable";
core_data_UserGroupRoleLinkDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_UserGroupRoleLinkDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"usergrouprolelinkdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_UserGroupRoleLinkData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_UserGroupRoleLinkData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "usergrouprolelinkdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_UserGroupRoleLinkData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"usergrouprolelinkdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "usergrouprolelinkdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"usergrouprolelinkdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_UserGroupRoleLinkData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "usergrouprolelinkdata" + " building links for " + "usergrouprolelinkdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "usergrouprolelinkdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"usergrouprolelinkdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "usergrouprolelinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"usergrouprolelinkdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_UserGroupRoleLinkData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"usergrouprolelinkdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"usergrouprolelinkdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "usergrouprolelinkdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "usergrouprolelinkdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"usergrouprolelinkdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_UserGroupRoleLinkDataTable
};
var core_data_UserGroupUtils = function() {
};
$hxClasses["core.data.UserGroupUtils"] = core_data_UserGroupUtils;
core_data_UserGroupUtils.__name__ = "core.data.UserGroupUtils";
core_data_UserGroupUtils.prototype = {
	group: function(userGroupId) {
		var group = null;
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroups.data;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			if(g.get_userGroupId() == userGroupId) {
				group = g;
				break;
			}
		}
		return group;
	}
	,users: function(userGroupId) {
		var users = [];
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroupLinks.data;
		while(_g < _g1.length) {
			var userGroupLink = _g1[_g];
			++_g;
			if(userGroupLink.get_userGroupId() == userGroupId) {
				var user = core_data_InternalDB.users.utils.user(userGroupLink.get_userId());
				if(user != null) {
					users.push(user);
				}
			}
		}
		return users;
	}
	,roles: function(userGroupId) {
		var roles = [];
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroupRoleLinks.data;
		while(_g < _g1.length) {
			var userGroupRoleLink = _g1[_g];
			++_g;
			if(userGroupRoleLink.get_userGroupId() == userGroupId) {
				var role = core_data_InternalDB.roles.utils.role(userGroupRoleLink.get_roleId());
				if(role != null) {
					roles.push(role);
				}
			}
		}
		return roles;
	}
	,__class__: core_data_UserGroupUtils
};
var core_data_UserOrganizationLinkData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.UserOrganizationLinkData"] = core_data_UserOrganizationLinkData;
core_data_UserOrganizationLinkData.__name__ = "core.data.UserOrganizationLinkData";
core_data_UserOrganizationLinkData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_UserOrganizationLinkData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_userId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_organizationId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_userId()));
		data.push(Std.string(this.get_organizationId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "userId") {
			return this.get_userId();
		}
		if(fieldId == "organizationId") {
			return this.get_organizationId();
		}
		return null;
	}
	,_userId: null
	,get_userId: function() {
		return this._userId;
	}
	,set_userId: function(value) {
		if(this._userId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userId = value;
		return value;
	}
	,_organizationId: null
	,get_organizationId: function() {
		return this._organizationId;
	}
	,set_organizationId: function(value) {
		if(this._organizationId == value) {
			return value;
		}
		this.dataChanged = true;
		this._organizationId = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_userId();
	}
	,set_primaryKey: function(value) {
		return this.set_userId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "userId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_UserOrganizationLinkData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_organizationId:"set_organizationId",get_organizationId:"get_organizationId",set_userId:"set_userId",get_userId:"get_userId"}
};
var core_data_UserOrganizationLinkDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.UserOrganizationLinkDataTable"] = core_data_UserOrganizationLinkDataTable;
core_data_UserOrganizationLinkDataTable.__name__ = "core.data.UserOrganizationLinkDataTable";
core_data_UserOrganizationLinkDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_UserOrganizationLinkDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"userorganizationlinkdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_UserOrganizationLinkData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_UserOrganizationLinkData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userorganizationlinkdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_UserOrganizationLinkData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"userorganizationlinkdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userorganizationlinkdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"userorganizationlinkdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_UserOrganizationLinkData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "userorganizationlinkdata" + " building links for " + "userorganizationlinkdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "userorganizationlinkdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"userorganizationlinkdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "userorganizationlinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"userorganizationlinkdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_UserOrganizationLinkData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"userorganizationlinkdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"userorganizationlinkdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "userorganizationlinkdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "userorganizationlinkdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"userorganizationlinkdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_UserOrganizationLinkDataTable
};
var core_data_UserUserGroupLinkData = function() {
	this.dataChanged = false;
	this.links = new haxe_ds_StringMap();
};
$hxClasses["core.data.UserUserGroupLinkData"] = core_data_UserUserGroupLinkData;
core_data_UserUserGroupLinkData.__name__ = "core.data.UserUserGroupLinkData";
core_data_UserUserGroupLinkData.__interfaces__ = [core_data_dao_IBuiltDataObject];
core_data_UserUserGroupLinkData.prototype = {
	table: null
	,links: null
	,dataChanged: null
	,fromArray: function(data) {
		this.set_userId(core_data_utils_ConversionUtils.fromString(data[0],2));
		this.set_userGroupId(core_data_utils_ConversionUtils.fromString(data[1],2));
		this.dataChanged = false;
	}
	,toArray: function() {
		var data = [];
		data.push(Std.string(this.get_userId()));
		data.push(Std.string(this.get_userGroupId()));
		return data;
	}
	,setLinkObject: function(fieldId,object) {
	}
	,getFieldValue: function(fieldId) {
		if(fieldId == "userId") {
			return this.get_userId();
		}
		if(fieldId == "userGroupId") {
			return this.get_userGroupId();
		}
		return null;
	}
	,_userId: null
	,get_userId: function() {
		return this._userId;
	}
	,set_userId: function(value) {
		if(this._userId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userId = value;
		return value;
	}
	,_userGroupId: null
	,get_userGroupId: function() {
		return this._userGroupId;
	}
	,set_userGroupId: function(value) {
		if(this._userGroupId == value) {
			return value;
		}
		this.dataChanged = true;
		this._userGroupId = value;
		return value;
	}
	,get_primaryKey: function() {
		return this.get_userId();
	}
	,set_primaryKey: function(value) {
		return this.set_userId(value);
	}
	,primaryKeyName: null
	,get_primaryKeyName: function() {
		return "userId";
	}
	,add: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.add());
				}
			}
			list.push(_gthis.table.addObject(_gthis));
			core_data_utils_PromiseUtils.runSequentially(list,function() {
				_gthis.dataChanged = false;
				resolve(true);
			},function(e) {
				reject(e);
			});
		});
	}
	,'delete': function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,update: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var list = [];
			if(_gthis.dataChanged == true) {
				list.push(_gthis.table.updateObject(_gthis));
			}
			var h = _gthis.links.h;
			var k_h = h;
			var k_keys = Object.keys(h);
			var k_length = k_keys.length;
			var k_current = 0;
			while(k_current < k_length) {
				var k = k_keys[k_current++];
				var link = _gthis.links.h[k];
				if(link != null) {
					list.push(link.update());
				}
			}
			if(list.length != 0) {
				core_data_utils_PromiseUtils.runSequentially(list,function() {
					_gthis.dataChanged = false;
					resolve(true);
				},function(e) {
					reject(e);
				});
			} else {
				resolve(true);
			}
		});
	}
	,__class__: core_data_UserUserGroupLinkData
	,__properties__: {get_primaryKeyName:"get_primaryKeyName",set_primaryKey:"set_primaryKey",get_primaryKey:"get_primaryKey",set_userGroupId:"set_userGroupId",get_userGroupId:"get_userGroupId",set_userId:"set_userId",get_userId:"get_userId"}
};
var core_data_UserUserGroupLinkDataTable = function() {
	this.batchSize = 5000;
};
$hxClasses["core.data.UserUserGroupLinkDataTable"] = core_data_UserUserGroupLinkDataTable;
core_data_UserUserGroupLinkDataTable.__name__ = "core.data.UserUserGroupLinkDataTable";
core_data_UserUserGroupLinkDataTable.__interfaces__ = [core_data_dao_IDataTable];
core_data_UserUserGroupLinkDataTable.prototype = {
	info: null
	,db: null
	,name: null
	,fetch: function(params) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(params == null) {
				params = { };
			}
			if(params.start == null) {
				params.start = 0;
			}
			if(params.end == null) {
				params.end = 16777215;
			}
			_gthis.init().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " retrieving table data");
				core_data.getTableData(_gthis.db.name,"userusergrouplinkdata",params.start,params.end).then(function(frag) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " data retrieved (" + frag.count + " of " + frag.total;
					core_data_dao_Logger.get_instance().log(tmp + ")");
					var records = [];
					var linkInfoMap_h = Object.create(null);
					var hasLinks = false;
					var _g = 0;
					var _g1 = frag.data;
					while(_g < _g1.length) {
						var rawRecord = _g1[_g];
						++_g;
						var record = new core_data_UserUserGroupLinkData();
						record.table = _gthis;
						record.fromArray(rawRecord);
						records.push(record);
						var _g2 = 0;
						var _g3 = core_data_UserUserGroupLinkData.LinkedFields;
						while(_g2 < _g3.length) {
							var linkField = _g3[_g2];
							++_g2;
							hasLinks = true;
							var list = linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName];
							if(list == null) {
								list = [];
								linkInfoMap_h[linkField.tableName + "$" + linkField.fieldName] = list;
							}
							var value = Std.string(record.getFieldValue(linkField.fieldName));
							if(list.indexOf(value) == -1) {
								list.push(value);
							}
						}
					}
					if(hasLinks == true) {
						var linkPromises = [];
						var h = linkInfoMap_h;
						var linkKey_h = h;
						var linkKey_keys = Object.keys(h);
						var linkKey_length = linkKey_keys.length;
						var linkKey_current = 0;
						while(linkKey_current < linkKey_length) {
							var linkKey = linkKey_keys[linkKey_current++];
							var parts = linkKey.split("$");
							var tableName = parts[0];
							var fieldName = parts[1];
							var fieldValues = linkInfoMap_h[linkKey];
							var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " looking up links based on " + fieldName + ": ";
							var tmp1 = Std.string(fieldValues);
							core_data_dao_Logger.get_instance().log(tmp + tmp1);
							linkPromises.push(_gthis.buildLinks(tableName,fieldName,records));
						}
						Promise.all(linkPromises).then(function(_) {
							resolve(records);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve data (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						resolve(records);
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve data (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve data (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,updateObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userusergrouplinkdata" + " updating object - " + Std.string(object.toArray()));
				var primaryKeyName = core_data_UserUserGroupLinkData.PrimaryFieldDefinitions[0].fieldName;
				core_data.updateTableData(_gthis.db.name,"userusergrouplinkdata",primaryKeyName,Std.string(object.get_primaryKey()),object.toArray()).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to update object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to update object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,addObject: function(object) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.init().then(function(r) {
				core_data_dao_Logger.get_instance().log(_gthis.db.name + "." + "userusergrouplinkdata" + " adding object - " + Std.string(object.toArray()));
				var data = object.toArray();
				core_data.addTableData(_gthis.db.name,"userusergrouplinkdata",[data]).then(function(r) {
					resolve(true);
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to add object (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to add object (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,createObject: function(data) {
		var record = new core_data_UserUserGroupLinkData();
		record.table = this;
		if(data != null) {
			var stringArray = [];
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				stringArray.push(Std.string(d));
			}
			record.fromArray(stringArray);
		}
		return record;
	}
	,buildLinks: function(tableName,fieldName,records) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var tmp = _gthis.db.name + "." + "userusergrouplinkdata" + " building links for " + "userusergrouplinkdata" + "." + fieldName + " == " + tableName + ".";
			core_data_dao_Logger.get_instance().log(tmp + fieldName);
			var table = _gthis.db.getTable(tableName);
			table.fetch().then(function(linkObjects) {
				var _g = 0;
				while(_g < records.length) {
					var record = records[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < linkObjects.length) {
						var linkObject = linkObjects[_g1];
						++_g1;
						if(linkObject.getFieldValue(fieldName) == record.getFieldValue(fieldName)) {
							record.setLinkObject(fieldName,linkObject);
						}
					}
				}
				resolve(records);
			}).catch(function(e) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve data during linking to " + _gthis.db.name + "." + tableName + " (" + e;
				core_data_dao_Logger.get_instance().error(tmp + ")");
				reject(e);
			});
		});
	}
	,init: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			if(_gthis.info != null) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " already initialized, returning");
				resolve(true);
				return;
			}
			var tmp = _gthis.db.name + "." + "userusergrouplinkdata";
			core_data_dao_Logger.get_instance().log(tmp + " initializing");
			_gthis.db.create().then(function(r) {
				core_data.hasTable(_gthis.db.name,"userusergrouplinkdata").then(function(hasTable) {
					if(hasTable == false) {
						var tmp = _gthis.db.name + "." + "userusergrouplinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " does not exist, creating");
						_gthis.create().then(function(createResult) {
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to create table during initialization (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					} else {
						var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " exists, continuing");
						core_data.getTableInfo(_gthis.db.name,"userusergrouplinkdata").then(function(tableInfo) {
							resolve(true);
							_gthis.info = tableInfo;
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					}
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to initialize (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,create: function() {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			_gthis.db.create().then(function(r) {
				var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata";
				core_data_dao_Logger.get_instance().log(tmp + " creating table");
				var fieldDefs = core_data_UserUserGroupLinkData.FieldDefinitions;
				core_data.createTable(_gthis.db.name,"userusergrouplinkdata",fieldDefs).then(function(createTableResult) {
					_gthis.addDefaultData().then(function(r) {
						var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata";
						core_data_dao_Logger.get_instance().log(tmp + " table created");
						core_data.getTableInfo(_gthis.db.name,"userusergrouplinkdata").then(function(tableInfo) {
							_gthis.info = tableInfo;
							resolve(true);
						}).catch(function(e) {
							var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to retrieve table info (" + e;
							core_data_dao_Logger.get_instance().error(tmp + ")");
							reject(e);
						});
					});
				}).catch(function(e) {
					var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " failed to create table (" + e;
					core_data_dao_Logger.get_instance().error(tmp + ")");
					reject(e);
				});
			});
		});
	}
	,batchSize: null
	,addObjects: function(objects,onProgress) {
		var _gthis = this;
		return new Promise(function(resolve,reject) {
			var batches = [];
			var n = 0;
			var batch = [];
			var _g = 0;
			while(_g < objects.length) {
				var o = objects[_g];
				++_g;
				var objectData = o.toArray().slice();
				batch.push(objectData);
				++n;
				if(n >= _gthis.batchSize) {
					n = 0;
					batches.push(batch);
					batch = [];
				}
			}
			if(batch.length > 0) {
				batches.push(batch);
			}
			var tmp = "" + _gthis.db.name + "." + "userusergrouplinkdata" + " adding " + objects.length + " objects in " + batches.length + " batches of ";
			core_data_dao_Logger.get_instance().log(tmp + _gthis.batchSize);
			_gthis.processBatches(batches,function() {
				resolve(true);
			},onProgress,0,batches.length);
		});
	}
	,processBatches: function(batches,onComplete,onProgress,current,max) {
		var _gthis = this;
		if(batches.length == 0) {
			onComplete();
			return;
		}
		if(onProgress != null) {
			onProgress(current + 1,max);
		}
		var batch = batches.shift();
		var tmp = "" + this.db.name + "." + "userusergrouplinkdata" + " processing batch " + (current + 1) + " of " + max + " (" + batch.length;
		core_data_dao_Logger.get_instance().log(tmp + " items)");
		core_data.addTableData(this.db.name,"userusergrouplinkdata",batch).then(function(batchResult) {
			_gthis.processBatches(batches,onComplete,onProgress,current + 1,max);
		});
	}
	,addDefaultData: function() {
		return new Promise(function(resolve,reject) {
			resolve(true);
		});
	}
	,__class__: core_data_UserUserGroupLinkDataTable
};
var core_data_UserUtils = function() {
};
$hxClasses["core.data.UserUtils"] = core_data_UserUtils;
core_data_UserUtils.__name__ = "core.data.UserUtils";
core_data_UserUtils.prototype = {
	user: function(userId) {
		var user = null;
		var _g = 0;
		var _g1 = core_data_InternalDB.users.data;
		while(_g < _g1.length) {
			var u = _g1[_g];
			++_g;
			if(u.get_userId() == userId) {
				user = u;
				break;
			}
		}
		return user;
	}
	,groups: function(userId) {
		var groups = [];
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroupLinks.data;
		while(_g < _g1.length) {
			var link = _g1[_g];
			++_g;
			if(link.get_userId() == userId) {
				var group = core_data_InternalDB.userGroups.utils.group(link.get_userGroupId());
				if(group != null) {
					groups.push(group);
				}
			}
		}
		return groups;
	}
	,permissions: function(userId) {
		var list = [];
		var _g = 0;
		var _g1 = this.groups(userId);
		while(_g < _g1.length) {
			var group = _g1[_g];
			++_g;
			var roles = core_data_InternalDB.userGroups.utils.roles(group.get_userGroupId());
			var _g2 = 0;
			while(_g2 < roles.length) {
				var role = roles[_g2];
				++_g2;
				var _g3 = 0;
				var _g4 = core_data_InternalDB.roles.utils.permissions(role.get_roleId());
				while(_g3 < _g4.length) {
					var permission = _g4[_g3];
					++_g3;
					list.push(permission);
				}
			}
		}
		return list;
	}
	,hasPermission: function(userId,resourceType,resourceId,permissionAction) {
		var has = false;
		var _g = 0;
		var _g1 = this.permissions(userId);
		while(_g < _g1.length) {
			var permission = _g1[_g];
			++_g;
			if((permission.get_resourceId() == resourceId || permission.get_resourceId() == -1) && permission.get_resourceType() == resourceType && permission.get_permissionAction() == permissionAction) {
				has = true;
				break;
			}
		}
		return has;
	}
	,__class__: core_data_UserUtils
};
var core_data_dao_Logger = function() {
};
$hxClasses["core.data.dao.Logger"] = core_data_dao_Logger;
core_data_dao_Logger.__name__ = "core.data.dao.Logger";
core_data_dao_Logger.__properties__ = {get_instance:"get_instance"};
core_data_dao_Logger.get_instance = function() {
	if(core_data_dao_Logger._instance == null) {
		core_data_dao_Logger._instance = new core_data_dao_Logger();
	}
	return core_data_dao_Logger._instance;
};
core_data_dao_Logger.prototype = {
	log: function(s) {
		$global.console.log(s);
	}
	,error: function(s) {
		$global.console.error(s);
	}
	,__class__: core_data_dao_Logger
};
var core_data_internal_FieldType = function() { };
$hxClasses["core.data.internal.FieldType"] = core_data_internal_FieldType;
core_data_internal_FieldType.__name__ = "core.data.internal.FieldType";
core_data_internal_FieldType.toString = function(v) {
	switch(v) {
	case 1:
		return "string";
	case 2:
		return "number";
	case 3:
		return "boolean";
	}
	return "unknown";
};
core_data_internal_FieldType.fromString = function(v) {
	switch(v) {
	case "boolean":
		return 3;
	case "number":
		return 2;
	case "string":
		return 1;
	}
	return 0;
};
var core_data_parsers_DataParser = function() {
};
$hxClasses["core.data.parsers.DataParser"] = core_data_parsers_DataParser;
core_data_parsers_DataParser.__name__ = "core.data.parsers.DataParser";
core_data_parsers_DataParser.prototype = {
	parse: function(data) {
	}
	,getFieldDefinitions: function() {
		return [];
	}
	,getData: function() {
		return [];
	}
	,__class__: core_data_parsers_DataParser
};
var core_data_parsers_CSVDataParser = function() {
	this._parsedData = null;
	this._fieldDefs = null;
	this._lines = [];
	this._firstLine = null;
	core_data_parsers_DataParser.call(this);
};
$hxClasses["core.data.parsers.CSVDataParser"] = core_data_parsers_CSVDataParser;
core_data_parsers_CSVDataParser.__name__ = "core.data.parsers.CSVDataParser";
core_data_parsers_CSVDataParser.__super__ = core_data_parsers_DataParser;
core_data_parsers_CSVDataParser.prototype = $extend(core_data_parsers_DataParser.prototype,{
	_data: null
	,_firstLine: null
	,_lines: null
	,_fieldDefs: null
	,_parsedData: null
	,getFieldDefinitions: function() {
		if(this._fieldDefs != null) {
			return this._fieldDefs;
		}
		var fds = [];
		var parts = this._firstLine.split(",");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			p = StringTools.trim(p);
			if(StringTools.startsWith(p,"\"") && StringTools.endsWith(p,"\"")) {
				p = p.substring(1,p.length - 1);
			}
			if(StringTools.startsWith(p,"'") && StringTools.endsWith(p,"'")) {
				p = p.substring(1,p.length - 1);
			}
			fds.push({ fieldName : p, fieldType : 1});
		}
		this._fieldDefs = fds;
		return fds;
	}
	,getData: function() {
		if(this._parsedData != null) {
			return this._parsedData;
		}
		var d = [];
		var _g = 0;
		var _g1 = this._lines;
		while(_g < _g1.length) {
			var l = _g1[_g];
			++_g;
			var parts = l.split(",");
			var row = [];
			var _g2 = 0;
			while(_g2 < parts.length) {
				var p = parts[_g2];
				++_g2;
				p = StringTools.trim(p);
				if(StringTools.startsWith(p,"\"") && StringTools.endsWith(p,"\"")) {
					p = p.substring(1,p.length - 1);
				}
				if(StringTools.startsWith(p,"'") && StringTools.endsWith(p,"'")) {
					p = p.substring(1,p.length - 1);
				}
				row.push(p);
			}
			d.push(row);
		}
		this._parsedData = d;
		return d;
	}
	,parse: function(data) {
		this._data = data;
		var s = Std.string(this._data);
		var lines = s.split("\n");
		this._lines = [];
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0) {
				continue;
			}
			if(this._firstLine == null) {
				this._firstLine = line;
			} else {
				this._lines.push(line);
			}
		}
		this.guessFieldTypes();
	}
	,guessFieldTypes: function() {
		var fieldDefs = this.getFieldDefinitions();
		var parsedData = this.getData();
		var boolFields_h = Object.create(null);
		var numberFields_h = Object.create(null);
		var _g = 0;
		while(_g < parsedData.length) {
			var row = parsedData[_g];
			++_g;
			var fieldIndex = 0;
			var _g1 = 0;
			while(_g1 < row.length) {
				var fieldValue = row[_g1];
				++_g1;
				var fieldName = fieldDefs[fieldIndex].fieldName;
				var isBool = Std.string(fieldValue) == "true" || Std.string(fieldValue) == "false" || Std.string(fieldValue) == "yes" || Std.string(fieldValue) == "no";
				var f = parseFloat(fieldValue);
				var isNumber = !isNaN(f);
				if(Object.prototype.hasOwnProperty.call(boolFields_h,fieldName) == false) {
					boolFields_h[fieldName] = isBool;
				} else {
					var existing = boolFields_h[fieldName];
					boolFields_h[fieldName] = existing && isBool;
				}
				if(Object.prototype.hasOwnProperty.call(numberFields_h,fieldName) == false) {
					numberFields_h[fieldName] = isNumber;
				} else {
					var existing1 = numberFields_h[fieldName];
					numberFields_h[fieldName] = existing1 && isNumber;
				}
				++fieldIndex;
			}
		}
		var _g = 0;
		while(_g < fieldDefs.length) {
			var fd = fieldDefs[_g];
			++_g;
			fd.fieldType = 1;
			if(boolFields_h[fd.fieldName] == true) {
				fd.fieldType = 3;
			}
			if(numberFields_h[fd.fieldName] == true) {
				fd.fieldType = 2;
			}
		}
	}
	,__class__: core_data_parsers_CSVDataParser
});
var core_data_transforms_ITransform = function() { };
$hxClasses["core.data.transforms.ITransform"] = core_data_transforms_ITransform;
core_data_transforms_ITransform.__name__ = "core.data.transforms.ITransform";
core_data_transforms_ITransform.__isInterface__ = true;
core_data_transforms_ITransform.prototype = {
	applyTransform: null
	,__class__: core_data_transforms_ITransform
};
var core_data_transforms_Transform = function() {
};
$hxClasses["core.data.transforms.Transform"] = core_data_transforms_Transform;
core_data_transforms_Transform.__name__ = "core.data.transforms.Transform";
core_data_transforms_Transform.__interfaces__ = [core_data_transforms_ITransform];
core_data_transforms_Transform.prototype = {
	applyTransform: function(table,details,context) {
		return table;
	}
	,__class__: core_data_transforms_Transform
};
var core_data_transforms_AddRow = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.AddRow"] = core_data_transforms_AddRow;
core_data_transforms_AddRow.__name__ = "core.data.transforms.AddRow";
core_data_transforms_AddRow.__super__ = core_data_transforms_Transform;
core_data_transforms_AddRow.prototype = $extend(core_data_transforms_Transform.prototype,{
	applyTransform: function(table,details,context) {
		var primaryKeyValue = Std.string(details.transformParameters[0]);
		var fieldName = Std.string(details.transformParameters[1]);
		var fieldValue = details.transformParameters[2];
		if(StringTools.startsWith(Std.string(fieldValue),"$")) {
			fieldValue = context.h[Std.string(fieldValue).substring(1)];
		}
		var fieldIndex = table.getFieldIndex(fieldName);
		var data = [];
		var _g = 0;
		var _g1 = table.info.fieldDefinitions;
		while(_g < _g1.length) {
			var fd = _g1[_g];
			++_g;
			switch(fd.fieldType) {
			case 1:
				data.push("");
				break;
			case 2:
				data.push(0);
				break;
			case 3:
				data.push(false);
				break;
			default:
				data.push(null);
			}
		}
		var primaryKeyIndex = table.getFieldIndex(table.primaryKeyName);
		data[primaryKeyIndex] = primaryKeyValue;
		data[fieldIndex] = fieldValue;
		table.createRecord().fromArray(data);
		return table;
	}
	,__class__: core_data_transforms_AddRow
});
var core_data_transforms_Average = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.Average"] = core_data_transforms_Average;
core_data_transforms_Average.__name__ = "core.data.transforms.Average";
core_data_transforms_Average.__super__ = core_data_transforms_Transform;
core_data_transforms_Average.prototype = $extend(core_data_transforms_Transform.prototype,{
	applyTransform: function(table,details,context) {
		if(details.transformParameters.length == 1 && table.primaryKeyName != null) {
			details.transformParameters.splice(0,0,table.primaryKeyName);
		}
		var divisorField = details.transformParameters[0];
		var resultField = details.transformParameters[1];
		var divisorFieldIndex = table.getFieldIndex(divisorField);
		if(table.getFieldIndex((divisorField == null ? "null" : Std.string(divisorField)) + "Count") != -1) {
			divisorFieldIndex = table.getFieldIndex((divisorField == null ? "null" : Std.string(divisorField)) + "Count");
		}
		var resultFieldIndex = table.getFieldIndex(resultField);
		var _g = 0;
		var _g1 = table.records;
		while(_g < _g1.length) {
			var record = _g1[_g];
			++_g;
			var n = record.getFieldValueByIndex(resultFieldIndex);
			var d = record.getFieldValueByIndex(divisorFieldIndex);
			var r = n / d;
			record.data[resultFieldIndex] = r == null ? "null" : "" + r;
		}
		return table;
	}
	,__class__: core_data_transforms_Average
});
var core_data_transforms_CountUnique = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.CountUnique"] = core_data_transforms_CountUnique;
core_data_transforms_CountUnique.__name__ = "core.data.transforms.CountUnique";
core_data_transforms_CountUnique.__super__ = core_data_transforms_Transform;
core_data_transforms_CountUnique.prototype = $extend(core_data_transforms_Transform.prototype,{
	__class__: core_data_transforms_CountUnique
});
var core_data_transforms_FilterBy = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.FilterBy"] = core_data_transforms_FilterBy;
core_data_transforms_FilterBy.__name__ = "core.data.transforms.FilterBy";
core_data_transforms_FilterBy.__super__ = core_data_transforms_Transform;
core_data_transforms_FilterBy.prototype = $extend(core_data_transforms_Transform.prototype,{
	applyTransform: function(table,details,context) {
		var fieldName = Std.string(details.transformParameters[0]);
		var fieldValue = details.transformParameters[1];
		if(StringTools.startsWith(fieldName,"$")) {
			fieldName = fieldName.substring(1);
			fieldValue = context.h[fieldName];
		}
		if(fieldValue == null) {
			return table;
		}
		var fieldIndex = table.getFieldIndex(fieldName);
		var result = table.clone();
		var _g = 0;
		var _g1 = table.records;
		while(_g < _g1.length) {
			var record = _g1[_g];
			++_g;
			var existingData = record.data;
			if(existingData[fieldIndex] == fieldValue) {
				var recordCopy = new core_data_GenericData();
				recordCopy.fromArray(existingData.slice());
				result.records.push(recordCopy);
			}
		}
		return result;
	}
	,__class__: core_data_transforms_FilterBy
});
var core_data_transforms_GroupBy = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.GroupBy"] = core_data_transforms_GroupBy;
core_data_transforms_GroupBy.__name__ = "core.data.transforms.GroupBy";
core_data_transforms_GroupBy.__super__ = core_data_transforms_Transform;
core_data_transforms_GroupBy.prototype = $extend(core_data_transforms_Transform.prototype,{
	applyTransform: function(table,details,context) {
		var fieldName = details.transformParameters[0];
		var fieldIndex = table.getFieldIndex(fieldName);
		var result = new core_data_GenericTable();
		result.primaryKeyName = fieldName;
		result.info = { tableName : table.info.tableName, fieldDefinitions : table.info.fieldDefinitions.slice(), recordCount : 0};
		var map_h = Object.create(null);
		var _g = 0;
		var _g1 = table.records;
		while(_g < _g1.length) {
			var record = _g1[_g];
			++_g;
			var existingData = record.data;
			var uniqueFieldValue = existingData[fieldIndex];
			var newData = map_h[uniqueFieldValue];
			if(newData == null) {
				newData = existingData.slice();
				newData.push(1);
				map_h[uniqueFieldValue] = newData;
			} else {
				var n = 0;
				var _g2 = 0;
				while(_g2 < existingData.length) {
					var d = existingData[_g2];
					++_g2;
					if(n != fieldIndex && table.getFieldType(n) == 2) {
						if(fieldIndex < existingData.length) {
							var existingValue = parseFloat(existingData[n]);
							var currentValue = parseFloat(newData[n]);
							var newValue = existingValue + currentValue;
							newData[n] = newValue;
						}
					}
					++n;
				}
				var lastIndex = existingData.length;
				var i = newData[lastIndex];
				newData[lastIndex] = i + 1;
			}
		}
		result.defineField((fieldName == null ? "null" : Std.string(fieldName)) + "Count",2);
		var n = 0;
		var h = map_h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var record = new core_data_GenericData();
			record.table = result;
			record.fromArray(map_h[k]);
			result.records.push(record);
			++n;
		}
		result.info.recordCount = n;
		return result;
	}
	,__class__: core_data_transforms_GroupBy
});
var core_data_transforms_SetField = function() {
	core_data_transforms_Transform.call(this);
};
$hxClasses["core.data.transforms.SetField"] = core_data_transforms_SetField;
core_data_transforms_SetField.__name__ = "core.data.transforms.SetField";
core_data_transforms_SetField.__super__ = core_data_transforms_Transform;
core_data_transforms_SetField.prototype = $extend(core_data_transforms_Transform.prototype,{
	applyTransform: function(table,details,context) {
		var fieldName = Std.string(details.transformParameters[0]);
		var fieldValue = details.transformParameters[1];
		var fieldIndex = table.getFieldIndex(fieldName);
		var _g = 0;
		var _g1 = table.records;
		while(_g < _g1.length) {
			var record = _g1[_g];
			++_g;
			record.data[fieldIndex] = fieldValue;
		}
		return table;
	}
	,__class__: core_data_transforms_SetField
});
var core_data_transforms_TransformFactory = function() { };
$hxClasses["core.data.transforms.TransformFactory"] = core_data_transforms_TransformFactory;
core_data_transforms_TransformFactory.__name__ = "core.data.transforms.TransformFactory";
core_data_transforms_TransformFactory.getTransform = function(id) {
	var id1 = StringTools.replace(StringTools.replace(id,"-",""),"_","").toLowerCase();
	switch(id1) {
	case "addrow":
		return new core_data_transforms_AddRow();
	case "average":case "avg":
		return new core_data_transforms_Average();
	case "countunique":case "unique":
		return new core_data_transforms_CountUnique();
	case "filterby":
		return new core_data_transforms_FilterBy();
	case "groupby":
		return new core_data_transforms_GroupBy();
	case "setfield":
		return new core_data_transforms_SetField();
	}
	return null;
};
var core_data_utils_ConversionUtils = function() { };
$hxClasses["core.data.utils.ConversionUtils"] = core_data_utils_ConversionUtils;
core_data_utils_ConversionUtils.__name__ = "core.data.utils.ConversionUtils";
core_data_utils_ConversionUtils.toString = function(value) {
	return Std.string(value);
};
core_data_utils_ConversionUtils.fromString = function(value,type) {
	switch(type) {
	case 1:
		return value;
	case 2:
		return parseFloat(value);
	case 3:
		return value == "true";
	default:
		return value;
	}
};
var core_data_utils_PromiseUtils = function() { };
$hxClasses["core.data.utils.PromiseUtils"] = core_data_utils_PromiseUtils;
core_data_utils_PromiseUtils.__name__ = "core.data.utils.PromiseUtils";
core_data_utils_PromiseUtils.runSequentially = function(list,cb,failed) {
	if(list.length == 0) {
		cb();
		return;
	}
	var p = list.shift();
	p.then(function(r) {
		core_data_utils_PromiseUtils.runSequentially(list,cb,failed);
	}).catch(function(e) {
		if(failed != null) {
			failed(e);
		}
	});
};
var core_graphs_BarGraphEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["core.graphs.BarGraphEvent"] = core_graphs_BarGraphEvent;
core_graphs_BarGraphEvent.__name__ = "core.graphs.BarGraphEvent";
core_graphs_BarGraphEvent.__super__ = haxe_ui_events_UIEvent;
core_graphs_BarGraphEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	barIndex: null
	,clone: function() {
		var c = new core_graphs_BarGraphEvent(this.type);
		c.barIndex = this.barIndex;
		c.data = this.data;
		this.postClone(c);
		return c;
	}
	,__class__: core_graphs_BarGraphEvent
});
var core_graphs_BarGraph = function() {
	this._coloursBuilt = false;
	this._data = [];
	this.getMarkerValueY = null;
	this.markerBehind = false;
	this._barToSelect = null;
	this._selectedBarIndex = -1;
	this._colourCalculator = null;
	this._noDataLabel = "";
	this._showLegend = true;
	this.labelRotation = 0;
	this.markerColour = "#ffffff";
	this.textColour = "#b4b4b4";
	this.gridColour = "#242729";
	this.yAxisColour = "#b4b4b4";
	this.xAxisColour = "#b4b4b4";
	this.yAxisField = "y";
	this.xAxisField = "x";
	this._graph = null;
	this._container = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["core.graphs.BarGraph"] = core_graphs_BarGraph;
core_graphs_BarGraph.__name__ = "core.graphs.BarGraph";
core_graphs_BarGraph.__super__ = haxe_ui_core_Component;
core_graphs_BarGraph.prototype = $extend(haxe_ui_core_Component.prototype,{
	_container: null
	,_graph: null
	,_chart: null
	,xAxisField: null
	,yAxisField: null
	,xAxisColour: null
	,yAxisColour: null
	,gridColour: null
	,textColour: null
	,markerColour: null
	,labelRotation: null
	,_showLegend: null
	,get_showLegend: function() {
		return this._showLegend;
	}
	,set_showLegend: function(value) {
		this._showLegend = value;
		if(this._chart != null) {
			this._chart.showLegend(value);
			this._chart.update();
		}
		return value;
	}
	,_noDataLabel: null
	,get_noDataLabel: function() {
		return this._noDataLabel;
	}
	,set_noDataLabel: function(value) {
		if(value == this._noDataLabel) {
			return value;
		}
		this._noDataLabel = value;
		if(this._chart != null) {
			this._chart.noData(value);
			this._chart.update();
		}
		return value;
	}
	,onReady: function() {
		var _gthis = this;
		haxe_ui_core_Component.prototype.onReady.call(this);
		if(this.get_id() == null) {
			this.set_id("bar" + core_graphs_BarGraph.nextId);
			core_graphs_BarGraph.nextId++;
		}
		var containerId = this.get_id() + "container";
		this._container = window.document.createElement("div");
		this._container.id = containerId;
		this.element.appendChild(this._container);
		this._graph = d3.select(this._container).append("svg");
		this.onThemeChanged();
		nv.addGraph(function() {
			_gthis._chart = nv.models.multiBarChart();
			_gthis._chart.x(function(d) {
				return d[_gthis.xAxisField];
			});
			_gthis._chart.y(function(d) {
				return d[_gthis.yAxisField];
			});
			_gthis._chart.staggerLabels(false);
			_gthis._chart.reduceXTicks(false);
			_gthis._chart.rotateLabels(_gthis.labelRotation);
			_gthis._chart.showControls(false);
			_gthis._chart.noData(_gthis.get_noDataLabel());
			_gthis._chart.showLegend(_gthis.get_showLegend());
			_gthis._chart.tooltip.enabled(false);
			if(_gthis._colourCalculator != null) {
				_gthis._chart.barColor($bind(_gthis,_gthis.calculateColour));
			}
			_gthis._graph.datum(_gthis._data).call(_gthis._chart);
			_gthis._chart.dispatch.on("renderEnd",function() {
				_gthis.drawMarker();
			});
			_gthis._chart.multibar.dispatch.on("elementClick",function(e) {
				var index = e.index;
				if(index == _gthis._selectedBarIndex) {
					_gthis.unselectBars();
					var event = new core_graphs_BarGraphEvent("barUnselected");
					event.barIndex = index;
					_gthis.dispatch(event);
					return;
				}
				_gthis.selectBar(index);
			});
			if(_gthis._barToSelect != null) {
				_gthis.selectBar(_gthis._barToSelect);
			}
			return _gthis._chart;
		});
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,_colourCalculator: null
	,get_colourCalculator: function() {
		return this._colourCalculator;
	}
	,set_colourCalculator: function(value) {
		this._colourCalculator = value;
		if(this._chart != null && value != null) {
			this._chart.barColor($bind(this,this.calculateColour));
		}
		return value;
	}
	,_selectedBarIndex: null
	,_barToSelect: null
	,selectBar: function(barIndex) {
		if(this._container == null) {
			this._barToSelect = barIndex;
			return;
		}
		var barCount = this._data.length;
		var dataCount = this._data[0].values.length;
		this._selectedBarIndex = barIndex;
		var event = new core_graphs_BarGraphEvent("barSelected");
		event.barIndex = barIndex;
		var eventData = { seriesData : []};
		var _g = 0;
		var _g1 = barCount;
		while(_g < _g1) {
			var n = _g++;
			if(eventData.xValue == null) {
				eventData.xValue = this._data[n].values[barIndex].x;
			}
			eventData.seriesData.push(this._data[n].values[barIndex]);
		}
		event.data = eventData;
		this.dispatch(event);
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var bars = g.selectAll(".nv-bar");
		bars.each(function(d,i) {
			var el = this;
			if(i == barIndex || i == barIndex + dataCount) {
				el.classList.remove("dim");
			} else {
				el.classList.add("dim");
			}
		});
		this._barToSelect = null;
	}
	,selectBarFromData: function(value) {
		var series = this._data[0].values;
		var index = -1;
		var n = 0;
		var _g = 0;
		while(_g < series.length) {
			var d = series[_g];
			++_g;
			if(d.x == value) {
				index = n;
				break;
			}
			++n;
		}
		if(index != -1) {
			this.selectBar(index);
		}
	}
	,unselectBars: function() {
		if(this._container == null) {
			return;
		}
		this._selectedBarIndex = -1;
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var bars = g.selectAll(".nv-bar");
		bars.each(function(d,i) {
			var el = this;
			el.classList.remove("dim");
		});
	}
	,calculateColour: function(data) {
		return this._colourCalculator.get(data,0,{ xAxisField : this.xAxisField, yAxisField : this.yAxisField});
	}
	,markerBehind: null
	,getMarkerValueY: null
	,drawMarker: function() {
		if(this._container == null || this._graph == null || this._chart == null) {
			return;
		}
		this.removeMarker();
		if(this.getMarkerValueY == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3 .nv-groups");
		var xValueScale = this._chart.xAxis.scale();
		var yValueScale = this._chart.yAxis.scale();
		var bbox = this._graph.select(".nv-bar").node().getBBox();
		var cx = bbox.width * this._data.length;
		var yValuePrev = null;
		var _g = 0;
		var _g1 = this._data[0].values.length | 0;
		while(_g < _g1) {
			var i = _g++;
			var item = [];
			var _g2 = 0;
			var _g3 = this._data;
			while(_g2 < _g3.length) {
				var d = _g3[_g2];
				++_g2;
				item.push(d.values[i]);
			}
			var yValue = this.getMarkerValueY(item,i);
			if(i == 0) {
				yValuePrev = yValue;
				continue;
			}
			var key = this._data[0].values[i - 1][this.xAxisField];
			var nextKey = this._data[0].values[i][this.xAxisField];
			var y1 = yValueScale(yValuePrev);
			var y2 = yValueScale(yValue);
			yValuePrev = yValue;
			var offset = cx / 2;
			if(this.markerBehind == false) {
				var tmp = g.append("line").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp1 = xValueScale(key) + offset;
				var tmp2 = tmp.attr("x1",tmp1).attr("y1",y1);
				var tmp3 = xValueScale(nextKey) + offset;
				tmp2.attr("x2",tmp3).attr("y2",y2);
				var tmp4 = g.append("circle").attr("id","markerLine");
				var tmp5 = xValueScale(key) + offset;
				tmp4.attr("cx",tmp5).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp6 = g.append("circle").attr("id","markerLine");
				var tmp7 = xValueScale(nextKey) + offset;
				tmp6.attr("cx",tmp7).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			} else {
				var tmp8 = g.insert("line",":first-child").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp9 = xValueScale(key) + offset;
				var tmp10 = tmp8.attr("x1",tmp9).attr("y1",y1);
				var tmp11 = xValueScale(nextKey) + offset;
				tmp10.attr("x2",tmp11).attr("y2",y2);
				var tmp12 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp13 = xValueScale(key) + offset;
				tmp12.attr("cx",tmp13).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp14 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp15 = xValueScale(nextKey) + offset;
				tmp14.attr("cx",tmp15).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			}
		}
	}
	,removeMarker: function() {
		if(this._container == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		g.selectAll("#markerLine").remove();
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.resizeGraph();
		return b;
	}
	,resizeGraph: function() {
		if(this.get_width() > 0 && this.get_height() > 0 && this._graph != null) {
			var cx = this.get_width() | 0;
			var cy = this.get_height() | 0;
			this._graph.attr("width",cx).attr("height",cy);
			if(this._chart != null) {
				this._chart.duration(0);
				this._chart.width(cx | 0);
				this._chart.height(cy | 0);
				this._chart.update();
				this._chart.duration(250);
			}
		}
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this.removeMarker();
		this._data = value;
		if(this._graph != null) {
			this._graph.datum(this._data);
		}
		if(this._chart != null) {
			this._chart.update();
		}
		return value;
	}
	,_coloursBuilt: null
	,buildColours: function(containerId) {
		if(this._coloursBuilt == true) {
			return;
		}
		this._coloursBuilt = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#" + containerId + " .nvd3 .nv-axis line {\r\n                stroke: " + this.gridColour + ";\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-axis path {\r\n                stroke: " + this.yAxisColour + ";\r\n                stroke-opacity: 1;\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-zeroLine line {\r\n                stroke: " + this.xAxisColour + " !important;\r\n                stroke-opacity: 1;\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-y .tick.zero line {\r\n                stroke: " + this.yAxisColour + ";\r\n                stroke-opacity: 1;\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-group {\r\n                transform: translate(0px, 0px);\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 text {\r\n                fill: " + this.textColour + ";\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nv-noData {\r\n                fill: " + this.textColour + " !important;\r\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-bar.dim {\r\n                opacity: .2;\r\n            }",sheet.cssRules.length);
	}
	,onThemeChanged: function() {
		haxe_ui_core_Component.prototype.onThemeChanged.call(this);
		if(haxe_ui_Toolkit.get_theme() == "dark") {
			this.xAxisColour = "#b4b4b4";
			this.yAxisColour = "#b4b4b4";
			this.gridColour = "#242729";
			this.textColour = "#b4b4b4";
			this.markerColour = "#ffffff";
		} else if(haxe_ui_Toolkit.get_theme() == "default") {
			this.xAxisColour = "#222222";
			this.yAxisColour = "#222222";
			this.gridColour = "#EEEEEE";
			this.textColour = "#222222";
			this.markerColour = "#444444";
		} else if(haxe_ui_Toolkit.get_theme() == "optex") {
			this.xAxisColour = "#45456e";
			this.yAxisColour = "#45456e";
			this.gridColour = "#45456e";
			this.textColour = "#9292a0";
			this.markerColour = "#ffffff";
		}
		this._coloursBuilt = false;
		this.buildColours(this._container.id);
		this.drawMarker();
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_graphs_BarGraph();
	}
	,__class__: core_graphs_BarGraph
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_colourCalculator:"set_colourCalculator",get_colourCalculator:"get_colourCalculator",set_noDataLabel:"set_noDataLabel",get_noDataLabel:"get_noDataLabel",set_showLegend:"set_showLegend",get_showLegend:"get_showLegend"})
});
var core_graphs_ColorCalculator_$OLD = function() {
	this._colorsReverse = null;
	this._colors = null;
};
$hxClasses["core.graphs.ColorCalculator_OLD"] = core_graphs_ColorCalculator_$OLD;
core_graphs_ColorCalculator_$OLD.__name__ = "core.graphs.ColorCalculator_OLD";
core_graphs_ColorCalculator_$OLD.prototype = {
	_colors: null
	,_colorsReverse: null
	,_scheme: null
	,get_scheme: function() {
		return this._scheme;
	}
	,set_scheme: function(value) {
		this._scheme = value;
		var schemaName = "scheme" + haxe_ui_util_StringUtil.capitalizeFirstLetter(this._scheme);
		var colors = d3[schemaName];
		this._colors = colors.slice().pop();
		this._colorsReverse = this._colors.slice();
		this._colorsReverse.reverse();
		return value;
	}
	,get: function(data,index,graphInfo) {
		return null;
	}
	,__class__: core_graphs_ColorCalculator_$OLD
	,__properties__: {set_scheme:"set_scheme",get_scheme:"get_scheme"}
};
var core_graphs_ValueBasedColourCalculator = function() {
	core_graphs_ColorCalculator_$OLD.call(this);
};
$hxClasses["core.graphs.ValueBasedColourCalculator"] = core_graphs_ValueBasedColourCalculator;
core_graphs_ValueBasedColourCalculator.__name__ = "core.graphs.ValueBasedColourCalculator";
core_graphs_ValueBasedColourCalculator.__super__ = core_graphs_ColorCalculator_$OLD;
core_graphs_ValueBasedColourCalculator.prototype = $extend(core_graphs_ColorCalculator_$OLD.prototype,{
	get: function(data,index,graphInfo) {
		var max = graphInfo.valueMax;
		var value = Reflect.field(data,graphInfo.valueField);
		var colMax = this._colors.length;
		var colIndex = Math.round(value / max * colMax) - 1;
		if(colIndex < 0) {
			colIndex = 0;
		}
		return this._colorsReverse[colIndex];
	}
	,__class__: core_graphs_ValueBasedColourCalculator
});
var core_graphs_ThresholdBasedColourCalculator = function(threshold) {
	this.threshold = 50;
	core_graphs_ColorCalculator_$OLD.call(this);
	this.threshold = threshold;
};
$hxClasses["core.graphs.ThresholdBasedColourCalculator"] = core_graphs_ThresholdBasedColourCalculator;
core_graphs_ThresholdBasedColourCalculator.__name__ = "core.graphs.ThresholdBasedColourCalculator";
core_graphs_ThresholdBasedColourCalculator.__super__ = core_graphs_ColorCalculator_$OLD;
core_graphs_ThresholdBasedColourCalculator.prototype = $extend(core_graphs_ColorCalculator_$OLD.prototype,{
	threshold: null
	,get: function(data,index,graphInfo) {
		var v = data[graphInfo.yAxisField];
		if(v < this.threshold) {
			return "#884444";
		}
		return "#448844";
	}
	,__class__: core_graphs_ThresholdBasedColourCalculator
});
var core_graphs_GaugeGraph = function() {
	this._value = 0;
	this._gauge = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["core.graphs.GaugeGraph"] = core_graphs_GaugeGraph;
core_graphs_GaugeGraph.__name__ = "core.graphs.GaugeGraph";
core_graphs_GaugeGraph.__super__ = haxe_ui_core_Component;
core_graphs_GaugeGraph.prototype = $extend(haxe_ui_core_Component.prototype,{
	_container: null
	,_gauge: null
	,_textfield: null
	,onReady: function() {
		haxe_ui_core_Component.prototype.onReady.call(this);
		this._container = window.document.createElement("canvas");
		this._container.style.opacity = ".7";
		this.element.appendChild(this._container);
		this._textfield = window.document.createElement("div");
		this._textfield.style.position = "absolute";
		this._textfield.style.left = "0px";
		this._textfield.style.bottom = "10px";
		this._textfield.style.textAlign = "center";
		this._textfield.style.width = "100%";
		this._textfield.style.fontSize = "26px";
		this._textfield.style.color = "#9292a0";
		this.element.appendChild(this._textfield);
		this.invalidateComponent();
		var opts = { angle : 0, lineWidth : 0.44, radiusScale : 1, pointer : { length : 0.5, strokeWidth : 0.035, color_OLD : "#cacad1", color : "#00000000"}, limitMax : false, limitMin : false, colorStart : "#ff0000", colorStop : "#1f77b4", OLD_colorStop : "#5bb3bdBF", strokeColor : "#24243a", generateGradient : true, highDpiSupport : true};
		var percentColors = [[0.0,"#448844"],[0.35,"#448844"],[0.36,"#ffbf00"],[0.45,"#ffbf00"],[0.46,"#ff4444"],[1.0,"#ff4444"]];
		opts.percentColors = percentColors;
		this._gauge = new Gauge(this._container).setOptions(opts);
		this._gauge.maxValue = 20.;
		this._gauge.setMinValue(0);
		this._gauge.animationSpeed = 16;
		this._gauge.set(this._value);
		this._gauge.setTextField(this._textfield);
	}
	,_value: null
	,setValue: function(value) {
		this._value = value;
		if(this._gauge != null) {
			this._gauge.set(value);
		}
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		if(this.get_width() > 0 && this.get_height() > 0 && this._container != null) {
			var tmp = "" + this.get_width() + "px";
			this._container.style.width = tmp;
			var tmp = "" + this.get_height() + "px";
			this._container.style.height = tmp;
			var tmp = this.get_width() | 0;
			this._container.width = tmp;
			var tmp = this.get_height() | 0;
			this._container.height = tmp;
			this._gauge.update(true);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_graphs_GaugeGraph();
	}
	,__class__: core_graphs_GaugeGraph
});
var core_graphs_HorizontalBarGraphEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["core.graphs.HorizontalBarGraphEvent"] = core_graphs_HorizontalBarGraphEvent;
core_graphs_HorizontalBarGraphEvent.__name__ = "core.graphs.HorizontalBarGraphEvent";
core_graphs_HorizontalBarGraphEvent.__super__ = haxe_ui_events_UIEvent;
core_graphs_HorizontalBarGraphEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	barIndex: null
	,clone: function() {
		var c = new core_graphs_HorizontalBarGraphEvent(this.type);
		c.barIndex = this.barIndex;
		c.data = this.data;
		this.postClone(c);
		return c;
	}
	,__class__: core_graphs_HorizontalBarGraphEvent
});
var core_graphs_HorizontalBarGraph = function() {
	this._coloursBuilt = false;
	this._data = [];
	this.getMarkerValueY = null;
	this.markerBehind = false;
	this._selectedBarIndex = -1;
	this._colourCalculator = null;
	this._noDataLabel = "";
	this._showLegend = true;
	this.labelRotation = 0;
	this.markerColour = "#ffffff";
	this.textColour = "#b4b4b4";
	this.gridColour = "#242729";
	this.yAxisColour = "#b4b4b4";
	this.xAxisColour = "#b4b4b4";
	this.yAxisField = "y";
	this.xAxisField = "x";
	this._graph = null;
	this._container = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["core.graphs.HorizontalBarGraph"] = core_graphs_HorizontalBarGraph;
core_graphs_HorizontalBarGraph.__name__ = "core.graphs.HorizontalBarGraph";
core_graphs_HorizontalBarGraph.__super__ = haxe_ui_core_Component;
core_graphs_HorizontalBarGraph.prototype = $extend(haxe_ui_core_Component.prototype,{
	_container: null
	,_graph: null
	,_chart: null
	,xAxisField: null
	,yAxisField: null
	,xAxisColour: null
	,yAxisColour: null
	,gridColour: null
	,textColour: null
	,markerColour: null
	,labelRotation: null
	,_showLegend: null
	,get_showLegend: function() {
		return this._showLegend;
	}
	,set_showLegend: function(value) {
		this._showLegend = value;
		if(this._chart != null) {
			this._chart.showLegend(value);
			this._chart.update();
		}
		return value;
	}
	,_noDataLabel: null
	,get_noDataLabel: function() {
		return this._noDataLabel;
	}
	,set_noDataLabel: function(value) {
		if(value == this._noDataLabel) {
			return value;
		}
		this._noDataLabel = value;
		if(this._chart != null) {
			this._chart.noData(value);
			this._chart.update();
		}
		return value;
	}
	,onReady: function() {
		var _gthis = this;
		haxe_ui_core_Component.prototype.onReady.call(this);
		if(this.get_id() == null) {
			this.set_id("hbar" + core_graphs_HorizontalBarGraph.nextId);
			core_graphs_HorizontalBarGraph.nextId++;
		}
		var containerId = this.get_id() + "container";
		this._container = window.document.createElement("div");
		this._container.id = containerId;
		this.element.appendChild(this._container);
		this._graph = d3.select(this._container).append("svg");
		this.onThemeChanged();
		nv.addGraph(function() {
			_gthis._chart = nv.models.multiBarHorizontalChart();
			_gthis._chart.x(function(d) {
				return d[_gthis.xAxisField];
			});
			_gthis._chart.y(function(d) {
				return d[_gthis.yAxisField];
			});
			_gthis._chart.showValues(true);
			_gthis._chart.showControls(false);
			_gthis._chart.noData(_gthis.get_noDataLabel());
			_gthis._chart.showLegend(_gthis.get_showLegend());
			_gthis._chart.tooltip.enabled(false);
			if(_gthis._colourCalculator != null) {
				_gthis._chart.barColor($bind(_gthis,_gthis.calculateColour));
			}
			_gthis._graph.datum(_gthis._data).call(_gthis._chart);
			_gthis._chart.dispatch.on("renderEnd",function() {
				_gthis.drawMarker();
			});
			_gthis._chart.multibar.dispatch.on("elementClick",function(e) {
				var index = e.index;
				if(index == _gthis._selectedBarIndex) {
					_gthis.unselectBars();
					var event = new core_graphs_HorizontalBarGraphEvent("barUnselected");
					event.barIndex = index;
					_gthis.dispatch(event);
					return;
				}
				_gthis.selectBar(index);
			});
			return _gthis._chart;
		});
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
	}
	,_colourCalculator: null
	,get_colourCalculator: function() {
		return this._colourCalculator;
	}
	,set_colourCalculator: function(value) {
		this._colourCalculator = value;
		if(this._chart != null && value != null) {
			this._chart.barColor($bind(this,this.calculateColour));
		}
		return value;
	}
	,_selectedBarIndex: null
	,selectBar: function(barIndex) {
		var barCount = this._data.length;
		var dataCount = this._data[0].values.length;
		this._selectedBarIndex = barIndex;
		var event = new core_graphs_HorizontalBarGraphEvent("barSelected");
		event.barIndex = barIndex;
		var eventData = { seriesData : []};
		var _g = 0;
		var _g1 = barCount;
		while(_g < _g1) {
			var n = _g++;
			if(eventData.xValue == null) {
				eventData.xValue = this._data[n].values[barIndex].x;
			}
			eventData.seriesData.push(this._data[n].values[barIndex]);
		}
		event.data = eventData;
		this.dispatch(event);
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var bars = g.selectAll(".nv-bar");
		bars.each(function(d,i) {
			var el = this;
			if(i == barIndex || i == barIndex + dataCount) {
				el.classList.remove("dim");
			} else {
				el.classList.add("dim");
			}
		});
	}
	,selectBarFromData: function(value) {
		var series = this._data[0].values;
		var index = -1;
		var n = 0;
		var _g = 0;
		while(_g < series.length) {
			var d = series[_g];
			++_g;
			if(d.x == value) {
				index = n;
				break;
			}
			++n;
		}
		if(index != -1) {
			this.selectBar(index);
		}
	}
	,unselectBars: function() {
		if(this._container == null) {
			return;
		}
		this._selectedBarIndex = -1;
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var bars = g.selectAll(".nv-bar");
		bars.each(function(d,i) {
			var el = this;
			el.classList.remove("dim");
		});
	}
	,calculateColour: function(data) {
		return this._colourCalculator.get(data,0,{ xAxisField : this.xAxisField, yAxisField : this.yAxisField});
	}
	,markerBehind: null
	,getMarkerValueY: null
	,drawMarker: function() {
		if(this._container == null || this._graph == null || this._chart == null) {
			return;
		}
		this.removeMarker();
		if(this.getMarkerValueY == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3 .nv-groups");
		var xValueScale = this._chart.xAxis.scale();
		var yValueScale = this._chart.yAxis.scale();
		var bbox = this._graph.select(".nv-bar").node().getBBox();
		var cx = bbox.width * this._data.length;
		var yValuePrev = null;
		var _g = 0;
		var _g1 = this._data[0].values.length | 0;
		while(_g < _g1) {
			var i = _g++;
			var item = [];
			var _g2 = 0;
			var _g3 = this._data;
			while(_g2 < _g3.length) {
				var d = _g3[_g2];
				++_g2;
				item.push(d.values[i]);
			}
			var yValue = this.getMarkerValueY(item,i);
			if(i == 0) {
				yValuePrev = yValue;
				continue;
			}
			var key = this._data[0].values[i - 1][this.xAxisField];
			var nextKey = this._data[0].values[i][this.xAxisField];
			var y1 = yValueScale(yValuePrev);
			var y2 = yValueScale(yValue);
			yValuePrev = yValue;
			var offset = cx / 2;
			if(this.markerBehind == false) {
				var tmp = g.append("line").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp1 = xValueScale(key) + offset;
				var tmp2 = tmp.attr("x1",tmp1).attr("y1",y1);
				var tmp3 = xValueScale(nextKey) + offset;
				tmp2.attr("x2",tmp3).attr("y2",y2);
				var tmp4 = g.append("circle").attr("id","markerLine");
				var tmp5 = xValueScale(key) + offset;
				tmp4.attr("cx",tmp5).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp6 = g.append("circle").attr("id","markerLine");
				var tmp7 = xValueScale(nextKey) + offset;
				tmp6.attr("cx",tmp7).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			} else {
				var tmp8 = g.insert("line",":first-child").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp9 = xValueScale(key) + offset;
				var tmp10 = tmp8.attr("x1",tmp9).attr("y1",y1);
				var tmp11 = xValueScale(nextKey) + offset;
				tmp10.attr("x2",tmp11).attr("y2",y2);
				var tmp12 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp13 = xValueScale(key) + offset;
				tmp12.attr("cx",tmp13).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp14 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp15 = xValueScale(nextKey) + offset;
				tmp14.attr("cx",tmp15).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			}
		}
	}
	,removeMarker: function() {
		if(this._container == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		g.selectAll("#markerLine").remove();
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.resizeGraph();
		return b;
	}
	,resizeGraph: function() {
		if(this.get_width() > 0 && this.get_height() > 0 && this._graph != null) {
			var cx = this.get_width() | 0;
			var cy = this.get_height() | 0;
			this._graph.attr("width",cx).attr("height",cy);
			if(this._chart != null) {
				this._chart.duration(0);
				this._chart.width(cx | 0);
				this._chart.height(cy | 0);
				this._chart.update();
				this._chart.duration(250);
			}
		}
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		this.removeMarker();
		this._data = value;
		if(this._graph != null) {
			this._graph.datum(this._data);
		}
		if(this._chart != null) {
			this._chart.update();
		}
		return value;
	}
	,_coloursBuilt: null
	,buildColours: function(containerId) {
		if(this._coloursBuilt == true) {
			return;
		}
		this._coloursBuilt = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#" + containerId + " .nvd3 .nv-axis line {\n                stroke: " + this.gridColour + ";\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-axis path {\n                stroke: " + this.yAxisColour + ";\n                stroke-opacity: 1;\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-zeroLine line {\n                stroke: " + this.xAxisColour + " !important;\n                stroke-opacity: 1;\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-y .tick.zero line {\n                stroke: " + this.yAxisColour + ";\n                stroke-opacity: 1;\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-group {\n                transform: translate(0px, 0px);\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 text {\n                fill: " + this.textColour + ";\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nv-noData {\n                fill: " + this.textColour + " !important;\n                transform: translate(-15px, 0px);\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-bar.dim {\n                opacity: .2;\n            }",sheet.cssRules.length);
		sheet.insertRule("#" + containerId + " .nvd3 .nv-axis line {\n                opacity: 0;\n            }",sheet.cssRules.length);
	}
	,onThemeChanged: function() {
		haxe_ui_core_Component.prototype.onThemeChanged.call(this);
		if(haxe_ui_Toolkit.get_theme() == "dark") {
			this.xAxisColour = "#b4b4b4";
			this.yAxisColour = "#b4b4b4";
			this.gridColour = "#242729";
			this.textColour = "#b4b4b4";
			this.markerColour = "#ffffff";
		} else if(haxe_ui_Toolkit.get_theme() == "default") {
			this.xAxisColour = "#222222";
			this.yAxisColour = "#222222";
			this.gridColour = "#EEEEEE";
			this.textColour = "#222222";
			this.markerColour = "#444444";
		} else if(haxe_ui_Toolkit.get_theme() == "optex") {
			this.xAxisColour = "#45456e";
			this.yAxisColour = "#45456e";
			this.gridColour = "#45456e";
			this.textColour = "#9292a0";
			this.markerColour = "#ffffff";
		}
		this._coloursBuilt = false;
		this.buildColours(this._container.id);
		this.drawMarker();
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_graphs_HorizontalBarGraph();
	}
	,__class__: core_graphs_HorizontalBarGraph
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_colourCalculator:"set_colourCalculator",get_colourCalculator:"get_colourCalculator",set_noDataLabel:"set_noDataLabel",get_noDataLabel:"get_noDataLabel",set_showLegend:"set_showLegend",get_showLegend:"get_showLegend"})
});
var core_graphs_MarkerFunctions = function() { };
$hxClasses["core.graphs.MarkerFunctions"] = core_graphs_MarkerFunctions;
core_graphs_MarkerFunctions.__name__ = "core.graphs.MarkerFunctions";
core_graphs_MarkerFunctions.get = function(s) {
	if(s == null) {
		return null;
	}
	var details = new core_util_FunctionDetails(s);
	var fn = null;
	switch(details.name) {
	case "deltay":
		fn = new core_graphs_DeltaDataY();
		break;
	case "staticy":
		fn = new core_graphs_StaticY();
		break;
	}
	if(fn == null) {
		return null;
	}
	fn.params = details.params;
	return fn.get();
};
var core_graphs_MarkerFunction = function() {
	this.params = [];
};
$hxClasses["core.graphs.MarkerFunction"] = core_graphs_MarkerFunction;
core_graphs_MarkerFunction.__name__ = "core.graphs.MarkerFunction";
core_graphs_MarkerFunction.prototype = {
	params: null
	,get: function() {
		return null;
	}
	,__class__: core_graphs_MarkerFunction
};
var core_graphs_DeltaDataY = function() {
	core_graphs_MarkerFunction.call(this);
};
$hxClasses["core.graphs.DeltaDataY"] = core_graphs_DeltaDataY;
core_graphs_DeltaDataY.__name__ = "core.graphs.DeltaDataY";
core_graphs_DeltaDataY.__super__ = core_graphs_MarkerFunction;
core_graphs_DeltaDataY.prototype = $extend(core_graphs_MarkerFunction.prototype,{
	get: function() {
		var index1 = this.params[0];
		var index2 = this.params[1];
		return function(data,index) {
			return Math.abs(data[index1].y - data[index2].y);
		};
	}
	,__class__: core_graphs_DeltaDataY
});
var core_graphs_StaticY = function() {
	core_graphs_MarkerFunction.call(this);
};
$hxClasses["core.graphs.StaticY"] = core_graphs_StaticY;
core_graphs_StaticY.__name__ = "core.graphs.StaticY";
core_graphs_StaticY.__super__ = core_graphs_MarkerFunction;
core_graphs_StaticY.prototype = $extend(core_graphs_MarkerFunction.prototype,{
	get: function() {
		var value = this.params[0];
		return function(data,index) {
			return value;
		};
	}
	,__class__: core_graphs_StaticY
});
var core_graphs_ScatterGraphEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["core.graphs.ScatterGraphEvent"] = core_graphs_ScatterGraphEvent;
core_graphs_ScatterGraphEvent.__name__ = "core.graphs.ScatterGraphEvent";
core_graphs_ScatterGraphEvent.__super__ = haxe_ui_events_UIEvent;
core_graphs_ScatterGraphEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	pointIndex: null
	,clone: function() {
		var c = new core_graphs_ScatterGraphEvent(this.type);
		c.pointIndex = this.pointIndex;
		c.data = this.data;
		this.postClone(c);
		return c;
	}
	,__class__: core_graphs_ScatterGraphEvent
});
var core_graphs_ScatterGraph = function() {
	this._coloursBuilt = false;
	this._data = [];
	this._xLabels = null;
	this.getMarkerValueY = null;
	this.markerBehind = false;
	this._pointToSelect = null;
	this._selectedPointIndex = -1;
	this._noDataLabel = "";
	this.markerColour = "#ffffff";
	this.textColour = "#b4b4b4";
	this.gridColour = "#181a1b";
	this.yAxisColour = "#b4b4b4";
	this.xAxisColour = "#b4b4b4";
	this.yAxisField = "y";
	this.xAxisField = "x";
	this._graph = null;
	this._container = null;
	haxe_ui_core_Component.call(this);
};
$hxClasses["core.graphs.ScatterGraph"] = core_graphs_ScatterGraph;
core_graphs_ScatterGraph.__name__ = "core.graphs.ScatterGraph";
core_graphs_ScatterGraph.__super__ = haxe_ui_core_Component;
core_graphs_ScatterGraph.prototype = $extend(haxe_ui_core_Component.prototype,{
	_container: null
	,_graph: null
	,_chart: null
	,xAxisField: null
	,yAxisField: null
	,xAxisColour: null
	,yAxisColour: null
	,gridColour: null
	,textColour: null
	,markerColour: null
	,_noDataLabel: null
	,get_noDataLabel: function() {
		return this._noDataLabel;
	}
	,set_noDataLabel: function(value) {
		if(value == this._noDataLabel) {
			return value;
		}
		this._noDataLabel = value;
		if(this._chart != null) {
			this._chart.noData(value);
			this._chart.update();
		}
		return value;
	}
	,_selectedPointIndex: null
	,onReady: function() {
		var _gthis = this;
		haxe_ui_core_Component.prototype.onReady.call(this);
		if(this.get_id() == null) {
			this.set_id("scatter" + core_graphs_ScatterGraph.nextId);
			core_graphs_ScatterGraph.nextId++;
		}
		var containerId = this.get_id() + "container";
		this._container = window.document.createElement("div");
		this._container.id = containerId;
		this.element.appendChild(this._container);
		this._graph = d3.select(this._container).append("svg");
		this.onThemeChanged();
		nv.addGraph(function() {
			_gthis._chart = nv.models.scatterChart();
			_gthis._chart.showDistX(true);
			_gthis._chart.showDistY(false);
			_gthis._chart.margin({ bottom : 70});
			_gthis._chart.pointRange([0,1000]);
			_gthis._chart.xAxis.staggerLabels(false);
			_gthis._chart.xAxis.rotateLabels(-45);
			_gthis._chart.tooltip.enabled(false);
			_gthis._chart.noData(_gthis.get_noDataLabel());
			_gthis._chart.xAxis.tickValues(_gthis.buildXValues()).tickFormat(function(d) {
				return _gthis.buildXLabels()[d];
			});
			_gthis._chart.scatter.dispatch.on("elementClick",function(e) {
				var index = e.pointIndex;
				if(index == _gthis._selectedPointIndex) {
					_gthis.unselectPoints();
					var event = new core_graphs_ScatterGraphEvent("pointUnselected");
					event.pointIndex = index;
					_gthis.dispatch(event);
					return;
				}
				_gthis.selectPoint(index);
			});
			_gthis._graph.datum(_gthis._data).call(_gthis._chart);
			_gthis.addColorer();
			_gthis._chart.dispatch.on("renderEnd",function() {
				haxe_ui_util_Timer.delay(function() {
					_gthis.drawMarker();
				},100);
			});
			if(_gthis._pointToSelect != null) {
				_gthis.selectPoint(_gthis._pointToSelect);
			}
			_gthis.drawMarker();
			return _gthis._chart;
		});
		haxe_ui_util_Timer.delay(function() {
			_gthis.drawMarker();
		},100);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		this.drawMarker();
	}
	,unselectPoints: function() {
		if(this._container == null) {
			return;
		}
		this._selectedPointIndex = -1;
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var points = g.selectAll(".nv-point");
		points.each(function(d,i) {
			var el = this;
			el.classList.remove("dim");
		});
	}
	,_pointToSelect: null
	,selectPoint: function(pointIndex) {
		if(this._container == null) {
			this._pointToSelect = pointIndex;
			return;
		}
		this._selectedPointIndex = pointIndex;
		var event = new core_graphs_ScatterGraphEvent("pointSelected");
		event.pointIndex = pointIndex;
		var eventData = this._data[0].values[pointIndex];
		eventData.seriesData = [this._data[0].values[pointIndex]];
		event.data = eventData;
		this.dispatch(event);
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		var points = g.selectAll(".nv-point");
		points.each(function(d,i) {
			var el = this;
			if(i == pointIndex) {
				el.classList.remove("dim");
			} else {
				el.classList.add("dim");
			}
		});
		this._pointToSelect = null;
	}
	,selectPointFromData: function(value) {
		if(this._data == null || this._data[0] == null || this._data[0].values == null) {
			return;
		}
		var series = this._data[0].values;
		var index = -1;
		var n = 0;
		var _g = 0;
		while(_g < series.length) {
			var d = series[_g];
			++_g;
			if(d.originalX == value) {
				index = n;
				break;
			}
			++n;
		}
		if(index != -1) {
			this.selectPoint(index);
		}
	}
	,markerBehind: null
	,getMarkerValueY: null
	,drawMarker: function() {
		if(this._container == null || this._graph == null || this._chart == null) {
			return;
		}
		this.removeMarker();
		if(this.getMarkerValueY == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3 .nv-scatter");
		var xValueScale = this._chart.xAxis.scale();
		var yValueScale = this._chart.yAxis.scale();
		var cx = 0;
		var yValuePrev = null;
		var _g = 0;
		var _g1 = this._data[0].values.length | 0;
		while(_g < _g1) {
			var i = _g++;
			var item = [];
			var _g2 = 0;
			var _g3 = this._data;
			while(_g2 < _g3.length) {
				var d = _g3[_g2];
				++_g2;
				item.push(d.values[i]);
			}
			var yValue = this.getMarkerValueY(item,i);
			if(i == 0) {
				yValuePrev = yValue;
				continue;
			}
			var key = this._data[0].values[i - 1][this.xAxisField];
			var nextKey = this._data[0].values[i][this.xAxisField];
			var y1 = yValueScale(yValuePrev);
			var y2 = yValueScale(yValue);
			yValuePrev = yValue;
			var offset = cx / 2;
			if(this.markerBehind == false) {
				var tmp = g.append("line").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp1 = xValueScale(key) + offset;
				var tmp2 = tmp.attr("x1",tmp1).attr("y1",y1);
				var tmp3 = xValueScale(nextKey) + offset;
				tmp2.attr("x2",tmp3).attr("y2",y2);
				var tmp4 = g.append("circle").attr("id","markerLine");
				var tmp5 = xValueScale(key) + offset;
				tmp4.attr("cx",tmp5).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp6 = g.append("circle").attr("id","markerLine");
				var tmp7 = xValueScale(nextKey) + offset;
				tmp6.attr("cx",tmp7).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			} else {
				var tmp8 = g.insert("line",":first-child").attr("id","markerLine").style("stroke",this.markerColour).style("stroke-width","2.0px").style("stroke-dasharray","2,2");
				var tmp9 = xValueScale(key) + offset;
				var tmp10 = tmp8.attr("x1",tmp9).attr("y1",y1);
				var tmp11 = xValueScale(nextKey) + offset;
				tmp10.attr("x2",tmp11).attr("y2",y2);
				var tmp12 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp13 = xValueScale(key) + offset;
				tmp12.attr("cx",tmp13).attr("cy",y1).attr("r","2px").style("fill",this.markerColour);
				var tmp14 = g.insert("circle",":first-child").attr("id","markerLine");
				var tmp15 = xValueScale(nextKey) + offset;
				tmp14.attr("cx",tmp15).attr("cy",y2).attr("r","2px").style("fill",this.markerColour);
			}
		}
	}
	,removeMarker: function() {
		if(this._container == null) {
			return;
		}
		var g = d3.select("#" + this._container.id + " svg .nvd3");
		g.selectAll("#markerLine").remove();
	}
	,buildXValues: function() {
		if(this._data == null || this._data.length == 0) {
			return [];
		}
		var values = [];
		var seriesCount = this._data.length;
		var set = this._data[0].values;
		var n = -1;
		var _g = 0;
		while(_g < set.length) {
			var item = set[_g];
			++_g;
			values.push(n);
			++n;
		}
		return values;
	}
	,_xLabels: null
	,buildXLabels: function() {
		if(this._data == null || this._data.length == 0) {
			return [];
		}
		if(this._xLabels != null) {
			return this._xLabels;
		}
		var labels = [];
		var set = this._data[0].values;
		var _g = 0;
		while(_g < set.length) {
			var item = set[_g];
			++_g;
			labels.push(item.originalX);
		}
		this._xLabels = labels;
		labels.shift();
		return labels;
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_core_Component.prototype.validateComponentLayout.call(this);
		this.resizeGraph();
		return b;
	}
	,resizeGraph: function() {
		if(this.get_width() > 0 && this.get_height() > 0 && this._graph != null) {
			var cx = this.get_width() | 0;
			var cy = this.get_height() | 0;
			this._graph.attr("width",cx).attr("height",cy);
			if(this._chart != null) {
				this._chart.width(cx | 0);
				this._chart.height(cy | 0);
				this._chart.update();
				this.drawMarker();
			}
		}
	}
	,fixData: function(data) {
		if(data == null || data.length == 0) {
			return data;
		}
		var fixedData = [];
		var _g = 0;
		while(_g < data.length) {
			var series = data[_g];
			++_g;
			var fixedValues = [];
			var values = series.values;
			var n = 0;
			fixedValues.push({ originalX : "", x : -1, y : 0, size : 0});
			var _g1 = 0;
			while(_g1 < values.length) {
				var item = values[_g1];
				++_g1;
				fixedValues.push({ originalX : item.x, x : n, y : item.y, size : item.size});
				++n;
			}
			fixedValues.push({ originalX : "", x : n, y : 0, size : 0});
			fixedData.push({ key : series.key, values : fixedValues});
		}
		return fixedData;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		var _gthis = this;
		this._data = this.fixData(value);
		if(this._graph != null) {
			this._graph.datum(this._data);
		}
		if(this._chart != null) {
			this._chart.xAxis.tickValues(this.buildXValues()).tickFormat(function(d) {
				return _gthis.buildXLabels()[d];
			});
			this._chart.dispatch.on("renderEnd",function() {
				_gthis.drawMarker();
			});
			this.drawMarker();
			this._chart.update();
			this.addColorer();
		}
		return value;
	}
	,addColorer: function() {
		var colorer = function(d,i) {
			var y = d[0].y;
			if(y <= 14) {
				return "#448844";
			} else if(y > 14 && y <= 17) {
				return "#FFBF00";
			} else {
				return "#FF4444";
			}
		};
		d3.selectAll("#" + this._container.id + " svg .nv-point").attr({ stroke : colorer, fill : colorer});
	}
	,_coloursBuilt: null
	,buildColours: function(containerId) {
		if(this._coloursBuilt == true) {
			return;
		}
		this._coloursBuilt = true;
		try {
			var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
			sheet.insertRule("#" + containerId + " .nvd3 .nv-axis line {\n                    stroke: " + this.gridColour + ";\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 .nv-axis path {\n                    stroke: " + this.yAxisColour + ";\n                    stroke-opacity: 1;\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 .nv-zeroLine line {\n                    stroke: " + this.xAxisColour + " !important;\n                    stroke-opacity: 1;\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 .nv-y .tick.zero line {\n                    stroke: " + this.yAxisColour + ";\n                    stroke-opacity: 1;\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 .nv-group {\n                    transform: translate(0px, -1px);\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 text {\n                    fill: " + this.textColour + ";\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nv-noData {\n                    fill: " + this.textColour + " !important;\n                }",sheet.cssRules.length);
			sheet.insertRule("#" + containerId + " .nvd3 .nv-point.dim {\n                    opacity: .2;\n                }",sheet.cssRules.length);
		} catch( _g ) {
			var e = haxe_Exception.caught(_g).unwrap();
			haxe_Log.trace(e,{ fileName : "../../haxe/core/graphs/ScatterGraph.hx", lineNumber : 492, className : "core.graphs.ScatterGraph", methodName : "buildColours"});
		}
	}
	,onThemeChanged: function() {
		haxe_ui_core_Component.prototype.onThemeChanged.call(this);
		if(haxe_ui_Toolkit.get_theme() == "dark") {
			this.xAxisColour = "#b4b4b4";
			this.yAxisColour = "#b4b4b4";
			this.gridColour = "#242729";
			this.textColour = "#b4b4b4";
			this.markerColour = "#ffffff";
		} else if(haxe_ui_Toolkit.get_theme() == "default") {
			this.xAxisColour = "#222222";
			this.yAxisColour = "#222222";
			this.gridColour = "#EEEEEE";
			this.textColour = "#222222";
			this.markerColour = "#444444";
		} else if(haxe_ui_Toolkit.get_theme() == "optex") {
			this.xAxisColour = "#45456e";
			this.yAxisColour = "#45456e";
			this.gridColour = "#45456e";
			this.textColour = "#9292a0";
			this.markerColour = "#ffffff";
		}
		this._coloursBuilt = false;
		this.buildColours(this._container.id);
		this.drawMarker();
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new core_graphs_ScatterGraph();
	}
	,__class__: core_graphs_ScatterGraph
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_noDataLabel:"set_noDataLabel",get_noDataLabel:"get_noDataLabel"})
});
var core_util_FunctionDetails = function(s) {
	this._s = s;
	this.parse(s);
};
$hxClasses["core.util.FunctionDetails"] = core_util_FunctionDetails;
core_util_FunctionDetails.__name__ = "core.util.FunctionDetails";
core_util_FunctionDetails.prototype = {
	_s: null
	,name: null
	,params: null
	,parse: function(s) {
		s = StringTools.trim(s);
		this.params = [];
		var n1 = s.indexOf("(");
		if(n1 == -1) {
			this.name = s;
		} else {
			this.name = s.substring(0,n1);
			var rest = s.substring(n1 + 1,s.length - 1);
			var p = rest.split(",");
			var _g = 0;
			while(_g < p.length) {
				var i = p[_g];
				++_g;
				i = StringTools.trim(i);
				if(i.length == 0) {
					continue;
				}
				i = StringTools.replace(i,"'","");
				i = StringTools.replace(i,"\"","");
				this.params.push(haxe_ui_util_TypeConverter.convertFrom(i));
			}
		}
		this.name = this.name.toLowerCase();
		this.name = StringTools.replace(this.name,"-","");
		this.name = StringTools.replace(this.name,"_","");
	}
	,__class__: core_util_FunctionDetails
};
var core_util_color_IColorCalculator = function() { };
$hxClasses["core.util.color.IColorCalculator"] = core_util_color_IColorCalculator;
core_util_color_IColorCalculator.__name__ = "core.util.color.IColorCalculator";
core_util_color_IColorCalculator.__isInterface__ = true;
core_util_color_IColorCalculator.prototype = {
	configure: null
	,getColor: null
	,__class__: core_util_color_IColorCalculator
};
var core_util_color_ColorCalculator = function() {
};
$hxClasses["core.util.color.ColorCalculator"] = core_util_color_ColorCalculator;
core_util_color_ColorCalculator.__name__ = "core.util.color.ColorCalculator";
core_util_color_ColorCalculator.__interfaces__ = [core_util_color_IColorCalculator];
core_util_color_ColorCalculator.prototype = {
	configure: function(params) {
	}
	,getColor: function(data) {
		return null;
	}
	,__class__: core_util_color_ColorCalculator
};
var core_util_color_ColorCalculatorFactory = function() { };
$hxClasses["core.util.color.ColorCalculatorFactory"] = core_util_color_ColorCalculatorFactory;
core_util_color_ColorCalculatorFactory.__name__ = "core.util.color.ColorCalculatorFactory";
core_util_color_ColorCalculatorFactory.getColorCalculator = function(id) {
	var id1 = StringTools.replace(StringTools.replace(id,"-",""),"_","").toLowerCase();
	if(id1 == "range") {
		return new core_util_color_RangeColorCalculator();
	}
	return null;
};
var core_util_color_RangeColorCalculator = function() {
	core_util_color_ColorCalculator.call(this);
};
$hxClasses["core.util.color.RangeColorCalculator"] = core_util_color_RangeColorCalculator;
core_util_color_RangeColorCalculator.__name__ = "core.util.color.RangeColorCalculator";
core_util_color_RangeColorCalculator.__super__ = core_util_color_ColorCalculator;
core_util_color_RangeColorCalculator.prototype = $extend(core_util_color_ColorCalculator.prototype,{
	_ranges: null
	,configure: function(params) {
		this._ranges = [];
		var n = params.length / 3 | 0;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var i = _g++;
			this._ranges.push({ start : params[i * 3], end : params[i * 3 + 1], color : params[i * 3 + 2]});
		}
	}
	,getColor: function(data) {
		var i = data;
		var _g = 0;
		var _g1 = this._ranges;
		while(_g < _g1.length) {
			var range = _g1[_g];
			++_g;
			if(i >= range.start && i <= range.end) {
				return range.color;
			}
		}
		return null;
	}
	,__class__: core_util_color_RangeColorCalculator
});
var haxe_ui_backend_DialogBase = function() {
	this._buttonsCreated = false;
	this._dialogParent = null;
	this._autoSizeDialog = false;
	this.destroyOnClose = true;
	this.button = null;
	this.centerDialog = true;
	this.buttons = null;
	this.autoCenterDialog = true;
	this.modal = true;
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	this.dialogContainer = new haxe_ui_containers_VBox();
	this.dialogContainer.set_id("dialog-container");
	this.dialogContainer.set_styleNames("dialog-container");
	this.addComponent(this.dialogContainer);
	this.dialogTitle = new haxe_ui_containers_HBox();
	this.dialogTitle.set_id("dialog-title");
	this.dialogTitle.set_styleNames("dialog-title");
	this.set_dragInitiator(this.dialogTitle);
	this.dialogContainer.addComponent(this.dialogTitle);
	this.dialogTitleLabel = new haxe_ui_components_Label();
	this.dialogTitleLabel.set_id("dialog-title-label");
	this.dialogTitleLabel.set_styleNames("dialog-title-label");
	this.dialogTitleLabel.set_text("HaxeUI");
	this.dialogTitle.addComponent(this.dialogTitleLabel);
	this.dialogCloseButton = new haxe_ui_components_Image();
	this.dialogCloseButton.set_id("dialog-close-button");
	this.dialogCloseButton.set_styleNames("dialog-close-button");
	this.dialogTitle.addComponent(this.dialogCloseButton);
	this.dialogContent = new haxe_ui_containers_VBox();
	this.dialogContent.set_id("dialog-content");
	this.dialogContent.set_styleNames("dialog-content");
	this.dialogContent.registerEvent("resize",$bind(this,this.onContentResize));
	this.dialogContainer.addComponent(this.dialogContent);
	this.dialogFooterContainer = new haxe_ui_containers_Box();
	this.dialogFooterContainer.set_id("dialog-footer-container");
	this.dialogFooterContainer.set_styleNames("dialog-footer-container");
	this.dialogContainer.addComponent(this.dialogFooterContainer);
	this.dialogFooter = new haxe_ui_containers_HBox();
	this.dialogFooter.set_id("dialog-footer");
	this.dialogFooter.set_styleNames("dialog-footer");
	this.dialogFooter.registerEvent("resize",$bind(this,this.onFooterResize));
	this.dialogFooterContainer.addComponent(this.dialogFooter);
	this.dialogFooterContainer.hide();
	this.dialogCloseButton.set_onClick(function(e) {
		_gthis.hideDialog("{{dialog.cancel}}");
	});
};
$hxClasses["haxe.ui.backend.DialogBase"] = haxe_ui_backend_DialogBase;
haxe_ui_backend_DialogBase.__name__ = "haxe.ui.backend.DialogBase";
haxe_ui_backend_DialogBase.__super__ = haxe_ui_containers_Box;
haxe_ui_backend_DialogBase.prototype = $extend(haxe_ui_containers_Box.prototype,{
	modal: null
	,autoCenterDialog: null
	,buttons: null
	,centerDialog: null
	,button: null
	,_overlay: null
	,dialogContainer: null
	,dialogTitle: null
	,dialogTitleLabel: null
	,dialogCloseButton: null
	,dialogContent: null
	,dialogFooterContainer: null
	,dialogFooter: null
	,destroyOnClose: null
	,_autoSizeDialog: null
	,onReady: function() {
		haxe_ui_containers_Box.prototype.onReady.call(this);
		this._autoSizeDialog = this.get_autoWidth();
	}
	,_dialogParent: null
	,get_dialogParent: function() {
		return this._dialogParent;
	}
	,set_dialogParent: function(value) {
		this._dialogParent = value;
		return value;
	}
	,showDialog: function(modal) {
		if(modal == null) {
			modal = true;
		}
		this.modal = modal;
		this.show();
	}
	,show: function() {
		var _gthis = this;
		this.handleVisibility(false);
		var dp = this.get_dialogParent();
		if(this.modal) {
			this._overlay = new haxe_ui_core_Component();
			this._overlay.set_id("modal-background");
			this._overlay.addClass("modal-background");
			this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			if(dp != null) {
				dp.addComponent(this._overlay);
			} else {
				haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			}
		}
		this.createButtons();
		if(dp != null) {
			dp.addComponent(this);
		} else {
			haxe_ui_core_Screen.get_instance().addComponent(this);
		}
		this.syncComponentValidation();
		if(this.get_autoHeight() == false) {
			this.dialogContainer.set_percentHeight(100);
			this.dialogContent.set_percentHeight(100);
		}
		if(this.centerDialog) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog));
		}
		haxe_ui_Toolkit.callLater(function() {
			if(_gthis.centerDialog) {
				_gthis.centerDialogComponent(js_Boot.__cast(_gthis , haxe_ui_containers_dialogs_Dialog));
			}
			haxe_ui_Toolkit.callLater(function() {
				_gthis.handleVisibility(true);
			});
		});
	}
	,_buttonsCreated: null
	,createButtons: function() {
		if(this._buttonsCreated == true) {
			return;
		}
		if(this.buttons != null) {
			var _g = 0;
			var _g1 = haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons);
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				var buttonComponent = new haxe_ui_components_Button();
				buttonComponent.set_id(haxe_ui_containers_dialogs_DialogButton.toString(button).toLowerCase());
				var text = haxe_ui_containers_dialogs_DialogButton.toString(button);
				buttonComponent.set_text(text);
				buttonComponent.userData = button;
				buttonComponent.registerEvent("click",$bind(this,this.onFooterButtonClick));
				this.addFooterComponent(buttonComponent);
			}
			this._buttonsCreated = true;
		}
	}
	,get_closable: function() {
		return !this.dialogCloseButton.get_hidden();
	}
	,set_closable: function(value) {
		if(value == true) {
			this.dialogCloseButton.show();
		} else {
			this.dialogCloseButton.hide();
		}
		return value;
	}
	,validateDialog: function(button,fn) {
		fn(true);
	}
	,hide: function() {
		var _gthis = this;
		this.validateDialog(this.button,function(result) {
			if(result == true) {
				var dp = _gthis.get_dialogParent();
				var event = new haxe_ui_containers_dialogs_DialogEvent("dialogClosed");
				event.button = _gthis.button;
				_gthis.dispatch(event);
				if(event.canceled == true) {
					return;
				}
				if(_gthis.modal && _gthis._overlay != null) {
					if(dp != null) {
						dp.removeComponent(_gthis._overlay);
					} else {
						haxe_ui_core_Screen.get_instance().removeComponent(_gthis._overlay);
					}
				}
				if(dp != null) {
					dp.removeComponent(_gthis,_gthis.destroyOnClose);
				} else {
					haxe_ui_core_Screen.get_instance().removeComponent(_gthis,_gthis.destroyOnClose);
				}
			}
		});
	}
	,hideDialog: function(button) {
		this.button = button;
		this.hide();
	}
	,get_title: function() {
		return this.dialogTitleLabel.get_text();
	}
	,set_title: function(value) {
		this.dialogTitleLabel.set_text(value);
		return value;
	}
	,addComponent: function(child) {
		if(child.classes.indexOf("dialog-container") != -1) {
			return haxe_ui_containers_Box.prototype.addComponent.call(this,child);
		}
		return this.dialogContent.addComponent(child);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		this.dialogTitle.set_width(this.get_layout().get_innerWidth());
		if(this._autoSizeDialog == false) {
			var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
			if(this.dialogContent.get_width() != this.get_width() - offset) {
				this.dialogContent.set_width(this.get_width() - offset);
			}
			if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
				this.dialogFooterContainer.set_width(this.get_width() - offset);
			}
		}
		return b;
	}
	,onDestroy: function() {
		haxe_ui_containers_Box.prototype.onDestroy.call(this);
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
	}
	,onContentResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,onFooterResize: function(e) {
		if(this.dialogFooter.get_width() <= 0 || this.dialogFooterContainer.get_width() <= 0 || this._autoSizeDialog == false) {
			return;
		}
		var cx = Math.max(this.dialogFooter.get_width(),this.dialogContent.get_width());
		var offset = this.get_layout().get_paddingLeft() + this.get_layout().get_paddingRight();
		var recenter = false;
		if(cx > 0 && cx != this.get_width() + offset) {
			this.set_width(cx + offset);
			recenter = true;
		}
		if(this.dialogFooterContainer.get_width() != this.get_width() - offset) {
			this.dialogFooterContainer.set_width(this.get_width() - offset);
		}
		if(recenter == true && this.autoCenterDialog == true) {
			this.centerDialogComponent(js_Boot.__cast(this , haxe_ui_containers_dialogs_Dialog),false);
		}
	}
	,addFooterComponent: function(c) {
		this.dialogFooterContainer.show();
		this.dialogFooter.addComponent(c);
	}
	,centerDialogComponent: function(dialog,validate) {
		if(validate == null) {
			validate = true;
		}
		if(validate == true) {
			dialog.syncComponentValidation();
		}
		var dp = this.get_dialogParent();
		if(dp != null) {
			if(validate == true) {
				dp.syncComponentValidation();
			}
			var x = dp.get_actualComponentWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			var y = dp.get_actualComponentHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			dialog.moveComponent(x,y);
		} else {
			var x = haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - dialog.get_actualComponentWidth() / 2;
			var y = haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - dialog.get_actualComponentHeight() / 2;
			dialog.moveComponent(x,y);
		}
	}
	,onFooterButtonClick: function(event) {
		this.hideDialog(event.target.userData);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_DialogBase();
	}
	,__class__: haxe_ui_backend_DialogBase
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_title:"set_title",get_title:"get_title",set_closable:"set_closable",get_closable:"get_closable",set_dialogParent:"set_dialogParent",get_dialogParent:"get_dialogParent"})
});
var haxe_ui_containers_dialogs_Dialog = function() {
	var _gthis = this;
	haxe_ui_backend_DialogBase.call(this);
	haxe_ui_actions_ActionManager.get_instance().registerEvent("actionStart",function(event) {
		if(event.action == "actionCancel" || event.action == "actionBack") {
			_gthis.hideDialog("{{dialog.cancel}}");
		}
	});
};
$hxClasses["haxe.ui.containers.dialogs.Dialog"] = haxe_ui_containers_dialogs_Dialog;
haxe_ui_containers_dialogs_Dialog.__name__ = "haxe.ui.containers.dialogs.Dialog";
haxe_ui_containers_dialogs_Dialog.__super__ = haxe_ui_backend_DialogBase;
haxe_ui_containers_dialogs_Dialog.prototype = $extend(haxe_ui_backend_DialogBase.prototype,{
	__onDialogClosed: null
	,onDialogClosed: null
	,set_onDialogClosed: function(value) {
		if(this.__onDialogClosed != null) {
			this.unregisterEvent("dialogClosed",this.__onDialogClosed);
			this.__onDialogClosed = null;
		}
		this.registerEvent("dialogClosed",value);
		this.__onDialogClosed = value;
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_backend_DialogBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_DialogBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_Dialog();
	}
	,__class__: haxe_ui_containers_dialogs_Dialog
	,__properties__: $extend(haxe_ui_backend_DialogBase.prototype.__properties__,{set_onDialogClosed:"set_onDialogClosed"})
});
var dialogs_LoginDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_Grid();
	var c1 = new haxe_ui_components_Label();
	c1.set_text("Username:");
	c1.set_verticalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_TextField();
	c2.set_text("ihar");
	c0.addComponent(c2);
	var c3 = new haxe_ui_components_Label();
	c3.set_text("Password:");
	c3.set_verticalAlign("center");
	c0.addComponent(c3);
	var c4 = new haxe_ui_components_TextField();
	c4.set_text("123456");
	c4.set_password(true);
	c0.addComponent(c4);
	this.addComponent(c0);
	this.set_title("Login");
	this.set_closable(false);
	this.bindingRoot = true;
	this.buttons = "Login";
};
$hxClasses["dialogs.LoginDialog"] = dialogs_LoginDialog;
dialogs_LoginDialog.__name__ = "dialogs.LoginDialog";
dialogs_LoginDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
dialogs_LoginDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new dialogs_LoginDialog();
	}
	,__class__: dialogs_LoginDialog
});
var dialogs_PermissionCheckerDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	var c1 = new haxe_ui_containers_Grid();
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_components_Label();
	c2.set_text("User");
	c2.set_verticalAlign("center");
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_DropDown();
	c3.set_id("userSelector");
	c3.set_percentWidth(100.);
	c1.addComponent(c3);
	var c4 = new haxe_ui_components_Label();
	c4.set_text("Resource Type");
	c4.set_verticalAlign("center");
	c1.addComponent(c4);
	var c5 = new haxe_ui_components_DropDown();
	c5.set_id("resourceTypeSelector");
	c5.set_percentWidth(100.);
	var ds5 = new haxe_ui_data_ArrayDataSource();
	ds5.add({ text : "Organization", resourceType : "1", id : "item"});
	ds5.add({ text : "User", resourceType : "2", id : "item"});
	ds5.add({ text : "User Group", resourceType : "3", id : "item"});
	ds5.add({ text : "Role", resourceType : "4", id : "item"});
	ds5.add({ text : "Site", resourceType : "5", id : "item"});
	ds5.add({ text : "Dashboard", resourceType : "6", id : "item"});
	ds5.add({ text : "Dashboard Group", resourceType : "7", id : "item"});
	c5.set_dataSource(ds5);
	c1.addComponent(c5);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Resource Id");
	c6.set_verticalAlign("center");
	c1.addComponent(c6);
	var c7 = new haxe_ui_components_DropDown();
	c7.set_id("resourceSelector");
	c7.set_percentWidth(100.);
	c1.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_text("Action");
	c8.set_verticalAlign("center");
	c1.addComponent(c8);
	var c9 = new haxe_ui_components_DropDown();
	c9.set_id("actionSelector");
	c9.set_percentWidth(100.);
	var ds9 = new haxe_ui_data_ArrayDataSource();
	ds9.add({ text : "View", actionType : "1", id : "item"});
	ds9.add({ text : "Update", actionType : "2", id : "item"});
	ds9.add({ text : "Add", actionType : "3", id : "item"});
	ds9.add({ text : "Delete", actionType : "4", id : "item"});
	c9.set_dataSource(ds9);
	c1.addComponent(c9);
	var c10 = new haxe_ui_components_Spacer();
	c1.addComponent(c10);
	var c11 = new haxe_ui_components_Label();
	c11.set_id("resultLabel");
	c11.set_percentWidth(100.);
	c11.set_styleString("text-align:right;");
	c1.addComponent(c11);
	c0.addComponent(c1);
	this.addComponent(c0);
	this.set_width(300.);
	this.set_title("Permission Checker");
	this.bindingRoot = true;
	this.userSelector = c3;
	this.resultLabel = c11;
	this.resourceTypeSelector = c5;
	this.resourceSelector = c7;
	this.actionSelector = c9;
	var larr = haxe_ui_containers_dialogs_DialogButton.toString("Check").split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.close}}").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
	var c = this.resourceTypeSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onResourceTypeSelectorChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "resourceTypeSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.PermissionCheckerDialog", methodName : "new"});
	}
};
$hxClasses["dialogs.PermissionCheckerDialog"] = dialogs_PermissionCheckerDialog;
dialogs_PermissionCheckerDialog.__name__ = "dialogs.PermissionCheckerDialog";
dialogs_PermissionCheckerDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
dialogs_PermissionCheckerDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	onReady: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.onReady.call(this);
		this.populateUsers();
	}
	,populateUsers: function() {
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		var _g1 = core_data_InternalDB.users.data;
		while(_g < _g1.length) {
			var user = _g1[_g];
			++_g;
			ds.add({ text : user.get_username(), userId : user.get_userId()});
		}
		this.userSelector.set_dataSource(ds);
	}
	,onResourceTypeSelectorChange: function(_) {
		var resourceType = Std.parseInt(this.resourceTypeSelector.get_selectedItem().resourceType);
		var text = this.resourceTypeSelector.get_selectedItem().text;
		var ds = new haxe_ui_data_ArrayDataSource();
		ds.add({ text : "Any " + text, resourceId : -1});
		switch(resourceType) {
		case 1:
			var _g = 0;
			var _g1 = core_data_InternalDB.organizations.data;
			while(_g < _g1.length) {
				var org = _g1[_g];
				++_g;
				ds.add({ text : org.get_name(), resourceId : org.get_organizationId()});
			}
			break;
		case 2:
			var _g = 0;
			var _g1 = core_data_InternalDB.users.data;
			while(_g < _g1.length) {
				var user = _g1[_g];
				++_g;
				ds.add({ text : user.get_username(), resourceId : user.get_userId()});
			}
			break;
		case 3:
			var _g = 0;
			var _g1 = core_data_InternalDB.userGroups.data;
			while(_g < _g1.length) {
				var userGroup = _g1[_g];
				++_g;
				ds.add({ text : userGroup.get_name(), resourceId : userGroup.get_userGroupId()});
			}
			break;
		case 4:
			var _g = 0;
			var _g1 = core_data_InternalDB.roles.data;
			while(_g < _g1.length) {
				var role = _g1[_g];
				++_g;
				ds.add({ text : role.get_name(), resourceId : role.get_roleId()});
			}
			break;
		case 5:
			break;
		case 6:
			var _g = 0;
			var _g1 = core_data_InternalDB.dashboards.data;
			while(_g < _g1.length) {
				var dashboard = _g1[_g];
				++_g;
				ds.add({ text : dashboard.get_name(), resourceId : dashboard.get_dashboardId()});
			}
			break;
		case 7:
			var _g = 0;
			var _g1 = core_data_InternalDB.dashboardGroups.data;
			while(_g < _g1.length) {
				var dashboardGroup = _g1[_g];
				++_g;
				ds.add({ text : dashboardGroup.get_name(), resourceId : dashboardGroup.get_dashboardGroupId()});
			}
			break;
		}
		this.resourceSelector.set_selectedIndex(-1);
		this.resourceSelector.set_selectedIndex(0);
		this.resourceSelector.set_dataSource(ds);
	}
	,validateDialog: function(button,cb) {
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Check")) != -1) {
			var userId = this.userSelector.get_selectedItem().userId;
			var resourceType = Std.parseInt(this.resourceTypeSelector.get_selectedItem().resourceType);
			var resourceId = this.resourceSelector.get_selectedItem().resourceId;
			var permissionAction = Std.parseInt(this.actionSelector.get_selectedItem().actionType);
			var hasPermission = false;
			var user = core_data_InternalDB.users.utils.user(userId);
			haxe_Log.trace("checking permissions for: " + user.get_userId(),{ fileName : "haxe/dialogs/PermissionCheckerDialog.hx", lineNumber : 102, className : "dialogs.PermissionCheckerDialog", methodName : "validateDialog", customParams : [resourceType,resourceId,permissionAction]});
			var groups = core_data_InternalDB.users.utils.groups(userId);
			haxe_Log.trace("user belongs to following groups:",{ fileName : "haxe/dialogs/PermissionCheckerDialog.hx", lineNumber : 104, className : "dialogs.PermissionCheckerDialog", methodName : "validateDialog"});
			var _g = 0;
			while(_g < groups.length) {
				var group = groups[_g];
				++_g;
				haxe_Log.trace("    " + group.get_name(),{ fileName : "haxe/dialogs/PermissionCheckerDialog.hx", lineNumber : 106, className : "dialogs.PermissionCheckerDialog", methodName : "validateDialog"});
				var roles = core_data_InternalDB.userGroups.utils.roles(group.get_userGroupId());
				var _g1 = 0;
				while(_g1 < roles.length) {
					var role = roles[_g1];
					++_g1;
					haxe_Log.trace("        " + role.get_name(),{ fileName : "haxe/dialogs/PermissionCheckerDialog.hx", lineNumber : 109, className : "dialogs.PermissionCheckerDialog", methodName : "validateDialog"});
					var _g2 = 0;
					var _g3 = core_data_InternalDB.roles.utils.permissions(role.get_roleId());
					while(_g2 < _g3.length) {
						var permission = _g3[_g2];
						++_g2;
						if(permission.get_resourceId() == resourceId && permission.get_resourceType() == resourceType && permission.get_permissionAction() == permissionAction) {
							hasPermission = true;
						}
					}
				}
			}
			hasPermission = core_data_InternalDB.users.utils.hasPermission(userId,resourceType,resourceId,permissionAction);
			if(hasPermission) {
				this.resultLabel.set_text("User has permission");
			} else {
				this.resultLabel.set_text("User does not have permission");
			}
			cb(false);
		} else {
			cb(true);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new dialogs_PermissionCheckerDialog();
	}
	,userSelector: null
	,resultLabel: null
	,resourceTypeSelector: null
	,resourceSelector: null
	,actionSelector: null
	,__class__: dialogs_PermissionCheckerDialog
});
var dialogs_SelectRoleDialog = function() {
	this.selectedRole = null;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_ListView();
	c0.set_id("roleList");
	c0.set_width(400.);
	c0.set_height(200.);
	this.addComponent(c0);
	this.set_title("Select Role");
	this.bindingRoot = true;
	this.roleList = c0;
	var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.cancel}}").split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString("Select").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
	this.populate();
};
$hxClasses["dialogs.SelectRoleDialog"] = dialogs_SelectRoleDialog;
dialogs_SelectRoleDialog.__name__ = "dialogs.SelectRoleDialog";
dialogs_SelectRoleDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
dialogs_SelectRoleDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	selectedRole: null
	,populate: function() {
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		var _g1 = core_data_InternalDB.roles.data;
		while(_g < _g1.length) {
			var role = _g1[_g];
			++_g;
			ds.add({ icon : "themes/optex/person-solid.png", text : role.get_name(), role : role});
		}
		this.roleList.set_dataSource(ds);
	}
	,validateDialog: function(button,cb) {
		this.selectedRole = null;
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Select")) != -1 && this.roleList.get_selectedItem().role != null) {
			this.selectedRole = this.roleList.get_selectedItem().role;
		}
		cb(true);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new dialogs_SelectRoleDialog();
	}
	,roleList: null
	,__class__: dialogs_SelectRoleDialog
});
var dialogs_SelectUserDialog = function() {
	this.selectedUser = null;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_ListView();
	c0.set_id("userList");
	c0.set_width(400.);
	c0.set_height(200.);
	this.addComponent(c0);
	this.set_title("Select User");
	this.bindingRoot = true;
	this.userList = c0;
	var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.cancel}}").split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString("Select").split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	this.buttons = larr.join("|");
	this.populate();
};
$hxClasses["dialogs.SelectUserDialog"] = dialogs_SelectUserDialog;
dialogs_SelectUserDialog.__name__ = "dialogs.SelectUserDialog";
dialogs_SelectUserDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
dialogs_SelectUserDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	selectedUser: null
	,populate: function() {
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		var _g1 = core_data_InternalDB.users.data;
		while(_g < _g1.length) {
			var user = _g1[_g];
			++_g;
			var userLabel = user.get_username() + " (" + user.get_firstName() + " " + user.get_lastName() + ")";
			ds.add({ icon : "themes/optex/user-solid.png", text : userLabel, user : user});
		}
		this.userList.set_dataSource(ds);
	}
	,validateDialog: function(button,cb) {
		this.selectedUser = null;
		var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
		if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Select")) != -1 && this.userList.get_selectedItem().user != null) {
			this.selectedUser = this.userList.get_selectedItem().user;
		}
		cb(true);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new dialogs_SelectUserDialog();
	}
	,userList: null
	,__class__: dialogs_SelectUserDialog
});
var dialogs_TransformBrowserDialog = function() {
	haxe_ui_containers_dialogs_Dialog.call(this);
	var c0 = new haxe_ui_containers_Frame();
	c0.set_percentWidth(100.);
	c0.set_text("Data");
	var c1 = new haxe_ui_containers_HBox();
	c1.set_percentWidth(100.);
	var c2 = new haxe_ui_components_DropDown();
	c2.set_id("databaseSelector");
	c2.set_percentWidth(50.);
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_DropDown();
	c3.set_id("tableSelector");
	c3.set_percentWidth(50.);
	c1.addComponent(c3);
	c0.addComponent(c1);
	this.addComponent(c0);
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Transforms");
	var c5 = new haxe_ui_containers_VBox();
	c5.set_percentWidth(100.);
	var c6 = new haxe_ui_components_TextArea();
	c6.set_id("transformListField");
	c6.set_percentWidth(100.);
	c6.set_placeholder("Enter transform list");
	c5.addComponent(c6);
	var c7 = new haxe_ui_containers_HBox();
	c7.set_percentWidth(100.);
	var c8 = new haxe_ui_components_Button();
	c8.set_id("example1Button");
	c8.set_text("Example 1");
	c7.addComponent(c8);
	var c9 = new haxe_ui_components_Button();
	c9.set_id("example2Button");
	c9.set_text("Example 2");
	c7.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("example3Button");
	c10.set_text("Example 3");
	c7.addComponent(c10);
	var c11 = new haxe_ui_components_Spacer();
	c11.set_percentWidth(100.);
	c7.addComponent(c11);
	var c12 = new haxe_ui_components_Button();
	c12.set_id("applyTransformButton");
	c12.set_text("Apply Transform");
	c7.addComponent(c12);
	c5.addComponent(c7);
	c4.addComponent(c5);
	this.addComponent(c4);
	var c13 = new haxe_ui_containers_Frame();
	c13.set_percentWidth(100.);
	c13.set_percentHeight(100.);
	c13.set_text("Results");
	var c14 = new haxe_ui_containers_TableView();
	c14.set_id("resultsTable");
	c14.set_percentWidth(100.);
	c14.set_percentHeight(100.);
	c14.set_virtual(true);
	c13.addComponent(c14);
	this.addComponent(c13);
	this.set_width(800.);
	this.set_height(600.);
	this.set_title("Transform Browser");
	this.bindingRoot = true;
	this.transformListField = c6;
	this.tableSelector = c3;
	this.resultsTable = c14;
	this.example3Button = c10;
	this.example2Button = c9;
	this.example1Button = c8;
	this.databaseSelector = c2;
	this.applyTransformButton = c12;
	this._footerLabel = new haxe_ui_components_Label();
	this._footerLabel.set_verticalAlign("center");
	this.addFooterComponent(this._footerLabel);
	this.buttons = "{{dialog.close}}";
	this.populateDatabases();
	var c = this.databaseSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onDatabaseSelectorChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "databaseSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
	var c = this.tableSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onTableSelectorChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "tableSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
	var c = this.example1Button;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onExample1));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "example1Button" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
	var c = this.example2Button;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onExample2));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "example2Button" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
	var c = this.example3Button;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onExample3));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "example3Button" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
	var c = this.applyTransformButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onApplyTransform));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "applyTransformButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "dialogs.TransformBrowserDialog", methodName : "new"});
	}
};
$hxClasses["dialogs.TransformBrowserDialog"] = dialogs_TransformBrowserDialog;
dialogs_TransformBrowserDialog.__name__ = "dialogs.TransformBrowserDialog";
dialogs_TransformBrowserDialog.__super__ = haxe_ui_containers_dialogs_Dialog;
dialogs_TransformBrowserDialog.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	_database: null
	,_table: null
	,_footerLabel: null
	,populateDatabases: function() {
		var _gthis = this;
		this._database = null;
		this._table = null;
		core_data_DatabaseManager.get_instance().listDatabases(false).then(function(dbs) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var indexToSelect = 0;
			var n = 0;
			var _g = 0;
			while(_g < dbs.length) {
				var db = dbs[_g];
				++_g;
				if(StringTools.startsWith(db.name,"__")) {
					continue;
				}
				ds.add({ text : db.name, db : db});
				++n;
			}
			_gthis.databaseSelector.set_dataSource(ds);
			_gthis.databaseSelector.set_selectedIndex(-1);
			_gthis.databaseSelector.set_selectedIndex(indexToSelect);
		});
	}
	,onDatabaseSelectorChanged: function(e) {
		var _gthis = this;
		var selectedItem = this.databaseSelector.get_selectedItem();
		if(selectedItem == null) {
			return;
		}
		this._database = selectedItem.db;
		this._table = null;
		this._database.listTables().then(function(tables) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var indexToSelect = 0;
			var n = 0;
			var _g = 0;
			while(_g < tables.length) {
				var table = tables[_g];
				++_g;
				ds.add({ text : table.name, table : table});
				++n;
			}
			ds.sort("name");
			_gthis.tableSelector.set_dataSource(ds);
			_gthis.tableSelector.set_selectedIndex(-1);
			_gthis.tableSelector.set_selectedIndex(indexToSelect);
		});
	}
	,onTableSelectorChange: function(e) {
		if(this.tableSelector.get_selectedItem() == null) {
			return;
		}
		var selectedItem = this.tableSelector.get_selectedItem();
		this._table = selectedItem.table;
		this.refreshTableData(selectedItem.table);
	}
	,onExample1: function(e) {
		this.transformListField.set_text("group-by('Investigator Site')");
	}
	,onExample2: function(e) {
		this.transformListField.set_text("group-by('Investigator Site')\n    ->average('Number Completed Visits')\n    ->average('Data Entry Lag (Days)')\n    ->average('Expected Number of Visits')\n    ->average('Actual Number of Visits')");
	}
	,onExample3: function(e) {
	}
	,onApplyTransform: function(e) {
		this.refreshTableData(this._table,this.transformListField.get_text());
	}
	,refreshTableData: function(table,transformList) {
		var _gthis = this;
		this.resultsTable.clearContents(true);
		table.fetch().then(function(_) {
			table = table.transform(transformList,new haxe_ds_StringMap());
			var colWidths = new haxe_ds_ObjectMap();
			var cols_h = Object.create(null);
			var fieldDefs = table.info.fieldDefinitions;
			var maxCols = 9;
			var n = 0;
			var _g = 0;
			while(_g < fieldDefs.length) {
				var fd = fieldDefs[_g];
				++_g;
				var column = _gthis.resultsTable.addColumn(StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_"));
				column.set_width(column.get_text().length * 10 + 20);
				colWidths.set(column,column.get_width());
				cols_h[column.get_id()] = column;
				if(n > maxCols) {
					break;
				}
				++n;
			}
			var ds = new haxe_ui_data_ArrayDataSource();
			var _g = 0;
			var _g1 = table.records;
			while(_g < _g1.length) {
				var d = _g1[_g];
				++_g;
				var item = { };
				n = 0;
				var _g2 = 0;
				while(_g2 < fieldDefs.length) {
					var fd = fieldDefs[_g2];
					++_g2;
					item[StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_")] = d.getFieldValue(fd.fieldName);
					var column = cols_h[StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_")];
					var columnWidth = colWidths.h[column.__id__];
					var s = Std.string(d.getFieldValue(fd.fieldName));
					var cx = 9;
					if(cx == null) {
						cx = 10;
					}
					var newWidth = s.length * cx + 20;
					if(newWidth > columnWidth) {
						colWidths.set(column,newWidth);
					}
					if(n > maxCols) {
						break;
					}
					++n;
				}
				ds.add(item);
			}
			var column = colWidths.keys();
			while(column.hasNext()) {
				var column1 = column.next();
				var cx = colWidths.h[column1.__id__];
				column1.set_width(cx);
			}
			_gthis.resultsTable.set_dataSource(ds);
			_gthis._footerLabel.set_text(table.records.length + " record(s)");
		});
	}
	,guessStringWidth: function(s,cx) {
		if(cx == null) {
			cx = 10;
		}
		return s.length * cx + 20;
	}
	,safeId: function(fieldName) {
		return StringTools.replace(StringTools.replace(fieldName,"\"","")," ","_");
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new dialogs_TransformBrowserDialog();
	}
	,transformListField: null
	,tableSelector: null
	,resultsTable: null
	,example3Button: null
	,example2Button: null
	,example1Button: null
	,databaseSelector: null
	,applyTransformButton: null
	,__class__: dialogs_TransformBrowserDialog
});
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
$hxClasses["haxe.Exception"] = haxe_Exception;
haxe_Exception.__name__ = "haxe.Exception";
haxe_Exception.caught = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value;
	} else if(((value) instanceof Error)) {
		return new haxe_Exception(value.message,null,value);
	} else {
		return new haxe_ValueException(value,null,value);
	}
};
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	__skipStack: null
	,__nativeException: null
	,__previousException: null
	,unwrap: function() {
		return this.__nativeException;
	}
	,toString: function() {
		return this.get_message();
	}
	,get_message: function() {
		return this.message;
	}
	,get_native: function() {
		return this.__nativeException;
	}
	,__class__: haxe_Exception
	,__properties__: {get_native:"get_native",get_message:"get_message"}
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = "haxe.Resource";
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return x.str;
			}
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) {
				return haxe_io_Bytes.ofString(x.str);
			}
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe__$Unserializer_DefaultResolver = function() {
};
$hxClasses["haxe._Unserializer.DefaultResolver"] = haxe__$Unserializer_DefaultResolver;
haxe__$Unserializer_DefaultResolver.__name__ = "haxe._Unserializer.DefaultResolver";
haxe__$Unserializer_DefaultResolver.prototype = {
	resolveClass: function(name) {
		return $hxClasses[name];
	}
	,resolveEnum: function(name) {
		return $hxEnums[name];
	}
	,__class__: haxe__$Unserializer_DefaultResolver
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = this.buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = new haxe__$Unserializer_DefaultResolver();
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.resolver = r;
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = "haxe.Unserializer";
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g = 0;
	var _g1 = haxe_Unserializer.BASE64.length;
	while(_g < _g1) {
		var i = _g++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	buf: null
	,pos: null
	,length: null
	,cache: null
	,scache: null
	,resolver: null
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c == 45) {
				if(this.pos != fpos) {
					break;
				}
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) {
				break;
			}
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) {
			k *= -1;
		}
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) {
				break;
			}
			if(c >= 43 && c < 58 || c == 101 || c == 69) {
				this.pos++;
			} else {
				break;
			}
		}
		return parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) {
				throw haxe_Exception.thrown("Invalid object");
			}
			if(this.buf.charCodeAt(this.pos) == 103) {
				break;
			}
			var k = this.unserialize();
			if(typeof(k) != "string") {
				throw haxe_Exception.thrown("Invalid object key");
			}
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.buf.charCodeAt(this.pos++) != 58) {
			throw haxe_Exception.thrown("Invalid enum format");
		}
		var nargs = this.readDigits();
		if(nargs == 0) {
			return Type.createEnum(edecl,tag);
		}
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		switch(this.buf.charCodeAt(this.pos++)) {
		case 65:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			return cl;
		case 66:
			var name = this.unserialize();
			var e = this.resolver.resolveEnum(name);
			if(e == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			return e;
		case 67:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			o.hxUnserialize(this);
			if(this.buf.charCodeAt(this.pos++) != 103) {
				throw haxe_Exception.thrown("Invalid custom data");
			}
			return o;
		case 77:
			var h = new haxe_ds_ObjectMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				h.set(s,this.unserialize());
			}
			this.pos++;
			return h;
		case 82:
			var n = this.readDigits();
			if(n < 0 || n >= this.scache.length) {
				throw haxe_Exception.thrown("Invalid string reference");
			}
			return this.scache[n];
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else {
					a.push(this.unserialize());
				}
			}
			return a;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s = this.unserialize();
				var value = this.unserialize();
				h.h[s] = value;
			}
			this.pos++;
			return h;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) {
				throw haxe_Exception.thrown("Class not found " + name);
			}
			var o = Object.create(cl.prototype);
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 100:
			return this.readFloat();
		case 102:
			return false;
		case 105:
			return this.readDigits();
		case 106:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			this.pos++;
			var index = this.readDigits();
			var _this = edecl.__constructs__;
			var result = new Array(_this.length);
			var _g = 0;
			var _g1 = _this.length;
			while(_g < _g1) {
				var i = _g++;
				result[i] = _this[i]._hx_name;
			}
			var tag = result[index];
			if(tag == null) {
				throw haxe_Exception.thrown("Unknown enum index " + name + "@" + index);
			}
			var e = this.unserializeEnum(edecl,tag);
			this.cache.push(e);
			return e;
		case 107:
			return NaN;
		case 108:
			var l = new haxe_ds_List();
			this.cache.push(l);
			var buf = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 109:
			return -Infinity;
		case 110:
			return null;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 112:
			return Infinity;
		case 113:
			var h = new haxe_ds_IntMap();
			this.cache.push(h);
			var buf = this.buf;
			var c = this.buf.charCodeAt(this.pos++);
			while(c == 58) {
				var i = this.readDigits();
				var value = this.unserialize();
				h.h[i] = value;
				c = this.buf.charCodeAt(this.pos++);
			}
			if(c != 104) {
				throw haxe_Exception.thrown("Invalid IntMap format");
			}
			return h;
		case 114:
			var n = this.readDigits();
			if(n < 0 || n >= this.cache.length) {
				throw haxe_Exception.thrown("Invalid reference");
			}
			return this.cache[n];
		case 115:
			var len = this.readDigits();
			var buf = this.buf;
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid bytes length");
			}
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i = this.pos;
			var rest = len & 3;
			var size = (len >> 2) * 3 + (rest >= 2 ? rest - 1 : 0);
			var max = i + (len - rest);
			var bytes = new haxe_io_Bytes(new ArrayBuffer(size));
			var bpos = 0;
			while(i < max) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				var c3 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				var c4 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c3 << 6 | c4;
			}
			if(rest >= 2) {
				var c1 = codes[buf.charCodeAt(i++)];
				var c2 = codes[buf.charCodeAt(i++)];
				bytes.b[bpos++] = c1 << 2 | c2 >> 4;
				if(rest == 3) {
					var c3 = codes[buf.charCodeAt(i++)];
					bytes.b[bpos++] = c2 << 4 | c3 >> 2;
				}
			}
			this.pos += len;
			this.cache.push(bytes);
			return bytes;
		case 116:
			return true;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
				this.pos += 19;
			} else {
				d = new Date(this.readFloat());
			}
			this.cache.push(d);
			return d;
		case 119:
			var name = this.unserialize();
			var edecl = this.resolver.resolveEnum(name);
			if(edecl == null) {
				throw haxe_Exception.thrown("Enum not found " + name);
			}
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 120:
			throw haxe_Exception.thrown(this.unserialize());
		case 121:
			var len = this.readDigits();
			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) {
				throw haxe_Exception.thrown("Invalid string length");
			}
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 122:
			return 0;
		default:
		}
		this.pos--;
		throw haxe_Exception.thrown("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
$hxClasses["haxe.ValueException"] = haxe_ValueException;
haxe_ValueException.__name__ = "haxe.ValueException";
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
	value: null
	,unwrap: function() {
		return this.value;
	}
	,__class__: haxe_ValueException
});
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = s.charCodeAt(i++);
		if(55296 <= c && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(i++) & 1023;
		}
		if(c <= 127) {
			a.push(c);
		} else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw haxe_Exception.thrown(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					var code = (c & 63) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code);
				} else if(c < 240) {
					var c2 = b[i++];
					var code1 = (c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(code1);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__:true,__constructs__:null
	,UTF8: {_hx_name:"UTF8",_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_name:"RawNative",_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
haxe_io_Encoding.__constructs__ = [haxe_io_Encoding.UTF8,haxe_io_Encoding.RawNative];
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = "haxe.crypto.Base64";
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) {
		complement = true;
	}
	if(complement) {
		while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	}
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) ++nbits;
	if(nbits > 8 || len != 1 << nbits) {
		throw haxe_Exception.thrown("BaseCode : base length must be a power of two.");
	}
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = "haxe.crypto.BaseCode";
haxe_crypto_BaseCode.prototype = {
	base: null
	,nbits: null
	,tbl: null
	,initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g = 0;
		var _g1 = this.base.length;
		while(_g < _g1) {
			var i = _g++;
			tbl[this.base.b[i]] = i;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) {
			this.initTable();
		}
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = new haxe_io_Bytes(new ArrayBuffer(size));
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.b[pin++]];
				if(i == -1) {
					throw haxe_Exception.thrown("BaseCode : invalid encoded char");
				}
				buf |= i;
			}
			curbits -= 8;
			out.b[pout++] = buf >> curbits & 255;
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_ArraySort = function() { };
$hxClasses["haxe.ds.ArraySort"] = haxe_ds_ArraySort;
haxe_ds_ArraySort.__name__ = "haxe.ds.ArraySort";
haxe_ds_ArraySort.sort = function(a,cmp) {
	haxe_ds_ArraySort.rec(a,cmp,0,a.length);
};
haxe_ds_ArraySort.rec = function(a,cmp,from,to) {
	var middle = from + to >> 1;
	if(to - from < 12) {
		if(to <= from) {
			return;
		}
		var _g = from + 1;
		var _g1 = to;
		while(_g < _g1) {
			var i = _g++;
			var j = i;
			while(j > from) {
				if(cmp(a[j],a[j - 1]) < 0) {
					haxe_ds_ArraySort.swap(a,j - 1,j);
				} else {
					break;
				}
				--j;
			}
		}
		return;
	}
	haxe_ds_ArraySort.rec(a,cmp,from,middle);
	haxe_ds_ArraySort.rec(a,cmp,middle,to);
	haxe_ds_ArraySort.doMerge(a,cmp,from,middle,to,middle - from,to - middle);
};
haxe_ds_ArraySort.doMerge = function(a,cmp,from,pivot,to,len1,len2) {
	var first_cut;
	var second_cut;
	var len11;
	var len22;
	if(len1 == 0 || len2 == 0) {
		return;
	}
	if(len1 + len2 == 2) {
		if(cmp(a[pivot],a[from]) < 0) {
			haxe_ds_ArraySort.swap(a,pivot,from);
		}
		return;
	}
	if(len1 > len2) {
		len11 = len1 >> 1;
		first_cut = from + len11;
		second_cut = haxe_ds_ArraySort.lower(a,cmp,pivot,to,first_cut);
		len22 = second_cut - pivot;
	} else {
		len22 = len2 >> 1;
		second_cut = pivot + len22;
		first_cut = haxe_ds_ArraySort.upper(a,cmp,from,pivot,second_cut);
		len11 = first_cut - from;
	}
	haxe_ds_ArraySort.rotate(a,cmp,first_cut,pivot,second_cut);
	var new_mid = first_cut + len22;
	haxe_ds_ArraySort.doMerge(a,cmp,from,first_cut,new_mid,len11,len22);
	haxe_ds_ArraySort.doMerge(a,cmp,new_mid,second_cut,to,len1 - len11,len2 - len22);
};
haxe_ds_ArraySort.rotate = function(a,cmp,from,mid,to) {
	if(from == mid || mid == to) {
		return;
	}
	var n = haxe_ds_ArraySort.gcd(to - from,mid - from);
	while(n-- != 0) {
		var val = a[from + n];
		var shift = mid - from;
		var p1 = from + n;
		var p2 = from + n + shift;
		while(p2 != from + n) {
			a[p1] = a[p2];
			p1 = p2;
			if(to - p2 > shift) {
				p2 += shift;
			} else {
				p2 = from + (shift - (to - p2));
			}
		}
		a[p1] = val;
	}
};
haxe_ds_ArraySort.gcd = function(m,n) {
	while(n != 0) {
		var t = m % n;
		m = n;
		n = t;
	}
	return m;
};
haxe_ds_ArraySort.upper = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[val],a[mid]) < 0) {
			len = half;
		} else {
			from = mid + 1;
			len = len - half - 1;
		}
	}
	return from;
};
haxe_ds_ArraySort.lower = function(a,cmp,from,to,val) {
	var len = to - from;
	var half;
	var mid;
	while(len > 0) {
		half = len >> 1;
		mid = from + half;
		if(cmp(a[mid],a[val]) < 0) {
			from = mid + 1;
			len = len - half - 1;
		} else {
			len = half;
		}
	}
	return from;
};
haxe_ds_ArraySort.swap = function(a,i,j) {
	var tmp = a[i];
	a[i] = a[j];
	a[j] = tmp;
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = "haxe.ds.IntMap";
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	h: null
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) {
			return false;
		}
		delete(this.h[key]);
		return true;
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_List = function() {
	this.length = 0;
};
$hxClasses["haxe.ds.List"] = haxe_ds_List;
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
$hxClasses["haxe.ds._List.ListNode"] = haxe_ds__$List_ListNode;
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = key.__id__;
		if(id == null) {
			id = (key.__id__ = $global.$haxeUID++);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return new haxe_iterators_ArrayIterator(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = Object.create(null);
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,__class__: haxe_ds_StringMap
};
var haxe_ds__$StringMap_StringMapKeyIterator = function(h) {
	this.h = h;
	this.keys = Object.keys(h);
	this.length = this.keys.length;
	this.current = 0;
};
$hxClasses["haxe.ds._StringMap.StringMapKeyIterator"] = haxe_ds__$StringMap_StringMapKeyIterator;
haxe_ds__$StringMap_StringMapKeyIterator.__name__ = "haxe.ds._StringMap.StringMapKeyIterator";
haxe_ds__$StringMap_StringMapKeyIterator.prototype = {
	h: null
	,keys: null
	,length: null
	,current: null
	,hasNext: function() {
		return this.current < this.length;
	}
	,next: function() {
		return this.keys[this.current++];
	}
	,__class__: haxe_ds__$StringMap_StringMapKeyIterator
};
var haxe_exceptions_PosException = function(message,previous,pos) {
	haxe_Exception.call(this,message,previous);
	if(pos == null) {
		this.posInfos = { fileName : "(unknown)", lineNumber : 0, className : "(unknown)", methodName : "(unknown)"};
	} else {
		this.posInfos = pos;
	}
};
$hxClasses["haxe.exceptions.PosException"] = haxe_exceptions_PosException;
haxe_exceptions_PosException.__name__ = "haxe.exceptions.PosException";
haxe_exceptions_PosException.__super__ = haxe_Exception;
haxe_exceptions_PosException.prototype = $extend(haxe_Exception.prototype,{
	posInfos: null
	,toString: function() {
		return "" + haxe_Exception.prototype.toString.call(this) + " in " + this.posInfos.className + "." + this.posInfos.methodName + " at " + this.posInfos.fileName + ":" + this.posInfos.lineNumber;
	}
	,__class__: haxe_exceptions_PosException
});
var haxe_exceptions_NotImplementedException = function(message,previous,pos) {
	if(message == null) {
		message = "Not implemented";
	}
	haxe_exceptions_PosException.call(this,message,previous,pos);
};
$hxClasses["haxe.exceptions.NotImplementedException"] = haxe_exceptions_NotImplementedException;
haxe_exceptions_NotImplementedException.__name__ = "haxe.exceptions.NotImplementedException";
haxe_exceptions_NotImplementedException.__super__ = haxe_exceptions_PosException;
haxe_exceptions_NotImplementedException.prototype = $extend(haxe_exceptions_PosException.prototype,{
	__class__: haxe_exceptions_NotImplementedException
});
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__:true,__constructs__:null
	,Blocked: {_hx_name:"Blocked",_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_name:"Overflow",_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_name:"OutsideBounds",_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_._hx_name="Custom",$_.__params__ = ["e"],$_)
};
haxe_io_Error.__constructs__ = [haxe_io_Error.Blocked,haxe_io_Error.Overflow,haxe_io_Error.OutsideBounds,haxe_io_Error.Custom];
var haxe_io_Path = function() { };
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = "haxe.io.Path";
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join(slash);
	if(path == slash) {
		return slash;
	}
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") {
			target.pop();
		} else if(token == "") {
			if(target.length > 0 || HxOverrides.cca(path,0) == 47) {
				target.push(token);
			}
		} else if(token != ".") {
			target.push(token);
		}
	}
	var tmp = target.join(slash);
	var acc_b = "";
	var colon = false;
	var slashes = false;
	var _g2_offset = 0;
	var _g2_s = tmp;
	while(_g2_offset < _g2_s.length) {
		var s = _g2_s;
		var index = _g2_offset++;
		var c = s.charCodeAt(index);
		if(c >= 55296 && c <= 56319) {
			c = c - 55232 << 10 | s.charCodeAt(index + 1) & 1023;
		}
		var c1 = c;
		if(c1 >= 65536) {
			++_g2_offset;
		}
		var c2 = c1;
		switch(c2) {
		case 47:
			if(!colon) {
				slashes = true;
			} else {
				var i = c2;
				colon = false;
				if(slashes) {
					acc_b += "/";
					slashes = false;
				}
				acc_b += String.fromCodePoint(i);
			}
			break;
		case 58:
			acc_b += ":";
			colon = true;
			break;
		default:
			var i1 = c2;
			colon = false;
			if(slashes) {
				acc_b += "/";
				slashes = false;
			}
			acc_b += String.fromCodePoint(i1);
		}
	}
	return acc_b;
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
$hxClasses["haxe.iterators.ArrayIterator"] = haxe_iterators_ArrayIterator;
haxe_iterators_ArrayIterator.__name__ = "haxe.iterators.ArrayIterator";
haxe_iterators_ArrayIterator.prototype = {
	array: null
	,current: null
	,hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
	,__class__: haxe_iterators_ArrayIterator
};
var haxe_ui_backend_BackendImpl = function() { };
$hxClasses["haxe.ui.backend.BackendImpl"] = haxe_ui_backend_BackendImpl;
haxe_ui_backend_BackendImpl.__name__ = "haxe.ui.backend.BackendImpl";
var haxe_ui_Backend = function() { };
$hxClasses["haxe.ui.Backend"] = haxe_ui_Backend;
haxe_ui_Backend.__name__ = "haxe.ui.Backend";
haxe_ui_Backend.__properties__ = {get_id:"get_id"};
haxe_ui_Backend.get_id = function() {
	return haxe_ui_backend_BackendImpl.id;
};
haxe_ui_Backend.__super__ = haxe_ui_backend_BackendImpl;
haxe_ui_Backend.prototype = $extend(haxe_ui_backend_BackendImpl.prototype,{
	__class__: haxe_ui_Backend
});
var haxe_ui_backend_CallLaterImpl = function(fn) {
	window.requestAnimationFrame(function(timestamp) {
		fn();
	});
};
$hxClasses["haxe.ui.backend.CallLaterImpl"] = haxe_ui_backend_CallLaterImpl;
haxe_ui_backend_CallLaterImpl.__name__ = "haxe.ui.backend.CallLaterImpl";
haxe_ui_backend_CallLaterImpl.prototype = {
	__class__: haxe_ui_backend_CallLaterImpl
};
var haxe_ui_CallLater = function(fn) {
	haxe_ui_backend_CallLaterImpl.call(this,fn);
};
$hxClasses["haxe.ui.CallLater"] = haxe_ui_CallLater;
haxe_ui_CallLater.__name__ = "haxe.ui.CallLater";
haxe_ui_CallLater.__super__ = haxe_ui_backend_CallLaterImpl;
haxe_ui_CallLater.prototype = $extend(haxe_ui_backend_CallLaterImpl.prototype,{
	__class__: haxe_ui_CallLater
});
var haxe_ui_backend_AppBase = function() {
	this.__events = null;
};
$hxClasses["haxe.ui.backend.AppBase"] = haxe_ui_backend_AppBase;
haxe_ui_backend_AppBase.__name__ = "haxe.ui.backend.AppBase";
haxe_ui_backend_AppBase.prototype = {
	__events: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.__events == null) {
			this.__events = new haxe_ui_util_EventMap();
		}
		this.__events.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this.__events == null) {
			return false;
		}
		return this.__events.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this.__events != null) {
			this.__events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this.__events != null) {
			this.__events.invoke(event.type,event,null);
		}
	}
	,build: function() {
	}
	,init: function(onReady,onEnd) {
		onReady();
	}
	,getToolkitInit: function() {
		return { };
	}
	,start: function() {
	}
	,exit: function() {
	}
	,buildPreloadList: function() {
		return [];
	}
	,__class__: haxe_ui_backend_AppBase
};
var haxe_ui_backend_AppImpl = function() {
	haxe_ui_backend_AppBase.call(this);
};
$hxClasses["haxe.ui.backend.AppImpl"] = haxe_ui_backend_AppImpl;
haxe_ui_backend_AppImpl.__name__ = "haxe.ui.backend.AppImpl";
haxe_ui_backend_AppImpl.__super__ = haxe_ui_backend_AppBase;
haxe_ui_backend_AppImpl.prototype = $extend(haxe_ui_backend_AppBase.prototype,{
	init: function(onReady,onEnd) {
		var title = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.title");
		if(title != null) {
			haxe_ui_core_Screen.get_instance().set_title(title);
		}
		if(window.document.readyState == "complete") {
			onReady();
		} else {
			window.document.body.onload = function(e) {
				onReady();
			};
		}
	}
	,getToolkitInit: function() {
		return { container : this.findContainer(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container","body"))};
	}
	,findContainer: function(id) {
		var el = null;
		if(id == "body") {
			el = window.document.body;
		} else if(id != null) {
			el = window.document.getElementById(id);
		}
		if(el == null) {
			el = window.document.body;
		}
		el.style.overflow = "hidden";
		return el;
	}
	,__class__: haxe_ui_backend_AppImpl
});
var haxe_ui_HaxeUIApp = function(options) {
	haxe_ui_backend_AppImpl.call(this);
	haxe_ui_HaxeUIApp.instance = this;
	this._options = options;
	haxe_ui_Toolkit.build();
	this.build();
};
$hxClasses["haxe.ui.HaxeUIApp"] = haxe_ui_HaxeUIApp;
haxe_ui_HaxeUIApp.__name__ = "haxe.ui.HaxeUIApp";
haxe_ui_HaxeUIApp.__super__ = haxe_ui_backend_AppImpl;
haxe_ui_HaxeUIApp.prototype = $extend(haxe_ui_backend_AppImpl.prototype,{
	_options: null
	,ready: function(onReady,onEnd) {
		this.init(onReady,onEnd);
	}
	,init: function(onReady,onEnd) {
		if(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme") != null && haxe_ui_Toolkit.get_theme() == "default") {
			haxe_ui_Toolkit.set_theme(haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.theme"));
		}
		if(this._options == null) {
			haxe_ui_Toolkit.init(this.getToolkitInit());
		} else {
			haxe_ui_Toolkit.init(this._options);
		}
		var preloadList = null;
		var preloader = null;
		preloadList = this.buildPreloadList();
		if(preloadList != null && preloadList.length > 0) {
			preloader = new haxe_ui_Preloader();
			preloader.progress(0,preloadList.length);
			this.addComponent(preloader);
			preloader.validateComponent();
		}
		this.handlePreload(preloadList,onReady,onEnd,preloader);
	}
	,handlePreload: function(list,onReady,onEnd,preloader) {
		var _gthis = this;
		if(list == null || list.length == 0) {
			if(preloader != null) {
				preloader.complete();
			}
			haxe_ui_backend_AppImpl.prototype.init.call(this,onReady,onEnd);
			return;
		}
		var item = list.shift();
		switch(item.type) {
		case "font":
			haxe_ui_ToolkitAssets.get_instance().getFont(item.resourceId,function(f) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		case "image":
			haxe_ui_ToolkitAssets.get_instance().getImage(item.resourceId,function(i) {
				if(preloader != null) {
					preloader.increment();
				}
				_gthis.handlePreload(list,onReady,onEnd,preloader);
			});
			break;
		default:
			haxe_Log.trace("WARNING: unknown type to preload \"" + item.type + "\", continuing",{ fileName : "haxe/ui/HaxeUIApp.hx", lineNumber : 81, className : "haxe.ui.HaxeUIApp", methodName : "handlePreload"});
			if(preloader != null) {
				preloader.increment();
			}
			this.handlePreload(list,onReady,onEnd,preloader);
		}
	}
	,addComponent: function(component) {
		return haxe_ui_core_Screen.get_instance().addComponent(component);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return haxe_ui_core_Screen.get_instance().removeComponent(component,dispose);
	}
	,setComponentIndex: function(child,index) {
		return haxe_ui_core_Screen.get_instance().setComponentIndex(child,index);
	}
	,buildPreloadList: function() {
		var list = haxe_ui_backend_AppImpl.prototype.buildPreloadList.call(this);
		if(list == null) {
			list = [];
		}
		list = list.concat(haxe_ui_ToolkitAssets.get_instance().preloadList);
		return list;
	}
	,__class__: haxe_ui_HaxeUIApp
});
var haxe_ui_Preloader = function() {
	haxe_ui_containers_Box.call(this);
	this.set_id("preloader");
	this.set_styleString("width:100%;height:100%;");
	this.set_styleNames("default-background");
};
$hxClasses["haxe.ui.Preloader"] = haxe_ui_Preloader;
haxe_ui_Preloader.__name__ = "haxe.ui.Preloader";
haxe_ui_Preloader.__super__ = haxe_ui_containers_Box;
haxe_ui_Preloader.prototype = $extend(haxe_ui_containers_Box.prototype,{
	createChildren: function() {
		var label = new haxe_ui_components_Label();
		label.set_text("Loading");
		label.set_verticalAlign("center");
		label.set_horizontalAlign("center");
		this.addComponent(label);
	}
	,validateComponentLayout: function() {
		var b = haxe_ui_containers_Box.prototype.validateComponentLayout.call(this);
		var tmp = this.get_actualComponentWidth() > 0 && this.get_actualComponentHeight() > 0;
		return b;
	}
	,_current: null
	,_max: null
	,progress: function(current,max) {
		this._current = current;
		this._max = max;
		if(current > 0) {
			var label = this.findComponent(null,haxe_ui_components_Label);
			var text = label.get_text();
			if(StringTools.endsWith(text,"....")) {
				text = "Loading";
			}
			label.set_text(text);
		}
	}
	,increment: function() {
		this.progress(this._current + 1,this._max);
	}
	,complete: function() {
		haxe_ui_core_Screen.get_instance().removeComponent(this);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_Preloader();
	}
	,__class__: haxe_ui_Preloader
});
var haxe_ui_RuntimeComponentBuilder = function() { };
$hxClasses["haxe.ui.RuntimeComponentBuilder"] = haxe_ui_RuntimeComponentBuilder;
haxe_ui_RuntimeComponentBuilder.__name__ = "haxe.ui.RuntimeComponentBuilder";
haxe_ui_RuntimeComponentBuilder.fromAsset = function(assetId) {
	var data = haxe_ui_ToolkitAssets.get_instance().getText(assetId);
	return haxe_ui_RuntimeComponentBuilder.fromString(data,null,new haxe_ui_parsers_ui_resolvers_AssetResourceResolver(assetId));
};
haxe_ui_RuntimeComponentBuilder.fromString = function(data,type,resourceResolver,callback) {
	if(data == null || data.length == 0) {
		return null;
	}
	if(type == null) {
		if(StringTools.startsWith(StringTools.trim(data),"<")) {
			type = "xml";
		}
	}
	var parser = haxe_ui_parsers_ui_ComponentParser.get(type);
	if(parser == null) {
		haxe_Log.trace("WARNING: type \"" + type + "\" not recognised",{ fileName : "haxe/ui/RuntimeComponentBuilder.hx", lineNumber : 40, className : "haxe.ui.RuntimeComponentBuilder", methodName : "fromString"});
		return null;
	}
	var c = parser.parse(data,resourceResolver);
	var _g = 0;
	var _g1 = c.styles;
	while(_g < _g1.length) {
		var style = _g1[_g];
		++_g;
		if(style.scope == "global") {
			haxe_ui_Toolkit.styleSheet.parse(style.style);
		}
	}
	var component = haxe_ui_RuntimeComponentBuilder.buildComponentFromInfo(c,callback);
	var fullScript = "";
	var _g = 0;
	var _g1 = c.scriptlets;
	while(_g < _g1.length) {
		var scriptString = _g1[_g];
		++_g;
		fullScript += scriptString;
	}
	return component;
};
haxe_ui_RuntimeComponentBuilder.buildComponentFromInfo = function(c,callback) {
	if(c.condition != null && haxe_ui_util_SimpleExpressionEvaluator.evalCondition(c.condition) == false) {
		return null;
	}
	var className = haxe_ui_core_ComponentClassMap.get(c.type.toLowerCase());
	if(className == null) {
		haxe_Log.trace("WARNING: no class found for component: " + c.type,{ fileName : "haxe/ui/RuntimeComponentBuilder.hx", lineNumber : 69, className : "haxe.ui.RuntimeComponentBuilder", methodName : "buildComponentFromInfo"});
		return null;
	}
	var component = Type.createInstance($hxClasses[className],[]);
	if(component == null) {
		haxe_Log.trace("WARNING: could not create class instance: " + className,{ fileName : "haxe/ui/RuntimeComponentBuilder.hx", lineNumber : 75, className : "haxe.ui.RuntimeComponentBuilder", methodName : "buildComponentFromInfo"});
		return null;
	}
	if(c.id != null) {
		component.set_id(c.id);
	}
	if(c.left != null) {
		component.set_left(c.left);
	}
	if(c.top != null) {
		component.set_top(c.top);
	}
	if(c.width != null) {
		component.set_width(c.width);
	}
	if(c.height != null) {
		component.set_height(c.height);
	}
	if(c.percentWidth != null) {
		component.set_percentWidth(c.percentWidth);
	}
	if(c.percentHeight != null) {
		component.set_percentHeight(c.percentHeight);
	}
	if(c.text != null) {
		component.set_text(c.text);
	}
	if(c.styleNames != null) {
		component.set_styleNames(c.styleNames);
	}
	if(c.style != null) {
		component.set_styleString(c.style);
	}
	if(c.layout != null) {
		var layout = haxe_ui_RuntimeComponentBuilder.buildLayoutFromInfo(c.layout);
		component.set_layout(layout);
	}
	if(((component) instanceof haxe_ui_containers_ScrollView)) {
		var scrollview = js_Boot.__cast(component , haxe_ui_containers_ScrollView);
		if(c.contentWidth != null) {
			scrollview.set_contentWidth(c.contentWidth);
		}
		if(c.contentHeight != null) {
			scrollview.set_contentHeight(c.contentHeight);
		}
		if(c.percentContentWidth != null) {
			scrollview.set_percentContentWidth(c.percentContentWidth);
		}
		if(c.percentContentHeight != null) {
			scrollview.set_percentContentHeight(c.percentContentHeight);
		}
	}
	var h = c.properties.h;
	var propName_h = h;
	var propName_keys = Object.keys(h);
	var propName_length = propName_keys.length;
	var propName_current = 0;
	while(propName_current < propName_length) {
		var propName = propName_keys[propName_current++];
		var propValue = c.properties.h[propName];
		if(Object.prototype.hasOwnProperty.call(haxe_ui_core_ComponentFieldMap.MAP.h,propName)) {
			propName = haxe_ui_core_ComponentFieldMap.MAP.h[propName];
		}
		if(!StringTools.startsWith(propName,"on")) {
			if(propName == "resource" && ((component) instanceof haxe_ui_components_Image)) {
				(js_Boot.__cast(component , haxe_ui_components_Image)).set_resource(haxe_ui_util_Variant.fromDynamic(propValue));
			} else if(propName == "icon" && ((component) instanceof haxe_ui_components_Button)) {
				(js_Boot.__cast(component , haxe_ui_components_Button)).set_icon(haxe_ui_util_Variant.fromDynamic(propValue));
			} else {
				propValue = haxe_ui_util_TypeConverter.convertFrom(propValue);
				Reflect.setProperty(component,propName,propValue);
			}
		}
	}
	if(js_Boot.__implements(component,haxe_ui_core_IDataComponent) && c.data != null) {
		(js_Boot.__cast(component , haxe_ui_core_IDataComponent)).set_dataSource(new haxe_ui_data_DataSourceFactory().fromString(c.get_dataString(),haxe_ui_data_ArrayDataSource));
	}
	var _g = 0;
	var _g1 = c.children;
	while(_g < _g1.length) {
		var childInfo = _g1[_g];
		++_g;
		var childComponent = haxe_ui_RuntimeComponentBuilder.buildComponentFromInfo(childInfo,callback);
		if(childComponent != null) {
			component.addComponent(childComponent);
		}
	}
	if(callback != null) {
		callback(component);
	}
	return component;
};
haxe_ui_RuntimeComponentBuilder.buildLayoutFromInfo = function(l) {
	var className = haxe_ui_core_LayoutClassMap.get(l.type.toLowerCase());
	if(className == null) {
		haxe_Log.trace("WARNING: no class found for layout: " + l.type,{ fileName : "haxe/ui/RuntimeComponentBuilder.hx", lineNumber : 141, className : "haxe.ui.RuntimeComponentBuilder", methodName : "buildLayoutFromInfo"});
		return null;
	}
	var layout = Type.createInstance($hxClasses[className],[]);
	if(layout == null) {
		haxe_Log.trace("WARNING: could not create class instance: " + className,{ fileName : "haxe/ui/RuntimeComponentBuilder.hx", lineNumber : 147, className : "haxe.ui.RuntimeComponentBuilder", methodName : "buildLayoutFromInfo"});
		return null;
	}
	var h = l.properties.h;
	var propName_h = h;
	var propName_keys = Object.keys(h);
	var propName_length = propName_keys.length;
	var propName_current = 0;
	while(propName_current < propName_length) {
		var propName = propName_keys[propName_current++];
		var propValue = l.properties.h[propName];
		Reflect.setProperty(layout,propName,haxe_ui_util_Variant.fromDynamic(propValue));
	}
	return layout;
};
var haxe_ui_util_Properties = function() {
	this._props = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.Properties"] = haxe_ui_util_Properties;
haxe_ui_util_Properties.__name__ = "haxe.ui.util.Properties";
haxe_ui_util_Properties.prototype = {
	_props: null
	,exists: function(name) {
		return Object.prototype.hasOwnProperty.call(this._props.h,name);
	}
	,getProp: function(name,defaultValue) {
		var v = defaultValue;
		if(Object.prototype.hasOwnProperty.call(this._props.h,name)) {
			v = this._props.h[name];
		}
		return v;
	}
	,getPropInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = Std.parseInt(stringValue);
		}
		return v;
	}
	,getPropBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			v = stringValue == "true";
		}
		return v;
	}
	,getPropCol: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = defaultValue;
		var stringValue = this.getProp(name);
		if(stringValue != null) {
			var s = stringValue;
			if(StringTools.startsWith(s,"#")) {
				s = s.substring(1,s.length);
			} else if(StringTools.startsWith(s,"0x")) {
				s = s.substring(2,s.length);
			}
			v = Std.parseInt("0x" + s);
		}
		return v;
	}
	,setProp: function(name,value) {
		this._props.h[name] = value;
	}
	,names: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._props.h);
	}
	,addAll: function(p) {
		var name = p.names();
		while(name.hasNext()) {
			var name1 = name.next();
			var this1 = this._props;
			var value = p.getProp(name1);
			this1.h[name1] = value;
		}
	}
	,__class__: haxe_ui_util_Properties
};
var haxe_ui_util_GenericConfig = function() {
	this.values = new haxe_ds_StringMap();
	this.sections = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.GenericConfig"] = haxe_ui_util_GenericConfig;
haxe_ui_util_GenericConfig.__name__ = "haxe.ui.util.GenericConfig";
haxe_ui_util_GenericConfig.prototype = {
	values: null
	,sections: null
	,addSection: function(name) {
		var config = new haxe_ui_util_GenericConfig();
		var array = this.sections.h[name];
		if(array == null) {
			array = [];
			this.sections.h[name] = array;
		}
		array.push(config);
		return config;
	}
	,findBy: function(section,field,value) {
		var array = this.sections.h[section];
		if(array == null) {
			return null;
		}
		if(field == null && value == null) {
			return array[0];
		}
		var r = null;
		var _g = 0;
		while(_g < array.length) {
			var item = array[_g];
			++_g;
			var h = item.values.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(key == field && item.values.h[key] == value) {
					r = item;
					break;
				}
			}
			if(r != null) {
				break;
			}
		}
		return r;
	}
	,queryBool: function(q,defaultValue,conditionRef) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var r = this.query(q,null,conditionRef);
		if(r == null) {
			return defaultValue;
		}
		return r == "true";
	}
	,query: function(q,defaultValue,conditionRef) {
		if(Object.prototype.hasOwnProperty.call(haxe_ui_util_GenericConfig.cache.h,q)) {
			if(defaultValue != null && haxe_ui_util_GenericConfig.cache.h[q] == null) {
				return defaultValue;
			}
			return haxe_ui_util_GenericConfig.cache.h[q];
		}
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var value = null;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			} else if(f.indexOf("@") != -1) {
				var v = HxOverrides.substr(f,1,f.length);
				value = ref.values.h[v];
				break;
			}
			if(ref == null) {
				haxe_ui_util_GenericConfig.cache.h[q] = defaultValue;
				return defaultValue;
			}
		}
		if(value == null) {
			value = defaultValue;
		}
		if(value != null) {
			haxe_ui_util_GenericConfig.cache.h[q] = value;
		}
		return value;
	}
	,queryValues: function(q,conditionRef) {
		var regexp = new EReg("\\.(?![^\\[]*\\])","g");
		var finalArray = regexp.split(q);
		var ref = this;
		var _g = 0;
		while(_g < finalArray.length) {
			var f = finalArray[_g];
			++_g;
			if(f.indexOf("[") == -1 && f.indexOf("@") == -1) {
				ref = ref.findBy(f);
			} else if(f.indexOf("[") != -1) {
				var p = f.split("[");
				var p1 = p[0];
				var p2 = p[1].split("=")[0];
				var p3 = p[1].split("=")[1];
				p3 = HxOverrides.substr(p3,0,p3.length - 1);
				ref = ref.findBy(p1,p2,p3);
			}
			if(ref == null) {
				return null;
			}
		}
		return ref.values;
	}
	,__class__: haxe_ui_util_GenericConfig
};
var haxe_ui_styles_CompositeStyleSheet = function() {
	this._animations = null;
	this._styleSheets = [];
};
$hxClasses["haxe.ui.styles.CompositeStyleSheet"] = haxe_ui_styles_CompositeStyleSheet;
haxe_ui_styles_CompositeStyleSheet.__name__ = "haxe.ui.styles.CompositeStyleSheet";
haxe_ui_styles_CompositeStyleSheet.prototype = {
	_styleSheets: null
	,_animations: null
	,get_animations: function() {
		if(this._animations != null) {
			return this._animations;
		}
		this._animations = new haxe_ds_StringMap();
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var h = s.get_animations().h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				var a = s.get_animations().h[key];
				this._animations.h[key] = a;
			}
		}
		return this._animations;
	}
	,findAnimation: function(id) {
		var h = this.get_animations().h;
		var a_h = h;
		var a_keys = Object.keys(h);
		var a_length = a_keys.length;
		var a_current = 0;
		while(a_current < a_length) {
			var a = a_h[a_keys[a_current++]];
			if(a.id == id) {
				return a;
			}
		}
		return null;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var styleSheet = _g1[_g];
			++_g;
			if(styleSheet.get_hasMediaQueries() == true) {
				return true;
			}
		}
		return false;
	}
	,getAnimation: function(id,create) {
		if(create == null) {
			create = true;
		}
		var a = this.findAnimation(id);
		if(a == null) {
			a = new haxe_ui_styles_elements_AnimationKeyFrames(id,[]);
			this.addAnimation(a);
		}
		return a;
	}
	,addAnimation: function(animation) {
		this._styleSheets[0].addAnimation(animation);
	}
	,addStyleSheet: function(styleSheet) {
		this._styleSheets.push(styleSheet);
	}
	,removeStyleSheet: function(styleSheet) {
		HxOverrides.remove(this._styleSheets,styleSheet);
	}
	,parse: function(css,styleSheetName,invalidateAll) {
		if(invalidateAll == null) {
			invalidateAll = false;
		}
		if(styleSheetName == null) {
			styleSheetName = "default";
		}
		var s = this.findStyleSheet(styleSheetName);
		if(s == null) {
			s = new haxe_ui_styles_StyleSheet();
			s.name = styleSheetName;
			this._styleSheets.push(s);
		}
		s.parse(css);
		this._animations = null;
		if(invalidateAll == true) {
			haxe_ui_core_Screen.get_instance().invalidateAll();
		}
	}
	,findStyleSheet: function(styleSheetName) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			if(s.name == styleSheetName) {
				return s;
			}
		}
		return null;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			var el = s.findRule(selector);
			if(el != null) {
				return el;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			m = m.concat(s.findMatchingRules(selector));
		}
		return m;
	}
	,getAllRules: function() {
		var r = [];
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			r = r.concat(s.get_rules());
		}
		return r;
	}
	,buildStyleFor: function(c) {
		var style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		var _g = 0;
		var _g1 = this._styleSheets;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			style = s.buildStyleFor(c,style);
		}
		return style;
	}
	,clear: function(styleSheetName) {
		var s = this.findStyleSheet(styleSheetName);
		if(s != null) {
			s.clear();
			this._animations = null;
		}
	}
	,__class__: haxe_ui_styles_CompositeStyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_animations:"get_animations"}
};
var haxe_ui_Toolkit = function() { };
$hxClasses["haxe.ui.Toolkit"] = haxe_ui_Toolkit;
haxe_ui_Toolkit.__name__ = "haxe.ui.Toolkit";
haxe_ui_Toolkit.__properties__ = {set_scale:"set_scale",get_scale:"get_scale",set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",get_autoScaleDPIThreshold:"get_autoScaleDPIThreshold",set_pixelsPerRem:"set_pixelsPerRem",get_screen:"get_screen",get_assets:"get_assets",get_initialized:"get_initialized",get_backendProperties:"get_backendProperties",set_theme:"set_theme",get_theme:"get_theme"};
haxe_ui_Toolkit.get_theme = function() {
	return haxe_ui_Toolkit._theme;
};
haxe_ui_Toolkit.set_theme = function(value) {
	if(haxe_ui_Toolkit._theme == value) {
		return value;
	}
	haxe_ui_Toolkit._theme = value;
	if(haxe_ui_Toolkit._initialized == true) {
		haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
		haxe_ui_core_Screen.get_instance().onThemeChanged();
		haxe_ui_core_Screen.get_instance().invalidateAll();
	}
	return value;
};
haxe_ui_Toolkit.get_backendProperties = function() {
	haxe_ui_Toolkit.buildBackend();
	return haxe_ui_Toolkit._backendProperties;
};
haxe_ui_Toolkit.build = function() {
	if(haxe_ui_Toolkit._built == true) {
		return;
	}
	haxe_ui_themes_ThemeManager.get_instance().getTheme("native").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","haxeui-core/styles/native/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","haxeui-core/styles/global.css",-4.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/main.css",-3.,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/buttons.css",-2.99,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dialogs.css",-2.98000000000000043,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/textinputs.css",-2.97000000000000064,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollbars.css",-2.96000000000000085,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/scrollview.css",-2.95000000000000107,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/checkboxes.css",-2.94000000000000128,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/optionboxes.css",-2.93000000000000149,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/ranges.css",-2.92000000000000171,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/progressbars.css",-2.91000000000000192,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sliders.css",-2.90000000000000213,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/steppers.css",-2.89000000000000234,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tabs.css",-2.88000000000000256,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/listview.css",-2.87000000000000277,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/dropdowns.css",-2.86000000000000298,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tableview.css",-2.8500000000000032,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/switches.css",-2.84000000000000341,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/calendars.css",-2.83000000000000362,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/menus.css",-2.82000000000000384,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/accordion.css",-2.81000000000000405,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/propertygrids.css",-2.80000000000000426,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/frames.css",-2.79000000000000448,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/splitters.css",-2.78000000000000469,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/tooltips.css",-2.7700000000000049,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/rules.css",-2.76000000000000512,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/sidebars.css",-2.75000000000000533,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/cards.css",-2.74000000000000554,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/treeviews.css",-2.73000000000000576,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","haxeui-core/styles/default/last.css",-2.72000000000000597,null);
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","warning-large","haxeui-core/styles/shared/warning-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tooltip-background-color","#fffff8");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","tertiary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-desc","haxeui-core/styles/shared/sortable-desc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","sort-asc","haxeui-core/styles/shared/sortable-asc-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-hover","#fcfcfc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-down","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-disabled","#fefefe");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color-alt","#fafafa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","solid-background-color","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-text-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color-hover","#d9e5f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","selection-background-color","#b4cbe4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","secondary-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","search","haxeui-core/styles/shared/search.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-button-color","#d6d6d6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","scrollbar-background-color","#f0f0f0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","question-large","haxeui-core/styles/shared/help-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","option-selected","haxeui-core/styles/shared/option-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-text-color","#666666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-inner-shadow","drop-shadow(1, 45, #888888, 0.1, 1, 1, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-border-color","#d2d2d2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","normal-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","modal-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","menu-shadow","drop-shadow(2, 45, #888888, 0.1, 4, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","lighter-text-color","#a0a0a0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","info-large","haxeui-core/styles/shared/info-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-border-color","#c0c0c0");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-start","#f2f2f2");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","hover-background-color-end","#e1e1e1");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-vertical","haxeui-core/styles/shared/gripper-vertical.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","gripper-horizontal","haxeui-core/shared/default/gripper-horizontal.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","expanded","haxeui-core/styles/shared/collapsed-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-text-color","#ff0000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-large","haxeui-core/styles/shared/error-large.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","error-background-color","#ffdddd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-text-color","#444444");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-border-color","#b3b3b3");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-start","#e6e6e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","down-background-color-end","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-text-color","#cccccc");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-border-color","#e4e4e4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-start","#fdfdfd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","disabled-background-color-end","#f6f6f6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","dialog-shadow","drop-shadow(1, 45, #888888, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","default-background-color","#ffffff");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","collapsed","haxeui-core/styles/shared/expanded-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close-hover","haxeui-core/styles/shared/close-button-white.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","close","haxeui-core/styles/shared/close-button-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","check-selected","haxeui-core/styles/shared/check-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","blank","haxeui-core/styles/shared/blank.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up-down","haxeui-core/styles/shared/sortable-arrows-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-up","haxeui-core/styles/shared/up-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right-square","haxeui-core/styles/shared/right-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-right","haxeui-core/styles/shared/right-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-left","haxeui-core/styles/shared/left-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down-square","haxeui-core/styles/shared/down-arrow-square-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","arrow-down","haxeui-core/styles/shared/down-arrow-blue.png");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-start","#98c4e6");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-gradient-end","#549bde");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-lighter","#ecf2f9");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("default","accent-color","#83aad4");
	haxe_ui_themes_ThemeManager.get_instance().getTheme("dark").parent = "default";
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tooltip-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","tertiary-background-color","#313435");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-hover","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-down","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-disabled","#2f3132");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color-alt","#2d2e2f");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","solid-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-text-color","#d4d4d4");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color-hover","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","selection-background-color","#415982");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","secondary-background-color","#3d3f41");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-button-color","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","scrollbar-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-text-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-inner-shadow","drop-shadow(1, 45, #000000, 0.2, 2, 2, 1, 3, true)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-size","1px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-radius","2px");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-start","#3e4142");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","normal-background-color-end","#36383a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","modal-background-color","#181a1b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","menu-shadow","drop-shadow(2, 45, #000000, 0.15, 6, 1, 30, 35, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","lighter-text-color","#737373");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-text-color","#bbbbbb");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-start","#434647");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","hover-background-color-end","#393b3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-text-color","#ff0000");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","error-background-color","#ffdddd");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-text-color","#999999");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-border-color","#222426");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-start","#393c3c");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","down-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-text-color","#595959");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-border-color","#26292b");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-start","#36393a");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","disabled-background-color-end","#313335");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-title-color","#aaaaaa");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","dialog-shadow","drop-shadow(1, 45, #000000, 0.2, 30, 2, 1, 3, false)");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","default-background-color","#2c2f30");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-start","#334666");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-gradient-end","#2f3746");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-lighter","#323e52");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color-darker","#407dbf");
	haxe_ui_themes_ThemeManager.get_instance().setThemeVar("dark","accent-color","#3c5177");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("en","haxeui-core/locale/en/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("es","haxeui-core/locale/es/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("de","haxeui-core/locale/de/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("fr","haxeui-core/locale/fr/dialog.properties");
	haxe_ui_locale_LocaleManager.get_instance().parseResource("it","haxeui-core/locale/it/dialog.properties");
	haxe_ui_actions_ActionManager.get_instance().registerInputSource(new haxe_ui_actions_KeyboardActionInputSource());
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("native","styles/native/main.css",-1,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("global","styles/main.css",-2,null);
	haxe_ui_themes_ThemeManager.get_instance().addStyleResource("default","styles/default/main.css",-1,null);
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/default/haxeui_small.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/default/haxeui_tiny.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/default/haxeui.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/help-medium.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/warning-small.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/folder-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/gripper-horizontal.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/error-medium.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/info-small.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/left-arrow-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/help-small.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/left-arrow-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/up-arrow-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-bright.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/gripper-vertical.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/close-button-white.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/check-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/blank.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-square-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/info-large.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-bright.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/close-button-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/expanded-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-asc-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-arrows-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-square-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/left-arrow-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-square-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/collapsed-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/expanded-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-square-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/warning-large.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/search.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/left-arrow-bright.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/info-medium.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/option-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/option-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/up-arrow-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/up-arrow-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/error-large.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-desc-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-square-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/check-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/warning-medium.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-asc-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-arrows-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/collapsed-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/sortable-desc-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-square-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/right-arrow-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/transparent_px.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/up-arrow-bright.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/option-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/check-bright.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/error-small.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/up-down-arrows-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/down-arrow-light.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/check-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/help-large.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/close-button-blue.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "haxeui-core/styles/shared/close-button-dark.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/clintex-logo-text.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-virtual-machine-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-tools-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-dashboard-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-layout-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-laptop-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/clintex-logo-all.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-folder-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-data-protection-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-edit-32.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/database(1).png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-top-menu-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-wrench-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-dashboard-layout-96.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-settings-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-plus-+-32.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/database.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-edit-32(1).png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/clintex-logo-icon.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-services-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-database-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-smartphone-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-data-sheet-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-dashboard-layout-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-delete-32.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-services-96.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-folder-16.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-data-protection-96.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-server-48.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "icons/icons8-database-48(1).png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "font", resourceId : "fonts/Roboto-Regular.ttf"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "font", resourceId : "fonts/Roboto-Bold.ttf"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/diagram-project-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/map-marker-alt-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/exclamation-triangle-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/oem-console-logo.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/folder-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/search-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/clintex-logo.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/sitemap-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/user-group-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/user-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/person-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/tachometer-alt-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/database-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/dot.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/directions-solid.png"});
	haxe_ui_ToolkitAssets.get_instance().preloadList.push({ type : "image", resourceId : "themes/optex/exclamation-solid.png"});
	haxe_ui_Toolkit.buildBackend();
	haxe_ui_Toolkit._built = true;
};
haxe_ui_Toolkit.buildBackend = function() {
	if(haxe_ui_Toolkit._backendBuilt == true) {
		return;
	}
	haxe_ui_util_Defines.set("utf16","1");
	haxe_ui_util_Defines.set("true","1");
	haxe_ui_util_Defines.set("target.utf16","true");
	haxe_ui_util_Defines.set("target.unicode","true");
	haxe_ui_util_Defines.set("target.name","js");
	haxe_ui_util_Defines.set("source_header","Generated by Haxe 4.2.4");
	haxe_ui_util_Defines.set("linux","1");
	haxe_ui_util_Defines.set("js_es5","1");
	haxe_ui_util_Defines.set("js_es","5");
	haxe_ui_util_Defines.set("js-es5","1");
	haxe_ui_util_Defines.set("js","1");
	haxe_ui_util_Defines.set("html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui_core","1.4.0");
	haxe_ui_util_Defines.set("haxeui-html5","1.4.0");
	haxe_ui_util_Defines.set("haxeui-core","1.4.0");
	haxe_ui_util_Defines.set("haxe_ver","4.204");
	haxe_ui_util_Defines.set("haxe4","1");
	haxe_ui_util_Defines.set("haxe3","1");
	haxe_ui_util_Defines.set("haxe","4.2.4");
	haxe_ui_util_Defines.set("dce","std");
	haxe_ui_util_Defines.set("core","1.4.0");
	haxe_ui_util_Defines.set("backend","html5");
	haxe_ui_Toolkit._backendBuilt = true;
};
haxe_ui_Toolkit.get_initialized = function() {
	return haxe_ui_Toolkit._initialized;
};
haxe_ui_Toolkit.init = function(options) {
	haxe_ui_Toolkit.build();
	haxe_ui_themes_ThemeManager.get_instance().applyTheme(haxe_ui_Toolkit._theme);
	if(options != null) {
		haxe_ui_Toolkit.get_screen().set_options(options);
		haxe_ui_ToolkitAssets.get_instance().options = options;
	}
	haxe_ui_Toolkit.get_screen().registerEvent("keydown",haxe_ui_Toolkit.onKeyDown);
	haxe_ui_Toolkit._initialized = true;
};
haxe_ui_Toolkit.onKeyDown = function(event) {
	if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("tab")) {
		if(event.shiftKey == false) {
			haxe_ui_focus_FocusManager.get_instance().focusNext();
		} else {
			haxe_ui_focus_FocusManager.get_instance().focusPrev();
		}
	}
};
haxe_ui_Toolkit.get_assets = function() {
	return haxe_ui_ToolkitAssets.get_instance();
};
haxe_ui_Toolkit.get_screen = function() {
	return haxe_ui_core_Screen.get_instance();
};
haxe_ui_Toolkit.set_pixelsPerRem = function(value) {
	if(haxe_ui_Toolkit.pixelsPerRem == value) {
		return value;
	}
	haxe_ui_Toolkit.pixelsPerRem = value;
	haxe_ui_core_Screen.get_instance().refreshStyleRootComponents();
	return value;
};
haxe_ui_Toolkit.get_autoScaleDPIThreshold = function() {
	if(haxe_ui_core_Screen.get_instance().get_isRetina() == true) {
		return 192;
	}
	return 120;
};
haxe_ui_Toolkit.get_scaleX = function() {
	if(haxe_ui_Toolkit._scaleX == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleX = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleX = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleX = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleX = 1;
		}
	}
	return haxe_ui_Toolkit._scaleX;
};
haxe_ui_Toolkit.set_scaleX = function(value) {
	if(haxe_ui_Toolkit._scaleX == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleX = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scaleY = function() {
	if(haxe_ui_Toolkit._scaleY == 0) {
		if(haxe_ui_Toolkit.autoScale == true) {
			var dpi = haxe_ui_core_Screen.get_instance().get_dpi();
			if(dpi > haxe_ui_Toolkit.get_autoScaleDPIThreshold()) {
				if(haxe_ui_Toolkit.roundScale == true) {
					haxe_ui_Toolkit._scaleY = Math.round(dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold());
				} else {
					haxe_ui_Toolkit._scaleY = dpi / haxe_ui_Toolkit.get_autoScaleDPIThreshold();
				}
			} else {
				haxe_ui_Toolkit._scaleY = 1;
			}
		} else {
			haxe_ui_Toolkit._scaleY = 1;
		}
	}
	return haxe_ui_Toolkit._scaleY;
};
haxe_ui_Toolkit.set_scaleY = function(value) {
	if(haxe_ui_Toolkit._scaleY == value) {
		return value;
	}
	haxe_ui_Toolkit._scaleY = value;
	haxe_ui_Toolkit.autoScale = false;
	return value;
};
haxe_ui_Toolkit.get_scale = function() {
	return Math.max(haxe_ui_Toolkit.get_scaleX(),haxe_ui_Toolkit.get_scaleY());
};
haxe_ui_Toolkit.set_scale = function(value) {
	haxe_ui_Toolkit.set_scaleX(value);
	haxe_ui_Toolkit.set_scaleY(value);
	return value;
};
haxe_ui_Toolkit.callLater = function(fn) {
	new haxe_ui_CallLater(fn);
};
var haxe_ui_backend_AssetsBase = function() {
};
$hxClasses["haxe.ui.backend.AssetsBase"] = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsBase.__name__ = "haxe.ui.backend.AssetsBase";
haxe_ui_backend_AssetsBase.isAbsolutePath = function(path) {
	if(StringTools.startsWith(path,"/")) {
		return true;
	}
	if(path.charAt(1) == ":") {
		return true;
	}
	if(StringTools.startsWith(path,"\\\\")) {
		return true;
	}
	return false;
};
haxe_ui_backend_AssetsBase.prototype = {
	getTextDelegate: function(resourceId) {
		return null;
	}
	,getImageInternal: function(resourceId,callback) {
		callback(null);
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageFromBytes: function(bytes,callback) {
		callback(null);
	}
	,imageFromFile: function(filename,callback) {
		haxe_Log.trace("WARNING: cant load from file system on non-sys targets [" + filename + "]",{ fileName : "haxe/ui/backend/AssetsBase.hx", lineNumber : 50, className : "haxe.ui.backend.AssetsBase", methodName : "imageFromFile"});
		callback(null);
	}
	,getFontInternal: function(resourceId,callback) {
		callback(null);
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		callback(resourceId,null);
	}
	,imageInfoFromImageData: function(imageData) {
		return { data : imageData, width : 0, height : 0};
	}
	,__class__: haxe_ui_backend_AssetsBase
};
var haxe_ui_backend_AssetsImpl = function() {
	haxe_ui_backend_AssetsBase.call(this);
};
$hxClasses["haxe.ui.backend.AssetsImpl"] = haxe_ui_backend_AssetsImpl;
haxe_ui_backend_AssetsImpl.__name__ = "haxe.ui.backend.AssetsImpl";
haxe_ui_backend_AssetsImpl.__super__ = haxe_ui_backend_AssetsBase;
haxe_ui_backend_AssetsImpl.prototype = $extend(haxe_ui_backend_AssetsBase.prototype,{
	getImageInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes != null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			callback(null);
		};
		image.src = resourceId;
	}
	,getImageFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		this.imageFromBytes(bytes,function(imageInfo) {
			callback(resourceId,imageInfo);
		});
	}
	,imageFromBytes: function(bytes,callback) {
		if(bytes == null) {
			callback(null);
			return;
		}
		var image = window.document.createElement("img");
		image.onload = function(e) {
			var imageInfo = { width : image.width, height : image.height, data : image};
			callback(imageInfo);
		};
		image.onerror = function(e) {
			window.console.log(e);
			callback(null);
		};
		var blob = new Blob([bytes.b.bufferValue]);
		var blobUrl = URL.createObjectURL(blob);
		image.src = blobUrl;
	}
	,getFontInternal: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(resourceId,function(f) {
				var fontInfo = { data : f};
				callback(fontInfo);
			},function(f) {
				callback(null);
			});
			return;
		}
		this.getFontFromHaxeResource(resourceId,function(r,f) {
			callback(f);
		});
	}
	,getFontFromHaxeResource: function(resourceId,callback) {
		var bytes = haxe_Resource.getBytes(resourceId);
		if(bytes == null) {
			callback(resourceId,null);
			return;
		}
		var fontFamilyParts = resourceId.split("/");
		var fontFamily = fontFamilyParts[fontFamilyParts.length - 1];
		if(fontFamily.indexOf(".") != -1) {
			fontFamily = HxOverrides.substr(fontFamily,0,fontFamily.indexOf("."));
		}
		var fontFace = new FontFace(fontFamily,bytes.b.bufferValue);
		fontFace.load().then(function(loadedFace) {
			window.document.fonts.add(loadedFace);
			haxe_ui_backend_html5_util_FontDetect.onFontLoaded(fontFamily,function(f) {
				var fontInfo = { data : fontFamily};
				callback(resourceId,fontInfo);
			},function(f) {
				callback(resourceId,null);
			});
		}).catch(function(error) {
			callback(resourceId,null);
		});
	}
	,__class__: haxe_ui_backend_AssetsImpl
});
var haxe_ui_ToolkitAssets = function() {
	this.options = null;
	this.preloadList = [];
	haxe_ui_backend_AssetsImpl.call(this);
};
$hxClasses["haxe.ui.ToolkitAssets"] = haxe_ui_ToolkitAssets;
haxe_ui_ToolkitAssets.__name__ = "haxe.ui.ToolkitAssets";
haxe_ui_ToolkitAssets.__properties__ = {get_instance:"get_instance"};
haxe_ui_ToolkitAssets.get_instance = function() {
	if(haxe_ui_ToolkitAssets._instance == null) {
		haxe_ui_ToolkitAssets._instance = new haxe_ui_ToolkitAssets();
	}
	return haxe_ui_ToolkitAssets._instance;
};
haxe_ui_ToolkitAssets.__super__ = haxe_ui_backend_AssetsImpl;
haxe_ui_ToolkitAssets.prototype = $extend(haxe_ui_backend_AssetsImpl.prototype,{
	preloadList: null
	,options: null
	,_fontCache: null
	,_fontCallbacks: null
	,_imageCache: null
	,_imageCallbacks: null
	,getFont: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		if(this._fontCache != null && this._fontCache.h[resourceId] != null && useCache == true) {
			callback(this._fontCache.h[resourceId]);
		} else {
			if(this._fontCallbacks == null) {
				this._fontCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._fontCallbacks.add(resourceId,callback);
			if(this._fontCallbacks.count(resourceId) == 1) {
				this.getFontInternal(resourceId,function(font) {
					if(font != null) {
						_gthis._onFontLoaded(resourceId,font);
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getFontFromHaxeResource(resourceId,$bind(_gthis,_gthis._onFontLoaded));
					} else {
						_gthis._fontCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onFontLoaded: function(resourceId,font) {
		if(this._fontCache == null) {
			this._fontCache = new haxe_ds_StringMap();
		}
		this._fontCache.h[resourceId] = font;
		this._fontCallbacks.invokeAndRemove(resourceId,font);
	}
	,getImage: function(resourceId,callback,useCache) {
		if(useCache == null) {
			useCache = true;
		}
		var _gthis = this;
		var orginalResourceId = resourceId;
		resourceId = this.runPlugins(resourceId);
		if(this._imageCache != null && this._imageCache.h[resourceId] != null && useCache == true) {
			callback(this._imageCache.h[resourceId]);
		} else {
			if(this._imageCallbacks == null) {
				this._imageCallbacks = new haxe_ui_util_CallbackMap();
			}
			this._imageCallbacks.add(resourceId,callback);
			if(this._imageCallbacks.count(resourceId) == 1) {
				this.getImageInternal(resourceId,function(imageInfo) {
					if(imageInfo != null) {
						_gthis._onImageLoaded(resourceId,imageInfo);
					} else if(haxe_Resource.listNames().indexOf(orginalResourceId) != -1) {
						_gthis._imageCallbacks.remove(resourceId,callback);
						_gthis._imageCallbacks.add(orginalResourceId,callback);
						_gthis.getImageFromHaxeResource(orginalResourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else if(haxe_Resource.listNames().indexOf(resourceId) != -1) {
						_gthis.getImageFromHaxeResource(resourceId,$bind(_gthis,_gthis._onImageLoaded));
					} else {
						_gthis._imageCallbacks.remove(resourceId,callback);
						callback(null);
					}
				});
			}
		}
	}
	,_onImageLoaded: function(resourceId,imageInfo) {
		if(imageInfo != null && (imageInfo.width == -1 || imageInfo.width == -1)) {
			haxe_Log.trace("WARNING: imageData.originalWidth == -1 || imageData.originalHeight == -1",{ fileName : "haxe/ui/ToolkitAssets.hx", lineNumber : 106, className : "haxe.ui.ToolkitAssets", methodName : "_onImageLoaded"});
		}
		if(this._imageCache == null) {
			this._imageCache = new haxe_ds_StringMap();
		}
		this._imageCache.h[resourceId] = imageInfo;
		this._imageCallbacks.invokeAndRemove(resourceId,imageInfo);
	}
	,getText: function(resourceId) {
		var s = this.getTextDelegate(resourceId);
		if(s == null) {
			s = haxe_Resource.getString(resourceId);
		}
		return s;
	}
	,getBytes: function(resourceId) {
		return null;
	}
	,_plugins: null
	,addPlugin: function(plugin) {
		if(this._plugins == null) {
			this._plugins = [];
		}
		this._plugins.push(plugin);
	}
	,runPlugins: function(asset) {
		if(this._plugins == null) {
			return asset;
		}
		var _g = 0;
		var _g1 = this._plugins;
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			asset = p.invoke(asset);
		}
		return asset;
	}
	,__class__: haxe_ui_ToolkitAssets
});
var haxe_ui_actions_ActionManager = function() {
	this._repeatActions = new haxe_ds_StringMap();
	this._inputSources = [];
	this._events = null;
	this.navigationMethod = "navigationDesktop";
};
$hxClasses["haxe.ui.actions.ActionManager"] = haxe_ui_actions_ActionManager;
haxe_ui_actions_ActionManager.__name__ = "haxe.ui.actions.ActionManager";
haxe_ui_actions_ActionManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_actions_ActionManager.get_instance = function() {
	if(haxe_ui_actions_ActionManager._instance == null) {
		haxe_ui_actions_ActionManager._instance = new haxe_ui_actions_ActionManager();
	}
	return haxe_ui_actions_ActionManager._instance;
};
haxe_ui_actions_ActionManager.prototype = {
	navigationMethod: null
	,_events: null
	,_inputSources: null
	,_repeatActions: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener,priority);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			return;
		}
		this._events.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._events == null) {
			return;
		}
		this._events.invoke(event.type,event);
	}
	,registerInputSource: function(source) {
		source.start();
		this._inputSources.push(source);
	}
	,actionStart: function(action,source) {
		var _gthis = this;
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionStart",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c1 = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionStart",action,false,c1.__name__));
		}
		if(actionEvent.repeater == true && Object.prototype.hasOwnProperty.call(this._repeatActions.h,action) == false) {
			var this1 = this._repeatActions;
			var value = { type : action, timer : new haxe_ui_util_Timer(c.actionRepeatInterval,function() {
				_gthis.actionStart(action,source);
			})};
			this1.h[action] = value;
		}
	}
	,actionEnd: function(action,source) {
		var currentFocus = haxe_ui_focus_FocusManager.get_instance().get_focus();
		if(currentFocus == null) {
			return;
		}
		if(!((currentFocus) instanceof haxe_ui_core_InteractiveComponent)) {
			return;
		}
		var actionEvent = new haxe_ui_events_ActionEvent("actionEnd",action);
		var c = js_Boot.__cast(currentFocus , haxe_ui_core_InteractiveComponent);
		c.dispatch(actionEvent);
		if(actionEvent.canceled == false) {
			var c = js_Boot.getClass(source);
			this.dispatch(new haxe_ui_events_ActionEvent("actionEnd",action,false,c.__name__));
		}
		if(Object.prototype.hasOwnProperty.call(this._repeatActions.h,action)) {
			var info = this._repeatActions.h[action];
			info.timer.stop();
			var _this = this._repeatActions;
			var key = action;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,__class__: haxe_ui_actions_ActionManager
};
var haxe_ui_actions_IActionInputSource = function() { };
$hxClasses["haxe.ui.actions.IActionInputSource"] = haxe_ui_actions_IActionInputSource;
haxe_ui_actions_IActionInputSource.__name__ = "haxe.ui.actions.IActionInputSource";
haxe_ui_actions_IActionInputSource.__isInterface__ = true;
haxe_ui_actions_IActionInputSource.prototype = {
	start: null
	,__class__: haxe_ui_actions_IActionInputSource
};
var haxe_ui_actions_KeyboardActionInputSource = function() {
	this._downKeys = new haxe_ds_IntMap();
	this._started = false;
};
$hxClasses["haxe.ui.actions.KeyboardActionInputSource"] = haxe_ui_actions_KeyboardActionInputSource;
haxe_ui_actions_KeyboardActionInputSource.__name__ = "haxe.ui.actions.KeyboardActionInputSource";
haxe_ui_actions_KeyboardActionInputSource.__interfaces__ = [haxe_ui_actions_IActionInputSource];
haxe_ui_actions_KeyboardActionInputSource.prototype = {
	_started: null
	,start: function() {
		if(this._started == true) {
			return;
		}
		this._started = true;
		haxe_ui_core_Screen.get_instance().registerEvent("keydown",$bind(this,this.onKeyDown));
		haxe_ui_core_Screen.get_instance().registerEvent("keyup",$bind(this,this.onKeyUp));
	}
	,_downKeys: null
	,onKeyDown: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode)) {
			return;
		}
		this._downKeys.h[keyCode] = true;
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionStart("actionConfirm",this);
		}
	}
	,onKeyUp: function(e) {
		var keyCode = e.keyCode;
		if(this._downKeys.h.hasOwnProperty(keyCode) == false) {
			return;
		}
		this._downKeys.remove(keyCode);
		if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("space")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionPress",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("left")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionLeft",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("right")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionRight",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionUp",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionDown",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("escape")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionBack",this);
		} else if(keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("enter")) {
			haxe_ui_actions_ActionManager.get_instance().actionEnd("actionConfirm",this);
		}
	}
	,__class__: haxe_ui_actions_KeyboardActionInputSource
};
var haxe_ui_assets_AssetPlugin = function() {
};
$hxClasses["haxe.ui.assets.AssetPlugin"] = haxe_ui_assets_AssetPlugin;
haxe_ui_assets_AssetPlugin.__name__ = "haxe.ui.assets.AssetPlugin";
haxe_ui_assets_AssetPlugin.prototype = {
	_props: null
	,invoke: function(asset) {
		return asset;
	}
	,setProperty: function(name,value) {
		if(this._props == null) {
			this._props = new haxe_ds_StringMap();
		}
		this._props.h[name] = value;
	}
	,getProperty: function(name,defaultValue) {
		if(this._props == null) {
			return defaultValue;
		}
		var v = this._props.h[name];
		if(v == null) {
			v = defaultValue;
		}
		return v;
	}
	,__class__: haxe_ui_assets_AssetPlugin
};
var haxe_ui_backend_FocusManagerBase = function() {
};
$hxClasses["haxe.ui.backend.FocusManagerBase"] = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerBase.__name__ = "haxe.ui.backend.FocusManagerBase";
haxe_ui_backend_FocusManagerBase.prototype = {
	applyFocus: function(c) {
	}
	,unapplyFocus: function(c) {
	}
	,__class__: haxe_ui_backend_FocusManagerBase
};
var haxe_ui_backend_FocusManagerImpl = function() {
	haxe_ui_backend_FocusManagerBase.call(this);
};
$hxClasses["haxe.ui.backend.FocusManagerImpl"] = haxe_ui_backend_FocusManagerImpl;
haxe_ui_backend_FocusManagerImpl.__name__ = "haxe.ui.backend.FocusManagerImpl";
haxe_ui_backend_FocusManagerImpl.__super__ = haxe_ui_backend_FocusManagerBase;
haxe_ui_backend_FocusManagerImpl.prototype = $extend(haxe_ui_backend_FocusManagerBase.prototype,{
	applyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerBase.prototype.applyFocus.call(this,c);
	}
	,__class__: haxe_ui_backend_FocusManagerImpl
});
var haxe_ui_backend_ImageSurface = function() {
};
$hxClasses["haxe.ui.backend.ImageSurface"] = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageSurface.__name__ = "haxe.ui.backend.ImageSurface";
haxe_ui_backend_ImageSurface.prototype = {
	__class__: haxe_ui_backend_ImageSurface
};
var haxe_ui_backend_ImageBase = function() {
	this._imageHeight = 0;
	this._imageWidth = 0;
	this._top = 0;
	this._left = 0;
	this.aspectRatio = 1;
	haxe_ui_backend_ImageSurface.call(this);
};
$hxClasses["haxe.ui.backend.ImageBase"] = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageBase.__name__ = "haxe.ui.backend.ImageBase";
haxe_ui_backend_ImageBase.__super__ = haxe_ui_backend_ImageSurface;
haxe_ui_backend_ImageBase.prototype = $extend(haxe_ui_backend_ImageSurface.prototype,{
	parentComponent: null
	,aspectRatio: null
	,_left: null
	,_top: null
	,_imageWidth: null
	,_imageHeight: null
	,_imageInfo: null
	,_imageClipRect: null
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,validateData: function() {
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,__class__: haxe_ui_backend_ImageBase
});
var haxe_ui_backend_ImageDisplayImpl = function() {
	haxe_ui_backend_ImageBase.call(this);
	this.element = window.document.createElement("img");
	this.element.style.position = "absolute";
	this.element.style.borderRadius = "inherit";
	this.element.style.setProperty("pointer-events","none");
};
$hxClasses["haxe.ui.backend.ImageDisplayImpl"] = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_backend_ImageDisplayImpl.__name__ = "haxe.ui.backend.ImageDisplayImpl";
haxe_ui_backend_ImageDisplayImpl.__super__ = haxe_ui_backend_ImageBase;
haxe_ui_backend_ImageDisplayImpl.prototype = $extend(haxe_ui_backend_ImageBase.prototype,{
	element: null
	,dispose: function() {
		if(this.element != null) {
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
		}
	}
	,validateData: function() {
		if(this.element.src != this._imageInfo.data.src) {
			this.element.src = this._imageInfo.data.src;
			this.applyStyle();
		}
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,validateDisplay: function() {
		var style = this.element.style;
		style.width = "" + this._imageWidth + "px";
		style.height = "" + this._imageHeight + "px";
		if(this._imageClipRect != null) {
			var clipValue = "rect(" + ("" + (-this._top + this._imageClipRect.top) + "px") + "," + ("" + (-this._left + this._imageClipRect.left + this._imageClipRect.width) + "px") + "," + ("" + (-this._top + this._imageClipRect.top + this._imageClipRect.height) + "px") + "," + ("" + (-this._left + this._imageClipRect.left) + "px") + ")";
			if(this.element.style.clip != clipValue) {
				this.element.style.clip = clipValue;
			}
		} else if(this.element.style.clip != null) {
			this.element.style.removeProperty("clip");
		}
	}
	,applyStyle: function() {
		if(this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().imageRendering == "pixelated") {
				this.element.style.setProperty("image-rendering","pixelated");
				this.element.style.setProperty("image-rendering","-moz-crisp-edges");
				this.element.style.setProperty("image-rendering","crisp-edges");
			} else if(this.element.style.getPropertyValue("image-rendering") != null) {
				this.element.style.removeProperty("image-rendering");
			}
		}
	}
	,__class__: haxe_ui_backend_ImageDisplayImpl
});
var haxe_ui_backend_MessageBoxBase = function() {
	this._type = null;
	haxe_ui_containers_dialogs_Dialog.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.set_percentWidth(100);
	hbox.set_styleString("spacing:10px;");
	this.addComponent(hbox);
	this.iconImage = new haxe_ui_components_Image();
	this.iconImage.set_id("iconImage");
	hbox.addComponent(this.iconImage);
	this.messageLabel = new haxe_ui_components_Label();
	this.messageLabel.set_id("messageLabel");
	this.messageLabel.set_percentWidth(100);
	hbox.addComponent(this.messageLabel);
};
$hxClasses["haxe.ui.backend.MessageBoxBase"] = haxe_ui_backend_MessageBoxBase;
haxe_ui_backend_MessageBoxBase.__name__ = "haxe.ui.backend.MessageBoxBase";
haxe_ui_backend_MessageBoxBase.__super__ = haxe_ui_containers_dialogs_Dialog;
haxe_ui_backend_MessageBoxBase.prototype = $extend(haxe_ui_containers_dialogs_Dialog.prototype,{
	iconImage: null
	,messageLabel: null
	,get_message: function() {
		return this.messageLabel.get_text();
	}
	,set_message: function(value) {
		this.messageLabel.set_text(value);
		return value;
	}
	,_type: null
	,get_type: function() {
		return this._type;
	}
	,set_type: function(value) {
		this._type = haxe_ui_containers_dialogs_MessageBoxType.toString(value);
		this.iconImage.addClass(this._type);
		this.addClass(this._type);
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_dialogs_Dialog.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_dialogs_Dialog.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_backend_MessageBoxBase();
	}
	,__class__: haxe_ui_backend_MessageBoxBase
	,__properties__: $extend(haxe_ui_containers_dialogs_Dialog.prototype.__properties__,{set_type:"set_type",get_type:"get_type",set_message:"set_message",get_message:"get_message"})
});
var haxe_ui_backend_PlatformBase = function() {
	this._isMobile = null;
};
$hxClasses["haxe.ui.backend.PlatformBase"] = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformBase.__name__ = "haxe.ui.backend.PlatformBase";
haxe_ui_backend_PlatformBase.prototype = {
	isWindows: null
	,get_isWindows: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("windows") != -1;
	}
	,isLinux: null
	,get_isLinux: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("linux") != -1;
	}
	,isMac: null
	,get_isMac: function() {
		return window.navigator.userAgent.toLowerCase().indexOf("mac") != -1;
	}
	,_isMobile: null
	,isMobile: null
	,get_isMobile: function() {
		if(this._isMobile != null) {
			return this._isMobile;
		}
		this._isMobile = false;
		var ua = $global.navigator.userAgent;
		this._isMobile = haxe_ui_backend_PlatformBase.MOBILE_REGEXP.match(ua);
		return this._isMobile;
	}
	,getMetric: function(id) {
		return 0;
	}
	,getColor: function(id) {
		return null;
	}
	,getSystemLocale: function() {
		return null;
	}
	,perf: function() {
		return HxOverrides.now() / 1000 * 1000;
	}
	,KeyTab: null
	,get_KeyTab: function() {
		return this.getKeyCode("tab");
	}
	,KeyUp: null
	,get_KeyUp: function() {
		return this.getKeyCode("up");
	}
	,KeyDown: null
	,get_KeyDown: function() {
		return this.getKeyCode("down");
	}
	,KeyLeft: null
	,get_KeyLeft: function() {
		return this.getKeyCode("left");
	}
	,KeyRight: null
	,get_KeyRight: function() {
		return this.getKeyCode("right");
	}
	,KeySpace: null
	,get_KeySpace: function() {
		return this.getKeyCode("space");
	}
	,KeyEnter: null
	,get_KeyEnter: function() {
		return this.getKeyCode("enter");
	}
	,KeyEscape: null
	,get_KeyEscape: function() {
		return this.getKeyCode("escape");
	}
	,getKeyCode: function(keyId) {
		switch(keyId) {
		case "down":
			return 40;
		case "enter":
			return 13;
		case "escape":
			return 27;
		case "left":
			return 37;
		case "right":
			return 39;
		case "space":
			return 32;
		case "tab":
			return 9;
		case "up":
			return 38;
		default:
			return HxOverrides.cca(keyId,0);
		}
	}
	,__class__: haxe_ui_backend_PlatformBase
	,__properties__: {get_KeyEscape:"get_KeyEscape",get_KeyEnter:"get_KeyEnter",get_KeySpace:"get_KeySpace",get_KeyRight:"get_KeyRight",get_KeyLeft:"get_KeyLeft",get_KeyDown:"get_KeyDown",get_KeyUp:"get_KeyUp",get_KeyTab:"get_KeyTab",get_isMobile:"get_isMobile",get_isMac:"get_isMac",get_isLinux:"get_isLinux",get_isWindows:"get_isWindows"}
};
var haxe_ui_backend_PlatformImpl = function() {
	haxe_ui_backend_PlatformBase.call(this);
};
$hxClasses["haxe.ui.backend.PlatformImpl"] = haxe_ui_backend_PlatformImpl;
haxe_ui_backend_PlatformImpl.__name__ = "haxe.ui.backend.PlatformImpl";
haxe_ui_backend_PlatformImpl.calcScrollSize = function() {
	if(haxe_ui_backend_PlatformImpl._vscrollWidth >= 0 && haxe_ui_backend_PlatformImpl._hscrollHeight >= 0) {
		return;
	}
	var div = window.document.createElement("div");
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	div.style.height = "100px";
	div.style.width = "100px";
	div.style.overflow = "scroll";
	window.document.body.appendChild(div);
	haxe_ui_backend_PlatformImpl._vscrollWidth = div.offsetWidth - div.clientWidth;
	haxe_ui_backend_PlatformImpl._hscrollHeight = div.offsetHeight - div.clientHeight;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
};
haxe_ui_backend_PlatformImpl.__super__ = haxe_ui_backend_PlatformBase;
haxe_ui_backend_PlatformImpl.prototype = $extend(haxe_ui_backend_PlatformBase.prototype,{
	getMetric: function(id) {
		switch(id) {
		case "patform.metrics.hscroll.height":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._hscrollHeight;
		case "patform.metrics.vscroll.width":
			haxe_ui_backend_PlatformImpl.calcScrollSize();
			return haxe_ui_backend_PlatformImpl._vscrollWidth;
		}
		return haxe_ui_backend_PlatformBase.prototype.getMetric.call(this,id);
	}
	,getSystemLocale: function() {
		return $global.navigator.language;
	}
	,perf: function() {
		return window.performance.now();
	}
	,__class__: haxe_ui_backend_PlatformImpl
});
var haxe_ui_backend_ScreenBase = function() { };
$hxClasses["haxe.ui.backend.ScreenBase"] = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenBase.__name__ = "haxe.ui.backend.ScreenBase";
haxe_ui_backend_ScreenBase.prototype = {
	rootComponents: null
	,_options: null
	,get_options: function() {
		return this._options;
	}
	,set_options: function(value) {
		this._options = value;
		return value;
	}
	,dpi: null
	,get_dpi: function() {
		return 72;
	}
	,get_title: function() {
		return null;
	}
	,set_title: function(s) {
		return s;
	}
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,actualWidth: null
	,get_actualWidth: function() {
		return this.get_width() * haxe_ui_Toolkit.get_scaleX();
	}
	,actualHeight: null
	,get_actualHeight: function() {
		return this.get_height() * haxe_ui_Toolkit.get_scaleY();
	}
	,isRetina: null
	,get_isRetina: function() {
		return false;
	}
	,topComponent: null
	,get_topComponent: function() {
		if(this.rootComponents.length == 0) {
			return null;
		}
		var n = this.rootComponents.length - 1;
		var c = null;
		while(n >= 0) {
			c = this.rootComponents[n];
			if(c.get_style() == null) {
				break;
			}
			if(c.get_style().pointerEvents != "none") {
				break;
			}
			--n;
		}
		return c;
	}
	,addComponent: function(component) {
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
	}
	,resizeComponent: function(c) {
		var cx = null;
		var cy = null;
		if(c.get_percentWidth() > 0) {
			cx = this.get_width() * c.get_percentWidth() / 100;
		}
		if(c.get_percentHeight() > 0) {
			cy = this.get_height() * c.get_percentHeight() / 100;
		}
		c.resizeComponent(cx,cy);
	}
	,refreshStyleRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this._refreshStyleComponent(component);
		}
	}
	,resizeRootComponents: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			this.resizeComponent(component);
		}
	}
	,_refreshStyleComponent: function(component) {
		var _g = 0;
		var _g1 = component._children == null ? [] : component._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.invalidateComponent("style",false);
			child.invalidateComponent("display",false);
			this._refreshStyleComponent(child);
		}
	}
	,_onRootComponentResize: function(e) {
		this._refreshStyleComponent(e.target);
	}
	,invalidateAll: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.invalidateChildren(c,flag);
		}
	}
	,invalidateChildren: function(c,flag) {
		if(flag == null) {
			flag = "all";
		}
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.invalidateChildren(child,flag);
		}
		c.invalidateComponent(flag);
	}
	,supportsEvent: function(type) {
		return false;
	}
	,mapEvent: function(type,listener) {
	}
	,unmapEvent: function(type,listener) {
	}
	,__class__: haxe_ui_backend_ScreenBase
	,__properties__: {get_topComponent:"get_topComponent",get_isRetina:"get_isRetina",get_actualHeight:"get_actualHeight",get_actualWidth:"get_actualWidth",get_height:"get_height",get_width:"get_width",set_title:"set_title",get_title:"get_title",get_dpi:"get_dpi",set_options:"set_options",get_options:"get_options"}
};
var haxe_ui_backend_ScreenImpl = function() {
	this._hasListener = false;
	this._pageRoot = null;
	this._container = null;
	this._percentContainerHeightAdded = false;
	this._percentContainerWidthAdded = false;
	this._height = null;
	this._width = null;
	this._mapping = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.backend.ScreenImpl"] = haxe_ui_backend_ScreenImpl;
haxe_ui_backend_ScreenImpl.__name__ = "haxe.ui.backend.ScreenImpl";
haxe_ui_backend_ScreenImpl.__super__ = haxe_ui_backend_ScreenBase;
haxe_ui_backend_ScreenImpl.prototype = $extend(haxe_ui_backend_ScreenBase.prototype,{
	_mapping: null
	,set_options: function(value) {
		haxe_ui_backend_ScreenBase.prototype.set_options.call(this,value);
		var cx = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.width",null);
		var cy = haxe_ui_Toolkit.get_backendProperties().getProp("haxe.ui.html5.container.height",null);
		var c = this.get_container();
		if(cx != null) {
			c.style.width = cx;
		}
		if(cy != null) {
			c.style.height = cy;
		}
		return value;
	}
	,get_dpi: function() {
		return haxe_ui_backend_html5_HtmlUtils.get_dpi();
	}
	,get_title: function() {
		return window.document.title;
	}
	,set_title: function(s) {
		window.document.title = s;
		return s;
	}
	,_width: null
	,get_width: function() {
		if(this._width != null) {
			return this._width;
		}
		var cx = this.get_container().offsetWidth;
		if(cx <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_width() > cx) {
					cx = c.get_width();
				}
			}
		}
		this._width = cx / haxe_ui_Toolkit.get_scaleX();
		return this._width;
	}
	,_height: null
	,get_height: function() {
		if(this._height != null) {
			return this._height;
		}
		var cy = this.get_container().offsetHeight;
		if(cy <= 0) {
			var _g = 0;
			var _g1 = this.rootComponents;
			while(_g < _g1.length) {
				var c = _g1[_g];
				++_g;
				if(c.get_height() > cy) {
					cy = c.get_height();
				}
			}
		}
		this._height = cy / haxe_ui_Toolkit.get_scaleY();
		return this._height;
	}
	,get_isRetina: function() {
		return haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay();
	}
	,addComponent: function(component) {
		this.get_container().appendChild(component.element);
		component.ready();
		if(haxe_ui_Toolkit.get_scaleX() != 1 || haxe_ui_Toolkit.get_scaleY() != 1) {
			var transformString = "";
			if(haxe_ui_Toolkit.get_scaleX() != 1) {
				transformString += "scaleX(" + haxe_ui_Toolkit.get_scaleX() + ") ";
			}
			if(haxe_ui_Toolkit.get_scaleY() != 1) {
				transformString += "scaleY(" + haxe_ui_Toolkit.get_scaleY() + ") ";
			}
			component.element.style.transform = transformString;
			component.element.style.transformOrigin = "top left";
		}
		if(component.get_percentWidth() != null) {
			this.addPercentContainerWidth();
		}
		if(component.get_percentHeight() != null) {
			this.addPercentContainerHeight();
		}
		this.addResizeListener();
		this.resizeComponent(component);
		return component;
	}
	,_percentContainerWidthAdded: null
	,addPercentContainerWidth: function() {
		if(this._percentContainerWidthAdded == true) {
			return;
		}
		this._percentContainerWidthAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\n            margin: 0;\n            width: 100%;\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\n            margin: 0;\n            width: 100%;\n        }",sheet.cssRules.length);
	}
	,_percentContainerHeightAdded: null
	,addPercentContainerHeight: function() {
		if(this._percentContainerHeightAdded == true) {
			return;
		}
		this._percentContainerHeightAdded = true;
		var sheet = haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet();
		sheet.insertRule("#haxeui-container-parent {\n            margin: 0;\n            height: 100%;\n        }",sheet.cssRules.length);
		sheet.insertRule("#haxeui-container {\n            margin: 0;\n            height: 100%;\n        }",sheet.cssRules.length);
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		HxOverrides.remove(this.rootComponents,component);
		if(this.get_container().contains(component.element) == true) {
			this.get_container().removeChild(component.element);
		}
		return component;
	}
	,handleSetComponentIndex: function(child,index) {
		if(index == (js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents.length - 1) {
			this.get_container().appendChild(child.element);
		} else {
			haxe_ui_backend_html5_HtmlUtils.insertBefore((js_Boot.__cast(this , haxe_ui_core_Screen)).rootComponents[index + 1].element,child.element);
		}
	}
	,_container: null
	,container: null
	,get_container: function() {
		if(this._container != null) {
			return this._container;
		}
		var c = null;
		if(this.get_options() == null || this.get_options().container == null) {
			c = window.document.body;
		} else {
			c = this.get_options().container;
		}
		if(c.style.overflow == null || c.style.overflow == "") {
			c.style.overflow = "hidden";
		}
		if(c.id != "haxeui-container") {
			c.id = "haxeui-container";
			if(this.get_options().container != null) {
				c.style.position = "relative";
			}
			if(c.parentElement != null && c.parentElement.id != "haxeui-container-parent") {
				c.parentElement.id = "haxeui-container-parent";
			}
		}
		this._container = c;
		return c;
	}
	,_pageRoot: null
	,pageRoot: function(from) {
		if(this._pageRoot != null) {
			return this._pageRoot;
		}
		var r = null;
		var el = from;
		while(el != null) {
			if(el.classList.contains("haxeui-component") == false) {
				r = el;
				this._pageRoot = el;
				break;
			}
			el = el.parentElement;
		}
		return r;
	}
	,_hasListener: null
	,addResizeListener: function() {
		var _gthis = this;
		if(this._hasListener == true) {
			return;
		}
		this._hasListener = true;
		window.addEventListener("resize",function(e) {
			_gthis._width = null;
			_gthis._height = null;
			_gthis.resizeRootComponents();
		});
	}
	,supportsEvent: function(type) {
		return haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type] != null;
	}
	,mapEvent: function(type,listener) {
		var _gthis = this;
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			}
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			if(type == "mousemove" && Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false && haxe_ui_backend_html5_UserAgent.get_instance().get_chrome() == true) {
				var fn = null;
				fn = function(e) {
					container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
					if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
						container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
					}
					if(Object.prototype.hasOwnProperty.call(_gthis._mapping.h,type) == false) {
						if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
							container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(_gthis,_gthis.__onMouseEvent));
						}
						_gthis._mapping.h[type] = listener;
						container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],$bind(_gthis,_gthis.__onMouseEvent));
					}
				};
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h["mousemove"],fn);
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],fn);
				}
				return;
			}
			if(Object.prototype.hasOwnProperty.call(this._mapping.h,type) == false) {
				if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
					container.addEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
				}
				this._mapping.h[type] = listener;
				container.addEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		}
	}
	,unmapEvent: function(type,listener) {
		var container = window.document.body;
		switch(type) {
		case "keydown":case "keyup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onKeyEvent));
			break;
		case "click":case "doubleclick":case "mousedown":case "mousemove":case "mouseout":case "mouseover":case "mouseup":case "rightclick":case "rightmousedown":case "rightmouseup":
			var _this = this._mapping;
			if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
				delete(_this.h[type]);
			}
			container.removeEventListener(haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM.h[type],$bind(this,this.__onMouseEvent));
			if(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type] != null) {
				container.removeEventListener(haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH.h[type],$bind(this,this.__onMouseEvent));
			}
			break;
		}
	}
	,__onMouseEvent: function(event) {
		var button = -1;
		var touchEvent = false;
		try {
			touchEvent = ((event) instanceof TouchEvent);
		} catch( _g ) {
		}
		if(touchEvent == false && ((event) instanceof MouseEvent)) {
			var me = js_Boot.__cast(event , MouseEvent);
			button = me.which;
		}
		var r = true;
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type == "rightclick") {
			event.stopPropagation();
			event.preventDefault();
			r = false;
		}
		if(type != null) {
			var fn = this._mapping.h[type];
			if(fn != null) {
				var mouseEvent = new haxe_ui_events_MouseEvent(type);
				mouseEvent._originalEvent = event;
				if(touchEvent == true) {
					var te = js_Boot.__cast(event , TouchEvent);
					mouseEvent.screenX = (te.changedTouches[0].pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (te.changedTouches[0].pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.touchEvent = true;
				} else if(((event) instanceof MouseEvent)) {
					var me = js_Boot.__cast(event , MouseEvent);
					mouseEvent.buttonDown = me.buttons != 0;
					mouseEvent.screenX = (me.pageX - haxe_ui_core_Screen.get_instance().get_container().offsetLeft) / haxe_ui_Toolkit.get_scaleX();
					mouseEvent.screenY = (me.pageY - haxe_ui_core_Screen.get_instance().get_container().offsetTop) / haxe_ui_Toolkit.get_scaleY();
					mouseEvent.ctrlKey = me.ctrlKey;
					mouseEvent.shiftKey = me.shiftKey;
				}
				fn(mouseEvent);
			}
		}
		return r;
	}
	,__onKeyEvent: function(event) {
		var type = haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI.h[event.type];
		if(type != null) {
			if(event.keyCode == 9 || event.which == 9) {
				event.preventDefault();
				event.stopImmediatePropagation();
				event.stopPropagation();
			}
			var fn = this._mapping.h[type];
			if(fn != null) {
				var keyboardEvent = new haxe_ui_events_KeyboardEvent(type);
				keyboardEvent._originalEvent = event;
				keyboardEvent.keyCode = event.keyCode;
				keyboardEvent.ctrlKey = event.ctrlKey;
				keyboardEvent.shiftKey = event.shiftKey;
				fn(keyboardEvent);
			}
		}
	}
	,__class__: haxe_ui_backend_ScreenImpl
	,__properties__: $extend(haxe_ui_backend_ScreenBase.prototype.__properties__,{get_container:"get_container"})
});
var haxe_ui_backend_SelectFileDialogBase = function() {
	this.options = null;
	this.callback = null;
};
$hxClasses["haxe.ui.backend.SelectFileDialogBase"] = haxe_ui_backend_SelectFileDialogBase;
haxe_ui_backend_SelectFileDialogBase.__name__ = "haxe.ui.backend.SelectFileDialogBase";
haxe_ui_backend_SelectFileDialogBase.prototype = {
	callback: null
	,options: null
	,validateOptions: function() {
		if(this.options == null) {
			this.options = { };
		}
		if(this.options.readContents == null) {
			this.options.readContents = false;
		}
		if(this.options.readAsBinary == null) {
			this.options.readAsBinary = false;
		}
		if(this.options.multiple == null) {
			this.options.multiple = false;
		}
	}
	,show: function() {
		haxe_ui_containers_dialogs_Dialogs.messageBox("SelectFileDialog has no implementation on this backend","Select File","error");
	}
	,__class__: haxe_ui_backend_SelectFileDialogBase
};
var haxe_ui_backend_SelectFileDialogImpl = function() {
	this._hasChanged = false;
	haxe_ui_backend_SelectFileDialogBase.call(this);
};
$hxClasses["haxe.ui.backend.SelectFileDialogImpl"] = haxe_ui_backend_SelectFileDialogImpl;
haxe_ui_backend_SelectFileDialogImpl.__name__ = "haxe.ui.backend.SelectFileDialogImpl";
haxe_ui_backend_SelectFileDialogImpl.__super__ = haxe_ui_backend_SelectFileDialogBase;
haxe_ui_backend_SelectFileDialogImpl.prototype = $extend(haxe_ui_backend_SelectFileDialogBase.prototype,{
	_fileInput: null
	,show: function() {
		this.validateOptions();
		this.createFileInput();
		this._fileInput.click();
	}
	,_hasChanged: null
	,onFileInputChanged: function(e) {
		var _gthis = this;
		this._hasChanged = true;
		if(this.callback != null) {
			var infos = [];
			var files = [];
			var selectedFiles = e.target.files;
			var _g = 0;
			var _g1 = selectedFiles.length;
			while(_g < _g1) {
				var i = _g++;
				var selectedFile = selectedFiles[i];
				var info = { name : selectedFile.name, isBinary : false};
				infos.push(info);
				files.push(selectedFile);
			}
			if(this.options.readContents == false) {
				this.callback("{{dialog.ok}}",infos);
			} else {
				this.readFileContents(infos.slice(),files,function() {
					_gthis.callback("{{dialog.ok}}",infos);
				});
			}
		}
		this.destroyFileInput();
	}
	,readFileContents: function(infos,files,callback) {
		var _gthis = this;
		if(infos.length == 0) {
			callback();
			return;
		}
		var info = infos.shift();
		var file = files.shift();
		var reader = new FileReader();
		if(this.options.readAsBinary == false) {
			reader.readAsText(file,"UTF-8");
		} else {
			reader.readAsArrayBuffer(file);
		}
		reader.onload = function(readerEvent) {
			var result = readerEvent.target.result;
			if(_gthis.options.readAsBinary == false) {
				info.isBinary = false;
				info.text = result;
			} else {
				info.isBinary = true;
				info.bytes = haxe_io_Bytes.ofData(result);
			}
			_gthis.readFileContents(infos,files,callback);
		};
	}
	,onWindowFocus: function(e) {
		var _gthis = this;
		haxe_ui_util_Timer.delay(function() {
			_gthis.destroyFileInput();
			if(_gthis._hasChanged == false) {
				if(_gthis.callback != null) {
					_gthis.callback("{{dialog.cancel}}",null);
				}
			}
		},100);
	}
	,createFileInput: function() {
		this._hasChanged = false;
		window.addEventListener("focus",$bind(this,this.onWindowFocus));
		this._fileInput = window.document.createElement("input");
		this._fileInput.type = "file";
		var tmp = StringTools.replace(StringTools.replace(StringTools.replace(HxOverrides.dateStr(new Date()),"-","_"),":","_")," ","_");
		this._fileInput.id = "fileInput_" + tmp;
		this._fileInput.style.display = "none";
		if(this.options.multiple == true) {
			this._fileInput.multiple = true;
		}
		this._fileInput.onchange = $bind(this,this.onFileInputChanged);
		window.document.body.appendChild(this._fileInput);
	}
	,destroyFileInput: function() {
		if(this._fileInput == null) {
			return;
		}
		window.removeEventListener("focus",$bind(this,this.onWindowFocus));
		this._fileInput.onchange = null;
		window.document.body.removeChild(this._fileInput);
		this._fileInput = null;
	}
	,__class__: haxe_ui_backend_SelectFileDialogImpl
});
var haxe_ui_backend_TextBase = function() {
	this._textHeight = 0;
	this._textWidth = 0;
	this._height = 0;
	this._width = 0;
	this._top = 0;
	this._left = 0;
	this._htmlText = null;
	this._inputData = new haxe_ui_core_TextInputData();
	this._displayData = new haxe_ui_core_TextDisplayData();
};
$hxClasses["haxe.ui.backend.TextBase"] = haxe_ui_backend_TextBase;
haxe_ui_backend_TextBase.__name__ = "haxe.ui.backend.TextBase";
haxe_ui_backend_TextBase.prototype = {
	parentComponent: null
	,_displayData: null
	,_inputData: null
	,_text: null
	,_htmlText: null
	,_left: null
	,_top: null
	,_width: null
	,_height: null
	,_textWidth: null
	,_textHeight: null
	,_textStyle: null
	,_fontInfo: null
	,focus: function() {
	}
	,blur: function() {
	}
	,dispose: function() {
		if(this.parentComponent != null) {
			this.parentComponent = null;
		}
	}
	,_dataSource: null
	,get_dataSource: function() {
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		this._dataSource = value;
		return value;
	}
	,supportsHtml: null
	,get_supportsHtml: function() {
		return false;
	}
	,validateData: function() {
	}
	,validateStyle: function() {
		return false;
	}
	,validatePosition: function() {
	}
	,validateDisplay: function() {
	}
	,measureText: function() {
	}
	,measureTextWidth: function() {
		var textDisplay = new haxe_ui_core_TextDisplay();
		textDisplay._textStyle = this._textStyle;
		textDisplay._fontInfo = this._fontInfo;
		textDisplay.validateStyle();
		textDisplay._text = this._text;
		textDisplay.validateData();
		textDisplay.measureText();
		return textDisplay._textWidth;
	}
	,__class__: haxe_ui_backend_TextBase
	,__properties__: {get_supportsHtml:"get_supportsHtml",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"}
};
var haxe_ui_backend_TextDisplayImpl = function() {
	this._fixedHeight = false;
	this._fixedWidth = false;
	this._isHTML = false;
	haxe_ui_backend_TextBase.call(this);
	this._displayData.multiline = false;
	this.element = this.createElement();
};
$hxClasses["haxe.ui.backend.TextDisplayImpl"] = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextDisplayImpl.__name__ = "haxe.ui.backend.TextDisplayImpl";
haxe_ui_backend_TextDisplayImpl.__super__ = haxe_ui_backend_TextBase;
haxe_ui_backend_TextDisplayImpl.prototype = $extend(haxe_ui_backend_TextBase.prototype,{
	element: null
	,_html: null
	,_isHTML: null
	,validateData: function() {
		var html = null;
		if(this._text != null) {
			html = this.normalizeText(this._text);
			this._isHTML = false;
		} else if(this._htmlText != null) {
			html = this.normalizeText(this._htmlText,false);
			this._isHTML = true;
		}
		if(html != null && this._html != html) {
			if(this._isHTML == false) {
				this.element.textContent = html;
			} else {
				this.element.innerHTML = html;
			}
			this._html = html;
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
	}
	,_rawFontName: null
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.wordWrap == true && this.element.style.whiteSpace != null) {
			this.element.style.whiteSpace = "pre-wrap";
			this.element.style.wordBreak = "break-word";
			measureTextRequired = true;
		} else if(this._displayData.wordWrap == false && this.element.style.whiteSpace != "pre") {
			this.element.style.whiteSpace = "pre";
			measureTextRequired = true;
		}
		if(this._textStyle != null) {
			if(this.element.style.textAlign != this._textStyle.textAlign) {
				this.element.style.textAlign = this._textStyle.textAlign;
			}
			var fontSizeValue = "" + this._textStyle.fontSize + "px";
			if(this.element.style.fontSize != fontSizeValue) {
				this.element.style.fontSize = fontSizeValue;
				measureTextRequired = true;
			}
			if(this._textStyle.fontBold == true && this.element.style.fontWeight != "bold") {
				this.element.style.fontWeight = "bold";
				measureTextRequired = true;
			}
			if(this._textStyle.fontItalic == true && this.element.style.fontStyle != "italic") {
				this.element.style.fontStyle = "italic";
				measureTextRequired = true;
			}
			if(this._textStyle.fontUnderline == true && this.element.style.textDecoration != "underline") {
				this.element.style.textDecoration = "underline";
				measureTextRequired = true;
			}
			var colorValue = haxe_ui_backend_html5_HtmlUtils.color(this._textStyle.color);
			if(this.element.style.color != colorValue) {
				this.element.style.color = colorValue;
			}
			if(this._fontInfo != null && this._fontInfo.data != this._rawFontName) {
				this.element.style.fontFamily = this._fontInfo.data;
				this._rawFontName = this._fontInfo.data;
				measureTextRequired = true;
				var _this = this.parentComponent;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
		}
		if(measureTextRequired == true) {
			if(this.get_autoWidth() == true) {
				this._fixedWidth = false;
			}
			if(this.get_autoHeight() == true) {
				this._fixedHeight = false;
			}
		}
		return measureTextRequired;
	}
	,validatePosition: function() {
		var style = this.element.style;
		style.left = "" + this._left + "px";
		style.top = "" + this._top + "px";
	}
	,_fixedWidth: null
	,_fixedHeight: null
	,validateDisplay: function() {
		var style = this.element.style;
		var allowFixed = true;
		if(this.get_autoWidth() == false && style.width != "" + this._width + "px") {
			allowFixed = false;
		}
		if(this._width > 0 && this.get_autoWidth() == false) {
			this._fixedWidth = true;
			style.width = "" + this._width + "px";
		}
		if(this._height > 0 && this.get_autoWidth() == false) {
			this._fixedHeight = true;
			style.height = "" + this._height + "px";
		}
		if(allowFixed == false) {
			this._fixedHeight = false;
		}
	}
	,measureText: function() {
		if(this._fixedWidth == true && this._fixedHeight == true) {
			return;
		}
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		if(this._fixedWidth == false) {
			this._textWidth = div.clientWidth + 1;
		}
		if(this._fixedHeight == false) {
			this._textHeight = div.clientHeight;
		}
	}
	,createElement: function() {
		var el = window.document.createElement("div");
		el.style.position = "absolute";
		el.style.cursor = "inherit";
		return el;
	}
	,setTempDivData: function(div) {
		var t = null;
		if(this._text != null) {
			t = this.normalizeText(this._text);
		} else if(this._htmlText != null) {
			t = this.normalizeText(this._htmlText,false);
		}
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.wordBreak = this.element.style.wordBreak;
		div.style.lineHeight = null;
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		if(this._isHTML == false) {
			div.textContent = t;
		} else {
			div.innerHTML = t;
		}
	}
	,normalizeText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		return text;
	}
	,autoWidth: null
	,get_autoWidth: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoWidth();
		}
		return false;
	}
	,autoHeight: null
	,get_autoHeight: function() {
		if(((this.parentComponent) instanceof haxe_ui_components_Label)) {
			return (js_Boot.__cast(this.parentComponent , haxe_ui_components_Label)).get_autoHeight();
		}
		return false;
	}
	,get_supportsHtml: function() {
		return true;
	}
	,measureTextWidth: function() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		div.style.width = "";
		return div.clientWidth;
	}
	,__class__: haxe_ui_backend_TextDisplayImpl
	,__properties__: $extend(haxe_ui_backend_TextBase.prototype.__properties__,{get_autoHeight:"get_autoHeight",get_autoWidth:"get_autoWidth"})
});
var haxe_ui_backend_TextInputImpl = function() {
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.backend.TextInputImpl"] = haxe_ui_backend_TextInputImpl;
haxe_ui_backend_TextInputImpl.__name__ = "haxe.ui.backend.TextInputImpl";
haxe_ui_backend_TextInputImpl.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_backend_TextInputImpl.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	focus: function() {
		this.element.focus({preventScroll: true});
	}
	,blur: function() {
		this.element.blur();
	}
	,onChangeEvent: function(e) {
		var newText = null;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			newText = (js_Boot.__cast(this.element , HTMLTextAreaElement)).value;
		} else {
			newText = (js_Boot.__cast(this.element , HTMLInputElement)).value;
		}
		if(newText != this._text) {
			this._text = newText;
			this.measureText();
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,onScroll: function(e) {
		this._inputData.hscrollPos = this.element.scrollLeft;
		this._inputData.vscrollPos = this.element.scrollTop;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
		if(this._inputData.onScrollCallback != null) {
			this._inputData.onScrollCallback();
		}
	}
	,validateData: function() {
		if(this._text != null) {
			var html = this.normalizeText(this._text);
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).value = html;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).value = html;
			}
		}
		var hscrollValue = this._inputData.hscrollPos | 0;
		if(this.element.scrollLeft != hscrollValue) {
			this.element.scrollLeft = hscrollValue;
		}
		var vscrollValue = this._inputData.vscrollPos | 0;
		if(this.element.scrollTop != vscrollValue) {
			this.element.scrollTop = vscrollValue;
		}
	}
	,validateStyle: function() {
		var measureTextRequired = false;
		if(this._displayData.multiline == false && ((this.element) instanceof HTMLInputElement) == false || this._displayData.multiline == true && ((this.element) instanceof HTMLTextAreaElement) == false) {
			var newElement = this.createElement();
			this.element.parentElement.appendChild(newElement);
			haxe_ui_backend_html5_HtmlUtils.removeElement(this.element);
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
			this.element = newElement;
			this.validateData();
			measureTextRequired = true;
		}
		if(((this.element) instanceof HTMLInputElement)) {
			var inputElement = this.element;
			if(this._inputData.password == true && inputElement.type != "password") {
				inputElement.type = "password";
			} else if(this._inputData.password == false && inputElement.type != "") {
				inputElement.type = "";
			}
		}
		if(this.parentComponent.get_disabled() || this.parentComponent._interactivityDisabled == true) {
			this.element.style.cursor = "not-allowed";
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = true;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = true;
			}
		} else {
			this.element.style.cursor = null;
			if(((this.element) instanceof HTMLInputElement)) {
				(js_Boot.__cast(this.element , HTMLInputElement)).disabled = false;
			} else if(((this.element) instanceof HTMLTextAreaElement)) {
				(js_Boot.__cast(this.element , HTMLTextAreaElement)).disabled = false;
			}
		}
		if(!haxe_ui_backend_TextDisplayImpl.prototype.validateStyle.call(this)) {
			return measureTextRequired;
		} else {
			return true;
		}
	}
	,measureText: function() {
		if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
			haxe_ui_backend_html5_HtmlUtils.createDivHelper();
		}
		var div = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER;
		this.setTempDivData(div);
		this._textWidth = div.clientWidth;
		this._textHeight = div.clientHeight;
		this._inputData.hscrollMax = this._textWidth - this._width;
		this._inputData.hscrollPageSize = this._width * this._inputData.hscrollMax / this._textWidth;
		this._inputData.vscrollMax = this._textHeight - this._height;
		this._inputData.vscrollPageSize = this._height * this._inputData.vscrollMax / this._textHeight;
	}
	,createElement: function() {
		if(this.element != null) {
			this.element.removeEventListener("input",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("propertychange",$bind(this,this.onChangeEvent));
			this.element.removeEventListener("scroll",$bind(this,this.onScroll));
		}
		var el = null;
		if(this._displayData.multiline == false) {
			el = window.document.createElement("input");
			el.style.border = "none";
			el.style.outline = "none";
			el.style.whiteSpace = "pre";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.padding = "0px";
			el.spellcheck = false;
		} else {
			el = window.document.createElement("textarea");
			el.style.border = "none";
			el.style.resize = "none";
			el.style.outline = "none";
			el.style.lineHeight = "1.4";
			el.style.padding = "0px";
			el.style.margin = "0px";
			el.style.bottom = "0px";
			el.style.right = "0px";
			el.style.overflow = "hidden";
			el.style.cursor = "initial";
			el.style.position = "absolute";
			el.style.backgroundColor = "inherit";
			el.style.whiteSpace = "pre-wrap";
			el.id = "textArea";
			el.spellcheck = false;
			el.onkeydown = function(e) {
				if(e.keyCode == 9 || e.which == 9) {
					e.preventDefault();
					e.stopImmediatePropagation();
					e.stopPropagation();
					var ta = js_Boot.__cast(el , HTMLTextAreaElement);
					var s = ta.selectionStart;
					ta.value = ta.value.substring(0,ta.selectionStart) + "\t" + ta.value.substring(ta.selectionEnd);
					ta.selectionEnd = s + 1;
					return false;
				}
				return true;
			};
		}
		el.addEventListener("input",$bind(this,this.onChangeEvent));
		el.addEventListener("propertychange",$bind(this,this.onChangeEvent));
		el.addEventListener("scroll",$bind(this,this.onScroll));
		return el;
	}
	,validatePosition: function() {
		var x = this._left;
		var y = this._top;
		if(this._displayData.multiline == false && this.parentComponent != null && this.parentComponent.get_style() != null) {
			if(this.parentComponent.get_style().borderLeftSize != null) {
				x -= this.parentComponent.get_style().borderLeftSize;
			}
			if(this.parentComponent.get_style().borderTopSize != null) {
				y -= this.parentComponent.get_style().borderTopSize;
			}
		}
		var style = this.element.style;
		style.left = "" + x + "px";
		style.top = "" + y + "px";
	}
	,setTempDivData: function(div) {
		var t = this._text;
		if(t == null || t.length == 0) {
			t = "|";
		}
		div.style.fontFamily = this.element.style.fontFamily;
		div.style.fontSize = this.element.style.fontSize;
		div.style.whiteSpace = this.element.style.whiteSpace;
		div.style.lineHeight = this.element.style.lineHeight;
		if(((this.element) instanceof HTMLTextAreaElement)) {
			div.style.wordBreak = this.element.style.wordBreak;
		}
		if(this.get_autoWidth() == false) {
			div.style.width = this._width > 0 ? "" + ("" + this._width + "px") : "";
		} else {
			div.style.width = "";
		}
		var normalizedText = haxe_ui_backend_TextDisplayImpl.prototype.normalizeText.call(this,t);
		normalizedText = StringTools.replace(normalizedText,"<","&lt;");
		normalizedText = StringTools.replace(normalizedText,">","&gt;");
		if(this._displayData.multiline == true) {
			normalizedText += "<br>";
		}
		div.innerHTML = normalizedText;
	}
	,normalizeText: function(text,$escape) {
		if($escape == null) {
			$escape = true;
		}
		return StringTools.replace(text,"\\n","\n");
	}
	,__class__: haxe_ui_backend_TextInputImpl
});
var haxe_ui_backend_TimerImpl = function(delay,callback) {
	this._timer = new haxe_Timer(delay);
	this._timer.run = function() {
		callback();
	};
};
$hxClasses["haxe.ui.backend.TimerImpl"] = haxe_ui_backend_TimerImpl;
haxe_ui_backend_TimerImpl.__name__ = "haxe.ui.backend.TimerImpl";
haxe_ui_backend_TimerImpl.prototype = {
	_timer: null
	,stop: function() {
		this._timer.stop();
	}
	,__class__: haxe_ui_backend_TimerImpl
};
var haxe_ui_backend_html5_EventMapper = function() { };
$hxClasses["haxe.ui.backend.html5.EventMapper"] = haxe_ui_backend_html5_EventMapper;
haxe_ui_backend_html5_EventMapper.__name__ = "haxe.ui.backend.html5.EventMapper";
var haxe_ui_validation_ValidationManager = function() {
	this._displayQueue = [];
	this._queue = [];
	this.isValidating = false;
	this.isPending = false;
};
$hxClasses["haxe.ui.validation.ValidationManager"] = haxe_ui_validation_ValidationManager;
haxe_ui_validation_ValidationManager.__name__ = "haxe.ui.validation.ValidationManager";
haxe_ui_validation_ValidationManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_validation_ValidationManager.get_instance = function() {
	if(haxe_ui_validation_ValidationManager.instance == null) {
		haxe_ui_validation_ValidationManager.instance = new haxe_ui_validation_ValidationManager();
	}
	return haxe_ui_validation_ValidationManager.instance;
};
haxe_ui_validation_ValidationManager.prototype = {
	isValidating: null
	,isPending: null
	,_queue: null
	,_displayQueue: null
	,_events: null
	,registerEvent: function(type,listener) {
		if(this._events == null) {
			this._events = new haxe_ui_util_EventMap();
		}
		this._events.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._events == null) {
			this._events.remove(type,listener);
		}
	}
	,dispatch: function(event) {
		if(this._events != null) {
			this._events.invoke(event.type,event);
		}
	}
	,dispose: function() {
		this.isValidating = false;
		this._queue.splice(0,this._queue.length);
	}
	,add: function(object) {
		if(this._queue.indexOf(object) != -1) {
			return;
		}
		var queueLength = this._queue.length;
		if(this.isValidating == true) {
			var depth = object.get_depth();
			var min = 0;
			var max = queueLength;
			var i = 0;
			var otherDepth = 0;
			while(max > min) {
				i = min + max >>> 1;
				otherDepth = this._queue[i].get_depth();
				if(otherDepth == depth) {
					break;
				} else if(otherDepth < depth) {
					max = i;
				} else {
					min = i + 1;
				}
			}
			if(otherDepth >= depth) {
				++i;
			}
			this._queue.splice(i,0,object);
		} else {
			this._queue[queueLength] = object;
			if(this.isPending == false) {
				this.isPending = true;
				haxe_ui_Toolkit.callLater($bind(this,this.process));
			}
		}
	}
	,addDisplay: function(item,nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._displayQueue.indexOf(item) == -1) {
			this._displayQueue.push(item);
		}
		if(nextFrame == false) {
			this.process();
		}
	}
	,process: function() {
		if(this.isValidating == true || this.isPending == false) {
			return;
		}
		var queueLength = this._queue.length;
		if(queueLength == 0) {
			this.isPending = false;
			return;
		}
		this.isValidating = true;
		if(queueLength > 1) {
			this._queue.sort($bind(this,this.queueSortFunction));
		}
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStart"));
		while(this._queue.length > 0) {
			var item = this._queue.shift();
			if(item.get_depth() < 0) {
				continue;
			}
			item.validateComponent();
		}
		var _g = 0;
		var _g1 = this._displayQueue.length;
		while(_g < _g1) {
			var i = _g++;
			var item = this._displayQueue[i];
			item.updateComponentDisplay();
		}
		this._displayQueue.splice(0,this._displayQueue.length);
		this.isValidating = false;
		this.isPending = false;
		this.dispatch(new haxe_ui_events_ValidationEvent("ValidationStop"));
	}
	,queueSortFunction: function(first,second) {
		var difference = second.get_depth() - first.get_depth();
		if(difference > 0) {
			return 1;
		} else if(difference < 0) {
			return -1;
		} else {
			return 0;
		}
	}
	,__class__: haxe_ui_validation_ValidationManager
};
var haxe_ui_backend_html5_HtmlUtils = function() { };
$hxClasses["haxe.ui.backend.html5.HtmlUtils"] = haxe_ui_backend_html5_HtmlUtils;
haxe_ui_backend_html5_HtmlUtils.__name__ = "haxe.ui.backend.html5.HtmlUtils";
haxe_ui_backend_html5_HtmlUtils.__properties__ = {get_dpi:"get_dpi"};
haxe_ui_backend_html5_HtmlUtils.px = function(value) {
	return "" + value + "px";
};
haxe_ui_backend_html5_HtmlUtils.color = function(value) {
	if(value == null) {
		return "rgba(0, 0, 0, 0)";
	}
	return "#" + StringTools.hex(value,6);
};
haxe_ui_backend_html5_HtmlUtils.rgba = function(value,alpha) {
	if(alpha == null) {
		alpha = 1;
	}
	var r = value >> 16 & 255;
	var g = value >> 8 & 255;
	var b = value & 255;
	return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
};
haxe_ui_backend_html5_HtmlUtils.escape = function(s) {
	s = StringTools.replace(s,"\"","&quot;");
	s = StringTools.replace(s,"'","&#39;");
	s = StringTools.replace(s,"<","&lt;");
	s = StringTools.replace(s,">","&gt;");
	return s;
};
haxe_ui_backend_html5_HtmlUtils.namedChild = function(el,child,index) {
	if(index == null) {
		index = 0;
	}
	if(child != null) {
		var list = el.getElementsByTagName(child);
		if(list.length == 0) {
			return null;
		}
		el = list.item(index);
	}
	return el;
};
haxe_ui_backend_html5_HtmlUtils.onValidationStop = function(e) {
	var tmp = haxe_ui_backend_html5_HtmlUtils.DIV_HELPER != null;
};
haxe_ui_backend_html5_HtmlUtils.createDivHelper = function() {
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER = window.document.createElement("div");
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.position = "absolute";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.top = "-99999px";
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.left = "-99999px";
		window.document.body.appendChild(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER);
	}
};
haxe_ui_backend_html5_HtmlUtils.measureText = function(text,addWidth,addHeight,fontSize,fontName) {
	if(fontSize == null) {
		fontSize = -1;
	}
	if(addHeight == null) {
		addHeight = 0;
	}
	if(addWidth == null) {
		addWidth = 0;
	}
	if(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER == null) {
		haxe_ui_backend_html5_HtmlUtils.createDivHelper();
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.width = "";
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.height = "";
	if(fontSize > 0) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "" + fontSize + "px";
	} else {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontSize = "";
	}
	if(fontName != null) {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = fontName;
	} else {
		haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.style.fontFamily = "";
	}
	haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.innerHTML = text;
	return new haxe_ui_geom_Size(haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientWidth + addWidth,haxe_ui_backend_html5_HtmlUtils.DIV_HELPER.clientHeight + addHeight);
};
haxe_ui_backend_html5_HtmlUtils.get_dpi = function() {
	if(haxe_ui_backend_html5_HtmlUtils._dpi != 0) {
		return haxe_ui_backend_html5_HtmlUtils._dpi;
	}
	var div = window.document.createElement("div");
	div.style.width = "1in";
	div.style.height = "1in";
	div.style.position = "absolute";
	div.style.top = "-99999px";
	div.style.left = "-99999px";
	window.document.body.appendChild(div);
	var devicePixelRatio = window.devicePixelRatio;
	if(devicePixelRatio == null) {
		devicePixelRatio = 1;
	}
	haxe_ui_backend_html5_HtmlUtils._dpi = div.offsetWidth * devicePixelRatio;
	haxe_ui_backend_html5_HtmlUtils.removeElement(div);
	return haxe_ui_backend_html5_HtmlUtils._dpi;
};
haxe_ui_backend_html5_HtmlUtils.swapElements = function(el1,el2) {
	el2.parentElement.insertBefore(el2,el1);
};
haxe_ui_backend_html5_HtmlUtils.insertBefore = function(el,before) {
	before.parentElement.insertBefore(before,el);
};
haxe_ui_backend_html5_HtmlUtils.removeElement = function(el) {
	if(el != null && el.parentElement != null) {
		el.parentElement.removeChild(el);
	}
};
haxe_ui_backend_html5_HtmlUtils.isRetinaDisplay = function() {
	if(haxe_ui_backend_html5_HtmlUtils._isRetina == null) {
		var query = "(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)";
		if(window.matchMedia(query).matches) {
			haxe_ui_backend_html5_HtmlUtils._isRetina = true;
		} else {
			haxe_ui_backend_html5_HtmlUtils._isRetina = false;
		}
	}
	return haxe_ui_backend_html5_HtmlUtils._isRetina;
};
var haxe_ui_backend_html5_StyleHelper = function() { };
$hxClasses["haxe.ui.backend.html5.StyleHelper"] = haxe_ui_backend_html5_StyleHelper;
haxe_ui_backend_html5_StyleHelper.__name__ = "haxe.ui.backend.html5.StyleHelper";
haxe_ui_backend_html5_StyleHelper.apply = function(component,width,height,style) {
	var element = component.element;
	var css = element.style;
	var slice = null;
	if(style.backgroundImageSliceTop != null && style.backgroundImageSliceLeft != null && style.backgroundImageSliceBottom != null && style.backgroundImageSliceRight != null) {
		slice = new haxe_ui_geom_Rectangle(style.backgroundImageSliceLeft,style.backgroundImageSliceTop,style.backgroundImageSliceRight - style.backgroundImageSliceLeft,style.backgroundImageSliceBottom - style.backgroundImageSliceTop);
	}
	if(slice != null) {
		width = Math.round(width);
		height = Math.round(height);
	}
	css.width = "" + width + "px";
	css.height = "" + height + "px";
	var borderStyle = style.borderStyle;
	if(borderStyle == null) {
		borderStyle = "solid";
	}
	if(style.borderLeftSize != null && style.borderLeftSize == style.borderRightSize && style.borderLeftSize == style.borderBottomSize && style.borderLeftSize == style.borderTopSize) {
		if(style.borderLeftSize > 0) {
			css.borderWidth = "" + style.borderLeftSize + "px";
			css.borderStyle = borderStyle;
		} else {
			css.removeProperty("border-width");
			css.removeProperty("border-style");
		}
	} else if(style.borderLeftSize == null && style.borderRightSize == null && style.borderBottomSize == null && style.borderTopSize == null) {
		css.removeProperty("border-width");
		css.removeProperty("border-style");
	} else {
		if(style.borderTopSize != null && style.borderTopSize > 0) {
			css.borderTopWidth = "" + style.borderTopSize + "px";
			css.borderTopStyle = borderStyle;
		} else {
			css.removeProperty("border-top-width");
			css.removeProperty("border-top-style");
		}
		if(style.borderLeftSize != null && style.borderLeftSize > 0) {
			css.borderLeftWidth = "" + style.borderLeftSize + "px";
			css.borderLeftStyle = borderStyle;
		} else {
			css.removeProperty("border-left-width");
			css.removeProperty("border-left-style");
		}
		if(style.borderBottomSize != null && style.borderBottomSize > 0) {
			css.borderBottomWidth = "" + style.borderBottomSize + "px";
			css.borderBottomStyle = borderStyle;
		} else {
			css.removeProperty("border-bottom-width");
			css.removeProperty("border-bottom-style");
		}
		if(style.borderRightSize != null && style.borderRightSize > 0) {
			css.borderRightWidth = "" + style.borderRightSize + "px";
			css.borderRightStyle = borderStyle;
		} else {
			css.removeProperty("border-right-width");
			css.removeProperty("border-right-style");
		}
	}
	if(style.borderLeftColor != null && style.borderLeftColor == style.borderRightColor && style.borderLeftColor == style.borderBottomColor && style.borderLeftColor == style.borderTopColor) {
		if(style.borderOpacity == null) {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.borderColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
		}
	} else if(style.borderLeftColor == null && style.borderRightColor == null && style.borderBottomColor == null && style.borderTopColor == null) {
		css.removeProperty("border-color");
	} else {
		if(style.borderTopColor != null && style.borderTopSize != null) {
			if(style.borderOpacity == null) {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
			} else {
				css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderTopColor,style.borderOpacity);
			}
		} else if(style.borderTopColor == null && style.borderTopSize != null) {
			css.borderTopColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderTopColor);
		} else {
			css.removeProperty("border-top-color");
		}
		if(style.borderLeftColor != null && style.borderLeftSize != null) {
			if(style.borderOpacity == null) {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
			} else {
				css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderLeftColor,style.borderOpacity);
			}
		} else if(style.borderLeftColor == null && style.borderLeftSize != null) {
			css.borderLeftColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderLeftColor);
		} else {
			css.removeProperty("border-left-color");
		}
		if(style.borderBottomColor != null && style.borderBottomSize != null) {
			if(style.borderOpacity == null) {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
			} else {
				css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderBottomColor,style.borderOpacity);
			}
		} else if(style.borderBottomColor == null && style.borderBottomSize != null) {
			css.borderBottomColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderBottomColor);
		} else {
			css.removeProperty("border-bottom-color");
		}
		if(style.borderRightColor != null && style.borderRightSize != null) {
			if(style.borderOpacity == null) {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
			} else {
				css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.borderRightColor,style.borderOpacity);
			}
		} else if(style.borderRightColor == null && style.borderRightSize != null) {
			css.borderRightColor = haxe_ui_backend_html5_HtmlUtils.color(style.borderRightColor);
		} else {
			css.removeProperty("border-right-color");
		}
	}
	var background = [];
	if(style.backgroundColor != null) {
		if(style.backgroundColorEnd != null && style.backgroundColorEnd != style.backgroundColor) {
			css.removeProperty("background-color");
			var gradientStyle = style.backgroundGradientStyle;
			if(gradientStyle == null) {
				gradientStyle = "vertical";
			}
			if(style.backgroundOpacity != null) {
				if(gradientStyle == "vertical") {
					background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				} else if(gradientStyle == "horizontal") {
					background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity) + ", " + haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColorEnd,style.backgroundOpacity) + ")");
				}
			} else if(gradientStyle == "vertical") {
				background.push("linear-gradient(to bottom, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			} else if(gradientStyle == "horizontal") {
				background.push("linear-gradient(to right, " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor) + ", " + haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColorEnd) + ")");
			}
		} else {
			css.removeProperty("background");
			if(style.backgroundOpacity != null) {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.rgba(style.backgroundColor,style.backgroundOpacity);
			} else {
				css.backgroundColor = haxe_ui_backend_html5_HtmlUtils.color(style.backgroundColor);
			}
		}
	} else {
		css.removeProperty("background");
		css.removeProperty("background-color");
	}
	if(style.borderRadius != null && style.borderRadius > 0 && (style.borderRadiusTopLeft == null || style.borderRadiusTopLeft == style.borderRadius) && (style.borderRadiusTopRight == null || style.borderRadiusTopRight == style.borderRadius) && (style.borderRadiusBottomLeft == null || style.borderRadiusBottomLeft == style.borderRadius) && (style.borderRadiusBottomRight == null || style.borderRadiusBottomRight == style.borderRadius)) {
		css.borderRadius = "" + style.borderRadius + "px";
	} else if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0 || style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0 || style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0 || style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
		if(style.borderRadiusTopLeft != null && style.borderRadiusTopLeft > 0) {
			css.borderTopLeftRadius = "" + style.borderRadiusTopLeft + "px";
		} else {
			css.removeProperty("border-top-left-radius");
		}
		if(style.borderRadiusTopRight != null && style.borderRadiusTopRight > 0) {
			css.borderTopRightRadius = "" + style.borderRadiusTopRight + "px";
		} else {
			css.removeProperty("border-top-right-radius");
		}
		if(style.borderRadiusBottomLeft != null && style.borderRadiusBottomLeft > 0) {
			css.borderBottomLeftRadius = "" + style.borderRadiusBottomLeft + "px";
		} else {
			css.removeProperty("border-bottom-left-radius");
		}
		if(style.borderRadiusBottomRight != null && style.borderRadiusBottomRight > 0) {
			css.borderBottomRightRadius = "" + style.borderRadiusBottomRight + "px";
		} else {
			css.removeProperty("border-bottom-right-radius");
		}
	} else {
		css.removeProperty("border-radius");
	}
	if(style.backgroundImage != null) {
		haxe_ui_Toolkit.get_assets().getImage(style.backgroundImage,function(imageInfo) {
			if(imageInfo == null) {
				return;
			}
			var imageRect = new haxe_ui_geom_Rectangle(0,0,imageInfo.width,imageInfo.height);
			if(style.backgroundImageClipTop != null && style.backgroundImageClipLeft != null && style.backgroundImageClipBottom != null && style.backgroundImageClipRight != null) {
				imageRect = new haxe_ui_geom_Rectangle(style.backgroundImageClipLeft,style.backgroundImageClipTop,style.backgroundImageClipRight - style.backgroundImageClipLeft,style.backgroundImageClipBottom - style.backgroundImageClipTop);
			}
			if(slice == null) {
				if(imageRect.width == imageInfo.width && imageRect.height == imageInfo.height) {
					background.push("url(" + imageInfo.data.src + ")");
					if(style.backgroundImageRepeat == null) {
						css.backgroundRepeat = "no-repeat";
						css.removeProperty("background-size");
					} else if(style.backgroundImageRepeat == "repeat") {
						css.backgroundRepeat = "repeat";
						css.removeProperty("background-size");
					} else if(style.backgroundImageRepeat == "stretch") {
						css.backgroundRepeat = "no-repeat";
						css.backgroundSize = "100% 100%";
					}
					background.reverse();
					css.background = background.join(",");
				} else {
					var canvas = component.getCanvas(width,height);
					var ctx = canvas.getContext("2d",null);
					ctx.clearRect(0,0,width,height);
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,imageRect,new haxe_ui_geom_Rectangle(0,0,width,height));
				}
			} else {
				var rects = haxe_ui_geom_Slice9.buildRects(width,height,imageRect.width,imageRect.height,slice);
				var srcRects = rects.src;
				var dstRects = rects.dst;
				var canvas = component.getCanvas(width,height);
				var ctx = canvas.getContext("2d",null);
				ctx.clearRect(0,0,width,height);
				ctx.imageSmoothingEnabled = false;
				var _g = 0;
				var _g1 = srcRects.length;
				while(_g < _g1) {
					var i = _g++;
					var srcRect = new haxe_ui_geom_Rectangle(srcRects[i].left + imageRect.left,srcRects[i].top + imageRect.top,srcRects[i].width,srcRects[i].height);
					var dstRect = dstRects[i];
					haxe_ui_backend_html5_StyleHelper.paintBitmap(ctx,imageInfo.data,srcRect,dstRect);
				}
			}
		});
	} else {
		component.removeCanvas();
		css.background = background[0];
	}
};
haxe_ui_backend_html5_StyleHelper.paintBitmap = function(ctx,img,srcRect,dstRect) {
	if(srcRect.width == 0 || srcRect.height == 0) {
		return;
	}
	if(dstRect.width == 0 || dstRect.height == 0) {
		return;
	}
	ctx.drawImage(img,srcRect.left | 0,srcRect.top | 0,srcRect.width | 0,srcRect.height | 0,dstRect.left | 0,dstRect.top | 0,dstRect.width | 0,dstRect.height | 0);
};
var haxe_ui_backend_html5_UserAgent = function() {
	this._unknown = false;
	this._msie = false;
	this._firefox = false;
	this._safari = false;
	this._chrome = false;
	this._opera = false;
	var ua = $global.navigator.userAgent;
	if(ua.indexOf("Opera") != -1 || ua.indexOf("OPR") != -1) {
		this._opera = true;
	} else if(ua.indexOf("Chrome") != -1) {
		this._chrome = true;
	} else if(ua.indexOf("Safari") != -1) {
		this._safari = true;
	} else if(ua.indexOf("Firefox") != -1) {
		this._firefox = true;
	} else if(ua.indexOf("MSIE") != -1) {
		this._msie = true;
	} else {
		this._unknown = true;
	}
};
$hxClasses["haxe.ui.backend.html5.UserAgent"] = haxe_ui_backend_html5_UserAgent;
haxe_ui_backend_html5_UserAgent.__name__ = "haxe.ui.backend.html5.UserAgent";
haxe_ui_backend_html5_UserAgent.__properties__ = {get_instance:"get_instance"};
haxe_ui_backend_html5_UserAgent.get_instance = function() {
	if(haxe_ui_backend_html5_UserAgent._instance == null) {
		haxe_ui_backend_html5_UserAgent._instance = new haxe_ui_backend_html5_UserAgent();
	}
	return haxe_ui_backend_html5_UserAgent._instance;
};
haxe_ui_backend_html5_UserAgent.prototype = {
	_opera: null
	,opera: null
	,get_opera: function() {
		return this._opera;
	}
	,_chrome: null
	,chrome: null
	,get_chrome: function() {
		return this._chrome;
	}
	,_safari: null
	,safari: null
	,get_safari: function() {
		return this._safari;
	}
	,_firefox: null
	,firefox: null
	,get_firefox: function() {
		return this._firefox;
	}
	,_msie: null
	,msie: null
	,get_msie: function() {
		return this._msie;
	}
	,_unknown: null
	,unknown: null
	,get_unknown: function() {
		return this._unknown;
	}
	,__class__: haxe_ui_backend_html5_UserAgent
	,__properties__: {get_unknown:"get_unknown",get_msie:"get_msie",get_firefox:"get_firefox",get_safari:"get_safari",get_chrome:"get_chrome",get_opera:"get_opera"}
};
var haxe_ui_backend_html5_util_FontDetect = function() {
};
$hxClasses["haxe.ui.backend.html5.util.FontDetect"] = haxe_ui_backend_html5_util_FontDetect;
haxe_ui_backend_html5_util_FontDetect.__name__ = "haxe.ui.backend.html5.util.FontDetect";
haxe_ui_backend_html5_util_FontDetect.init = function() {
	if(haxe_ui_backend_html5_util_FontDetect._initialized == true) {
		return;
	}
	haxe_ui_backend_html5_util_FontDetect._initialized = true;
	var body = window.document.body;
	var firstChild = window.document.body.firstChild;
	var div = window.document.createElement("div");
	div.id = "fontdetectHelper";
	haxe_ui_backend_html5_util_FontDetect.span = window.document.createElement("span");
	haxe_ui_backend_html5_util_FontDetect.span.innerText = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
	div.appendChild(haxe_ui_backend_html5_util_FontDetect.span);
	body.insertBefore(div,firstChild);
	div.style.position = "absolute";
	div.style.visibility = "hidden";
	div.style.top = "-200px";
	div.style.left = "-100000px";
	div.style.width = "100000px";
	div.style.height = "200px";
	div.style.fontSize = "100px";
};
haxe_ui_backend_html5_util_FontDetect.onFontLoaded = function(cssFontName,onLoad,onFail,options) {
	if(cssFontName == null) {
		return;
	}
	var msInterval = 10;
	if(options != null && options.msInterval != null) {
		msInterval = options.msInterval;
	}
	var msTimeout = 2000;
	if(options != null && options.msTimeout != null) {
		msTimeout = options.msTimeout;
	}
	if(onLoad == null && onFail == null) {
		return;
	}
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
		if(onLoad != null) {
			onLoad(cssFontName);
		}
		return;
	}
	var utStart = new Date().getTime();
	var idInterval = 0;
	idInterval = window.setInterval(function() {
		if(haxe_ui_backend_html5_util_FontDetect.isFontLoaded(cssFontName)) {
			window.clearInterval(idInterval);
			if(onLoad != null) {
				onLoad(cssFontName);
			}
			return;
		} else {
			var utNow = new Date().getTime();
			if(utNow - utStart > msTimeout) {
				window.clearInterval(idInterval);
				if(onFail != null) {
					onFail(cssFontName);
				}
			}
		}
	},msInterval);
};
haxe_ui_backend_html5_util_FontDetect.isFontLoaded = function(cssFontName) {
	var wThisFont = 0;
	var wPrevFont = 0;
	if(haxe_ui_backend_html5_util_FontDetect._initialized == false) {
		haxe_ui_backend_html5_util_FontDetect.init();
	}
	var _g = 0;
	var _g1 = haxe_ui_backend_html5_util_FontDetect._aFallbackFonts.length;
	while(_g < _g1) {
		var ix = _g++;
		haxe_ui_backend_html5_util_FontDetect.span.style.fontFamily = cssFontName + "," + haxe_ui_backend_html5_util_FontDetect._aFallbackFonts[ix];
		wThisFont = haxe_ui_backend_html5_util_FontDetect.span.offsetWidth;
		if(ix > 0 && wThisFont != wPrevFont) {
			return false;
		}
		wPrevFont = wThisFont;
	}
	return true;
};
haxe_ui_backend_html5_util_FontDetect.prototype = {
	__class__: haxe_ui_backend_html5_util_FontDetect
};
var haxe_ui_backend_html5_util_StyleSheetHelper = function() {
};
$hxClasses["haxe.ui.backend.html5.util.StyleSheetHelper"] = haxe_ui_backend_html5_util_StyleSheetHelper;
haxe_ui_backend_html5_util_StyleSheetHelper.__name__ = "haxe.ui.backend.html5.util.StyleSheetHelper";
haxe_ui_backend_html5_util_StyleSheetHelper.getValidStyleSheet = function() {
	if(haxe_ui_backend_html5_util_StyleSheetHelper._sheet != null) {
		return haxe_ui_backend_html5_util_StyleSheetHelper._sheet;
	}
	var sheet = null;
	var _g = 0;
	var _g1 = window.document.styleSheets;
	while(_g < _g1.length) {
		var test = _g1[_g];
		++_g;
		if(test.ownerNode == null || test.disabled == true) {
			continue;
		}
		var css = js_Boot.__cast(test , CSSStyleSheet);
		if(css.ownerNode.nodeName == "STYLE" && css.href == null) {
			try {
				var r = css.cssRules;
				sheet = css;
				break;
			} catch( _g2 ) {
			}
		}
	}
	if(sheet == null) {
		var styleElement = window.document.createElement("style");
		styleElement.appendChild(window.document.createTextNode(""));
		window.document.head.appendChild(styleElement);
		sheet = js_Boot.__cast(styleElement.sheet , CSSStyleSheet);
	}
	haxe_ui_backend_html5_util_StyleSheetHelper._sheet = sheet;
	return sheet;
};
haxe_ui_backend_html5_util_StyleSheetHelper.prototype = {
	__class__: haxe_ui_backend_html5_util_StyleSheetHelper
};
var haxe_ui_behaviours_Behaviour = function(component) {
	this.config = null;
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviour"] = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_Behaviour.__name__ = "haxe.ui.behaviours.Behaviour";
haxe_ui_behaviours_Behaviour.prototype = {
	config: null
	,_component: null
	,id: null
	,set: function(value) {
	}
	,setDynamic: function(value) {
		this.set(haxe_ui_util_Variant.fromDynamic(value));
	}
	,detatch: function() {
	}
	,get: function() {
		return null;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this.get());
	}
	,update: function() {
	}
	,call: function(param) {
		return null;
	}
	,getConfigValue: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getConfigValueBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = defaultValue;
		var s = this.getConfigValue(name);
		if(s != null) {
			v = s == "true";
		}
		return v;
	}
	,__class__: haxe_ui_behaviours_Behaviour
};
var haxe_ui_behaviours_Behaviours = function(component) {
	this._actualUpdateOrder = null;
	this._updateOrder = [];
	this._instances = new haxe_ds_StringMap();
	this._registry = new haxe_ds_StringMap();
	this._component = component;
};
$hxClasses["haxe.ui.behaviours.Behaviours"] = haxe_ui_behaviours_Behaviours;
haxe_ui_behaviours_Behaviours.__name__ = "haxe.ui.behaviours.Behaviours";
haxe_ui_behaviours_Behaviours.prototype = {
	_component: null
	,_registry: null
	,_instances: null
	,register: function(id,cls,defaultValue) {
		var info = { id : id, cls : cls, defaultValue : defaultValue, isSet : false};
		this._registry.h[id] = info;
		HxOverrides.remove(this._updateOrder,id);
		this._updateOrder.push(id);
		this._actualUpdateOrder = null;
	}
	,isRegistered: function(id) {
		return Object.prototype.hasOwnProperty.call(this._registry.h,id);
	}
	,replaceNative: function() {
		if(this._component.get_native() == false || this._component.get_hasNativeEntry() == false) {
			return;
		}
		var ids = [];
		var h = this._registry.h;
		var id_h = h;
		var id_keys = Object.keys(h);
		var id_length = id_keys.length;
		var id_current = 0;
		while(id_current < id_length) {
			var id = id_keys[id_current++];
			ids.push(id);
		}
		var _g = 0;
		while(_g < ids.length) {
			var id = ids[_g];
			++_g;
			var nativeProps = this._component.getNativeConfigProperties(".behaviour[id=" + id + "]");
			if(nativeProps != null && Object.prototype.hasOwnProperty.call(nativeProps.h,"class")) {
				var registered = this._registry.h[id];
				var name = nativeProps.h["class"];
				var info = { id : id, cls : $hxClasses[name], defaultValue : registered.defaultValue, config : nativeProps, isSet : false};
				this._registry.h[id] = info;
			}
		}
	}
	,validateData: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(js_Boot.__implements(b,haxe_ui_behaviours_IValidatingBehaviour)) {
				(js_Boot.__cast(b , haxe_ui_behaviours_IValidatingBehaviour)).validate();
			}
		}
	}
	,_updateOrder: null
	,get_updateOrder: function() {
		return this._updateOrder;
	}
	,set_updateOrder: function(value) {
		this._updateOrder = value;
		this._actualUpdateOrder = null;
		return value;
	}
	,_actualUpdateOrder: null
	,actualUpdateOrder: null
	,get_actualUpdateOrder: function() {
		if(this._actualUpdateOrder == null) {
			this._actualUpdateOrder = this._updateOrder.slice();
			var h = this._instances.h;
			var key_h = h;
			var key_keys = Object.keys(h);
			var key_length = key_keys.length;
			var key_current = 0;
			while(key_current < key_length) {
				var key = key_keys[key_current++];
				if(this._actualUpdateOrder.indexOf(key) == -1) {
					this._actualUpdateOrder.push(key);
				}
			}
		}
		return this._actualUpdateOrder;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var b = this._instances.h[key];
			if(b != null) {
				b.update();
			}
		}
	}
	,find: function(id,create) {
		if(create == null) {
			create = true;
		}
		var b = this._instances.h[id];
		if(b == null && create == true) {
			var info = this._registry.h[id];
			if(info != null) {
				b = Type.createInstance(info.cls,[this._component]);
				if(b != null) {
					b.config = info.config;
					b.id = id;
					this._instances.h[id] = b;
					this._actualUpdateOrder = null;
				} else {
					var c = js_Boot.getClass(this._component);
					haxe_Log.trace("WARNING: problem creating behaviour class '" + Std.string(info.cls) + "' for '" + c.__name__ + ":" + id + "'",{ fileName : "haxe/ui/behaviours/Behaviours.hx", lineNumber : 140, className : "haxe.ui.behaviours.Behaviours", methodName : "find"});
				}
			}
		}
		if(b == null) {
			throw haxe_Exception.thrown("behaviour " + id + " not found");
		}
		return b;
	}
	,_cache: null
	,cache: function() {
		this._cache = new haxe_ds_StringMap();
		var h = this._registry.h;
		var registeredKey_h = h;
		var registeredKey_keys = Object.keys(h);
		var registeredKey_length = registeredKey_keys.length;
		var registeredKey_current = 0;
		while(registeredKey_current < registeredKey_length) {
			var registeredKey = registeredKey_keys[registeredKey_current++];
			var v = this._registry.h[registeredKey].defaultValue;
			var instance = this._instances.h[registeredKey];
			if(instance != null) {
				v = instance.get();
			}
			if(v != null) {
				this._cache.h[registeredKey] = v;
			}
		}
	}
	,dispose: function() {
		this._component = null;
		this._registry = null;
		var h = this._instances.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var inst = this._instances.h[key];
			inst._component = null;
		}
		this._instances = null;
		this._cache = null;
		this._actualUpdateOrder = null;
		this._updateOrder = null;
	}
	,detatch: function() {
		var h = this._instances.h;
		var b_h = h;
		var b_keys = Object.keys(h);
		var b_length = b_keys.length;
		var b_current = 0;
		while(b_current < b_length) {
			var b = b_h[b_keys[b_current++]];
			b.detatch();
		}
		this._instances = new haxe_ds_StringMap();
	}
	,restore: function() {
		if(this._cache == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.get_actualUpdateOrder();
		while(_g < _g1.length) {
			var key = _g1[_g];
			++_g;
			var v = this._cache.h[key];
			if(v != null) {
				this.set(key,v);
			}
		}
		this._cache = null;
	}
	,lock: function() {
	}
	,unlock: function() {
	}
	,setDynamic: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = haxe_ui_util_Variant.toDynamic((js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value);
			changed = v != value;
		}
		b.setDynamic(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,set: function(id,value) {
		this.lock();
		var b = this.find(id);
		var changed = null;
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			var v = (js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value;
			changed = haxe_ui_util_Variant.neq(v,value);
		}
		b.set(value);
		var info = this._registry.h[id];
		info.isSet = true;
		this.unlock();
		this.performAutoDispatch(b,changed);
	}
	,softSet: function(id,value) {
		var b = this.find(id);
		if(((b) instanceof haxe_ui_behaviours_ValueBehaviour)) {
			(js_Boot.__cast(b , haxe_ui_behaviours_ValueBehaviour))._value = value;
		}
	}
	,ready: function() {
		if(this._autoDispatch == null) {
			return;
		}
		var b = this._autoDispatch.keys();
		while(b.hasNext()) {
			var b1 = b.next();
			var changed = this._autoDispatch.h[b1.__id__];
			this.performAutoDispatch(b1,changed);
		}
		this._autoDispatch = null;
	}
	,_autoDispatch: null
	,performAutoDispatch: function(b,changed) {
		if(this._component.get_isReady() == false) {
			if(this._autoDispatch == null) {
				this._autoDispatch = new haxe_ds_ObjectMap();
			}
			this._autoDispatch.set(b,changed);
			return;
		}
		var autoDispatch = b.getConfigValue("autoDispatch",null);
		if(autoDispatch != null) {
			var arr = autoDispatch.split(".");
			var eventName = arr.pop().toLowerCase();
			var cls = arr.join(".");
			var event = Type.createInstance($hxClasses[cls],[eventName]);
			if(eventName != "change") {
				b._component.dispatch(event);
			} else if(changed == true || changed == null) {
				b._component.dispatch(event);
			}
		}
	}
	,get: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			var info = this._registry.h[id];
			if(info.isSet == false && info.defaultValue != null && js_Boot.getClass(b) == haxe_ui_behaviours_DefaultBehaviour) {
				v = info.defaultValue;
			} else {
				v = b.get();
			}
		}
		this.unlock();
		return v;
	}
	,getDynamic: function(id) {
		this.lock();
		var b = this.find(id);
		var v = null;
		if(b != null) {
			v = b.getDynamic();
		}
		this.unlock();
		return v;
	}
	,call: function(id,param) {
		return this.find(id).call(param);
	}
	,applyDefaults: function() {
		var order = this._updateOrder.slice();
		var h = this._registry.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			if(order.indexOf(key) == -1) {
				order.push(key);
			}
		}
		var _g = 0;
		while(_g < order.length) {
			var key = order[_g];
			++_g;
			var r = this._registry.h[key];
			if(r.defaultValue != null) {
				this.set(key,r.defaultValue);
			}
		}
	}
	,__class__: haxe_ui_behaviours_Behaviours
	,__properties__: {get_actualUpdateOrder:"get_actualUpdateOrder",set_updateOrder:"set_updateOrder",get_updateOrder:"get_updateOrder"}
};
var haxe_ui_behaviours_ValueBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.ValueBehaviour"] = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_ValueBehaviour.__name__ = "haxe.ui.behaviours.ValueBehaviour";
haxe_ui_behaviours_ValueBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_ValueBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_previousValue: null
	,_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
	}
	,__class__: haxe_ui_behaviours_ValueBehaviour
});
var haxe_ui_behaviours_IValidatingBehaviour = function() { };
$hxClasses["haxe.ui.behaviours.IValidatingBehaviour"] = haxe_ui_behaviours_IValidatingBehaviour;
haxe_ui_behaviours_IValidatingBehaviour.__name__ = "haxe.ui.behaviours.IValidatingBehaviour";
haxe_ui_behaviours_IValidatingBehaviour.__isInterface__ = true;
haxe_ui_behaviours_IValidatingBehaviour.prototype = {
	validate: null
	,__class__: haxe_ui_behaviours_IValidatingBehaviour
};
var haxe_ui_behaviours_DataBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DataBehaviour"] = haxe_ui_behaviours_DataBehaviour;
haxe_ui_behaviours_DataBehaviour.__name__ = "haxe.ui.behaviours.DataBehaviour";
haxe_ui_behaviours_DataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DataBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_DataBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	_dataInvalid: null
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._previousValue = this._value;
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DataBehaviour
});
var haxe_ui_behaviours_DefaultBehaviour = function(component) {
	this._value = null;
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DefaultBehaviour"] = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_behaviours_DefaultBehaviour.__name__ = "haxe.ui.behaviours.DefaultBehaviour";
haxe_ui_behaviours_DefaultBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DefaultBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_Behaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_behaviours_DefaultBehaviour
});
var haxe_ui_behaviours_DynamicBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicBehaviour"] = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicBehaviour.__name__ = "haxe.ui.behaviours.DynamicBehaviour";
haxe_ui_behaviours_DynamicBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_behaviours_DynamicBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,getDynamic: function() {
		return this._value;
	}
	,setDynamic: function(value) {
		if(value == this._value) {
			return;
		}
		this._value = value;
	}
	,set: function(value) {
		this.setDynamic(haxe_ui_util_Variant.toDynamic(value));
	}
	,__class__: haxe_ui_behaviours_DynamicBehaviour
});
var haxe_ui_behaviours_DynamicDataBehaviour = function(component) {
	haxe_ui_behaviours_DynamicBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.DynamicDataBehaviour"] = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.__name__ = "haxe.ui.behaviours.DynamicDataBehaviour";
haxe_ui_behaviours_DynamicDataBehaviour.__interfaces__ = [haxe_ui_behaviours_IValidatingBehaviour];
haxe_ui_behaviours_DynamicDataBehaviour.__super__ = haxe_ui_behaviours_DynamicBehaviour;
haxe_ui_behaviours_DynamicDataBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicBehaviour.prototype,{
	_dataInvalid: null
	,setDynamic: function(value) {
		if(value == this.getDynamic()) {
			return;
		}
		this._value = value;
		this.invalidateData();
	}
	,validate: function() {
		if(this._dataInvalid) {
			this._dataInvalid = false;
			this.validateData();
		}
	}
	,invalidateData: function() {
		this._dataInvalid = true;
		this._component.invalidateComponent("data",false);
	}
	,validateData: function() {
	}
	,__class__: haxe_ui_behaviours_DynamicDataBehaviour
});
var haxe_ui_behaviours_InvalidatingBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.InvalidatingBehaviour"] = haxe_ui_behaviours_InvalidatingBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.__name__ = "haxe.ui.behaviours.InvalidatingBehaviour";
haxe_ui_behaviours_InvalidatingBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_InvalidatingBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		haxe_ui_behaviours_ValueBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_InvalidatingBehaviour
});
var haxe_ui_behaviours_LayoutBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.behaviours.LayoutBehaviour"] = haxe_ui_behaviours_LayoutBehaviour;
haxe_ui_behaviours_LayoutBehaviour.__name__ = "haxe.ui.behaviours.LayoutBehaviour";
haxe_ui_behaviours_LayoutBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_behaviours_LayoutBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,__class__: haxe_ui_behaviours_LayoutBehaviour
});
var haxe_ui_layouts_ILayout = function() { };
$hxClasses["haxe.ui.layouts.ILayout"] = haxe_ui_layouts_ILayout;
haxe_ui_layouts_ILayout.__name__ = "haxe.ui.layouts.ILayout";
haxe_ui_layouts_ILayout.__isInterface__ = true;
var haxe_ui_layouts_Layout = function() {
};
$hxClasses["haxe.ui.layouts.Layout"] = haxe_ui_layouts_Layout;
haxe_ui_layouts_Layout.__name__ = "haxe.ui.layouts.Layout";
haxe_ui_layouts_Layout.__interfaces__ = [haxe_ui_layouts_ILayout];
haxe_ui_layouts_Layout.prototype = {
	_component: null
	,get_component: function() {
		return this._component;
	}
	,set_component: function(value) {
		this._component = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		if(searchType == null) {
			searchType = "id";
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponent(criteria,type,recursive,searchType);
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		if(this._component == null) {
			return null;
		}
		return this._component.findComponents(styleName,type,maxDepth);
	}
	,refresh: function() {
		if(this._component != null && this._component.get_isReady() == true) {
			this.resizeChildren();
			this._component.handlePreReposition();
			this.repositionChildren();
			this._component.handlePostReposition();
		}
	}
	,autoSize: function() {
		if(this.get_component().get_isReady() == false) {
			return false;
		}
		var calculatedWidth = null;
		var calculatedHeight = null;
		if(this.get_component().get_autoWidth() == true || this.get_component().get_autoHeight() == true) {
			var size = this.calcAutoSize();
			if(this.get_component().get_autoWidth() == true) {
				calculatedWidth = size.width;
			}
			if(this.get_component().get_autoHeight() == true) {
				calculatedHeight = size.height;
			}
			this.get_component().resizeComponent(calculatedWidth,calculatedHeight);
		}
		if(calculatedWidth == null) {
			return calculatedHeight != null;
		} else {
			return true;
		}
	}
	,marginTop: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginTop == null) {
			return 0;
		}
		return child.get_style().marginTop;
	}
	,marginLeft: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginLeft == null) {
			return 0;
		}
		return child.get_style().marginLeft;
	}
	,marginBottom: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginBottom == null) {
			return 0;
		}
		return child.get_style().marginBottom;
	}
	,marginRight: function(child) {
		if(child == null || child.get_style() == null || child.get_style().marginRight == null) {
			return 0;
		}
		return child.get_style().marginRight;
	}
	,hidden: function(c) {
		if(c == null) {
			c = this.get_component();
		}
		return c.get_hidden();
	}
	,horizontalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().horizontalAlign == null) {
			return "left";
		}
		return child.get_style().horizontalAlign;
	}
	,verticalAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().verticalAlign == null) {
			return "top";
		}
		return child.get_style().verticalAlign;
	}
	,fixedMinWidth: function(child) {
		var fixedMinWidth = false;
		if(child != null && child.get_style() != null && child.get_style().minWidth != null) {
			fixedMinWidth = child.get_componentWidth() <= child.get_style().minWidth;
		}
		return fixedMinWidth;
	}
	,fixedMinHeight: function(child) {
		var fixedMinHeight = false;
		if(child != null && child.get_style() != null && child.get_style().minHeight != null) {
			fixedMinHeight = child.get_componentHeight() <= child.get_style().minHeight;
		}
		return fixedMinHeight;
	}
	,borderSize: null
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		var tmp = n > 0;
		return n;
	}
	,paddingLeft: null
	,get_paddingLeft: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingLeft == null) {
			return 0;
		}
		return this._component.get_style().paddingLeft;
	}
	,paddingTop: null
	,get_paddingTop: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingTop == null) {
			return 0;
		}
		return this._component.get_style().paddingTop;
	}
	,paddingBottom: null
	,get_paddingBottom: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingBottom == null) {
			return 0;
		}
		return this._component.get_style().paddingBottom;
	}
	,paddingRight: null
	,get_paddingRight: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().paddingRight == null) {
			return 0;
		}
		return this._component.get_style().paddingRight;
	}
	,horizontalSpacing: null
	,get_horizontalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().horizontalSpacing == null) {
			return 0;
		}
		return this._component.get_style().horizontalSpacing;
	}
	,verticalSpacing: null
	,get_verticalSpacing: function() {
		if(this._component == null || this._component.get_style() == null || this._component.get_style().verticalSpacing == null) {
			return 0;
		}
		return this._component.get_style().verticalSpacing;
	}
	,innerWidth: null
	,innerHeight: null
	,get_innerWidth: function() {
		if(this.get_component() == null) {
			return 0;
		}
		return this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
	}
	,get_innerHeight: function() {
		if(this.get_component() == null) {
			return 0;
		}
		var padding = 0;
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingTop != null) {
			padding = this.get_component().get_style().paddingTop + padding;
		}
		if(this.get_component().get_style() != null && this.get_component().get_style().paddingBottom != null) {
			padding = this.get_component().get_style().paddingBottom + padding;
		}
		var icy = this.get_component().get_componentHeight() - padding;
		return icy;
	}
	,resizeChildren: function() {
	}
	,repositionChildren: function() {
	}
	,usableSize: null
	,get_usableSize: function() {
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,usableWidth: null
	,get_usableWidth: function() {
		return this.get_usableSize().width;
	}
	,usableHeight: null
	,get_usableHeight: function() {
		return this.get_usableSize().height;
	}
	,calcAutoWidth: function() {
		return this.calcAutoSize().width;
	}
	,calcAutoHeight: function() {
		return this.calcAutoSize().height;
	}
	,calcAutoSize: function(exclusions) {
		var x1 = 16777215;
		var x2 = 0;
		var y1 = 16777215;
		var y2 = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false || this.excluded(exclusions,child) == true) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_left() < x1) {
					x1 = child.get_left();
				}
				if(child.get_componentWidth() != null && child.get_left() + child.get_componentWidth() > x2) {
					x2 = child.get_left() + child.get_componentWidth();
				}
			}
			if(child.get_percentHeight() == null) {
				if(child.get_top() < y1) {
					y1 = child.get_top();
				}
				if(child.get_componentHeight() != null && child.get_top() + child.get_componentHeight() > y2) {
					y2 = child.get_top() + child.get_componentHeight();
				}
			}
		}
		if(x1 == 16777215) {
			x1 = 0;
		}
		if(y1 == 16777215) {
			y1 = 0;
		}
		var w = x2 - x1 + (this.get_paddingLeft() + this.get_paddingRight());
		var h = y2 - y1 + (this.get_paddingTop() + this.get_paddingBottom());
		if(((this) instanceof haxe_ui_layouts_AbsoluteLayout)) {
			w += x1;
			h += y1;
		}
		return new haxe_ui_geom_Size(w,h);
	}
	,excluded: function(exclusions,child) {
		if(exclusions == null) {
			return false;
		}
		return exclusions.indexOf(child) != -1;
	}
	,__class__: haxe_ui_layouts_Layout
	,__properties__: {get_usableHeight:"get_usableHeight",get_usableWidth:"get_usableWidth",get_usableSize:"get_usableSize",get_innerHeight:"get_innerHeight",get_innerWidth:"get_innerWidth",get_verticalSpacing:"get_verticalSpacing",get_horizontalSpacing:"get_horizontalSpacing",get_paddingRight:"get_paddingRight",get_paddingBottom:"get_paddingBottom",get_paddingTop:"get_paddingTop",get_paddingLeft:"get_paddingLeft",get_borderSize:"get_borderSize",set_component:"set_component",get_component:"get_component"}
};
var haxe_ui_layouts_DefaultLayout = function() {
	this._calcFullHeights = false;
	this._calcFullWidths = false;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.DefaultLayout"] = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DefaultLayout.__name__ = "haxe.ui.layouts.DefaultLayout";
haxe_ui_layouts_DefaultLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_DefaultLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_calcFullWidths: null
	,_calcFullHeights: null
	,resizeChildren: function() {
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var fullWidthValue = 100;
		var fullHeightValue = 100;
		if(this._calcFullWidths == true || this._calcFullHeights == true) {
			var n1 = 0;
			var n2 = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(this._calcFullWidths == true && child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					++n1;
				}
				if(this._calcFullHeights == true && child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					++n2;
				}
			}
			if(n1 > 0) {
				fullWidthValue = 100 / n1;
			}
			if(n2 > 0) {
				fullHeightValue = 100 / n2;
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var childPercentWidth = child.get_percentWidth();
				if(childPercentWidth == 100) {
					childPercentWidth = fullWidthValue;
				}
				cx = usableSize.width * childPercentWidth / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				var childPercentHeight = child.get_percentHeight();
				if(childPercentHeight == 100) {
					childPercentHeight = fullHeightValue;
				}
				cy = usableSize.height * childPercentHeight / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			child.resizeComponent(cx,cy);
		}
	}
	,repositionChildren: function() {
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			var ypos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginRight(child));
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			switch(this.verticalAlign(child)) {
			case "bottom":
				ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginBottom(child));
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos,ypos);
		}
	}
	,__class__: haxe_ui_layouts_DefaultLayout
});
var haxe_ui_components_ButtonLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.ButtonLayout"] = haxe_ui_components_ButtonLayout;
haxe_ui_components_ButtonLayout.__name__ = "haxe.ui.components.ButtonLayout";
haxe_ui_components_ButtonLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_ButtonLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style() == null || this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(this._component.get_autoWidth() == false) {
			var ucx = this.get_usableSize();
			if(label != null) {
				var cx = ucx.width;
				if(icon != null && (this.get_iconPosition() == "far-right" || this.get_iconPosition() == "far-left" || this.get_iconPosition() == "left" || this.get_iconPosition() == "right")) {
					cx -= icon.get_width() + this.get_verticalSpacing();
				}
				label.set_width(cx);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var label = this.get_component().findComponent(null,haxe_ui_components_Label,false);
		if(label != null && label.get_hidden() == true) {
			label = null;
		}
		var icon = this.get_component().findComponent("button-icon",null,false);
		if(icon != null && icon.get_hidden() == true) {
			icon = null;
		}
		switch(this.get_iconPosition()) {
		case "far-left":
			if(label != null && icon != null) {
				var x = this.get_paddingLeft();
				if(this.get_iconPosition() == "far-left") {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "far-right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if(this.get_iconPosition() == "far-right") {
					if(cx + this.get_paddingLeft() + this.get_paddingRight() < this.get_component().get_componentWidth()) {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight() + this.marginLeft(icon) - this.marginRight(icon));
					} else {
						label.set_left(this.get_paddingLeft());
						x += this.get_horizontalSpacing() + label.get_componentWidth();
						icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					}
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.get_paddingLeft());
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "left":case "right":
			if(label != null && icon != null) {
				var cx = label.get_componentWidth() + icon.get_componentWidth() + this.get_horizontalSpacing();
				var x = this.get_component().get_componentWidth() / 2 - cx / 2 | 0;
				if((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign() == "left") {
					x = this.get_paddingLeft();
				}
				if(this.get_iconPosition() == "right") {
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
					x += this.get_horizontalSpacing() + label.get_componentWidth();
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
				} else {
					icon.set_left(x + this.marginLeft(icon) - this.marginRight(icon));
					x += this.get_horizontalSpacing() + icon.get_componentWidth();
					label.set_left(x + this.marginLeft(label) - this.marginRight(label));
				}
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			} else if(label != null) {
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left(this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0);
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		case "bottom":case "top":
			if(label != null && icon != null) {
				var cy = label.get_componentHeight() + icon.get_componentHeight() + this.get_verticalSpacing();
				var y = this.get_component().get_componentHeight() / 2 - cy / 2 | 0;
				if(this.get_iconPosition() == "bottom") {
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
					y += this.get_verticalSpacing() + label.get_componentHeight();
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
				} else {
					icon.set_top(y + this.marginTop(icon) - this.marginBottom(icon));
					y += this.get_verticalSpacing() + icon.get_componentHeight();
					label.set_top(y + this.marginTop(label) - this.marginBottom(label));
				}
				label.set_left(this.getTextAlignPos(label,this.get_component().get_componentWidth()));
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
			} else if(label != null) {
				label.set_left((this.get_component().get_componentWidth() / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label));
				label.set_top((this.get_component().get_componentHeight() / 2 - label.get_componentHeight() / 2 | 0) + this.marginTop(label) - this.marginBottom(label));
			} else if(icon != null) {
				icon.set_left((this.get_component().get_componentWidth() / 2 - icon.get_componentWidth() / 2 | 0) + this.marginLeft(icon) - this.marginRight(icon));
				icon.set_top((this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2 | 0) + this.marginTop(icon) - this.marginBottom(icon));
			}
			break;
		}
	}
	,getTextAlignPos: function(label,usableWidth) {
		switch((js_Boot.__cast(this.get_component() , haxe_ui_components_Button)).get_textAlign()) {
		case "left":
			return this.marginLeft(label) + this.get_paddingLeft();
		case "right":
			return usableWidth - label.get_componentWidth() - this.marginRight(label) - this.get_paddingRight();
		default:
			return (usableWidth / 2 - label.get_componentWidth() / 2 | 0) + this.marginLeft(label) - this.marginRight(label);
		}
	}
	,__class__: haxe_ui_components_ButtonLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$Button_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.GroupBehaviour"] = haxe_ui_components__$Button_GroupBehaviour;
haxe_ui_components__$Button_GroupBehaviour.__name__ = "haxe.ui.components._Button.GroupBehaviour";
haxe_ui_components__$Button_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		haxe_ui_components__$Button_ButtonGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$Button_GroupBehaviour
});
var haxe_ui_components__$Button_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.TextBehaviour"] = haxe_ui_components__$Button_TextBehaviour;
haxe_ui_components__$Button_TextBehaviour.__name__ = "haxe.ui.components._Button.TextBehaviour";
haxe_ui_components__$Button_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("button-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$Button_TextBehaviour
});
var haxe_ui_components__$Button_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.IconBehaviour"] = haxe_ui_components__$Button_IconBehaviour;
haxe_ui_components__$Button_IconBehaviour.__name__ = "haxe.ui.components._Button.IconBehaviour";
haxe_ui_components__$Button_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("button-icon",null,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			this._component.get_customStyle().icon = null;
			this._component.removeComponent(icon);
			return;
		}
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("icon");
			icon.set_id("button-icon");
			icon.set_scriptAccess(false);
			this._component.addComponentAt(icon,0);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_components__$Button_IconBehaviour
});
var haxe_ui_components__$Button_ToggleBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.ToggleBehaviour"] = haxe_ui_components__$Button_ToggleBehaviour;
haxe_ui_components__$Button_ToggleBehaviour.__name__ = "haxe.ui.components._Button.ToggleBehaviour";
haxe_ui_components__$Button_ToggleBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Button_ToggleBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	_value: null
	,get: function() {
		return this._value;
	}
	,set: function(value) {
		if(haxe_ui_util_Variant.eq(this._value,value)) {
			return;
		}
		this._value = value;
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(haxe_ui_util_Variant.eq(value,haxe_ui_util_Variant.fromBool(false))) {
			button.set_selected(false);
		}
		button.registerInternalEvents(button._internalEventsClass,true);
	}
	,__class__: haxe_ui_components__$Button_ToggleBehaviour
});
var haxe_ui_components__$Button_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Button.SelectedBehaviour"] = haxe_ui_components__$Button_SelectedBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.__name__ = "haxe.ui.components._Button.SelectedBehaviour";
haxe_ui_components__$Button_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Button_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var button = js_Boot.__cast(this._component , haxe_ui_components_Button);
		if(button.get_toggle() == false) {
			return;
		}
		(js_Boot.__cast(button._compositeBuilder , haxe_ui_components_ButtonBuilder)).setSelection(button,haxe_ui_util_Variant.toBool(this._value));
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			button.removeClass(":down",true,true);
		} else {
			button.addClass(":down",true,true);
		}
		var events = js_Boot.__cast(button._internalEvents , haxe_ui_components_ButtonEvents);
		if(events.lastMouseEvent != null && button.hitTest(events.lastMouseEvent.screenX,events.lastMouseEvent.screenY)) {
			button.addClass(":hover",true,true);
			events.lastMouseEvent = null;
		} else {
			button.removeClass(":hover",true,true);
		}
		events.dispatchChanged();
	}
	,__class__: haxe_ui_components__$Button_SelectedBehaviour
});
var haxe_ui_events_Events = function(target) {
	this._target = target;
};
$hxClasses["haxe.ui.events.Events"] = haxe_ui_events_Events;
haxe_ui_events_Events.__name__ = "haxe.ui.events.Events";
haxe_ui_events_Events.prototype = {
	_target: null
	,register: function() {
	}
	,unregister: function() {
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.hasEvent(type,listener) == false) {
			this._target.registerEvent(type,listener,priority);
		}
	}
	,hasEvent: function(type,listener) {
		return this._target.hasEvent(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		this._target.unregisterEvent(type,listener);
	}
	,dispatch: function(event) {
		this._target.dispatch(event);
	}
	,__class__: haxe_ui_events_Events
};
var haxe_ui_components_ButtonEvents = function(button) {
	this._lastScreenEvent = null;
	this.recursiveStyling = true;
	this.lastMouseEvent = null;
	this._repeatInterval = 0;
	this._repeater = false;
	this._down = false;
	haxe_ui_events_Events.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonEvents"] = haxe_ui_components_ButtonEvents;
haxe_ui_components_ButtonEvents.__name__ = "haxe.ui.components.ButtonEvents";
haxe_ui_components_ButtonEvents.__super__ = haxe_ui_events_Events;
haxe_ui_components_ButtonEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_button: null
	,_down: null
	,_repeatTimer: null
	,_repeater: null
	,_repeatInterval: null
	,lastMouseEvent: null
	,recursiveStyling: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("move",$bind(this,this.onMove)) == false) {
			this.registerEvent("move",$bind(this,this.onMove));
		}
		if(this.hasEvent("actionStart",$bind(this,this.onActionStart)) == false) {
			this.registerEvent("actionStart",$bind(this,this.onActionStart));
		}
		if(this.hasEvent("actionEnd",$bind(this,this.onActionEnd)) == false) {
			this.registerEvent("actionEnd",$bind(this,this.onActionEnd));
		}
		if(this._button.get_toggle() == true) {
			this.registerEvent("click",$bind(this,this.onMouseClick),100);
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("click",$bind(this,this.onMouseClick));
		this.unregisterEvent("move",$bind(this,this.onMove));
		this.unregisterEvent("actionStart",$bind(this,this.onActionStart));
		this.unregisterEvent("actionEnd",$bind(this,this.onActionEnd));
	}
	,onMouseOver: function(event) {
		if(this._button.get_toggle() == true && this._button.classes.indexOf(":down") != -1) {
			return;
		}
		if(event.buttonDown == false || this._down == false) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,onMouseOut: function(event) {
		if(this._button.get_toggle() == true && this._button.get_selected() == true) {
			return;
		}
		if(this._button.get_remainPressed() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		this._button.removeClass(":hover",true,this.recursiveStyling);
	}
	,onMouseDown: function(event) {
		var _gthis = this;
		this._button.set_focus(true);
		if(this._button.get_repeater() == true && this._repeatInterval == 0) {
			this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		}
		this._down = true;
		this._button.addClass(":down",true,this.recursiveStyling);
		this._button.get_screen().registerEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._repeater == true && this._repeatInterval == this._button.get_repeatInterval()) {
			this._repeatTimer = new haxe_ui_util_Timer(this._repeatInterval,$bind(this,this.onRepeatTimer));
		} else if(this._button.get_repeater() == true) {
			if(this._repeatTimer != null) {
				this._repeatTimer.stop();
				this._repeatTimer = null;
			}
			haxe_ui_util_Timer.delay(function() {
				if(_gthis._repeater == true && _gthis._repeatTimer == null) {
					if(_gthis._button.get_easeInRepeater() == true && _gthis._repeatInterval > _gthis._button.get_repeatInterval()) {
						var tmp = _gthis._repeatInterval - (_gthis._repeatInterval - _gthis._button.get_repeatInterval()) / 2 | 0;
						_gthis._repeatInterval = tmp;
						_gthis.onRepeatTimer();
					}
					_gthis.onMouseDown(event);
				}
			},this._repeatInterval);
		}
		this._repeater = this._button.get_repeater();
	}
	,_lastScreenEvent: null
	,onMouseUp: function(event) {
		this._down = this._repeater = false;
		this._repeatInterval = this._button.get_easeInRepeater() ? this._button.get_repeatInterval() * 2 : this._button.get_repeatInterval();
		this._button.get_screen().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._button.get_toggle() == true) {
			return;
		}
		this._lastScreenEvent = event;
		this._button.removeClass(":down",true,this.recursiveStyling);
		var over = this._button.hitTest(event.screenX,event.screenY);
		if(event.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		if(this._repeatTimer != null) {
			this._repeatTimer.stop();
			this._repeatTimer = null;
		}
	}
	,onMove: function(event) {
		if(this._lastScreenEvent == null) {
			return;
		}
		var over = this._button.hitTest(this._lastScreenEvent.screenX,this._lastScreenEvent.screenY);
		if(this._lastScreenEvent.touchEvent == false && over == true) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		} else if(over == false) {
			this._button.removeClass(":hover",true,this.recursiveStyling);
		}
		this._lastScreenEvent = null;
	}
	,onRepeatTimer: function() {
		if(this._button.classes.indexOf(":hover") != -1 && this._down == true) {
			var event = new haxe_ui_events_MouseEvent("click");
			this._button.dispatch(event);
		}
	}
	,onMouseClick: function(event) {
		this._button.set_selected(!this._button.get_selected());
		if(this._button.get_selected() == false) {
			this._button.removeClass(":down",true,this.recursiveStyling);
		}
		if(this._button.hitTest(event.screenX,event.screenY)) {
			this._button.addClass(":hover",true,this.recursiveStyling);
		}
	}
	,dispatchChanged: function() {
		this._button.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,press: function() {
		this._down = true;
		if(this._button.get_toggle() == true) {
			this._button.addClass(":down",true,this.recursiveStyling);
		} else {
			this._button.addClass(":down",true,this.recursiveStyling);
		}
	}
	,release: function() {
		if(this._down == true) {
			this._down = false;
			if(this._button.get_toggle() == true) {
				this._button.set_selected(!this._button.get_selected());
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			} else {
				this._button.removeClass(":down",true,this.recursiveStyling);
				this._button.dispatch(new haxe_ui_events_MouseEvent("click"));
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.press();
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this.release();
			break;
		default:
		}
	}
	,__class__: haxe_ui_components_ButtonEvents
});
var haxe_ui_core_CompositeBuilder = function(component) {
	this._component = component;
};
$hxClasses["haxe.ui.core.CompositeBuilder"] = haxe_ui_core_CompositeBuilder;
haxe_ui_core_CompositeBuilder.__name__ = "haxe.ui.core.CompositeBuilder";
haxe_ui_core_CompositeBuilder.prototype = {
	_component: null
	,create: function() {
	}
	,destroy: function() {
	}
	,onInitialize: function() {
	}
	,onReady: function() {
	}
	,show: function() {
		return false;
	}
	,hide: function() {
		return false;
	}
	,get_numComponents: function() {
		return null;
	}
	,get_cssName: function() {
		return null;
	}
	,addComponent: function(child) {
		return null;
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		return false;
	}
	,getComponentIndex: function(child) {
		return -2147483648;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,validateComponentLayout: function() {
		return false;
	}
	,applyStyle: function(style) {
	}
	,onComponentAdded: function(child) {
	}
	,onComponentRemoved: function(child) {
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var _g = 0;
		var _g1 = this.get_numComponents();
		while(_g < _g1) {
			var i = _g++;
			var c = this.getComponentAt(i);
			var match = c.findComponent(criteria,type,recursive,searchType);
			if(match != null) {
				return match;
			}
		}
		return null;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		return null;
	}
	,isComponentClipped: null
	,get_isComponentClipped: function() {
		return this._component.get_componentClipRect() != null;
	}
	,__class__: haxe_ui_core_CompositeBuilder
	,__properties__: {get_isComponentClipped:"get_isComponentClipped",get_cssName:"get_cssName",get_numComponents:"get_numComponents"}
};
var haxe_ui_components_ButtonBuilder = function(button) {
	haxe_ui_core_CompositeBuilder.call(this,button);
	this._button = button;
};
$hxClasses["haxe.ui.components.ButtonBuilder"] = haxe_ui_components_ButtonBuilder;
haxe_ui_components_ButtonBuilder.__name__ = "haxe.ui.components.ButtonBuilder";
haxe_ui_components_ButtonBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_ButtonBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_button: null
	,applyStyle: function(style) {
		var c = this._component.findComponent("button-label",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		var c = this._component.findComponent("button-icon",haxe_ui_core_Component,false);
		if(c != null) {
			var invalidate = false;
			if(c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
		if(style.icon != null) {
			this._button.set_icon(haxe_ui_util_Variant.fromString(style.icon));
		}
	}
	,setSelection: function(button,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(button.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components__$Button_ButtonGroups.get_instance().get(button.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button && b.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(button.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components__$Button_ButtonGroups.get_instance().get(button.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var b = arr[_g];
					++_g;
					if(b != button) {
						b.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			button.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
	}
	,__class__: haxe_ui_components_ButtonBuilder
});
var haxe_ui_components__$Button_ButtonGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components._Button.ButtonGroups"] = haxe_ui_components__$Button_ButtonGroups;
haxe_ui_components__$Button_ButtonGroups.__name__ = "haxe.ui.components._Button.ButtonGroups";
haxe_ui_components__$Button_ButtonGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components__$Button_ButtonGroups.get_instance = function() {
	if(haxe_ui_components__$Button_ButtonGroups._instance == null) {
		haxe_ui_components__$Button_ButtonGroups._instance = new haxe_ui_components__$Button_ButtonGroups();
	}
	return haxe_ui_components__$Button_ButtonGroups._instance;
};
haxe_ui_components__$Button_ButtonGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,buttons) {
		this._groups.h[name] = buttons;
	}
	,add: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(button) == -1) {
			arr.push(button);
		}
		this.set(name,arr);
	}
	,remove: function(name,button) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,button);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,reset: function(name) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		var selection = null;
		var _g = 0;
		while(_g < arr.length) {
			var item = arr[_g];
			++_g;
			if(item.get_selected() == true) {
				selection = item;
				break;
			}
		}
		if(selection == null) {
			return;
		}
		(js_Boot.__cast(selection._compositeBuilder , haxe_ui_components_ButtonBuilder)).setSelection(selection,false,true);
	}
	,__class__: haxe_ui_components__$Button_ButtonGroups
};
var haxe_ui_components_CalendarEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.components.CalendarEvent"] = haxe_ui_components_CalendarEvent;
haxe_ui_components_CalendarEvent.__name__ = "haxe.ui.components.CalendarEvent";
haxe_ui_components_CalendarEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_components_CalendarEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_components_CalendarEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_components_CalendarEvent
});
var haxe_ui_containers_Grid = function() {
	this._columns = -1;
	haxe_ui_containers_Box.call(this);
	if(this._columns == -1) {
		this.set_columns(2);
	}
};
$hxClasses["haxe.ui.containers.Grid"] = haxe_ui_containers_Grid;
haxe_ui_containers_Grid.__name__ = "haxe.ui.containers.Grid";
haxe_ui_containers_Grid.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Grid.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_columns: null
	,get_columns: function() {
		return (js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).get_columns();
	}
	,set_columns: function(value) {
		if(this._layout == null) {
			this.set_layout(this.createLayout());
		}
		(js_Boot.__cast(this._layout , haxe_ui_layouts_VerticalGridLayout)).set_columns(value);
		this._columns = value;
		return value;
	}
	,createDefaults: function() {
		haxe_ui_containers_Box.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalGridLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_columns(this.get_columns());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Grid();
	}
	,__class__: haxe_ui_containers_Grid
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components_Calendar = function() {
	haxe_ui_containers_Grid.call(this);
};
$hxClasses["haxe.ui.components.Calendar"] = haxe_ui_components_Calendar;
haxe_ui_components_Calendar.__name__ = "haxe.ui.components.Calendar";
haxe_ui_components_Calendar.__super__ = haxe_ui_containers_Grid;
haxe_ui_components_Calendar.prototype = $extend(haxe_ui_containers_Grid.prototype,{
	previousMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousMonth",null);
	}
	,nextMonth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextMonth",null);
	}
	,previousYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("previousYear",null);
	}
	,nextYear: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("nextYear",null);
	}
	,createDefaults: function() {
		haxe_ui_containers_Grid.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerComposite: function() {
		haxe_ui_containers_Grid.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Calendar_Events;
		this._compositeBuilderClass = haxe_ui_components__$Calendar_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Calendar_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Grid.prototype.registerBehaviours.call(this);
		this.behaviours.register("date",haxe_ui_components__$Calendar_DateBehaviour);
		this.behaviours.register("selectedDate",haxe_ui_components__$Calendar_SelectedDateBehaviour);
		this.behaviours.register("previousMonth",haxe_ui_components__$Calendar_PreviousMonthBehaviour);
		this.behaviours.register("nextMonth",haxe_ui_components__$Calendar_NextMonthBehaviour);
		this.behaviours.register("previousYear",haxe_ui_components__$Calendar_PreviousYearBehaviour);
		this.behaviours.register("nextYear",haxe_ui_components__$Calendar_NextYearBehaviour);
	}
	,get_date: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("date"));
	}
	,set_date: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("date",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"date"));
		return value;
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Grid.prototype.cloneComponent.call(this);
		if(this.get_date() != null) {
			c.set_date(this.get_date());
		}
		if(this.get_selectedDate() != null) {
			c.set_selectedDate(this.get_selectedDate());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Calendar();
	}
	,__class__: haxe_ui_components_Calendar
	,__properties__: $extend(haxe_ui_containers_Grid.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate",set_date:"set_date",get_date:"get_date"})
});
var haxe_ui_components__$Calendar_PreviousMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousMonthBehaviour"] = haxe_ui_components__$Calendar_PreviousMonthBehaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousMonthBehaviour";
haxe_ui_components__$Calendar_PreviousMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousMonthBehaviour
});
var haxe_ui_components__$Calendar_NextMonthBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextMonthBehaviour"] = haxe_ui_components__$Calendar_NextMonthBehaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.__name__ = "haxe.ui.components._Calendar.NextMonthBehaviour";
haxe_ui_components__$Calendar_NextMonthBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextMonthBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextMonth(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextMonthBehaviour
});
var haxe_ui_components__$Calendar_PreviousYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.PreviousYearBehaviour"] = haxe_ui_components__$Calendar_PreviousYearBehaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.__name__ = "haxe.ui.components._Calendar.PreviousYearBehaviour";
haxe_ui_components__$Calendar_PreviousYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_PreviousYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.previousYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_PreviousYearBehaviour
});
var haxe_ui_components__$Calendar_NextYearBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.NextYearBehaviour"] = haxe_ui_components__$Calendar_NextYearBehaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.__name__ = "haxe.ui.components._Calendar.NextYearBehaviour";
haxe_ui_components__$Calendar_NextYearBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Calendar_NextYearBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(haxe_ui_components__$Calendar_DateUtils.nextYear(calendar.get_date()));
		return null;
	}
	,__class__: haxe_ui_components__$Calendar_NextYearBehaviour
});
var haxe_ui_components__$Calendar_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.SelectedDateBehaviour"] = haxe_ui_components__$Calendar_SelectedDateBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.__name__ = "haxe.ui.components._Calendar.SelectedDateBehaviour";
haxe_ui_components__$Calendar_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$Calendar_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var date = haxe_ui_util_Variant.toDate(value);
		this._component.invalidateComponent("data",false);
		var calendar = js_Boot.__cast(this._component , haxe_ui_components_Calendar);
		calendar.set_date(date);
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Calendar_SelectedDateBehaviour
});
var haxe_ui_components__$Calendar_DateBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Calendar.DateBehaviour"] = haxe_ui_components__$Calendar_DateBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.__name__ = "haxe.ui.components._Calendar.DateBehaviour";
haxe_ui_components__$Calendar_DateBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Calendar_DateBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var date = haxe_ui_util_Variant.toDate(this._value);
		if(date == null) {
			return;
		}
		var year = date.getFullYear();
		var month = date.getMonth();
		var startDay = new Date(year,month,1,0,0,0).getDay();
		var endDay = haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year);
		var _g = 0;
		var _this = this._component;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.set_opacity(.3);
			child.removeClass("calendar-off-day");
			child.removeClass("calendar-day");
			child.removeClass("calendar-day-selected");
			child.removeClass(":hover");
		}
		var prevMonth = haxe_ui_components__$Calendar_DateUtils.previousMonth(date);
		var last = haxe_ui_components__$Calendar_DateUtils.getEndDay(prevMonth.getMonth(),prevMonth.getFullYear());
		var n = startDay - 1;
		var _g = 0;
		var _g1 = startDay;
		while(_g < _g1) {
			var _ = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[n];
			item.addClass("calendar-off-day");
			--n;
			item.set_text("" + last);
			--last;
		}
		var selectedDate = (js_Boot.__cast(this._component , haxe_ui_components_Calendar)).get_selectedDate();
		if(selectedDate == null) {
			selectedDate = new Date();
		}
		var _g = 0;
		var _g1 = endDay;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i + startDay];
			item.addClass("calendar-day");
			item.set_opacity(1);
			item.set_hidden(false);
			item.set_text("" + (i + 1));
			if(i + 1 == selectedDate.getDate() && month == selectedDate.getMonth() && year == selectedDate.getFullYear()) {
				item.addClass("calendar-day-selected");
			}
			last = i + startDay;
		}
		++last;
		var n = 0;
		var _g = last;
		var _this = this._component;
		var _g1 = (_this._children == null ? [] : _this._children).length;
		while(_g < _g1) {
			var i = _g++;
			var _this = this._component;
			var item = (_this._children == null ? [] : _this._children)[i];
			item.addClass("calendar-off-day");
			item.set_text("" + (n + 1));
			++n;
		}
		this._component.registerInternalEvents(null,true);
		this._component.dispatch(new haxe_ui_components_CalendarEvent("datechange"));
	}
	,__class__: haxe_ui_components__$Calendar_DateBehaviour
});
var haxe_ui_components__$Calendar_DateUtils = function() { };
$hxClasses["haxe.ui.components._Calendar.DateUtils"] = haxe_ui_components__$Calendar_DateUtils;
haxe_ui_components__$Calendar_DateUtils.__name__ = "haxe.ui.components._Calendar.DateUtils";
haxe_ui_components__$Calendar_DateUtils.getEndDay = function(month,year) {
	var endDay = -1;
	switch(month) {
	case 1:
		if(year % 400 == 0 || year % 100 != 0 && year % 4 == 0) {
			endDay = 29;
		} else {
			endDay = 28;
		}
		break;
	case 3:case 5:case 8:case 10:
		endDay = 30;
		break;
	default:
		endDay = 31;
	}
	return endDay;
};
haxe_ui_components__$Calendar_DateUtils.previousMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--month;
	if(month < 0) {
		month = 11;
		--year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextMonth = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++month;
	if(month > 11) {
		month = 0;
		++year;
	}
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.previousYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	--year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
haxe_ui_components__$Calendar_DateUtils.nextYear = function(date) {
	var year = date.getFullYear();
	var month = date.getMonth();
	var day = date.getDate();
	++year;
	day = js_Boot.__cast(Math.min(day,haxe_ui_components__$Calendar_DateUtils.getEndDay(month,year)) , Int);
	date = new Date(year,month,day,0,0,0);
	return date;
};
var haxe_ui_components__$Calendar_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.components._Calendar.Events"] = haxe_ui_components__$Calendar_Events;
haxe_ui_components__$Calendar_Events.__name__ = "haxe.ui.components._Calendar.Events";
haxe_ui_components__$Calendar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Calendar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		this.unregister();
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.hasEvent("click",$bind(this,this.onDayClicked)) == false && child.classes.indexOf("calendar-day") != -1) {
				child.registerEvent("click",$bind(this,this.onDayClicked));
			}
		}
	}
	,unregister: function() {
		var _g = 0;
		var _this = this._target;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onDayClicked));
		}
	}
	,onDayClicked: function(event) {
		var calendar = js_Boot.__cast(this._target , haxe_ui_components_Calendar);
		var day = Std.parseInt(event.target.get_text());
		var month = calendar.get_date().getMonth();
		var year = calendar.get_date().getFullYear();
		calendar.set_selectedDate(new Date(year,month,day,0,0,0));
	}
	,__class__: haxe_ui_components__$Calendar_Events
});
var haxe_ui_components__$Calendar_Builder = function(calendar) {
	haxe_ui_core_CompositeBuilder.call(this,calendar);
	this._calendar = calendar;
};
$hxClasses["haxe.ui.components._Calendar.Builder"] = haxe_ui_components__$Calendar_Builder;
haxe_ui_components__$Calendar_Builder.__name__ = "haxe.ui.components._Calendar.Builder";
haxe_ui_components__$Calendar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Calendar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendar: null
	,create: function() {
		this._calendar.set_columns(7);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		var item = new haxe_ui_components_Button();
		item.set_scriptAccess(false);
		this._calendar.addComponent(item);
		this._calendar.set_date(new Date());
	}
	,__class__: haxe_ui_components__$Calendar_Builder
});
var haxe_ui_layouts_VerticalGridLayout = function() {
	this._columns = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalGridLayout"] = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_layouts_VerticalGridLayout.__name__ = "haxe.ui.layouts.VerticalGridLayout";
haxe_ui_layouts_VerticalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_VerticalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_columns: null
	,get_columns: function() {
		return this._columns;
	}
	,set_columns: function(value) {
		if(this._columns == value) {
			return value;
		}
		this._columns = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var rows = Math.ceil((_this._children == null ? [] : _this._children).length / this.get_columns());
			var c = this.get_columns();
			var _this = this.get_component();
			var c1 = Math.min(c,(_this._children == null ? [] : _this._children).length);
			size.width -= this.get_horizontalSpacing() * (c1 - 1);
			size.height -= this.get_verticalSpacing() * (rows - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
			++columnIndex;
			if(columnIndex >= this.get_columns()) {
				xpos = this.get_paddingLeft();
				ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
				columnIndex = 0;
				++rowIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var columnWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var fullWidthsCounts = [0];
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null && child.get_percentWidth() == 100) {
					fullWidthsCounts[rowIndex]++;
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					fullWidthsCounts.push(0);
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var childPercentWidth = child.get_percentWidth();
					if(childPercentWidth == 100 && fullWidthsCounts[rowIndex] != 0) {
						var f = fullWidthsCounts[rowIndex];
						if(rowIndex > 0 && fullWidthsCounts[rowIndex - 1] != 0) {
							f = fullWidthsCounts[rowIndex - 1];
						}
						childPercentWidth = 100 / f;
					}
					var cx = usableSize.width * childPercentWidth / 100;
					if(cx > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = cx;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this._columns | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var rowHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_height() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_height();
				}
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var newRow = true;
			var fullHeightRowCount = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null && child.get_percentHeight() == 100) {
					if(newRow == true) {
						newRow = false;
						++fullHeightRowCount;
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
					newRow = true;
				}
			}
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var childPercentHeight = child.get_percentHeight();
					if(childPercentHeight == 100 && fullHeightRowCount > 1) {
						childPercentHeight = 100 / fullHeightRowCount;
					}
					var cy = usableSize.height * childPercentHeight / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					} else {
						var tmp = usableSize.height > rowHeights[rowIndex];
					}
				}
				++columnIndex;
				if(columnIndex >= this._columns) {
					columnIndex = 0;
					++rowIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var explicitWidths = [];
		var _g = 0;
		var _g1 = this._columns;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[columnIndex] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var rowCount = visibleChildren / this.get_columns() | 0;
		if(visibleChildren % this._columns != 0) {
			++rowCount;
		}
		var explicitHeights = [];
		var _g = 0;
		var _g1 = rowCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[columnIndex % this._columns] = true;
			}
			++columnIndex;
			if(columnIndex >= this._columns) {
				columnIndex = 0;
				++rowIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_VerticalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_columns:"set_columns",get_columns:"get_columns"})
});
var haxe_ui_components__$Calendar_Layout = function() {
	haxe_ui_layouts_VerticalGridLayout.call(this);
};
$hxClasses["haxe.ui.components._Calendar.Layout"] = haxe_ui_components__$Calendar_Layout;
haxe_ui_components__$Calendar_Layout.__name__ = "haxe.ui.components._Calendar.Layout";
haxe_ui_components__$Calendar_Layout.__super__ = haxe_ui_layouts_VerticalGridLayout;
haxe_ui_components__$Calendar_Layout.prototype = $extend(haxe_ui_layouts_VerticalGridLayout.prototype,{
	resizeChildren: function() {
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_layout() == null) {
				continue;
			}
			if(child.get_width() > child.get_layout().get_paddingLeft() + child.get_layout().get_paddingRight() && child.get_width() > max) {
				max = child.get_width();
			}
			if(child.get_width() > child.get_layout().get_paddingTop() + child.get_layout().get_paddingBottom() && child.get_height() > max) {
				max = child.get_height();
			}
		}
		if(max > 0) {
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.set_width(max);
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_components__$Calendar_Layout
});
var haxe_ui_components_CheckBox = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBox"] = haxe_ui_components_CheckBox;
haxe_ui_components_CheckBox.__name__ = "haxe.ui.components.CheckBox";
haxe_ui_components_CheckBox.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBox.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$CheckBox_TextBehaviour);
		this.behaviours.register("selected",haxe_ui_components__$CheckBox_SelectedBehaviour);
	}
	,get_selected: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("selected"));
	}
	,set_selected: function(value) {
		this.behaviours.set("selected",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selected"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_selected(this.get_selected());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBox();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$CheckBox_Events;
		this._compositeBuilderClass = haxe_ui_components_CheckBoxBuilder;
		this._defaultLayoutClass = haxe_ui_components__$CheckBox_CheckBoxLayout;
	}
	,__class__: haxe_ui_components_CheckBox
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_selected:"set_selected",get_selected:"get_selected"})
});
var haxe_ui_components_CheckBoxValue = function() {
	this._down = true;
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.CheckBoxValue"] = haxe_ui_components_CheckBoxValue;
haxe_ui_components_CheckBoxValue.__name__ = "haxe.ui.components.CheckBoxValue";
haxe_ui_components_CheckBoxValue.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_CheckBoxValue.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	onReady: function() {
		this.createIcon();
		this.registerEvent("actionStart",$bind(this,this.onActionStart));
		this.registerEvent("actionEnd",$bind(this,this.onActionEnd));
	}
	,applyStyle: function(style) {
		haxe_ui_core_InteractiveComponent.prototype.applyStyle.call(this,style);
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon != null) {
			icon.set_resource(haxe_ui_util_Variant.fromString(style.icon));
		}
	}
	,createIcon: function() {
		var icon = this.findComponent(null,haxe_ui_components_Image);
		if(icon == null && this.parentComponent != null) {
			icon = new haxe_ui_components_Image();
			icon.set_id("" + this.parentComponent.get_cssName() + "-icon");
			icon.addClass("" + this.parentComponent.get_cssName() + "-icon");
			if(this.get_style() != null && this.get_style().icon != null) {
				icon.set_resource(haxe_ui_util_Variant.fromString(this.get_style().icon));
			}
			this.addComponent(icon);
		}
	}
	,_down: null
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			this._down = true;
			break;
		default:
		}
	}
	,onActionEnd: function(event) {
		switch(event.action) {
		case "actionConfirm":case "actionPress":
			if(this._down == true) {
				this._down = false;
				if(this.parentComponent != null) {
					var checkbox = js_Boot.__cast(this.parentComponent , haxe_ui_components_CheckBox);
					checkbox.set_selected(!checkbox.get_selected());
				}
			}
			break;
		default:
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_CheckBoxValue();
	}
	,__class__: haxe_ui_components_CheckBoxValue
});
var haxe_ui_components__$CheckBox_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.TextBehaviour"] = haxe_ui_components__$CheckBox_TextBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.__name__ = "haxe.ui.components._CheckBox.TextBehaviour";
haxe_ui_components__$CheckBox_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		if(label == null) {
			label = new haxe_ui_components_Label();
			label.set_id("" + this._component.get_cssName() + "-label");
			label.addClass("" + this._component.get_cssName() + "-label");
			label.set_scriptAccess(false);
			this._component.addComponent(label);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_components__$CheckBox_TextBehaviour
});
var haxe_ui_components__$CheckBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._CheckBox.SelectedBehaviour"] = haxe_ui_components__$CheckBox_SelectedBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.__name__ = "haxe.ui.components._CheckBox.SelectedBehaviour";
haxe_ui_components__$CheckBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$CheckBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var valueComponent = this._component.findComponent(null,haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			valueComponent.addClass(":selected");
		} else {
			valueComponent.removeClass(":selected");
		}
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$CheckBox_SelectedBehaviour
});
var haxe_ui_components__$CheckBox_Events = function(checkbox) {
	haxe_ui_events_Events.call(this,checkbox);
	this._checkbox = checkbox;
};
$hxClasses["haxe.ui.components._CheckBox.Events"] = haxe_ui_components__$CheckBox_Events;
haxe_ui_components__$CheckBox_Events.__name__ = "haxe.ui.components._CheckBox.Events";
haxe_ui_components__$CheckBox_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$CheckBox_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_checkbox: null
	,register: function() {
		if(this.hasEvent("mouseover",$bind(this,this.onMouseOver)) == false) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(this.hasEvent("mouseout",$bind(this,this.onMouseOut)) == false) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		if(this.hasEvent("click",$bind(this,this.onClick)) == false) {
			this.registerEvent("click",$bind(this,this.onClick));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		this.unregisterEvent("click",$bind(this,this.onClick));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).addClass(":hover");
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover");
		this._target.findComponent(null,haxe_ui_components_CheckBoxValue).removeClass(":hover");
	}
	,onClick: function(event) {
		this._checkbox.set_selected(!this._checkbox.get_selected());
	}
	,onMouseDown: function(event) {
		this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue).set_focus(true);
	}
	,__class__: haxe_ui_components__$CheckBox_Events
});
var haxe_ui_components_CheckBoxBuilder = function(checkbox) {
	haxe_ui_core_CompositeBuilder.call(this,checkbox);
	this._checkbox = checkbox;
	this._checkbox.set_allowFocus(false);
};
$hxClasses["haxe.ui.components.CheckBoxBuilder"] = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_CheckBoxBuilder.__name__ = "haxe.ui.components.CheckBoxBuilder";
haxe_ui_components_CheckBoxBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components_CheckBoxBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_checkbox: null
	,create: function() {
		if(this._checkbox.findComponent(null,haxe_ui_components_CheckBoxValue) == null) {
			var value = new haxe_ui_components_CheckBoxValue();
			value.set_id("" + this._checkbox.get_cssName() + "-value");
			value.addClass("" + this._checkbox.get_cssName() + "-value");
			value.set_scriptAccess(false);
			this._checkbox.addComponent(value);
		}
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("" + this._checkbox.get_cssName() + "-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,get_cssName: function() {
		return "checkbox";
	}
	,__class__: haxe_ui_components_CheckBoxBuilder
});
var haxe_ui_layouts_HorizontalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullWidths = true;
};
$hxClasses["haxe.ui.layouts.HorizontalLayout"] = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalLayout.__name__ = "haxe.ui.layouts.HorizontalLayout";
haxe_ui_layouts_HorizontalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_HorizontalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var xpos = this.get_paddingLeft();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var ypos = 0;
			switch(this.verticalAlign(child)) {
			case "bottom":
				if(child.get_componentHeight() < this.get_component().get_componentHeight()) {
					ypos = this.get_component().get_componentHeight() - (child.get_componentHeight() + this.get_paddingBottom() + this.marginTop(child));
				}
				break;
			case "center":
				ypos = (this.get_component().get_componentHeight() - child.get_componentHeight()) / 2 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				ypos = this.get_paddingTop() + this.marginTop(child);
			}
			child.moveComponent(xpos + this.marginLeft(child),ypos);
			xpos += child.get_componentWidth() + this.get_horizontalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentWidth() > 0 && (child.get_percentWidth() == null || this.fixedMinWidth(child) == true)) {
				size.width -= child.get_componentWidth() + this.marginLeft(child) + this.marginRight(child);
			}
		}
		if(visibleChildren > 1) {
			size.width -= this.get_horizontalSpacing() * (visibleChildren - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_HorizontalLayout
});
var haxe_ui_components__$CheckBox_CheckBoxLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.components._CheckBox.CheckBoxLayout"] = haxe_ui_components__$CheckBox_CheckBoxLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.__name__ = "haxe.ui.components._CheckBox.CheckBoxLayout";
haxe_ui_components__$CheckBox_CheckBoxLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_components__$CheckBox_CheckBoxLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
		var icon = this._component.findComponent(null,haxe_ui_components_Image,true);
		if(icon != null) {
			icon.set_left(Math.round(icon.get_left()));
			icon.set_top(Math.round(icon.get_top()));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_HorizontalLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this._component.get_autoWidth() == false) {
			var label = this._component.findComponent(null,haxe_ui_components_Label,false);
			if(label != null) {
				label.set_percentWidth(100);
			}
		}
		return size;
	}
	,__class__: haxe_ui_components__$CheckBox_CheckBoxLayout
});
var haxe_ui_components_Column = function() {
	this._sortDirection = null;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components.Column"] = haxe_ui_components_Column;
haxe_ui_components_Column.__name__ = "haxe.ui.components.Column";
haxe_ui_components_Column.__super__ = haxe_ui_components_Button;
haxe_ui_components_Column.prototype = $extend(haxe_ui_components_Button.prototype,{
	sortField: null
	,get_sortable: function() {
		return this.classes.indexOf("sortable") != -1;
	}
	,set_sortable: function(value) {
		if(value == true) {
			this.addClass("sortable");
		} else {
			this.removeClass("sortable");
		}
		return value;
	}
	,_sortDirection: null
	,get_sortDirection: function() {
		return this._sortDirection;
	}
	,set_sortDirection: function(value) {
		if(value == this._sortDirection) {
			return value;
		}
		this._sortDirection = value;
		this.set_sortable(true);
		if(this._sortDirection == "asc") {
			this.swapClass("sort-asc","sort-desc");
		} else if(this._sortDirection == "desc") {
			this.swapClass("sort-desc","sort-asc");
		} else if(this.get_sortDirection() == null) {
			this.removeClasses(["sort-asc","sort-desc"]);
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Column_Events;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Column();
	}
	,__class__: haxe_ui_components_Column
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_sortDirection:"set_sortDirection",get_sortDirection:"get_sortDirection",set_sortable:"set_sortable",get_sortable:"get_sortable"})
});
var haxe_ui_components__$Column_Events = function(column) {
	haxe_ui_components_ButtonEvents.call(this,column);
	this._column = column;
	this._column.registerEvent("click",$bind(this,this.onColumnClick));
};
$hxClasses["haxe.ui.components._Column.Events"] = haxe_ui_components__$Column_Events;
haxe_ui_components__$Column_Events.__name__ = "haxe.ui.components._Column.Events";
haxe_ui_components__$Column_Events.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components__$Column_Events.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_column: null
	,onMouseDown: function(event) {
		var components = this._column.findComponentsUnderPoint(event.screenX,event.screenY,haxe_ui_core_InteractiveComponent);
		HxOverrides.remove(components,this._column);
		if(components.length == 0) {
			haxe_ui_components_ButtonEvents.prototype.onMouseDown.call(this,event);
		}
	}
	,onColumnClick: function(event) {
		if(this._column.get_sortable() == false) {
			return;
		}
		if(this._column.get_sortDirection() == null) {
			this._column.set_sortDirection("asc");
		} else if(this._column.get_sortDirection() == "asc") {
			this._column.set_sortDirection("desc");
		} else if(this._column.get_sortDirection() == "desc") {
			this._column.set_sortDirection("asc");
		}
		var sortEvent = new haxe_ui_events_SortEvent("sortchanged");
		sortEvent.direction = this._column.get_sortDirection();
		this._column.dispatch(sortEvent);
	}
	,__class__: haxe_ui_components__$Column_Events
});
var haxe_ui_components__$DropDown_HideDropDown = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.HideDropDown"] = haxe_ui_components__$DropDown_HideDropDown;
haxe_ui_components__$DropDown_HideDropDown.__name__ = "haxe.ui.components._DropDown.HideDropDown";
haxe_ui_components__$DropDown_HideDropDown.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_HideDropDown.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		return null;
	}
	,__class__: haxe_ui_components__$DropDown_HideDropDown
});
var haxe_ui_components__$DropDown_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.DataSourceBehaviour"] = haxe_ui_components__$DropDown_DataSourceBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.__name__ = "haxe.ui.components._DropDown.DataSourceBehaviour";
haxe_ui_components__$DropDown_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_components__$DropDown_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value) == true) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
		}
		return this._value;
	}
	,set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.reset();
		if(this._component.get_text() == null && this._component.get_isReady()) {
			(js_Boot.__cast(this._component , haxe_ui_components_DropDown)).set_selectedIndex(0);
		}
	}
	,__class__: haxe_ui_components__$DropDown_DataSourceBehaviour
});
var haxe_ui_components__$DropDown_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedIndexBehaviour"] = haxe_ui_components__$DropDown_SelectedIndexBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedIndexBehaviour";
haxe_ui_components__$DropDown_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$DropDown_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,get: function() {
		if(this._component.get_isReady() == false) {
			return haxe_ui_behaviours_DataBehaviour.prototype.get.call(this);
		}
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return haxe_ui_util_Variant.fromInt(handler.get_selectedIndex());
	}
	,set: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
			return;
		}
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
	}
	,__class__: haxe_ui_components__$DropDown_SelectedIndexBehaviour
});
var haxe_ui_components__$DropDown_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_DynamicDataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._DropDown.SelectedItemBehaviour"] = haxe_ui_components__$DropDown_SelectedItemBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.__name__ = "haxe.ui.components._DropDown.SelectedItemBehaviour";
haxe_ui_components__$DropDown_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_DynamicDataBehaviour;
haxe_ui_components__$DropDown_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_DynamicDataBehaviour.prototype,{
	validateData: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(this._value);
	}
	,getDynamic: function() {
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		return handler.get_selectedItem();
	}
	,setDynamic: function(value) {
		if(this._component.get_isReady() == false) {
			haxe_ui_behaviours_DynamicDataBehaviour.prototype.setDynamic.call(this,value);
			return;
		}
		this._value = value;
		this.invalidateData();
		var handler = (js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		handler.set_selectedItem(value);
	}
	,__class__: haxe_ui_components__$DropDown_SelectedItemBehaviour
});
var haxe_ui_components_IDropDownHandler = function() { };
$hxClasses["haxe.ui.components.IDropDownHandler"] = haxe_ui_components_IDropDownHandler;
haxe_ui_components_IDropDownHandler.__name__ = "haxe.ui.components.IDropDownHandler";
haxe_ui_components_IDropDownHandler.__isInterface__ = true;
haxe_ui_components_IDropDownHandler.prototype = {
	get_component: null
	,get_selectedIndex: null
	,set_selectedIndex: null
	,get_selectedItem: null
	,set_selectedItem: null
	,component: null
	,prepare: null
	,reset: null
	,applyDefault: null
	,pauseEvents: null
	,resumeEvents: null
	,__class__: haxe_ui_components_IDropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components_DropDownHandler = function(dropdown) {
	this.eventsPaused = false;
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownHandler"] = haxe_ui_components_DropDownHandler;
haxe_ui_components_DropDownHandler.__name__ = "haxe.ui.components.DropDownHandler";
haxe_ui_components_DropDownHandler.__interfaces__ = [haxe_ui_components_IDropDownHandler];
haxe_ui_components_DropDownHandler.prototype = {
	_dropdown: null
	,component: null
	,get_component: function() {
		return null;
	}
	,prepare: function(wrapper) {
	}
	,reset: function() {
	}
	,get_selectedIndex: function() {
		return -1;
	}
	,set_selectedIndex: function(value) {
		return value;
	}
	,get_selectedItem: function() {
		return null;
	}
	,set_selectedItem: function(value) {
		return value;
	}
	,applyDefault: function() {
	}
	,eventsPaused: null
	,pauseEvents: function() {
		this.eventsPaused = true;
	}
	,resumeEvents: function() {
		var _gthis = this;
		haxe_ui_Toolkit.callLater(function() {
			_gthis.eventsPaused = false;
		});
	}
	,__class__: haxe_ui_components_DropDownHandler
	,__properties__: {set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",get_component:"get_component"}
};
var haxe_ui_components__$DropDown_ListDropDownHandler = function(dropdown) {
	this._cachedSelectedItem = null;
	this._cachedSelectedIndex = -1;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components._DropDown.ListDropDownHandler"] = haxe_ui_components__$DropDown_ListDropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.__name__ = "haxe.ui.components._DropDown.ListDropDownHandler";
haxe_ui_components__$DropDown_ListDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components__$DropDown_ListDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_listview: null
	,get_component: function() {
		this.createListView();
		return this._listview;
	}
	,reset: function() {
		if(this._listview != null) {
			this._listview.set_dataSource(this._dropdown.get_dataSource());
		}
	}
	,prepare: function(wrapper) {
		var itemCount = 4;
		if(this._dropdown.get_dropdownSize() != null) {
			itemCount = this._dropdown.get_dropdownSize();
		}
		if(this._listview.get_dataSource() != null && this._listview.get_dataSource().get_size() < itemCount) {
			itemCount = this._listview.get_dataSource().get_size();
		}
		if(itemCount > 0 && this._dropdown.get_dropdownHeight() == null) {
			this._listview.set_itemCount(itemCount);
		}
		if(this._dropdown.get_dropdownWidth() == null) {
			wrapper.syncComponentValidation();
			this._listview.set_width(this._dropdown.get_width() - (wrapper.get_layout().get_paddingLeft() + wrapper.get_layout().get_paddingRight()));
		} else {
			this._listview.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._listview.set_height(this._dropdown.get_dropdownHeight());
		}
		var selectedIndex = this._dropdown.get_selectedIndex();
		if(this._dropdown.get_dataSource() != null && this._dropdown.get_text() != null && selectedIndex < 0) {
			var text = this._dropdown.get_text();
			var itemIndex = this.indexOfItem(text);
			if(itemIndex != -1) {
				selectedIndex = itemIndex;
			}
		}
		this._listview.unregisterEvent("change",$bind(this,this.onListChange));
		this._listview.set_selectedIndex(selectedIndex);
		this._listview.syncComponentValidation();
		this._listview.registerEvent("change",$bind(this,this.onListChange));
	}
	,_cachedSelectedIndex: null
	,get_selectedIndex: function() {
		if(this._listview == null) {
			return this._cachedSelectedIndex;
		}
		return this._listview.get_selectedIndex();
	}
	,set_selectedIndex: function(value) {
		if(this._listview != null && this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			this._listview.set_selectedIndex(value);
		} else if(this._cachedSelectedIndex != value) {
			this._cachedSelectedIndex = value;
			var data = null;
			if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
				data = this._dropdown.get_dataSource().get(value);
			}
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,data));
		}
		if(this._dropdown.get_dataSource() != null && value >= 0 && value < this._dropdown.get_dataSource().get_size()) {
			var data = this._dropdown.get_dataSource().get(value);
			var text = null;
			if(Type.typeof(data) == ValueType.TObject) {
				text = data.text;
				if(text == null) {
					text = data.value;
				}
			} else {
				text = Std.string(data);
			}
			this._dropdown.set_text(text);
		}
		return value;
	}
	,indexOfItem: function(text) {
		if(text == null) {
			return -1;
		}
		var index = -1;
		if(this._dropdown.get_dataSource() != null) {
			var _g = 0;
			var _g1 = this._dropdown.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = this._dropdown.get_dataSource().get(i);
				if(item == text || item.value == text || item.text == text) {
					index = i;
				}
			}
		}
		if(index == -1 && this._dropdown.get_dataSource() != null) {
			var expr = haxe_ui_locale_LocaleManager.get_instance().findBindingExpr(this._dropdown,"text");
			if(expr != null) {
				text = expr;
				var _g = 0;
				var _g1 = this._dropdown.get_dataSource().get_size();
				while(_g < _g1) {
					var i = _g++;
					var item = this._dropdown.get_dataSource().get(i);
					if(item == text || item.value == text || item.text == text) {
						index = i;
					}
				}
			}
		}
		return index;
	}
	,get_selectedItem: function() {
		if(this._listview == null) {
			if(this._cachedSelectedIndex >= 0 && this._cachedSelectedIndex < this._dropdown.get_dataSource().get_size()) {
				var data = this._dropdown.get_dataSource().get(this._cachedSelectedIndex);
				return data;
			} else {
				return this._cachedSelectedItem;
			}
		}
		return this._listview.get_selectedItem();
	}
	,_cachedSelectedItem: null
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var index = this.indexOfItem(value);
		this.set_selectedIndex(index);
		return value;
	}
	,createListView: function() {
		var _gthis = this;
		if(this._listview == null) {
			this._listview = new haxe_ui_containers_ListView();
			this._listview.componentTabIndex = -1;
			this._listview.set_virtual(this._dropdown.get_virtual());
			this._listview.set_dataSource(this._dropdown.get_dataSource());
			if(this._dropdown.get_id() != null) {
				this._listview.addClass(this._dropdown.get_id() + "-listview");
				this._listview.set_id(this._dropdown.get_id() + "_listview");
			}
			this._listview.registerEvent("actionStart",function(e) {
				switch(e.action) {
				case "actionBack":case "actionCancel":
					e.cancel();
					(js_Boot.__cast(_gthis._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
					break;
				case "actionConfirm":case "actionPress":
					e.cancel();
					_gthis.applySelection();
					break;
				default:
				}
			});
		}
	}
	,onListChange: function(event) {
		if(((event.relatedEvent) instanceof haxe_ui_events_MouseEvent)) {
			this.applySelection();
		}
	}
	,applySelection: function() {
		if(this._listview.get_selectedItem() == null) {
			return;
		}
		var currentHover = this._listview.findComponent(":hover",null,true,"css");
		if(currentHover != null) {
			currentHover.removeClass(":hover");
		}
		var selectedItem = this._listview.get_selectedItem();
		var text = null;
		if(Type.typeof(selectedItem) == ValueType.TObject) {
			text = this._listview.get_selectedItem().text;
			if(text == null) {
				text = this._listview.get_selectedItem().value;
			}
		} else {
			text = Std.string(selectedItem);
		}
		this._dropdown.set_text(text);
		if(this.eventsPaused == false) {
			(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
			this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,selectedItem));
		}
	}
	,applyDefault: function() {
		var indexToSelect = 0;
		if(this._cachedSelectedItem != null) {
			var index = this.indexOfItem(this._cachedSelectedItem);
			if(index != -1) {
				indexToSelect = index;
			}
		}
		this._dropdown.set_selectedIndex(indexToSelect);
	}
	,__class__: haxe_ui_components__$DropDown_ListDropDownHandler
});
var haxe_ui_components_CalendarDropDownHandler = function(dropdown) {
	this._cachedSelectedDate = null;
	haxe_ui_components_DropDownHandler.call(this,dropdown);
};
$hxClasses["haxe.ui.components.CalendarDropDownHandler"] = haxe_ui_components_CalendarDropDownHandler;
haxe_ui_components_CalendarDropDownHandler.__name__ = "haxe.ui.components.CalendarDropDownHandler";
haxe_ui_components_CalendarDropDownHandler.__super__ = haxe_ui_components_DropDownHandler;
haxe_ui_components_CalendarDropDownHandler.prototype = $extend(haxe_ui_components_DropDownHandler.prototype,{
	_calendar: null
	,get_component: function() {
		if(this._calendar == null) {
			this._calendar = new haxe_ui_containers_CalendarView();
			if(this._dropdown.get_id() != null) {
				this._calendar.addClass(this._dropdown.get_id() + "-calendar");
				this._calendar.set_id(this._dropdown.get_id() + "_calendar");
			}
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		return this._calendar;
	}
	,prepare: function(wrapper) {
		if(this._dropdown.get_dropdownWidth() != null) {
			this._calendar.set_width(this._dropdown.get_dropdownWidth());
		}
		if(this._dropdown.get_dropdownHeight() != null) {
			this._calendar.set_height(this._dropdown.get_dropdownHeight());
		}
		if(this._cachedSelectedDate != null) {
			this._calendar.unregisterEvent("change",$bind(this,this.onCalendarChange));
			this._calendar.set_selectedDate(this._cachedSelectedDate);
			this._calendar.registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this._calendar.syncComponentValidation();
	}
	,_cachedSelectedDate: null
	,get_selectedItem: function() {
		if(this._calendar == null) {
			return this._cachedSelectedDate;
		}
		return this._calendar.get_selectedDate();
	}
	,set_selectedItem: function(value) {
		if(value == null) {
			return value;
		}
		var date = null;
		if(((value) instanceof Date)) {
			date = js_Boot.__cast(value , Date);
		} else {
			date = HxOverrides.strDate(Std.string(value));
		}
		if(this._calendar != null && date != null) {
			if(HxOverrides.dateStr(date) == HxOverrides.dateStr(this._calendar.get_selectedDate())) {
				this._dropdown.set_text(DateTools.format(date,haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
				return value;
			}
			this._cachedSelectedDate = date;
			this._calendar.set_selectedDate(date);
		} else if(date != null) {
			this._cachedSelectedDate = date;
			this._dropdown.set_text(DateTools.format(this._cachedSelectedDate,haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
		}
		return value;
	}
	,onCalendarChange: function(event) {
		if(this._calendar.get_selectedDate() == null) {
			return;
		}
		this._cachedSelectedDate = this._calendar.get_selectedDate();
		this._dropdown.set_text(DateTools.format(this._calendar.get_selectedDate(),haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT));
		(js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents)).hideDropDown();
		this._dropdown.dispatch(new haxe_ui_events_UIEvent("change",false,this._calendar.get_selectedDate()));
	}
	,applyDefault: function() {
		var now = new Date();
		this._dropdown.set_selectedItem(now);
	}
	,__class__: haxe_ui_components_CalendarDropDownHandler
});
var haxe_ui_components_DropDownEvents = function(dropdown) {
	this._lastSearchTerm = "";
	this._wrapper = null;
	this._overlay = null;
	haxe_ui_components_ButtonEvents.call(this,dropdown);
	this._dropdown = dropdown;
};
$hxClasses["haxe.ui.components.DropDownEvents"] = haxe_ui_components_DropDownEvents;
haxe_ui_components_DropDownEvents.__name__ = "haxe.ui.components.DropDownEvents";
haxe_ui_components_DropDownEvents.__super__ = haxe_ui_components_ButtonEvents;
haxe_ui_components_DropDownEvents.prototype = $extend(haxe_ui_components_ButtonEvents.prototype,{
	_dropdown: null
	,register: function() {
		haxe_ui_components_ButtonEvents.prototype.register.call(this);
		this.registerEvent("mousedown",$bind(this,this.onClick));
	}
	,unregister: function() {
		haxe_ui_components_ButtonEvents.prototype.unregister.call(this);
		this.unregisterEvent("mousedown",$bind(this,this.onClick));
	}
	,onClick: function(event) {
		this._dropdown.set_selected(!this._dropdown.get_selected());
		if(this._dropdown.get_selected() == true) {
			this.showDropDown();
		} else {
			this.hideDropDown();
		}
	}
	,onMouseClick: function(event) {
	}
	,_overlay: null
	,_wrapper: null
	,showDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper == null) {
			this._wrapper = new haxe_ui_containers_Box();
			this._wrapper.addClass("popup");
			this._wrapper.addClass("dropdown-popup");
			if(this._button.get_id() != null) {
				this._wrapper.addClass(this._button.get_id() + "-popup");
				this._wrapper.set_id(this._button.get_id() + "_popup");
			} else {
				this._wrapper.set_id("dropdown_popup");
			}
			this._wrapper.set_styleNames(this._dropdown.get_handlerStyleNames());
			if(this._dropdown.get_searchable() == true) {
				var searchContainer = new haxe_ui_containers_VBox();
				searchContainer.set_id("dropdown-search-container");
				searchContainer.addClass("dropdown-search-container");
				searchContainer.set_scriptAccess(false);
				var searchField = new haxe_ui_components_TextField();
				searchField.set_id("dropdown-search-field");
				searchField.addClass("dropdown-search-field");
				searchField.set_placeholder(this._dropdown.get_searchPrompt());
				searchField.set_scriptAccess(false);
				searchField.registerEvent("change",$bind(this,this.onSearchChange));
				var searchFieldContainer = new haxe_ui_containers_HBox();
				searchFieldContainer.set_id("dropdown-search-field-container");
				searchFieldContainer.addClass("dropdown-search-field-container");
				searchFieldContainer.set_scriptAccess(false);
				searchFieldContainer.addComponent(searchField);
				searchContainer.addComponent(searchFieldContainer);
				searchContainer.addComponent(handler.get_component());
				this._wrapper.addComponent(searchContainer);
			} else {
				this._wrapper.addComponent(handler.get_component());
			}
			var filler = new haxe_ui_core_Component();
			filler.set_horizontalAlign("right");
			filler.set_includeInLayout(false);
			filler.addClass("dropdown-filler");
			filler.set_id("dropdown-filler");
			this._wrapper.addComponent(filler);
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.get_style().mode != null && this._dropdown.get_style().mode == "mobile") {
			if(this._overlay == null) {
				this._overlay = new haxe_ui_core_Component();
				this._overlay.set_id("modal-background");
				this._overlay.addClass("modal-background");
				this._overlay.set_percentWidth(this._overlay.set_percentHeight(100));
			}
			haxe_ui_core_Screen.get_instance().addComponent(this._overlay);
			handler.prepare(this._wrapper);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			this._wrapper.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth() / 2 - this._wrapper.get_actualComponentWidth() / 2);
			this._wrapper.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight() / 2 - this._wrapper.get_actualComponentHeight() / 2);
		} else {
			this._wrapper.set_left(this._dropdown.get_screenLeft() + componentOffset.x);
			this._wrapper.set_top(this._dropdown.get_screenTop() + (this._dropdown.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y);
			haxe_ui_core_Screen.get_instance().addComponent(this._wrapper);
			handler.prepare(this._wrapper);
			this._wrapper.syncComponentValidation();
			this._wrapper.validateNow();
			var cx = this._wrapper.get_width() - this._dropdown.get_width();
			var filler = this._wrapper.findComponent("dropdown-filler",null,false);
			if(cx > 0 && filler != null) {
				this._wrapper.addClass("dropdown-popup-expanded");
				cx += 2;
				filler.set_width(cx);
				filler.set_left(this._wrapper.get_width() - cx);
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
				this._wrapper.removeClass("dropdown-popup-expanded");
			}
			if(this._wrapper.get_screenLeft() + this._wrapper.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				this._wrapper.set_left(this._wrapper.get_screenLeft() - this._wrapper.get_actualComponentWidth() + this._dropdown.get_actualComponentWidth());
			}
			if(this._wrapper.get_screenTop() + this._wrapper.get_actualComponentHeight() > haxe_ui_core_Screen.get_instance().get_actualHeight()) {
				this._wrapper.set_top(this._dropdown.get_screenTop() - this._wrapper.get_actualComponentHeight());
			}
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,_lastSearchTerm: null
	,onSearchChange: function(event) {
		if(this._wrapper == null) {
			return;
		}
		var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
		if(searchField == null) {
			return;
		}
		var selectedItem = this._dropdown.get_selectedItem();
		var searchTerm = searchField.get_text();
		if(searchTerm == null || StringTools.trim(searchTerm).length == 0) {
			searchTerm = "";
		}
		if(this._lastSearchTerm == searchTerm) {
			return;
		}
		this._lastSearchTerm = searchTerm;
		if(searchTerm.length == 0) {
			this._dropdown.get_dataSource().clearFilter();
		} else {
			this._dropdown.get_dataSource().filter(function(index,data) {
				var v = data.text;
				return Std.string(v).toLowerCase().indexOf(searchTerm.toLowerCase()) > -1;
			});
		}
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		handler.prepare(this._wrapper);
		if(selectedItem != null) {
			handler.pauseEvents();
			this._dropdown.set_selectedItem(selectedItem);
			handler.resumeEvents();
		}
	}
	,hideDropDown: function() {
		var handler = (js_Boot.__cast(this._dropdown._compositeBuilder , haxe_ui_components_DropDownBuilder)).get_handler();
		if(handler == null) {
			return;
		}
		if(this._wrapper != null) {
			var searchField = this._wrapper.findComponent("dropdown-search-field",haxe_ui_components_TextField);
			if(searchField != null) {
				searchField.set_focus(false);
			}
		}
		if(this._overlay != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._overlay);
			this._overlay = null;
		}
		this._dropdown.set_selected(false);
		if(this._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._wrapper,false);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,onScreenMouseDown: function(event) {
		if(this._wrapper == null) {
			return;
		}
		if(this._wrapper.hitTest(event.screenX,event.screenY) == true) {
			return;
		}
		var componentOffset = this._dropdown.getComponentOffset();
		if(this._dropdown.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		this.hideDropDown();
	}
	,dispatchChanged: function() {
	}
	,release: function() {
		if(this._down == true) {
			haxe_ui_components_ButtonEvents.prototype.release.call(this);
			if(this._dropdown.get_selected() == true) {
				this.showDropDown();
			} else {
				this.hideDropDown();
			}
		}
	}
	,__class__: haxe_ui_components_DropDownEvents
});
var haxe_ui_components_DropDownBuilder = function(dropdown) {
	haxe_ui_components_ButtonBuilder.call(this,dropdown);
	this._dropdown = dropdown;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components__$DropDown_ListDropDownHandler.__name__;
	this1.h["list"] = value;
	var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
	var value = haxe_ui_components_CalendarDropDownHandler.__name__;
	this1.h["date"] = value;
};
$hxClasses["haxe.ui.components.DropDownBuilder"] = haxe_ui_components_DropDownBuilder;
haxe_ui_components_DropDownBuilder.__name__ = "haxe.ui.components.DropDownBuilder";
haxe_ui_components_DropDownBuilder.__super__ = haxe_ui_components_ButtonBuilder;
haxe_ui_components_DropDownBuilder.prototype = $extend(haxe_ui_components_ButtonBuilder.prototype,{
	_dropdown: null
	,_handler: null
	,handler: null
	,get_handler: function() {
		if(this._handler == null) {
			var this1 = haxe_ui_components_DropDownBuilder.HANDLER_MAP;
			var key = this._dropdown.get_type();
			var handlerClass = this1.h[key];
			if(handlerClass == null) {
				handlerClass = this._dropdown.get_type();
			}
			this._handler = Type.createInstance($hxClasses[handlerClass],[this._dropdown]);
		}
		return this._handler;
	}
	,onReady: function() {
		haxe_ui_components_ButtonBuilder.prototype.onReady.call(this);
		if(this._dropdown.get_text() == null) {
			this.get_handler().applyDefault();
		}
	}
	,create: function() {
		this._dropdown.set_toggle(true);
	}
	,destroy: function() {
		var events = js_Boot.__cast(this._dropdown._internalEvents , haxe_ui_components_DropDownEvents);
		events.hideDropDown();
		if(events._wrapper != null) {
			haxe_ui_core_Screen.get_instance().removeComponent(events._wrapper);
			events._wrapper = null;
		}
	}
	,onThemeChanged: function() {
		if(this._handler != null) {
			haxe_ui_core_Screen.get_instance().invalidateChildren(this._handler.get_component());
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(this._handler.get_component());
		}
	}
	,__class__: haxe_ui_components_DropDownBuilder
	,__properties__: $extend(haxe_ui_components_ButtonBuilder.prototype.__properties__,{get_handler:"get_handler"})
});
var haxe_ui_core_IDirectionalComponent = function() { };
$hxClasses["haxe.ui.core.IDirectionalComponent"] = haxe_ui_core_IDirectionalComponent;
haxe_ui_core_IDirectionalComponent.__name__ = "haxe.ui.core.IDirectionalComponent";
haxe_ui_core_IDirectionalComponent.__isInterface__ = true;
var haxe_ui_components_Rule = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Rule"] = haxe_ui_components_Rule;
haxe_ui_components_Rule.__name__ = "haxe.ui.components.Rule";
haxe_ui_components_Rule.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Rule.__super__ = haxe_ui_core_Component;
haxe_ui_components_Rule.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Rule();
	}
	,__class__: haxe_ui_components_Rule
});
var haxe_ui_components_HorizontalRule = function() {
	haxe_ui_components_Rule.call(this);
};
$hxClasses["haxe.ui.components.HorizontalRule"] = haxe_ui_components_HorizontalRule;
haxe_ui_components_HorizontalRule.__name__ = "haxe.ui.components.HorizontalRule";
haxe_ui_components_HorizontalRule.__super__ = haxe_ui_components_Rule;
haxe_ui_components_HorizontalRule.prototype = $extend(haxe_ui_components_Rule.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Rule.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Rule.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalRule();
	}
	,__class__: haxe_ui_components_HorizontalRule
});
var haxe_ui_components_Scroll = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	this.cascadeActive = true;
};
$hxClasses["haxe.ui.components.Scroll"] = haxe_ui_components_Scroll;
haxe_ui_components_Scroll.__name__ = "haxe.ui.components.Scroll";
haxe_ui_components_Scroll.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_components_Scroll.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_Scroll.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	posFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("posFromCoord",coord));
	}
	,applyPageFromCoord: function(coord) {
		return haxe_ui_util_Variant.toFloat(this.behaviours.call("applyPageFromCoord",coord));
	}
	,createChildren: function() {
		this.createButton("deinc",true).set_repeater(true);
		this.createButton("inc",true).set_repeater(true);
		this.createButton("thumb").set_remainPressed(true);
		this.registerInternalEvents(haxe_ui_components__$Scroll_Events);
	}
	,createButton: function(type,hidden) {
		if(hidden == null) {
			hidden = false;
		}
		var b = this.findComponent("scroll-" + type + "-button",haxe_ui_components_Button);
		if(b == null) {
			b = new haxe_ui_components_Button();
			b.set_hidden(hidden);
			b.set_scriptAccess(false);
			b.get_customStyle().native = false;
			b.set_id("scroll-" + type + "-button");
			b.addClass(type);
			b.set_allowFocus(false);
			this.addComponent(b);
		}
		return b;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("min",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("max",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("pageSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("pos",haxe_ui_components__$Scroll_ScrollValueBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("increment",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(20));
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		return value;
	}
	,get_pageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pageSize"));
	}
	,set_pageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageSize"));
		return value;
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		return value;
	}
	,get_increment: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("increment"));
	}
	,set_increment: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("increment",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"increment"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Scroll();
	}
	,__class__: haxe_ui_components_Scroll
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_increment:"set_increment",get_increment:"get_increment",set_pos:"set_pos",get_pos:"get_pos",set_pageSize:"set_pageSize",get_pageSize:"get_pageSize",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min"})
});
var haxe_ui_components_HorizontalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.HorizontalScroll"] = haxe_ui_components_HorizontalScroll;
haxe_ui_components_HorizontalScroll.__name__ = "haxe.ui.components.HorizontalScroll";
haxe_ui_components_HorizontalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_HorizontalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$HorizontalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentWidth() <= 0) {
			this.set_componentWidth(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_HorizontalScroll();
	}
	,__class__: haxe_ui_components_HorizontalScroll
});
var haxe_ui_components__$HorizontalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.PosFromCoord"] = haxe_ui_components__$HorizontalScroll_PosFromCoord;
haxe_ui_components__$HorizontalScroll_PosFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.PosFromCoord";
haxe_ui_components__$HorizontalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var xpos = p.x;
		var minX = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minX = deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		var maxX = scroll.get_layout().get_usableWidth() - thumb.get_width();
		if(deinc != null && deinc.get_hidden() == false) {
			maxX += deinc.get_width() + scroll.get_layout().get_horizontalSpacing();
		}
		if(xpos < minX) {
			xpos = minX;
		} else if(xpos > maxX) {
			xpos = maxX;
		}
		var ucx = scroll.get_layout().get_usableWidth();
		ucx -= thumb.get_width();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = xpos - minX;
		var value = scroll.get_min() + v / ucx * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$HorizontalScroll_PosFromCoord
});
var haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._HorizontalScroll.ApplyPageFromCoord"] = haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._HorizontalScroll.ApplyPageFromCoord";
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.x < thumb.get_screenLeft()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.x > thumb.get_screenLeft() + thumb.get_width()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._HorizontalScroll.HorizontalScrollLayout"] = haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__name__ = "haxe.ui.components._HorizontalScroll.HorizontalScrollLayout";
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucx = this.get_usableWidth();
			var thumbWidth = scroll.get_pageSize() / m * ucx;
			if(thumbWidth < this.get_innerHeight()) {
				thumbWidth = this.get_innerHeight();
			} else if(thumbWidth > ucx) {
				thumbWidth = ucx;
			}
			if(thumbWidth > 0 && isNaN(thumbWidth) == false) {
				thumb.set_width(thumbWidth);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_left(this.get_component().get_width() - inc.get_width() - this.get_paddingRight());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableWidth();
			u -= thumb.get_componentWidth();
			var x = (scroll.get_pos() - scroll.get_min()) / m * u;
			x += this.get_paddingLeft();
			if(deinc != null && this.hidden(deinc) == false) {
				x += deinc.get_width() + this.get_horizontalSpacing();
			}
			thumb.set_left(x);
			thumb.set_top(Math.round(thumb.get_top()));
		}
	}
	,get_usableWidth: function() {
		var ucx = this.get_innerWidth();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucx -= deinc.get_width() + this.get_horizontalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucx -= inc.get_width() + this.get_horizontalSpacing();
		}
		return ucx;
	}
	,__class__: haxe_ui_components__$HorizontalScroll_HorizontalScrollLayout
});
var haxe_ui_components_Image = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Image"] = haxe_ui_components_Image;
haxe_ui_components_Image.__name__ = "haxe.ui.components.Image";
haxe_ui_components_Image.__super__ = haxe_ui_core_Component;
haxe_ui_components_Image.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$Image_ImageLayout;
		this._compositeBuilderClass = haxe_ui_components__$Image_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("resource",haxe_ui_components__$Image_ResourceBehaviour);
		this.behaviours.register("scaleMode",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("fill"));
		this.behaviours.register("imageHorizontalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("imageVerticalAlign",haxe_ui_behaviours_InvalidatingBehaviour,haxe_ui_util_Variant.fromString("center"));
		this.behaviours.register("originalWidth",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("originalHeight",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_resource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.get("resource");
	}
	,set_resource: function(value) {
		this.behaviours.set("resource",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"resource"));
		return value;
	}
	,get_scaleMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scaleMode"));
	}
	,set_scaleMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scaleMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"scaleMode"));
		return value;
	}
	,get_imageHorizontalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageHorizontalAlign"));
	}
	,set_imageHorizontalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageHorizontalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageHorizontalAlign"));
		return value;
	}
	,get_imageVerticalAlign: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("imageVerticalAlign"));
	}
	,set_imageVerticalAlign: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("imageVerticalAlign",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"imageVerticalAlign"));
		return value;
	}
	,get_originalWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalWidth"));
	}
	,set_originalWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalWidth"));
		return value;
	}
	,get_originalHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("originalHeight"));
	}
	,set_originalHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("originalHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"originalHeight"));
		return value;
	}
	,get_value: function() {
		return haxe_ui_util_Variant.toDynamic(this.get_resource());
	}
	,set_value: function(value) {
		this.set_resource(haxe_ui_util_Variant.fromDynamic(value));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_resource() != null) {
			c.set_resource(this.get_resource());
		}
		if(this.get_scaleMode() != null) {
			c.set_scaleMode(this.get_scaleMode());
		}
		if(this.get_imageHorizontalAlign() != null) {
			c.set_imageHorizontalAlign(this.get_imageHorizontalAlign());
		}
		if(this.get_imageVerticalAlign() != null) {
			c.set_imageVerticalAlign(this.get_imageVerticalAlign());
		}
		c.set_originalWidth(this.get_originalWidth());
		c.set_originalHeight(this.get_originalHeight());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Image();
	}
	,__class__: haxe_ui_components_Image
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_originalHeight:"set_originalHeight",get_originalHeight:"get_originalHeight",set_originalWidth:"set_originalWidth",get_originalWidth:"get_originalWidth",set_imageVerticalAlign:"set_imageVerticalAlign",get_imageVerticalAlign:"get_imageVerticalAlign",set_imageHorizontalAlign:"set_imageHorizontalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",set_scaleMode:"set_scaleMode",get_scaleMode:"get_scaleMode",set_resource:"set_resource",get_resource:"get_resource"})
});
var haxe_ui_components__$Image_ImageLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Image.ImageLayout"] = haxe_ui_components__$Image_ImageLayout;
haxe_ui_components__$Image_ImageLayout.__name__ = "haxe.ui.components._Image.ImageLayout";
haxe_ui_components__$Image_ImageLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Image_ImageLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	get_imageScaleMode: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_scaleMode();
	}
	,get_imageHorizontalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageHorizontalAlign();
	}
	,get_imageVerticalAlign: function() {
		return (js_Boot.__cast(this._component , haxe_ui_components_Image)).get_imageVerticalAlign();
	}
	,resizeChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = image.getImageDisplay();
			var maxWidth = this.get_usableSize().width;
			var maxHeight = this.get_usableSize().height;
			if(this.get_component().get_autoWidth() == true) {
				maxWidth = -1;
			}
			if(this._component.get_autoHeight() == true) {
				maxHeight = -1;
			}
			var scaleW = maxWidth != -1 ? maxWidth / image.get_originalWidth() : 1;
			var scaleH = maxHeight != -1 ? maxHeight / image.get_originalHeight() : 1;
			if(this.get_imageScaleMode() != "fill") {
				var scale;
				switch(this.get_imageScaleMode()) {
				case "fitheight":
					scale = scaleH;
					break;
				case "fitinside":
					scale = scaleW < scaleH ? scaleW : scaleH;
					break;
				case "fitoutside":
					scale = scaleW > scaleH ? scaleW : scaleH;
					break;
				case "fitwidth":
					scale = scaleW;
					break;
				default:
					scale = 1;
				}
				imageDisplay.set_imageWidth(image.get_originalWidth() * scale);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scale);
			} else {
				imageDisplay.set_imageWidth(image.get_originalWidth() * scaleW);
				imageDisplay.set_imageHeight(image.get_originalHeight() * scaleH);
			}
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasImageDisplay()) {
			var image = js_Boot.__cast(this._component , haxe_ui_components_Image);
			var imageDisplay = this._component.getImageDisplay();
			switch(image.get_imageHorizontalAlign()) {
			case "center":
				imageDisplay.set_left((this._component.get_componentWidth() - imageDisplay.get_imageWidth()) / 2);
				break;
			case "left":
				imageDisplay.set_left(this.get_paddingLeft());
				break;
			case "right":
				imageDisplay.set_left(this._component.get_componentWidth() - imageDisplay.get_imageWidth() - this.get_paddingRight());
				break;
			}
			switch(image.get_imageVerticalAlign()) {
			case "bottom":
				imageDisplay.set_top(this._component.get_componentHeight() - imageDisplay.get_imageHeight() - this.get_paddingBottom());
				break;
			case "center":
				imageDisplay.set_top((this._component.get_componentHeight() - imageDisplay.get_imageHeight()) / 2);
				break;
			case "top":
				imageDisplay.set_top(this.get_paddingTop());
				break;
			}
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasImageDisplay()) {
			size.width += this.get_component().getImageDisplay().get_imageWidth();
			size.height += this.get_component().getImageDisplay().get_imageHeight();
		}
		return size;
	}
	,refresh: function() {
		haxe_ui_layouts_DefaultLayout.prototype.refresh.call(this);
		this.updateClipRect();
	}
	,updateClipRect: function() {
		if(this.get_component().hasImageDisplay()) {
			var usz = this.get_usableSize();
			var imageDisplay = this.get_component().getImageDisplay();
			var rc = imageDisplay.get_imageClipRect();
			if(imageDisplay.get_imageWidth() > usz.width || imageDisplay.get_imageHeight() > usz.height) {
				if(rc == null) {
					rc = new haxe_ui_geom_Rectangle();
				}
				rc.top = this.get_paddingLeft();
				rc.left = this.get_paddingTop();
				rc.width = usz.width;
				rc.height = usz.height;
			} else {
				rc = null;
			}
			imageDisplay.set_imageClipRect(rc);
		}
	}
	,__class__: haxe_ui_components__$Image_ImageLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_imageVerticalAlign:"get_imageVerticalAlign",get_imageHorizontalAlign:"get_imageHorizontalAlign",get_imageScaleMode:"get_imageScaleMode"})
});
var haxe_ui_components__$Image_ResourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Image.ResourceBehaviour"] = haxe_ui_components__$Image_ResourceBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.__name__ = "haxe.ui.components._Image.ResourceBehaviour";
haxe_ui_components__$Image_ResourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Image_ResourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var _gthis = this;
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._component.removeImageDisplay();
			this._component.invalidateComponent();
			return;
		}
		var imageLoader = new haxe_ui_util_ImageLoader(this._value);
		imageLoader.load(function(imageInfo) {
			if(imageInfo != null) {
				if(_gthis._value == null || haxe_ui_util_Variant.get_isNull(_gthis._value)) {
					_gthis._component.removeImageDisplay();
					_gthis._component.invalidateComponent();
					return;
				}
				var image = js_Boot.__cast(_gthis._component , haxe_ui_components_Image);
				if(image == null) {
					return;
				}
				var display = image.getImageDisplay();
				if(display != null) {
					display.set_imageInfo(imageInfo);
					image.set_originalWidth(imageInfo.width);
					image.set_originalHeight(imageInfo.height);
					if(image.autoSize() == true && image.parentComponent != null) {
						var _this = image.parentComponent;
						if(!(_this._layout == null || _this._layoutLocked == true)) {
							_this.invalidateComponent("layout",false);
						}
					}
					image.invalidateComponent();
					display.validateComponent();
				}
			}
		});
	}
	,__class__: haxe_ui_components__$Image_ResourceBehaviour
});
var haxe_ui_components__$Image_Builder = function(image) {
	var _gthis = this;
	haxe_ui_core_CompositeBuilder.call(this,image);
	this._image = image;
	this._image.registerEvent("shown",function(_) {
		if(_gthis._image.parentComponent != null) {
			var _this = _gthis._image.parentComponent;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	});
};
$hxClasses["haxe.ui.components._Image.Builder"] = haxe_ui_components__$Image_Builder;
haxe_ui_components__$Image_Builder.__name__ = "haxe.ui.components._Image.Builder";
haxe_ui_components__$Image_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Image_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_image: null
	,applyStyle: function(style) {
		if(style.resource != null) {
			this._image.set_resource(haxe_ui_util_Variant.fromString(style.resource));
		}
	}
	,__class__: haxe_ui_components__$Image_Builder
});
var haxe_ui_components_Label = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Label"] = haxe_ui_components_Label;
haxe_ui_components_Label.__name__ = "haxe.ui.components.Label";
haxe_ui_components_Label.__super__ = haxe_ui_core_Component;
haxe_ui_components_Label.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$Label_Builder;
		this._defaultLayoutClass = haxe_ui_components__$Label_LabelLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$Label_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$Label_HtmlTextBehaviour);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"htmlText"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,get_textAlign: function() {
		if(this.get_customStyle().textAlign != null) {
			return this.get_customStyle().textAlign;
		}
		if(this.get_style() == null || this.get_style().textAlign == null) {
			return null;
		}
		return this.get_style().textAlign;
	}
	,set_textAlign: function(value) {
		if(this.get_customStyle().textAlign == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().textAlign = null;
		} else {
			this.get_customStyle().textAlign = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,get_wordWrap: function() {
		if(this.get_customStyle().wordWrap != null) {
			return this.get_customStyle().wordWrap;
		}
		if(this.get_style() == null || this.get_style().wordWrap == null) {
			return null;
		}
		return this.get_style().wordWrap;
	}
	,set_wordWrap: function(value) {
		if(this.get_customStyle().wordWrap == value) {
			return value;
		}
		if(this._style == null) {
			this._style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		if(value == null) {
			this.get_customStyle().wordWrap = null;
		} else {
			this.get_customStyle().wordWrap = value;
		}
		this.invalidateComponent("style",false);
		if(!(this._layout == null || this._layoutLocked == true)) {
			this.invalidateComponent("layout",false);
		}
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Label();
	}
	,__class__: haxe_ui_components_Label
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_textAlign:"set_textAlign",get_textAlign:"get_textAlign",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$Label_LabelLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._Label.LabelLayout"] = haxe_ui_components__$Label_LabelLayout;
haxe_ui_components__$Label_LabelLayout.__name__ = "haxe.ui.components._Label.LabelLayout";
haxe_ui_components__$Label_LabelLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$Label_LabelLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		if(this.get_component().get_autoWidth() == false) {
			this.get_component().getTextDisplay().set_width(this.get_component().get_componentWidth() - this.get_paddingLeft() - this.get_paddingRight());
			var wordWrap = true;
			if(this._component.get_style() != null && this._component.get_style().wordWrap != null) {
				wordWrap = this._component.get_style().wordWrap;
			}
			this.get_component().getTextDisplay().set_wordWrap(wordWrap);
		} else {
			this.get_component().getTextDisplay().set_width(this.get_component().getTextDisplay().get_textWidth());
		}
		if(this.get_component().get_autoHeight() == true) {
			this.get_component().getTextDisplay().set_height(this.get_component().getTextDisplay().get_textHeight());
		} else {
			this.get_component().getTextDisplay().set_height(this.get_component().get_height());
		}
	}
	,repositionChildren: function() {
		if(this.get_component().hasTextDisplay() == true) {
			this.get_component().getTextDisplay().set_left(this.get_paddingLeft());
			this.get_component().getTextDisplay().set_top(this.get_paddingTop());
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextDisplay() == true) {
			size.width += this.get_component().getTextDisplay().get_textWidth();
			size.height += this.get_component().getTextDisplay().get_textHeight();
		}
		return size;
	}
	,textAlign: function(child) {
		if(child == null || child.get_style() == null || child.get_style().textAlign == null) {
			return "left";
		}
		return child.get_style().textAlign;
	}
	,__class__: haxe_ui_components__$Label_LabelLayout
});
var haxe_ui_components__$Label_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.TextBehaviour"] = haxe_ui_components__$Label_TextBehaviour;
haxe_ui_components__$Label_TextBehaviour.__name__ = "haxe.ui.components._Label.TextBehaviour";
haxe_ui_components__$Label_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_text("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_TextBehaviour
});
var haxe_ui_components__$Label_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Label.HtmlTextBehaviour"] = haxe_ui_components__$Label_HtmlTextBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.__name__ = "haxe.ui.components._Label.HtmlTextBehaviour";
haxe_ui_components__$Label_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Label_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.getTextDisplay().get_textStyle() != this._component.get_style()) {
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		}
		this._component.getTextDisplay().set_htmlText("" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)));
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_components__$Label_HtmlTextBehaviour
});
var haxe_ui_components__$Label_Builder = function(label) {
	haxe_ui_core_CompositeBuilder.call(this,label);
	this._label = label;
};
$hxClasses["haxe.ui.components._Label.Builder"] = haxe_ui_components__$Label_Builder;
haxe_ui_components__$Label_Builder.__name__ = "haxe.ui.components._Label.Builder";
haxe_ui_components__$Label_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$Label_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Label_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_label: null
	,applyStyle: function(style) {
		if(this._label.hasTextDisplay() == true) {
			this._label.getTextDisplay().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._label.getTextDisplay().get_supportsHtml()) {
				var v = Std.string(this._component.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._label.set_htmlText(this._label.get_text());
			}
		}
	}
	,get_isComponentClipped: function() {
		var componentClipRect = this._component.get_componentClipRect();
		if(componentClipRect == null) {
			return false;
		}
		return this._label.getTextDisplay().measureTextWidth() > componentClipRect.width;
	}
	,__class__: haxe_ui_components__$Label_Builder
});
var haxe_ui_components_Link = function() {
	haxe_ui_components_Label.call(this);
};
$hxClasses["haxe.ui.components.Link"] = haxe_ui_components_Link;
haxe_ui_components_Link.__name__ = "haxe.ui.components.Link";
haxe_ui_components_Link.__super__ = haxe_ui_components_Label;
haxe_ui_components_Link.prototype = $extend(haxe_ui_components_Label.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Label.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Label.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Link();
	}
	,__class__: haxe_ui_components_Link
});
var haxe_ui_components_NumberStepper = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.NumberStepper"] = haxe_ui_components_NumberStepper;
haxe_ui_components_NumberStepper.__name__ = "haxe.ui.components.NumberStepper";
haxe_ui_components_NumberStepper.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_NumberStepper.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$NumberStepper_PosBehaviour,haxe_ui_util_Variant.fromInt(0));
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("autoCorrect",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"step"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		return value;
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		return value;
	}
	,get_autoCorrect: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoCorrect"));
	}
	,set_autoCorrect: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoCorrect",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"autoCorrect"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if(this.get_pos() != null) {
			c.set_pos(this.get_pos());
		}
		c.set_step(this.get_step());
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_autoCorrect(this.get_autoCorrect());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_NumberStepper();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$NumberStepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$NumberStepper_Builder;
	}
	,__class__: haxe_ui_components_NumberStepper
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_autoCorrect:"set_autoCorrect",get_autoCorrect:"get_autoCorrect",set_precision:"set_precision",get_precision:"get_precision",set_min:"set_min",get_min:"get_min",set_max:"set_max",get_max:"get_max",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$NumberStepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._NumberStepper.PosBehaviour"] = haxe_ui_components__$NumberStepper_PosBehaviour;
haxe_ui_components__$NumberStepper_PosBehaviour.__name__ = "haxe.ui.components._NumberStepper.PosBehaviour";
haxe_ui_components__$NumberStepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$NumberStepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_NumberStepper);
		var preciseValue = haxe_ui_util_Variant.toFloat(this._value);
		if(preciseValue == null) {
			preciseValue = stepper.get_min();
		}
		var v = preciseValue;
		var min = stepper.get_min();
		var max = stepper.get_max();
		if(v == null || isNaN(v)) {
			preciseValue = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			preciseValue = v;
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			preciseValue = Math.round(preciseValue * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		this._value = haxe_ui_util_Variant.fromFloat(preciseValue);
		var stringValue = haxe_ui_util_StringUtil.padDecimal(preciseValue,stepper.get_precision());
		var value = stepper.findComponent("value",haxe_ui_components_TextField);
		value.set_text(stringValue);
		var event = new haxe_ui_events_UIEvent("change");
		event.previousValue = this._previousValue;
		event.value = this._value;
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$NumberStepper_PosBehaviour
});
var haxe_ui_components__$NumberStepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
	this._stepper.set_layout(new haxe_ui_components__$NumberStepper_StandardLayout());
};
$hxClasses["haxe.ui.components._NumberStepper.Builder"] = haxe_ui_components__$NumberStepper_Builder;
haxe_ui_components__$NumberStepper_Builder.__name__ = "haxe.ui.components._NumberStepper.Builder";
haxe_ui_components__$NumberStepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$NumberStepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var value = new haxe_ui_components_TextField();
		value.set_id("value");
		value.addClass("stepper-value");
		value.set_scriptAccess(false);
		value.set_allowFocus(false);
		value.set_restrictChars("0-9\\-\\.\\,");
		this._stepper.addComponent(value);
		var deinc = new haxe_ui_components_Button();
		deinc.set_id("deinc");
		deinc.addClass("stepper-deinc");
		deinc.set_allowFocus(false);
		deinc.set_scriptAccess(false);
		deinc.set_repeater(true);
		this._stepper.addComponent(deinc);
		var inc = new haxe_ui_components_Button();
		inc.set_id("inc");
		inc.addClass("stepper-inc");
		inc.set_allowFocus(false);
		inc.set_scriptAccess(false);
		inc.set_repeater(true);
		this._stepper.addComponent(inc);
	}
	,applyStyle: function(style) {
		if(style.layout == "classic") {
			this._stepper.set_layout(new haxe_ui_components__$NumberStepper_ClassicLayout());
		} else if(style.layout == null && !((this._stepper.get_layout()) instanceof haxe_ui_components__$NumberStepper_StandardLayout)) {
			this._stepper.set_layout(new haxe_ui_components__$NumberStepper_StandardLayout());
		}
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		if(value != null && (value.get_customStyle().color != style.color || value.get_customStyle().fontName != style.fontName || value.get_customStyle().fontSize != style.fontSize || value.get_customStyle().cursor != style.cursor || value.get_customStyle().textAlign != style.textAlign)) {
			value.get_customStyle().color = style.color;
			value.get_customStyle().fontName = style.fontName;
			value.get_customStyle().fontSize = style.fontSize;
			value.get_customStyle().cursor = style.cursor;
			value.get_customStyle().textAlign = style.textAlign;
			value.invalidateComponent("style",false);
		}
	}
	,__class__: haxe_ui_components__$NumberStepper_Builder
});
var haxe_ui_components__$NumberStepper_Events = function(stepper) {
	this._autoCorrectTimer = null;
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._NumberStepper.Events"] = haxe_ui_components__$NumberStepper_Events;
haxe_ui_components__$NumberStepper_Events.__name__ = "haxe.ui.components._NumberStepper.Events";
haxe_ui_components__$NumberStepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$NumberStepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		if(!this._stepper.hasEvent("click",$bind(this,this.onClick))) {
			this._stepper.registerEvent("click",$bind(this,this.onClick));
		}
		if(!this._stepper.hasEvent("focusin",$bind(this,this.onFocusIn))) {
			this._stepper.registerEvent("focusin",$bind(this,this.onFocusIn));
		}
		if(!this._stepper.hasEvent("focusout",$bind(this,this.onFocusOut))) {
			this._stepper.registerEvent("focusout",$bind(this,this.onFocusOut));
		}
		if(!this._stepper.hasEvent("mousewheel",$bind(this,this.onMouseWheel))) {
			this._stepper.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		if(!value.hasEvent("change",$bind(this,this.onValueFieldChange))) {
			value.registerEvent("change",$bind(this,this.onValueFieldChange));
		}
		if(!value.hasEvent("keyup",$bind(this,this.onValueKeyUp))) {
			value.registerEvent("keyup",$bind(this,this.onValueKeyUp));
		}
		var deinc = this._stepper.findComponent("deinc",haxe_ui_components_Button);
		if(!deinc.hasEvent("click",$bind(this,this.onDeinc))) {
			deinc.registerEvent("click",$bind(this,this.onDeinc));
		}
		var inc = this._stepper.findComponent("inc",haxe_ui_components_Button);
		if(!inc.hasEvent("click",$bind(this,this.onInc))) {
			inc.registerEvent("click",$bind(this,this.onInc));
		}
		if(!this.hasEvent("actionStart",$bind(this,this.onActionStart))) {
			this.registerEvent("actionStart",$bind(this,this.onActionStart));
		}
	}
	,unregister: function() {
		this._stepper.unregisterEvent("click",$bind(this,this.onClick));
		this._stepper.unregisterEvent("focusin",$bind(this,this.onFocusIn));
		this._stepper.unregisterEvent("focusout",$bind(this,this.onFocusOut));
		this._stepper.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		value.unregisterEvent("change",$bind(this,this.onValueFieldChange));
		value.unregisterEvent("keyup",$bind(this,this.onValueKeyUp));
		var deinc = this._stepper.findComponent("deinc",haxe_ui_components_Button);
		deinc.unregisterEvent("click",$bind(this,this.onDeinc));
		var inc = this._stepper.findComponent("inc",haxe_ui_components_Button);
		inc.unregisterEvent("click",$bind(this,this.onInc));
		this.unregisterEvent("actionStart",$bind(this,this.onActionStart));
	}
	,_autoCorrectTimer: null
	,onValueFieldChange: function(event) {
		if(this._stepper.get_autoCorrect() == true) {
			if(this._autoCorrectTimer != null) {
				this._autoCorrectTimer.stop();
				this._autoCorrectTimer = null;
			}
			this._autoCorrectTimer = new haxe_ui_util_Timer(350,$bind(this,this.onAutoCorrectTimer));
		} else {
			var newValue = haxe_ui_components__$NumberStepper_ValueHelper.validateValue(this._stepper);
			if(newValue != null) {
				this._stepper.set_pos(newValue);
			}
		}
	}
	,onAutoCorrectTimer: function() {
		this._autoCorrectTimer.stop();
		this._autoCorrectTimer = null;
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		var parsedValue = parseFloat(value.get_text());
		var tmp = this._stepper;
		var v = parsedValue;
		var min = this._stepper.get_min();
		var max = this._stepper.get_max();
		var tmp1;
		if(v == null || isNaN(v)) {
			tmp1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			tmp1 = v;
		}
		tmp.set_pos(tmp1);
		var stringValue = haxe_ui_util_StringUtil.padDecimal(this._stepper.get_pos(),this._stepper.get_precision());
		value.set_text(stringValue);
	}
	,onDeinc: function(event) {
		this._stepper.set_focus(true);
		haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue(this._stepper);
	}
	,onInc: function(event) {
		this._stepper.set_focus(true);
		haxe_ui_components__$NumberStepper_ValueHelper.incrementValue(this._stepper);
	}
	,onValueKeyUp: function(event) {
		if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("up")) {
			event.cancel();
			haxe_ui_components__$NumberStepper_ValueHelper.incrementValue(this._stepper);
		} else if(event.keyCode == haxe_ui_core_Platform.get_instance().getKeyCode("down")) {
			event.cancel();
			haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue(this._stepper);
		}
	}
	,isInScroller: function() {
		var p = this._stepper.parentComponent;
		while(p != null) {
			if(p.get_isScroller()) {
				var vscroll = p.findComponent("scrollview-vscroll",haxe_ui_core_Component);
				if(vscroll != null && vscroll.get_hidden() == false) {
					return true;
				}
			}
			p = p.parentComponent;
		}
		return false;
	}
	,onMouseWheel: function(event) {
		if(this.isInScroller() && this._stepper.get_focus() == false) {
			return;
		}
		event.cancel();
		this._stepper.set_focus(true);
		if(event.delta > 0) {
			haxe_ui_components__$NumberStepper_ValueHelper.incrementValue(this._stepper);
		} else {
			haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue(this._stepper);
		}
	}
	,onClick: function(_) {
		this._stepper.set_focus(true);
	}
	,onFocusIn: function(event) {
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		value.getTextInput().focus();
	}
	,onFocusOut: function(event) {
		var value = this._stepper.findComponent("value",haxe_ui_components_TextField);
		value.getTextInput().blur();
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue(this._stepper);
			event.repeater = true;
			break;
		case "actionLeft":
			haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue(this._stepper);
			event.repeater = true;
			break;
		case "actionRight":
			haxe_ui_components__$NumberStepper_ValueHelper.incrementValue(this._stepper);
			event.repeater = true;
			break;
		case "actionUp":
			haxe_ui_components__$NumberStepper_ValueHelper.incrementValue(this._stepper);
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_components__$NumberStepper_Events
});
var haxe_ui_components__$NumberStepper_StandardLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._NumberStepper.StandardLayout"] = haxe_ui_components__$NumberStepper_StandardLayout;
haxe_ui_components__$NumberStepper_StandardLayout.__name__ = "haxe.ui.components._NumberStepper.StandardLayout";
haxe_ui_components__$NumberStepper_StandardLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$NumberStepper_StandardLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_TextField);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		var u = this.get_usableSize();
		deinc.set_height(u.height - this.get_borderSize() * 2);
		value.set_width(u.width - (deinc.get_width() + inc.get_width()));
		inc.set_height(u.height - this.get_borderSize() * 2);
	}
	,repositionChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_TextField);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		deinc.set_left(this.get_paddingLeft() + this.get_borderSize());
		deinc.set_top(this.get_paddingTop() + this.get_borderSize());
		value.set_left(deinc.get_left() + deinc.get_width());
		value.set_top(this.get_paddingTop() + this.marginTop(value));
		inc.set_left(value.get_left() + value.get_width() - this.get_borderSize() - this.get_borderSize());
		inc.set_top(this.get_paddingTop() + this.get_borderSize());
	}
	,get_borderSize: function() {
		if(this._component.get_style() == null) {
			return 0;
		}
		var n = this._component.get_style().get_fullBorderSize();
		return n;
	}
	,__class__: haxe_ui_components__$NumberStepper_StandardLayout
});
var haxe_ui_components__$NumberStepper_ClassicLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._NumberStepper.ClassicLayout"] = haxe_ui_components__$NumberStepper_ClassicLayout;
haxe_ui_components__$NumberStepper_ClassicLayout.__name__ = "haxe.ui.components._NumberStepper.ClassicLayout";
haxe_ui_components__$NumberStepper_ClassicLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$NumberStepper_ClassicLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_TextField);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		var u = this.get_usableSize();
		deinc.set_height(u.height / 2);
		value.set_width(u.width - deinc.get_width());
		inc.set_height(u.height / 2);
	}
	,repositionChildren: function() {
		var value = this.findComponent("value",haxe_ui_components_TextField);
		var deinc = this.findComponent("deinc",haxe_ui_components_Button);
		var inc = this.findComponent("inc",haxe_ui_components_Button);
		var u = this.get_usableSize();
		deinc.set_left(u.width - deinc.get_width() - this.get_paddingRight() - this.get_borderSize());
		deinc.set_top(u.height - inc.get_height() - this.get_paddingBottom() - this.get_borderSize() + this.marginTop(deinc));
		value.set_left(this.get_paddingLeft());
		value.set_top(this.get_paddingTop() + this.marginTop(value));
		inc.set_left(u.width - deinc.get_width() - this.get_paddingRight() - this.get_borderSize());
		inc.set_top(this.get_paddingTop() + this.get_borderSize());
	}
	,get_borderSize: function() {
		var n = haxe_ui_layouts_DefaultLayout.prototype.get_borderSize.call(this) + 1;
		return n;
	}
	,__class__: haxe_ui_components__$NumberStepper_ClassicLayout
});
var haxe_ui_components__$NumberStepper_ValueHelper = function() { };
$hxClasses["haxe.ui.components._NumberStepper.ValueHelper"] = haxe_ui_components__$NumberStepper_ValueHelper;
haxe_ui_components__$NumberStepper_ValueHelper.__name__ = "haxe.ui.components._NumberStepper.ValueHelper";
haxe_ui_components__$NumberStepper_ValueHelper.validateValue = function(stepper) {
	var value = stepper.findComponent("value",haxe_ui_components_TextField);
	var textValue = value.get_text();
	var min = stepper.get_min();
	var max = stepper.get_max();
	var parsedValue = parseFloat(textValue);
	var valid = (textValue == null || textValue == "" ? 0 : textValue.split(".").length - 1) <= 1;
	if(textValue == null || StringTools.trim(textValue) == "") {
		valid = false;
	}
	if(isNaN(parsedValue)) {
		valid = false;
	}
	if(min != null && parsedValue < min) {
		valid = false;
	}
	if(max != null && parsedValue > max) {
		valid = false;
	}
	if(valid == false) {
		parsedValue = null;
		stepper.addClass("invalid-value");
	} else {
		stepper.removeClass("invalid-value");
	}
	return parsedValue;
};
haxe_ui_components__$NumberStepper_ValueHelper.incrementValue = function(stepper) {
	var value = stepper.findComponent("value",haxe_ui_components_TextField);
	var textValue = value.get_text();
	var min = stepper.get_min();
	var max = stepper.get_max();
	var newValue = stepper.get_pos();
	if(textValue == null || StringTools.trim(textValue) == "") {
		if(min != null) {
			newValue = min;
		}
	} else {
		newValue += stepper.get_step();
	}
	if(max != null && newValue > max) {
		newValue = max;
	}
	stepper.set_pos(newValue);
};
haxe_ui_components__$NumberStepper_ValueHelper.deincrementValue = function(stepper) {
	var value = stepper.findComponent("value",haxe_ui_components_TextField);
	var textValue = value.get_text();
	var min = stepper.get_min();
	var newValue = stepper.get_pos();
	if(textValue == null || StringTools.trim(textValue) == "") {
		if(min != null) {
			newValue = min;
		}
	} else {
		newValue -= stepper.get_step();
	}
	if(min != null && newValue < min) {
		newValue = min;
	}
	stepper.set_pos(newValue);
};
var haxe_ui_components_OptionBox = function() {
	haxe_ui_components_CheckBox.call(this);
};
$hxClasses["haxe.ui.components.OptionBox"] = haxe_ui_components_OptionBox;
haxe_ui_components_OptionBox.__name__ = "haxe.ui.components.OptionBox";
haxe_ui_components_OptionBox.__super__ = haxe_ui_components_CheckBox;
haxe_ui_components_OptionBox.prototype = $extend(haxe_ui_components_CheckBox.prototype,{
	resetGroup: function() {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("resetGroup",null);
	}
	,registerComposite: function() {
		haxe_ui_components_CheckBox.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components_OptionBoxBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_components_CheckBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("componentGroup",haxe_ui_components__$OptionBox_GroupBehaviour,haxe_ui_util_Variant.fromString("defaultGroup"));
		this.behaviours.register("selected",haxe_ui_components__$OptionBox_SelectedBehaviour);
		this.behaviours.register("selectedOption",haxe_ui_components__$OptionBox_SelectedOptionBehaviour);
		this.behaviours.register("resetGroup",haxe_ui_components__$OptionBox_ResetGroup);
	}
	,get_componentGroup: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("componentGroup"));
	}
	,set_componentGroup: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"componentGroup",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("componentGroup",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"componentGroup"));
		return value;
	}
	,get_selectedOption: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedOption"));
	}
	,set_selectedOption: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedOption",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedOption"));
		return value;
	}
	,get_value: function() {
		return this.get_selected();
	}
	,set_value: function(value) {
		this.set_selected(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_CheckBox.prototype.cloneComponent.call(this);
		if(this.get_componentGroup() != null) {
			c.set_componentGroup(this.get_componentGroup());
		}
		if(this.get_selectedOption() != null) {
			c.set_selectedOption(this.get_selectedOption());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_OptionBox();
	}
	,__class__: haxe_ui_components_OptionBox
	,__properties__: $extend(haxe_ui_components_CheckBox.prototype.__properties__,{set_selectedOption:"set_selectedOption",get_selectedOption:"get_selectedOption",set_componentGroup:"set_componentGroup",get_componentGroup:"get_componentGroup"})
});
var haxe_ui_components__$OptionBox_GroupBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.GroupBehaviour"] = haxe_ui_components__$OptionBox_GroupBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.__name__ = "haxe.ui.components._OptionBox.GroupBehaviour";
haxe_ui_components__$OptionBox_GroupBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_GroupBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		haxe_ui_components_OptionBoxGroups.get_instance().add(haxe_ui_util_Variant.toString(this._value),this._component);
	}
	,__class__: haxe_ui_components__$OptionBox_GroupBehaviour
});
var haxe_ui_components__$OptionBox_SelectedBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedBehaviour"] = haxe_ui_components__$OptionBox_SelectedBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedBehaviour";
haxe_ui_components__$OptionBox_SelectedBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components_OptionBoxBuilder)).setSelection(optionbox,haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedBehaviour
});
var haxe_ui_components__$OptionBox_SelectedOptionBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.SelectedOptionBehaviour"] = haxe_ui_components__$OptionBox_SelectedOptionBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__name__ = "haxe.ui.components._OptionBox.SelectedOptionBehaviour";
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$OptionBox_SelectedOptionBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
		var selectionOption = null;
		if(arr != null) {
			var _g = 0;
			while(_g < arr.length) {
				var test = arr[_g];
				++_g;
				if(test.get_selected() == true) {
					selectionOption = test;
					break;
				}
			}
		}
		return haxe_ui_util_Variant.fromComponent(selectionOption);
	}
	,__class__: haxe_ui_components__$OptionBox_SelectedOptionBehaviour
});
var haxe_ui_components__$OptionBox_ResetGroup = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._OptionBox.ResetGroup"] = haxe_ui_components__$OptionBox_ResetGroup;
haxe_ui_components__$OptionBox_ResetGroup.__name__ = "haxe.ui.components._OptionBox.ResetGroup";
haxe_ui_components__$OptionBox_ResetGroup.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$OptionBox_ResetGroup.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		haxe_ui_components_OptionBoxGroups.get_instance().reset(optionbox.get_componentGroup());
		return null;
	}
	,__class__: haxe_ui_components__$OptionBox_ResetGroup
});
var haxe_ui_components_OptionBoxBuilder = function(checkbox) {
	haxe_ui_components_CheckBoxBuilder.call(this,checkbox);
};
$hxClasses["haxe.ui.components.OptionBoxBuilder"] = haxe_ui_components_OptionBoxBuilder;
haxe_ui_components_OptionBoxBuilder.__name__ = "haxe.ui.components.OptionBoxBuilder";
haxe_ui_components_OptionBoxBuilder.__super__ = haxe_ui_components_CheckBoxBuilder;
haxe_ui_components_OptionBoxBuilder.prototype = $extend(haxe_ui_components_CheckBoxBuilder.prototype,{
	get_cssName: function() {
		return "optionbox";
	}
	,setSelection: function(optionbox,value,allowDeselection) {
		if(allowDeselection == null) {
			allowDeselection = false;
		}
		if(optionbox.get_componentGroup() != null && value == false && allowDeselection == false) {
			var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			var hasSelection = false;
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != optionbox && option.get_selected() == true) {
						hasSelection = true;
						break;
					}
				}
			}
			if(hasSelection == false && allowDeselection == false) {
				optionbox.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(true));
				return;
			}
		}
		if(optionbox.get_componentGroup() != null && value == true) {
			var arr = haxe_ui_components_OptionBoxGroups.get_instance().get(optionbox.get_componentGroup());
			if(arr != null) {
				var _g = 0;
				while(_g < arr.length) {
					var option = arr[_g];
					++_g;
					if(option != optionbox) {
						option.set_selected(false);
					}
				}
			}
		}
		if(allowDeselection == true && value == false) {
			optionbox.behaviours.softSet("selected",haxe_ui_util_Variant.fromBool(false));
		}
		var valueComponent = optionbox.findComponent("optionbox-value",haxe_ui_components_CheckBoxValue);
		if(valueComponent == null) {
			return;
		}
		valueComponent.createIcon();
		if(value == true) {
			valueComponent.addClass(":selected");
			optionbox.dispatch(new haxe_ui_events_UIEvent("change"));
		} else {
			valueComponent.removeClass(":selected");
		}
	}
	,destroy: function() {
		haxe_ui_components_CheckBoxBuilder.prototype.destroy.call(this);
		var optionbox = js_Boot.__cast(this._component , haxe_ui_components_OptionBox);
		haxe_ui_components_OptionBoxGroups.get_instance().remove(optionbox.get_componentGroup(),optionbox);
	}
	,__class__: haxe_ui_components_OptionBoxBuilder
});
var haxe_ui_components_OptionBoxGroups = function() {
	this._groups = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.components.OptionBoxGroups"] = haxe_ui_components_OptionBoxGroups;
haxe_ui_components_OptionBoxGroups.__name__ = "haxe.ui.components.OptionBoxGroups";
haxe_ui_components_OptionBoxGroups.__properties__ = {get_instance:"get_instance"};
haxe_ui_components_OptionBoxGroups.get_instance = function() {
	if(haxe_ui_components_OptionBoxGroups._instance == null) {
		haxe_ui_components_OptionBoxGroups._instance = new haxe_ui_components_OptionBoxGroups();
	}
	return haxe_ui_components_OptionBoxGroups._instance;
};
haxe_ui_components_OptionBoxGroups.prototype = {
	_groups: null
	,get: function(name) {
		return this._groups.h[name];
	}
	,set: function(name,options) {
		this._groups.h[name] = options;
	}
	,add: function(name,optionbox) {
		var arr = this.get(name);
		if(arr == null) {
			arr = [];
		}
		if(arr.indexOf(optionbox) == -1) {
			arr.push(optionbox);
		}
		this.set(name,arr);
	}
	,remove: function(name,optionbox) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		HxOverrides.remove(arr,optionbox);
		if(arr.length == 0) {
			var _this = this._groups;
			if(Object.prototype.hasOwnProperty.call(_this.h,name)) {
				delete(_this.h[name]);
			}
		}
	}
	,reset: function(name) {
		var arr = this.get(name);
		if(arr == null) {
			return;
		}
		var selection = null;
		var _g = 0;
		while(_g < arr.length) {
			var item = arr[_g];
			++_g;
			if(item.get_selected() == true) {
				selection = item;
				break;
			}
		}
		if(selection == null) {
			return;
		}
		(js_Boot.__cast(selection._compositeBuilder , haxe_ui_components_OptionBoxBuilder)).setSelection(selection,false,true);
	}
	,__class__: haxe_ui_components_OptionBoxGroups
};
var haxe_ui_components__$Scroll_Events = function(scroll) {
	haxe_ui_events_Events.call(this,scroll);
	this._scroll = scroll;
	this._deincButton = this._scroll.findComponent("scroll-deinc-button");
	this._incButton = this._scroll.findComponent("scroll-inc-button");
	this._thumb = this._scroll.findComponent("scroll-thumb-button");
};
$hxClasses["haxe.ui.components._Scroll.Events"] = haxe_ui_components__$Scroll_Events;
haxe_ui_components__$Scroll_Events.__name__ = "haxe.ui.components._Scroll.Events";
haxe_ui_components__$Scroll_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Scroll_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scroll: null
	,_deincButton: null
	,_incButton: null
	,_thumb: null
	,register: function() {
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._deincButton != null && this._deincButton.hasEvent("click",$bind(this,this.onDeinc)) == false) {
			this._deincButton.registerEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null && this._incButton.hasEvent("click",$bind(this,this.onInc)) == false) {
			this._incButton.registerEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null && this._thumb.hasEvent("mousedown",$bind(this,this.onThumbMouseDown)) == false) {
			this._thumb.registerEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		if(this._deincButton != null) {
			this._deincButton.unregisterEvent("click",$bind(this,this.onDeinc));
		}
		if(this._incButton != null) {
			this._incButton.unregisterEvent("click",$bind(this,this.onInc));
		}
		if(this._thumb != null) {
			this._thumb.unregisterEvent("mousedown",$bind(this,this.onThumbMouseDown));
		}
	}
	,onMouseDown: function(event) {
		var componentOffset = this._scroll.getComponentOffset();
		if(this._deincButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false && this._incButton.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == false) {
			this._scroll.applyPageFromCoord(new haxe_ui_geom_Point(event.screenX - componentOffset.x,event.screenY - componentOffset.y));
		}
	}
	,onDeinc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() - this._scroll.get_increment());
	}
	,onInc: function(event) {
		var fh = this._scroll;
		fh.set_pos(fh.get_pos() + this._scroll.get_increment());
	}
	,_mouseDownOffset: null
	,onThumbMouseDown: function(event) {
		this._mouseDownOffset = new haxe_ui_geom_Point();
		var tmp = event.screenX - this._thumb.get_left();
		var tmp1 = this._scroll.get_layout().get_paddingLeft();
		this._mouseDownOffset.x = tmp + tmp1;
		var tmp = event.screenY - this._thumb.get_top();
		var tmp1 = this._scroll.get_layout().get_paddingTop();
		this._mouseDownOffset.y = tmp + tmp1;
		this._scroll.get_screen().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseUp: function(event) {
		this._mouseDownOffset = null;
		this._scroll.get_screen().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._scroll.get_screen().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,onScreenMouseMove: function(event) {
		if(this._mouseDownOffset == null) {
			return;
		}
		var coord = new haxe_ui_geom_Point(event.screenX - this._mouseDownOffset.x,event.screenY - this._mouseDownOffset.y);
		this._scroll.set_pos(this._scroll.posFromCoord(coord));
	}
	,__class__: haxe_ui_components__$Scroll_Events
});
var haxe_ui_components__$Scroll_ScrollValueBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Scroll.ScrollValueBehaviour"] = haxe_ui_components__$Scroll_ScrollValueBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.__name__ = "haxe.ui.components._Scroll.ScrollValueBehaviour";
haxe_ui_components__$Scroll_ScrollValueBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Scroll_ScrollValueBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this.get())) {
			return;
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,validateData: function() {
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var pos = scroll.get_pos();
		var min = scroll.get_min();
		var max = scroll.get_max();
		if(pos < min) {
			scroll.set_pos(min);
		} else if(pos > max) {
			scroll.set_pos(max);
		}
		var changeEvent = new haxe_ui_events_UIEvent("change");
		scroll.dispatch(changeEvent);
	}
	,__class__: haxe_ui_components__$Scroll_ScrollValueBehaviour
});
var haxe_ui_components_Spacer = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.Spacer"] = haxe_ui_components_Spacer;
haxe_ui_components_Spacer.__name__ = "haxe.ui.components.Spacer";
haxe_ui_components_Spacer.__super__ = haxe_ui_core_Component;
haxe_ui_components_Spacer.prototype = $extend(haxe_ui_core_Component.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Spacer();
	}
	,__class__: haxe_ui_components_Spacer
});
var haxe_ui_components_Stepper = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.components.Stepper"] = haxe_ui_components_Stepper;
haxe_ui_components_Stepper.__name__ = "haxe.ui.components.Stepper";
haxe_ui_components_Stepper.__super__ = haxe_ui_containers_VBox;
haxe_ui_components_Stepper.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	increment: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("increment",null);
	}
	,deincrement: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("deincrement",null);
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$Stepper_Events;
		this._compositeBuilderClass = haxe_ui_components__$Stepper_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("pos",haxe_ui_components__$Stepper_PosBehaviour);
		this.behaviours.register("step",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(1));
		this.behaviours.register("min",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("max",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("precision",haxe_ui_behaviours_DefaultBehaviour,null);
		this.behaviours.register("repeater",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("repeatInterval",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(100));
		this.behaviours.register("increment",haxe_ui_components__$Stepper_IncBehaviour);
		this.behaviours.register("deincrement",haxe_ui_components__$Stepper_DeincBehaviour);
	}
	,get_pos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("pos"));
	}
	,set_pos: function(value) {
		this.behaviours.set("pos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pos"));
		return value;
	}
	,get_step: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("step"));
	}
	,set_step: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("step",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"step"));
		return value;
	}
	,get_min: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("min"));
	}
	,set_min: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("min",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"min"));
		return value;
	}
	,get_max: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("max"));
	}
	,set_max: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("max",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"max"));
		return value;
	}
	,get_precision: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("precision"));
	}
	,set_precision: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("precision",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"precision"));
		return value;
	}
	,get_repeater: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("repeater"));
	}
	,set_repeater: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeater",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeater"));
		return value;
	}
	,get_repeatInterval: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("repeatInterval"));
	}
	,set_repeatInterval: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("repeatInterval",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"repeatInterval"));
		return value;
	}
	,get_value: function() {
		return this.get_pos();
	}
	,set_value: function(value) {
		this.set_pos(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		c.set_pos(this.get_pos());
		c.set_step(this.get_step());
		if(this.get_min() != null) {
			c.set_min(this.get_min());
		}
		if(this.get_max() != null) {
			c.set_max(this.get_max());
		}
		if(this.get_precision() != null) {
			c.set_precision(this.get_precision());
		}
		c.set_repeater(this.get_repeater());
		c.set_repeatInterval(this.get_repeatInterval());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_Stepper();
	}
	,__class__: haxe_ui_components_Stepper
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_repeatInterval:"set_repeatInterval",get_repeatInterval:"get_repeatInterval",set_repeater:"set_repeater",get_repeater:"get_repeater",set_precision:"set_precision",get_precision:"get_precision",set_max:"set_max",get_max:"get_max",set_min:"set_min",get_min:"get_min",set_step:"set_step",get_step:"get_step",set_pos:"set_pos",get_pos:"get_pos"})
});
var haxe_ui_components__$Stepper_PosBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.PosBehaviour"] = haxe_ui_components__$Stepper_PosBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.__name__ = "haxe.ui.components._Stepper.PosBehaviour";
haxe_ui_components__$Stepper_PosBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$Stepper_PosBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var v = haxe_ui_util_Variant.toFloat(this._value);
		var min = stepper.get_min();
		var max = stepper.get_max();
		var v1;
		if(v == null || isNaN(v)) {
			v1 = min;
		} else {
			if(min != null && v < min) {
				v = min;
			} else if(max != null && v > max) {
				v = max;
			}
			v1 = v;
		}
		stepper.set_pos(v1);
		this._value = haxe_ui_util_Variant.fromFloat(v1);
		var event = new haxe_ui_events_UIEvent("change");
		this._component.dispatch(event);
	}
	,__class__: haxe_ui_components__$Stepper_PosBehaviour
});
var haxe_ui_components__$Stepper_IncBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.IncBehaviour"] = haxe_ui_components__$Stepper_IncBehaviour;
haxe_ui_components__$Stepper_IncBehaviour.__name__ = "haxe.ui.components._Stepper.IncBehaviour";
haxe_ui_components__$Stepper_IncBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_IncBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos += stepper.get_step();
		if(stepper.get_max() != null && newPos > stepper.get_max()) {
			newPos = stepper.get_max();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_IncBehaviour
});
var haxe_ui_components__$Stepper_DeincBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._Stepper.DeincBehaviour"] = haxe_ui_components__$Stepper_DeincBehaviour;
haxe_ui_components__$Stepper_DeincBehaviour.__name__ = "haxe.ui.components._Stepper.DeincBehaviour";
haxe_ui_components__$Stepper_DeincBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$Stepper_DeincBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var stepper = js_Boot.__cast(this._component , haxe_ui_components_Stepper);
		var newPos = stepper.get_pos();
		newPos -= stepper.get_step();
		if(stepper.get_min() != null && newPos < stepper.get_min()) {
			newPos = stepper.get_min();
		}
		if(stepper.get_precision() != null) {
			var precision = stepper.get_precision();
			if(precision == null) {
				precision = 0;
			}
			newPos = Math.round(newPos * Math.pow(10,precision)) / Math.pow(10,precision);
		}
		stepper.set_pos(newPos);
		return null;
	}
	,__class__: haxe_ui_components__$Stepper_DeincBehaviour
});
var haxe_ui_components__$Stepper_Builder = function(stepper) {
	haxe_ui_core_CompositeBuilder.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Builder"] = haxe_ui_components__$Stepper_Builder;
haxe_ui_components__$Stepper_Builder.__name__ = "haxe.ui.components._Stepper.Builder";
haxe_ui_components__$Stepper_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$Stepper_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stepper: null
	,create: function() {
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-inc");
		button.set_id("stepper-inc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
		var button = new haxe_ui_components_Button();
		button.set_styleNames("stepper-button stepper-deinc");
		button.set_id("stepper-deinc");
		button.set_repeater(this._stepper.get_repeater());
		button.set_easeInRepeater(true);
		button.set_allowFocus(false);
		button.set_repeatInterval(this._stepper.get_repeatInterval());
		this._stepper.addComponent(button);
	}
	,__class__: haxe_ui_components__$Stepper_Builder
});
var haxe_ui_components__$Stepper_Events = function(stepper) {
	haxe_ui_events_Events.call(this,stepper);
	this._stepper = stepper;
};
$hxClasses["haxe.ui.components._Stepper.Events"] = haxe_ui_components__$Stepper_Events;
haxe_ui_components__$Stepper_Events.__name__ = "haxe.ui.components._Stepper.Events";
haxe_ui_components__$Stepper_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$Stepper_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_stepper: null
	,register: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onInc))) {
			button.registerEvent("click",$bind(this,this.onInc));
		}
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		if(!button.hasEvent("click",$bind(this,this.onDeinc))) {
			button.registerEvent("click",$bind(this,this.onDeinc));
		}
	}
	,unregister: function() {
		var button = this._stepper.findComponent("stepper-inc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onInc));
		var button = this._stepper.findComponent("stepper-deinc",haxe_ui_components_Button);
		button.unregisterEvent("click",$bind(this,this.onDeinc));
	}
	,onInc: function(event) {
		this._stepper.increment();
	}
	,onDeinc: function(event) {
		this._stepper.deincrement();
	}
	,__class__: haxe_ui_components__$Stepper_Events
});
var haxe_ui_components_TabBar = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.components.TabBar"] = haxe_ui_components_TabBar;
haxe_ui_components_TabBar.__name__ = "haxe.ui.components.TabBar";
haxe_ui_components_TabBar.__super__ = haxe_ui_core_Component;
haxe_ui_components_TabBar.prototype = $extend(haxe_ui_core_Component.prototype,{
	removeTab: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeTab",index);
	}
	,getTab: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getTab",index));
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_components__$TabBar_Builder;
		this._internalEventsClass = haxe_ui_components__$TabBar_Events;
		this._defaultLayoutClass = haxe_ui_components_TabBarLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_components__$TabBar_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedTab",haxe_ui_components__$TabBar_SelectedTab);
		this.behaviours.register("tabPosition",haxe_ui_components__$TabBar_TabPosition,haxe_ui_util_Variant.fromString("top"));
		this.behaviours.register("tabCount",haxe_ui_components__$TabBar_TabCount);
		this.behaviours.register("closable",haxe_ui_components__$TabBar_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("removeTab",haxe_ui_components__$TabBar_RemoveTab);
		this.behaviours.register("getTab",haxe_ui_components__$TabBar_GetTab);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedTab: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedTab"));
	}
	,set_selectedTab: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedTab",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedTab"));
		return value;
	}
	,get_tabPosition: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"tabPosition",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tabPosition"));
		return value;
	}
	,get_tabCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("tabCount"));
	}
	,set_tabCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("tabCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tabCount"));
		return value;
	}
	,get_closable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"closable"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TabBar();
	}
	,__class__: haxe_ui_components_TabBar
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable",set_tabCount:"set_tabCount",get_tabCount:"get_tabCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedTab:"set_selectedTab",get_selectedTab:"get_selectedTab",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_components_TabBarLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components.TabBarLayout"] = haxe_ui_components_TabBarLayout;
haxe_ui_components_TabBarLayout.__name__ = "haxe.ui.components.TabBarLayout";
haxe_ui_components_TabBarLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components_TabBarLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var filler = this._component.findComponent("tabbar-filler",null,false);
		if(filler != null) {
			var container = this._component.findComponent("tabbar-contents",null,false);
			filler.set_width(this._component.get_width() - container.get_width());
			filler.set_height(this._component.get_height());
			filler.set_left(container.get_width());
		}
		var left = this._component.findComponent("tabbar-scroll-left",null,false);
		var right = this._component.findComponent("tabbar-scroll-right",null,false);
		if(left != null && this.hidden(left) == false) {
			var x = this._component.get_width() - left.get_width();
			if(right != null) {
				x -= right.get_width();
			}
			left.set_left(x + 1);
			left.set_top(this._component.get_height() / 2 - left.get_height() / 2);
		}
		if(right != null && this.hidden(right) == false) {
			right.set_left(this._component.get_width() - right.get_width());
			right.set_top(this._component.get_height() / 2 - right.get_height() / 2);
		}
	}
	,__class__: haxe_ui_components_TabBarLayout
});
var haxe_ui_components__$TabBar_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.Closable"] = haxe_ui_components__$TabBar_Closable;
haxe_ui_components__$TabBar_Closable.__name__ = "haxe.ui.components._TabBar.Closable";
haxe_ui_components__$TabBar_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		var buttons = builder._container.findComponents(null,haxe_ui_components__$TabBar_TabBarButton,1);
		var _g = 0;
		while(_g < buttons.length) {
			var b = buttons[_g];
			++_g;
			b.set_closable(haxe_ui_util_Variant.toBool(this._value));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Closable
});
var haxe_ui_components__$TabBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedIndex"] = haxe_ui_components__$TabBar_SelectedIndex;
haxe_ui_components__$TabBar_SelectedIndex.__name__ = "haxe.ui.components._TabBar.SelectedIndex";
haxe_ui_components__$TabBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(builder._container == null) {
			return;
		}
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = builder._container;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = builder._container;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		var tab = js_Boot.__cast(builder._container.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(tab != null) {
			var selectedTab = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedTab();
			if(selectedTab != null) {
				selectedTab.removeClass("tabbar-button-selected");
				var label = selectedTab.findComponent(null,haxe_ui_components_Label);
				if(label != null) {
					label.invalidateComponent();
				}
				var icon = selectedTab.findComponent(null,haxe_ui_components_Image);
				if(icon != null) {
					icon.invalidateComponent();
				}
			}
			tab.addClass("tabbar-button-selected");
			var label = tab.findComponent(null,haxe_ui_components_Label);
			if(label != null) {
				label.invalidateComponent();
			}
			var icon = tab.findComponent(null,haxe_ui_components_Image);
			if(icon != null) {
				icon.invalidateComponent();
			}
			var rangeMin = Math.abs(builder._container.get_left());
			var rangeMax = rangeMin + this._component.get_width();
			var left = this._component.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
			var right = this._component.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
			if(left != null && left.get_hidden() == false) {
				rangeMax -= left.get_width();
				rangeMax -= this._component.get_layout().get_horizontalSpacing();
			}
			if(right != null && right.get_hidden() == false) {
				rangeMax -= right.get_width();
			}
			if(tab.get_left() < rangeMin || tab.get_left() + tab.get_width() > rangeMax) {
				var max = -(builder._container.get_width() - this._component.get_width());
				var x = -tab.get_left() + this._component.get_layout().get_paddingLeft();
				if(left != null && left.get_hidden() == false) {
					max -= left.get_width();
					max -= this._component.get_layout().get_horizontalSpacing();
				}
				if(right != null && right.get_hidden() == false) {
					max -= right.get_width();
				}
				if(x < max) {
					x = max;
				}
				builder._containerPosition = x;
				builder._container.set_left(x);
			}
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_components__$TabBar_SelectedIndex
});
var haxe_ui_components__$TabBar_SelectedTab = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.SelectedTab"] = haxe_ui_components__$TabBar_SelectedTab;
haxe_ui_components__$TabBar_SelectedTab.__name__ = "haxe.ui.components._TabBar.SelectedTab";
haxe_ui_components__$TabBar_SelectedTab.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_SelectedTab.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		return haxe_ui_util_Variant.fromComponent(builder._container.findComponent("tabbar-button-selected",null,false,"css"));
	}
	,__class__: haxe_ui_components__$TabBar_SelectedTab
});
var haxe_ui_components__$TabBar_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabPosition"] = haxe_ui_components__$TabBar_TabPosition;
haxe_ui_components__$TabBar_TabPosition.__name__ = "haxe.ui.components._TabBar.TabPosition";
haxe_ui_components__$TabBar_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TabBar_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.addClass(":bottom");
			}
		} else {
			this._component.removeClass(":bottom");
			var _g = 0;
			var _this = builder._container;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":bottom");
			}
		}
	}
	,__class__: haxe_ui_components__$TabBar_TabPosition
});
var haxe_ui_components__$TabBar_TabCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.TabCount"] = haxe_ui_components__$TabBar_TabCount;
haxe_ui_components__$TabBar_TabCount.__name__ = "haxe.ui.components._TabBar.TabCount";
haxe_ui_components__$TabBar_TabCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_TabCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _this = builder._container;
		return haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length);
	}
	,__class__: haxe_ui_components__$TabBar_TabCount
});
var haxe_ui_components__$TabBar_RemoveTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.RemoveTab"] = haxe_ui_components__$TabBar_RemoveTab;
haxe_ui_components__$TabBar_RemoveTab.__name__ = "haxe.ui.components._TabBar.RemoveTab";
haxe_ui_components__$TabBar_RemoveTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_RemoveTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var selectedIndex = (js_Boot.__cast(this._component , haxe_ui_components_TabBar)).get_selectedIndex();
			var newSelectedIndex = selectedIndex;
			if(index < selectedIndex) {
				--newSelectedIndex;
			} else if(index == selectedIndex) {
				(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(-1);
				newSelectedIndex = selectedIndex;
				var _this = builder._container;
				if(newSelectedIndex > (_this._children == null ? [] : _this._children).length - 2) {
					var _this = builder._container;
					newSelectedIndex = (_this._children == null ? [] : _this._children).length - 2;
				}
			}
			builder._container.removeComponentAt(index);
			this._component.dispatch(new haxe_ui_events_UIEvent("close",null,index));
			(js_Boot.__cast(this._component , haxe_ui_components_TabBar)).set_selectedIndex(newSelectedIndex);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TabBar_RemoveTab
});
var haxe_ui_components__$TabBar_GetTab = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TabBar.GetTab"] = haxe_ui_components__$TabBar_GetTab;
haxe_ui_components__$TabBar_GetTab.__name__ = "haxe.ui.components._TabBar.GetTab";
haxe_ui_components__$TabBar_GetTab.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TabBar_GetTab.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = param;
		var tab = null;
		var _this = builder._container;
		if(index < (_this._children == null ? [] : _this._children).length) {
			var _this = builder._container;
			tab = (_this._children == null ? [] : _this._children)[index];
		}
		return haxe_ui_util_Variant.fromComponent(tab);
	}
	,__class__: haxe_ui_components__$TabBar_GetTab
});
var haxe_ui_components__$TabBar_Events = function(tabbar) {
	haxe_ui_events_Events.call(this,tabbar);
	this._tabbar = tabbar;
};
$hxClasses["haxe.ui.components._TabBar.Events"] = haxe_ui_components__$TabBar_Events;
haxe_ui_components__$TabBar_Events.__name__ = "haxe.ui.components._TabBar.Events";
haxe_ui_components__$TabBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TabBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabbar: null
	,register: function() {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var _g = 0;
		var _this = builder._container;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t.hasEvent("mousedown",$bind(this,this.onTabMouseDown)) == false) {
				t.registerEvent("mousedown",$bind(this,this.onTabMouseDown));
			}
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,unregister: function() {
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onMouseWheel: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		if(event.delta < 0) {
			builder.scrollLeft();
		} else {
			builder.scrollRight();
		}
	}
	,onTabMouseDown: function(event) {
		var builder = js_Boot.__cast(this._tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var button = event.target;
		var close = button.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var select = true;
		if(close != null) {
			select = !close.hitTest(event.screenX,event.screenY);
		}
		if(select == true) {
			this._tabbar.set_selectedIndex(builder._container.getComponentIndex(button));
		}
	}
	,__class__: haxe_ui_components__$TabBar_Events
});
var haxe_ui_components__$TabBar_Builder = function(tabbar) {
	haxe_ui_core_CompositeBuilder.call(this,tabbar);
	this._tabbar = tabbar;
	this.createContainer();
};
$hxClasses["haxe.ui.components._TabBar.Builder"] = haxe_ui_components__$TabBar_Builder;
haxe_ui_components__$TabBar_Builder.__name__ = "haxe.ui.components._TabBar.Builder";
haxe_ui_components__$TabBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TabBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabbar: null
	,_container: null
	,_filler: null
	,create: function() {
		this.createContainer();
	}
	,createContainer: function() {
		if(this._filler == null) {
			this._filler = new haxe_ui_containers_Box();
			this._filler.set_id("tabbar-filler");
			this._filler.addClass("tabbar-filler");
			this._tabbar.addComponent(this._filler);
		}
		if(this._container == null) {
			this._container = new haxe_ui_containers_HBox();
			this._container.set_id("tabbar-contents");
			this._container.addClass("tabbar-contents");
			this._tabbar.addComponent(this._container);
		}
	}
	,addTab: function(child) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponent(button);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		}
		return v;
	}
	,addTabAt: function(child,index) {
		var button = this.createTabBarButton(child);
		var v = this._container.addComponentAt(button,index);
		this._tabbar.registerInternalEvents(haxe_ui_components__$TabBar_Events,true);
		if(this._tabbar.get_selectedIndex() < 0) {
			this._tabbar.set_selectedIndex(0);
		} else if(index <= this._tabbar.get_selectedIndex()) {
			var fh = this._tabbar;
			fh.set_selectedIndex(fh.get_selectedIndex() + 1);
		}
		return v;
	}
	,createTabBarButton: function(child) {
		var button = new haxe_ui_components__$TabBar_TabBarButton();
		button.addClass("tabbar-button");
		if(this._tabbar.get_tabPosition() == "bottom") {
			button.addClass(":bottom");
		}
		button.set_id(child.get_id());
		button.set_text(child.get_text());
		button.set_tooltip(child.get_tooltip());
		if(((child) instanceof haxe_ui_components_Button)) {
			button.set_icon((js_Boot.__cast(child , haxe_ui_components_Button)).get_icon());
		}
		button.set_closable(this._tabbar.get_closable());
		return button;
	}
	,get_numComponents: function() {
		return this._container.get_numComponents();
	}
	,addComponent: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTab(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this.addTabAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			var index = this._container.getComponentIndex(child);
			if(index != -1) {
				this._tabbar.removeTab(index);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		var child = this._container.getComponentAt(index);
		if(child != null) {
			this._tabbar.removeTab(index);
		}
		return child;
	}
	,getComponentIndex: function(child) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.getComponentIndex(child);
		}
		return -1;
	}
	,setComponentIndex: function(child,index) {
		if(child != this._container && child != this._scrollLeft && child != this._scrollRight && child != this._filler) {
			return this._container.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._container.getComponentAt(index);
	}
	,validateComponentLayout: function() {
		if(this._tabbar.get_native() == true || this._container == null) {
			return false;
		}
		if(this._containerPosition == null) {
			this._containerPosition = this._tabbar.get_layout().get_paddingLeft();
		}
		if(this._container.get_width() > this._tabbar.get_layout().get_usableWidth() && this._tabbar.get_layout().get_usableWidth() > 0) {
			this.showScrollButtons();
			this._container.set_left(this._containerPosition);
		} else {
			this.hideScrollButtons();
			this._containerPosition = null;
		}
		return true;
	}
	,_scrollLeft: null
	,_scrollRight: null
	,showScrollButtons: function() {
		var _gthis = this;
		if(this._scrollLeft == null) {
			this._scrollLeft = new haxe_ui_components_Button();
			this._scrollLeft.set_id("tabbar-scroll-left");
			this._scrollLeft.addClass("tabbar-scroll-left");
			this._scrollLeft.set_includeInLayout(false);
			this._scrollLeft.set_repeater(true);
			this._tabbar.addComponent(this._scrollLeft);
			this._scrollLeft.set_onClick(function(e) {
				_gthis.scrollLeft();
			});
		} else {
			this._scrollLeft.show();
		}
		if(this._scrollRight == null) {
			this._scrollRight = new haxe_ui_components_Button();
			this._scrollRight.set_id("tabbar-scroll-right");
			this._scrollRight.addClass("tabbar-scroll-right");
			this._scrollRight.set_includeInLayout(false);
			this._scrollRight.set_repeater(true);
			this._tabbar.addComponent(this._scrollRight);
			this._scrollRight.set_onClick(function(e) {
				_gthis.scrollRight();
			});
		} else {
			this._scrollRight.show();
		}
	}
	,_containerPosition: null
	,scrollLeft: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() + 20;
		if(x > this._tabbar.get_layout().get_paddingLeft()) {
			x = this._tabbar.get_layout().get_paddingLeft();
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,scrollRight: function() {
		if(this._scrollLeft == null || this._scrollLeft.get_hidden() == true) {
			return;
		}
		var x = this._container.get_left() - 20;
		var max = -(this._container.get_width() - this._tabbar.get_width());
		var left = this._tabbar.findComponent("tabbar-scroll-left",haxe_ui_components_Button);
		var right = this._tabbar.findComponent("tabbar-scroll-right",haxe_ui_components_Button);
		if(left != null && left.get_hidden() == false) {
			max -= left.get_width();
			max -= this._tabbar.get_layout().get_horizontalSpacing();
		}
		if(right != null && right.get_hidden() == false) {
			max -= right.get_width();
		}
		if(x < max) {
			x = max;
		}
		this._containerPosition = x;
		this._container.set_left(x);
	}
	,hideScrollButtons: function() {
		if(this._scrollLeft != null) {
			this._scrollLeft.hide();
		}
		if(this._scrollRight != null) {
			this._scrollRight.hide();
		}
	}
	,__class__: haxe_ui_components__$TabBar_Builder
});
var haxe_ui_components__$TabBar_TabBarButton = function() {
	this._closable = false;
	haxe_ui_components_Button.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButton"] = haxe_ui_components__$TabBar_TabBarButton;
haxe_ui_components__$TabBar_TabBarButton.__name__ = "haxe.ui.components._TabBar.TabBarButton";
haxe_ui_components__$TabBar_TabBarButton.__super__ = haxe_ui_components_Button;
haxe_ui_components__$TabBar_TabBarButton.prototype = $extend(haxe_ui_components_Button.prototype,{
	_closable: null
	,get_closable: function() {
		return this._closable;
	}
	,set_closable: function(value) {
		if(this._closable == value) {
			return value;
		}
		this._closable = value;
		var existing = this.findComponent("tab-close-button",haxe_ui_components_Image,false);
		var events = js_Boot.__cast(this._internalEvents , haxe_ui_components_ButtonEvents);
		events.recursiveStyling = false;
		if(this._closable == true && existing == null) {
			this.set_iconPosition("far-left");
			var image = new haxe_ui_components_Image();
			image.set_id("tab-close-button");
			image.addClass("tab-close-button");
			image.set_includeInLayout(false);
			image.set_scriptAccess(false);
			image.set_onClick($bind(this,this.onCloseClicked));
			this.addComponent(image);
		} else if(existing != null) {
			this.removeComponent(existing);
		}
		return value;
	}
	,onCloseClicked: function(e) {
		var tabbar = this.findAncestor(null,haxe_ui_components_TabBar);
		var builder = js_Boot.__cast(tabbar._compositeBuilder , haxe_ui_components__$TabBar_Builder);
		var index = builder._container.getComponentIndex(this);
		var event = new haxe_ui_events_UIEvent("beforeClose",null,index);
		tabbar.dispatch(event);
		if(event.canceled == false) {
			if(index != -1) {
				tabbar.removeTab(index);
			}
		}
	}
	,registerComposite: function() {
		haxe_ui_components_Button.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_components__$TabBar_TabBarButtonLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_components_Button.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Button.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components__$TabBar_TabBarButton();
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButton
	,__properties__: $extend(haxe_ui_components_Button.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable"})
});
var haxe_ui_components__$TabBar_TabBarButtonLayout = function() {
	haxe_ui_components_ButtonLayout.call(this);
};
$hxClasses["haxe.ui.components._TabBar.TabBarButtonLayout"] = haxe_ui_components__$TabBar_TabBarButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.__name__ = "haxe.ui.components._TabBar.TabBarButtonLayout";
haxe_ui_components__$TabBar_TabBarButtonLayout.__super__ = haxe_ui_components_ButtonLayout;
haxe_ui_components__$TabBar_TabBarButtonLayout.prototype = $extend(haxe_ui_components_ButtonLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_components_ButtonLayout.prototype.repositionChildren.call(this);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null && this.get_component().get_componentWidth() > 0) {
			image.set_top((this.get_component().get_componentHeight() / 2 - image.get_componentHeight() / 2 | 0) + this.marginTop(image) - this.marginBottom(image));
			image.set_left(this.get_component().get_componentWidth() - image.get_componentWidth() - this.get_paddingRight() + this.marginLeft(image) - this.marginRight(image));
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_components_ButtonLayout.prototype.calcAutoSize.call(this,exclusions);
		var image = this._component.findComponent("tab-close-button",haxe_ui_components_Image,false);
		if(image != null) {
			size.width += image.get_width() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TabBar_TabBarButtonLayout
});
var haxe_ui_components_TextArea = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextArea"] = haxe_ui_components_TextArea;
haxe_ui_components_TextArea.__name__ = "haxe.ui.components.TextArea";
haxe_ui_components_TextArea.__interfaces__ = [haxe_ui_focus_IFocusable];
haxe_ui_components_TextArea.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextArea.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	scrollToTop: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToTop",null);
	}
	,scrollToBottom: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("scrollToBottom",null);
	}
	,invalidateComponentScroll: function() {
		this.invalidateComponent("scroll");
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		var dataInvalid = this.isComponentInvalid("data");
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid || dataInvalid) {
			if(this._compositeBuilder != null) {
				(js_Boot.__cast(this._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_components__$TextArea_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextArea_HtmlTextBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextArea_PlaceholderBehaviour);
		this.behaviours.register("wrap",haxe_ui_components__$TextArea_WrapBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("dataSource",haxe_ui_components__$TextArea_DataSourceBehaviour);
		this.behaviours.register("autoScrollToBottom",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("scrollToTop",haxe_ui_components__$TextArea_ScrollToTop);
		this.behaviours.register("scrollToBottom",haxe_ui_components__$TextArea_ScrollToBottom);
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"htmlText"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"placeholder"));
		return value;
	}
	,get_wrap: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("wrap"));
	}
	,set_wrap: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("wrap",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"wrap"));
		return value;
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		return value;
	}
	,get_autoScrollToBottom: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoScrollToBottom"));
	}
	,set_autoScrollToBottom: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoScrollToBottom",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"autoScrollToBottom"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextArea();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextArea_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextArea_TextAreaBuilder;
		this._defaultLayoutClass = haxe_ui_components__$TextArea_TextAreaLayout;
	}
	,__class__: haxe_ui_components_TextArea
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_autoScrollToBottom:"set_autoScrollToBottom",get_autoScrollToBottom:"get_autoScrollToBottom",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_wrap:"set_wrap",get_wrap:"get_wrap",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText"})
});
var haxe_ui_components__$TextArea_TextAreaLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextArea.TextAreaLayout"] = haxe_ui_components__$TextArea_TextAreaLayout;
haxe_ui_components__$TextArea_TextAreaLayout.__name__ = "haxe.ui.components._TextArea.TextAreaLayout";
haxe_ui_components__$TextArea_TextAreaLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextArea_TextAreaLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var ucx = this.get_innerWidth();
		var ucy = this.get_innerHeight();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_left(this.get_paddingLeft());
			hscroll.set_top(ucy - hscroll.get_componentHeight() + this.get_paddingBottom());
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_left(ucx - vscroll.get_componentWidth() + this.get_paddingRight());
			vscroll.set_top(this.get_paddingTop());
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(this.get_paddingLeft() + 2);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.set_width(usableSize.width);
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.set_height(usableSize.height);
		}
		if(this.get_component().hasTextInput() == true) {
			var size = usableSize;
			this.get_component().getTextInput().set_width(size.width - 4);
			this.get_component().getTextInput().set_height(size.height - 4);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight();
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaLayout
});
var haxe_ui_components__$TextArea_DataSourceBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.DataSourceBehaviour"] = haxe_ui_components__$TextArea_DataSourceBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.__name__ = "haxe.ui.components._TextArea.DataSourceBehaviour";
haxe_ui_components__$TextArea_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		this._value = value;
		this._component.getTextInput().set_dataSource(haxe_ui_util_Variant.toDataSource(value));
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_components__$TextArea_DataSourceBehaviour
});
var haxe_ui_components__$TextArea_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.PlaceholderBehaviour"] = haxe_ui_components__$TextArea_PlaceholderBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextArea.PlaceholderBehaviour";
haxe_ui_components__$TextArea_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_PlaceholderBehaviour
});
var haxe_ui_components__$TextArea_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.TextBehaviour"] = haxe_ui_components__$TextArea_TextBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.__name__ = "haxe.ui.components._TextArea.TextBehaviour";
haxe_ui_components__$TextArea_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var text = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(textarea,text);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextBehaviour
});
var haxe_ui_components__$TextArea_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.HtmlTextBehaviour"] = haxe_ui_components__$TextArea_HtmlTextBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextArea.HtmlTextBehaviour";
haxe_ui_components__$TextArea_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		var htmlText = this._value != null ? haxe_ui_util_Variant.toString(this._value) : "";
		haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText(textarea,htmlText);
		if(textarea.get_autoScrollToBottom() == true) {
			textarea.scrollToBottom();
		}
	}
	,__class__: haxe_ui_components__$TextArea_HtmlTextBehaviour
});
var haxe_ui_components__$TextArea_WrapBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.WrapBehaviour"] = haxe_ui_components__$TextArea_WrapBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.__name__ = "haxe.ui.components._TextArea.WrapBehaviour";
haxe_ui_components__$TextArea_WrapBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextArea_WrapBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textarea = js_Boot.__cast(this._component , haxe_ui_components_TextArea);
		textarea.getTextInput().set_wordWrap(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextArea_WrapBehaviour
});
var haxe_ui_components__$TextArea_ScrollToTop = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToTop"] = haxe_ui_components__$TextArea_ScrollToTop;
haxe_ui_components__$TextArea_ScrollToTop.__name__ = "haxe.ui.components._TextArea.ScrollToTop";
haxe_ui_components__$TextArea_ScrollToTop.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToTop.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(0);
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToTop
});
var haxe_ui_components__$TextArea_ScrollToBottom = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextArea.ScrollToBottom"] = haxe_ui_components__$TextArea_ScrollToBottom;
haxe_ui_components__$TextArea_ScrollToBottom.__name__ = "haxe.ui.components._TextArea.ScrollToBottom";
haxe_ui_components__$TextArea_ScrollToBottom.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$TextArea_ScrollToBottom.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(vscroll.get_max());
		}
		return null;
	}
	,__class__: haxe_ui_components__$TextArea_ScrollToBottom
});
var haxe_ui_components__$TextArea_TextAreaHelper = function() { };
$hxClasses["haxe.ui.components._TextArea.TextAreaHelper"] = haxe_ui_components__$TextArea_TextAreaHelper;
haxe_ui_components__$TextArea_TextAreaHelper.__name__ = "haxe.ui.components._TextArea.TextAreaHelper";
haxe_ui_components__$TextArea_TextAreaHelper.validateText = function(textarea,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(text.length == 0) {
				text = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(text != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(text == textarea.get_placeholder()) {
				text = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_text("" + text);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextArea_TextAreaHelper.validateHtmlText = function(textarea,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	if(textarea.get_placeholder() != null) {
		if(textarea.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textarea.get_placeholder();
				textarea.addClass(":empty");
			} else if(htmlText != textarea.get_placeholder()) {
				textarea.removeClass(":empty");
			}
		} else {
			textarea.removeClass(":empty");
			if(htmlText == textarea.get_placeholder()) {
				htmlText = "";
			}
		}
	} else if(placeholderVisible == true) {
		textarea.removeClass(":empty");
	}
	textarea.getTextInput().set_htmlText("" + htmlText);
	textarea.getTextInput().invalidateComponent("measure");
	if(!(textarea._layout == null || textarea._layoutLocked == true)) {
		textarea.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextArea_Events = function(textarea) {
	haxe_ui_events_Events.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.Events"] = haxe_ui_components__$TextArea_Events;
haxe_ui_components__$TextArea_Events.__name__ = "haxe.ui.components._TextArea.Events";
haxe_ui_components__$TextArea_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextArea_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textarea: null
	,register: function() {
		var _gthis = this;
		if(this._textarea.getTextInput().get_data().onChangedCallback == null) {
			this._textarea.getTextInput().set_multiline(true);
			this._textarea.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textarea.classes.indexOf(":empty") != -1 == false) {
					_gthis._textarea.set_text(_gthis._textarea.getTextInput().get_text());
					if(_gthis._textarea.get_style().autoHeight == true) {
						var maxHeight = _gthis._textarea.get_style().maxHeight;
						var newHeight = _gthis._textarea.getTextInput().get_textHeight() + 8;
						if(maxHeight == null || newHeight < maxHeight) {
							_gthis._textarea.set_height(newHeight);
						}
					}
					(js_Boot.__cast(_gthis._textarea._compositeBuilder , haxe_ui_components__$TextArea_TextAreaBuilder)).checkScrolls();
				}
			};
		}
		if(this._textarea.getTextInput().get_data().onScrollCallback == null) {
			this._textarea.getTextInput().get_data().onScrollCallback = function() {
				var hscroll = _gthis._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
				if(hscroll != null) {
					hscroll.set_pos(_gthis._textarea.getTextInput().get_hscrollPos());
				}
				var vscroll = _gthis._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
				if(vscroll != null) {
					vscroll.set_pos(_gthis._textarea.getTextInput().get_vscrollPos());
				}
			};
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onScrollChange)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onScrollChange));
		}
		if(this.hasEvent("mousewheel",$bind(this,this.onMouseWheel)) == false) {
			this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		}
		if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this.hasEvent("focusin",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusin",$bind(this,this.onFocusChange));
		}
		if(this.hasEvent("focusout",$bind(this,this.onFocusChange)) == false) {
			this.registerEvent("focusout",$bind(this,this.onFocusChange));
		}
	}
	,unregister: function() {
		this._textarea.getTextInput().get_data().onChangedCallback = null;
		this._textarea.getTextInput().get_data().onScrollCallback = null;
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onScrollChange));
		}
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseWheel: function(event) {
		if(this._textarea.getTextInput().get_data().vscrollNativeWheel == true) {
			return;
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			var step = 20;
			if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
				step = this._textarea.getTextInput().get_data().vscrollPageStep;
			} else {
				step = Math.ceil((this._textarea.getTextInput().get_textStyle().fontSize + 1) / 10) * 10;
			}
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - step);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + step);
			}
		}
	}
	,onScrollChange: function(event) {
		if(this._textarea.get_style().autoHeight == true) {
			var maxHeight = this._textarea.get_style().maxHeight;
			var newHeight = this._textarea.getTextInput().get_textHeight() + 8;
			if(maxHeight == null || newHeight < maxHeight) {
				this._textarea.set_height(newHeight);
			}
			if(maxHeight != null && newHeight > maxHeight) {
				this._textarea.set_height(maxHeight);
			}
		}
		var hscroll = this._textarea.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._textarea.getTextInput().set_hscrollPos(hscroll.get_pos());
		}
		var vscroll = this._textarea.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._textarea.getTextInput().set_vscrollPos(vscroll.get_pos());
		}
	}
	,onMouseDown: function(event) {
		this._textarea.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textarea.get_focus() == true) {
			this._textarea.getTextInput().focus();
		} else {
			this._textarea.getTextInput().blur();
		}
		haxe_ui_components__$TextArea_TextAreaHelper.validateText(this._textarea,this._textarea.get_text());
	}
	,__class__: haxe_ui_components__$TextArea_Events
});
var haxe_ui_components__$TextArea_TextAreaBuilder = function(textarea) {
	haxe_ui_core_CompositeBuilder.call(this,textarea);
	this._textarea = textarea;
};
$hxClasses["haxe.ui.components._TextArea.TextAreaBuilder"] = haxe_ui_components__$TextArea_TextAreaBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.__name__ = "haxe.ui.components._TextArea.TextAreaBuilder";
haxe_ui_components__$TextArea_TextAreaBuilder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextArea_TextAreaBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextArea_TextAreaBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textarea: null
	,checkScrolls: function() {
		if(this._textarea.get_native() == true) {
			return;
		}
		var textInput = this._textarea.getTextInput();
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(textInput.get_textWidth() - textInput.get_width() > 1) {
			if(hscroll == null) {
				hscroll = this.createHScroll();
			}
			hscroll.set_max(textInput.get_hscrollMax());
			hscroll.set_pos(textInput.get_hscrollPos());
			hscroll.set_pageSize(textInput.get_hscrollPageSize());
		} else if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(textInput.get_textHeight() - textInput.get_height() > 1) {
			if(vscroll == null) {
				vscroll = this.createVScroll();
			}
			vscroll.set_max(textInput.get_vscrollMax());
			vscroll.set_pos(textInput.get_vscrollPos());
			vscroll.set_pageSize(textInput.get_vscrollPageSize());
			if(this._textarea.get_autoScrollToBottom() == true) {
				this._textarea.scrollToBottom();
			}
		} else if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,createHScroll: function() {
		var hscroll = new haxe_ui_components_HorizontalScroll();
		hscroll.set_percentWidth(100);
		hscroll.set_id("textarea-hscroll");
		hscroll.set_allowFocus(false);
		hscroll.set_scriptAccess(false);
		this._component.addComponent(hscroll);
		this._component.registerInternalEvents(null,true);
		return hscroll;
	}
	,createVScroll: function() {
		var vscroll = new haxe_ui_components_VerticalScroll();
		if(this._textarea.getTextInput().get_data().vscrollPageStep != null) {
			vscroll.set_increment(this._textarea.getTextInput().get_data().vscrollPageStep);
		}
		vscroll.set_percentHeight(100);
		vscroll.set_id("textarea-vscroll");
		vscroll.set_allowFocus(false);
		vscroll.set_scriptAccess(false);
		this._component.addComponent(vscroll);
		this._component.registerInternalEvents(null,true);
		return vscroll;
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(this._textarea.hasTextInput() == true) {
			this._textarea.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textarea.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textarea.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textarea.set_htmlText(this._textarea.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextArea_TextAreaBuilder
});
var haxe_ui_components_TextField = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.components.TextField"] = haxe_ui_components_TextField;
haxe_ui_components_TextField.__name__ = "haxe.ui.components.TextField";
haxe_ui_components_TextField.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_components_TextField.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("password",haxe_ui_components__$TextField_PasswordBehaviour);
		this.behaviours.register("maxChars",haxe_ui_components__$TextField_MaxCharsBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("restrictChars",haxe_ui_components__$TextField_RestrictCharsBehaviour);
		this.behaviours.register("placeholder",haxe_ui_components__$TextField_PlaceholderBehaviour);
		this.behaviours.register("text",haxe_ui_components__$TextField_TextBehaviour);
		this.behaviours.register("htmlText",haxe_ui_components__$TextField_HtmlTextBehaviour);
		this.behaviours.register("icon",haxe_ui_components__$TextField_IconBehaviour);
	}
	,get_password: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("password"));
	}
	,set_password: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("password",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"password"));
		return value;
	}
	,get_maxChars: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("maxChars"));
	}
	,set_maxChars: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("maxChars",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"maxChars"));
		return value;
	}
	,get_restrictChars: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("restrictChars"));
	}
	,set_restrictChars: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"restrictChars",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("restrictChars",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"restrictChars"));
		return value;
	}
	,get_placeholder: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("placeholder"));
	}
	,set_placeholder: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"placeholder",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("placeholder",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"placeholder"));
		return value;
	}
	,get_htmlText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("htmlText"));
	}
	,set_htmlText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"htmlText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("htmlText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"htmlText"));
		return value;
	}
	,get_icon: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("icon"));
	}
	,set_icon: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"icon",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("icon",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"icon"));
		return value;
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		c.set_password(this.get_password());
		c.set_maxChars(this.get_maxChars());
		if(this.get_restrictChars() != null) {
			c.set_restrictChars(this.get_restrictChars());
		}
		if(this.get_placeholder() != null) {
			c.set_placeholder(this.get_placeholder());
		}
		if(this.get_htmlText() != null) {
			c.set_htmlText(this.get_htmlText());
		}
		if(this.get_icon() != null) {
			c.set_icon(this.get_icon());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_TextField();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_components__$TextField_Events;
		this._compositeBuilderClass = haxe_ui_components__$TextField_Builder;
		this._defaultLayoutClass = haxe_ui_components__$TextField_TextFieldLayout;
	}
	,__class__: haxe_ui_components_TextField
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_icon:"set_icon",get_icon:"get_icon",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_placeholder:"set_placeholder",get_placeholder:"get_placeholder",set_restrictChars:"set_restrictChars",get_restrictChars:"get_restrictChars",set_maxChars:"set_maxChars",get_maxChars:"get_maxChars",set_password:"set_password",get_password:"get_password"})
});
var haxe_ui_components__$TextField_TextFieldLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._TextField.TextFieldLayout"] = haxe_ui_components__$TextField_TextFieldLayout;
haxe_ui_components__$TextField_TextFieldLayout.__name__ = "haxe.ui.components._TextField.TextFieldLayout";
haxe_ui_components__$TextField_TextFieldLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$TextField_TextFieldLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	iconPosition: null
	,get_iconPosition: function() {
		if(this.get_component().get_style().iconPosition == null) {
			return "left";
		}
		return this.get_component().get_style().iconPosition;
	}
	,repositionChildren: function() {
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		var xpos = this.get_paddingLeft();
		if(icon != null) {
			switch(this.get_iconPosition()) {
			case "left":
				icon.set_left(xpos);
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				xpos += icon.get_componentWidth() + this.get_horizontalSpacing();
				break;
			case "right":
				icon.set_left(this.get_component().get_componentWidth() - icon.get_componentWidth() - this.get_paddingRight());
				icon.set_top(this.get_component().get_componentHeight() / 2 - icon.get_componentHeight() / 2);
				break;
			}
		}
		if(this.get_component().hasTextInput() == true) {
			this.get_component().getTextInput().set_left(xpos);
			this.get_component().getTextInput().set_top(this.get_paddingTop() + this.get_component().get_componentHeight() / 2 - (this.get_component().getTextInput().get_height() + this.get_paddingTop() + this.get_paddingBottom()) / 2);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		if(this.get_component().hasTextInput() == true) {
			var size = this.get_usableSize();
			this.get_component().getTextInput().set_width(size.width);
			this.get_component().getTextInput().set_height(size.height);
		}
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		if(this.get_component().hasTextInput() == true) {
			if(this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight() > size.width) {
				size.width = this.get_component().getTextInput().get_textWidth() + this.get_paddingLeft() + this.get_paddingRight();
			}
			if(this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom() > size.height) {
				size.height = this.get_component().getTextInput().get_textHeight() + this.get_paddingTop() + this.get_paddingBottom();
			}
		}
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var icon = this.get_component().findComponent(null,haxe_ui_components_Image,false);
		if(icon != null) {
			size.width -= icon.get_componentWidth() + this.get_horizontalSpacing();
		}
		return size;
	}
	,__class__: haxe_ui_components__$TextField_TextFieldLayout
	,__properties__: $extend(haxe_ui_layouts_DefaultLayout.prototype.__properties__,{get_iconPosition:"get_iconPosition"})
});
var haxe_ui_components__$TextField_PasswordBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PasswordBehaviour"] = haxe_ui_components__$TextField_PasswordBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.__name__ = "haxe.ui.components._TextField.PasswordBehaviour";
haxe_ui_components__$TextField_PasswordBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PasswordBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	originalValue: null
	,validateData: function() {
		if(this.originalValue == null) {
			this.originalValue = this._value;
		}
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		textfield.getTextInput().set_password(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_components__$TextField_PasswordBehaviour
});
var haxe_ui_components__$TextField_MaxCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.MaxCharsBehaviour"] = haxe_ui_components__$TextField_MaxCharsBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.__name__ = "haxe.ui.components._TextField.MaxCharsBehaviour";
haxe_ui_components__$TextField_MaxCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_MaxCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_MaxCharsBehaviour
});
var haxe_ui_components__$TextField_RestrictCharsBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.RestrictCharsBehaviour"] = haxe_ui_components__$TextField_RestrictCharsBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.__name__ = "haxe.ui.components._TextField.RestrictCharsBehaviour";
haxe_ui_components__$TextField_RestrictCharsBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_RestrictCharsBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	regexp: null
	,validateData: function() {
		var excludeEReg = new EReg("\\^(.-.|.)","gu");
		var excludeChars = "";
		var includeChars = excludeEReg.map(haxe_ui_util_Variant.toString(this._value),function(ereg) {
			excludeChars += ereg.matched(1);
			return "";
		});
		var testRegexpParts = [];
		if(includeChars.length > 0) {
			testRegexpParts.push("[^" + (this._value == null ? "null" : haxe_ui_util_Variant.toString(this._value)) + "]");
		}
		if(excludeChars.length > 0) {
			testRegexpParts.push("[" + excludeChars + "]");
		}
		this.regexp = new EReg("(" + testRegexpParts.join(" | ") + ")","g");
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_RestrictCharsBehaviour
});
var haxe_ui_components__$TextField_PlaceholderBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.PlaceholderBehaviour"] = haxe_ui_components__$TextField_PlaceholderBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.__name__ = "haxe.ui.components._TextField.PlaceholderBehaviour";
haxe_ui_components__$TextField_PlaceholderBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_PlaceholderBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_PlaceholderBehaviour
});
var haxe_ui_components__$TextField_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.TextBehaviour"] = haxe_ui_components__$TextField_TextBehaviour;
haxe_ui_components__$TextField_TextBehaviour.__name__ = "haxe.ui.components._TextField.TextBehaviour";
haxe_ui_components__$TextField_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_text());
		}
	}
	,__class__: haxe_ui_components__$TextField_TextBehaviour
});
var haxe_ui_components__$TextField_HtmlTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.HtmlTextBehaviour"] = haxe_ui_components__$TextField_HtmlTextBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.__name__ = "haxe.ui.components._TextField.HtmlTextBehaviour";
haxe_ui_components__$TextField_HtmlTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_HtmlTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText(textfield,haxe_ui_util_Variant.toString(this._value));
		if(this._value != null && haxe_ui_util_Variant.neq(this._value,haxe_ui_util_Variant.fromString(""))) {
			this._value = haxe_ui_util_Variant.fromString(textfield.getTextInput().get_htmlText());
		}
	}
	,__class__: haxe_ui_components__$TextField_HtmlTextBehaviour
});
var haxe_ui_components__$TextField_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.components._TextField.IconBehaviour"] = haxe_ui_components__$TextField_IconBehaviour;
haxe_ui_components__$TextField_IconBehaviour.__name__ = "haxe.ui.components._TextField.IconBehaviour";
haxe_ui_components__$TextField_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_components__$TextField_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var textfield = js_Boot.__cast(this._component , haxe_ui_components_TextField);
		var icon = textfield.findComponent(null,haxe_ui_components_Image,false);
		if((this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) && icon != null) {
			textfield.removeComponent(icon);
		} else {
			if(icon == null) {
				icon = new haxe_ui_components_Image();
				icon.set_id("textfield-icon");
				icon.addClass("icon");
				icon.set_scriptAccess(false);
				textfield.addComponentAt(icon,0);
			}
			icon.set_resource(haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this._value)));
		}
	}
	,__class__: haxe_ui_components__$TextField_IconBehaviour
});
var haxe_ui_components__$TextField_TextFieldHelper = function() { };
$hxClasses["haxe.ui.components._TextField.TextFieldHelper"] = haxe_ui_components__$TextField_TextFieldHelper;
haxe_ui_components__$TextField_TextFieldHelper.__name__ = "haxe.ui.components._TextField.TextFieldHelper";
haxe_ui_components__$TextField_TextFieldHelper.validateText = function(textfield,text) {
	if(text == null) {
		text = "";
	}
	var placeholderVisible = text.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && text.length > textfield.get_maxChars() && placeholderVisible == false) {
		text = HxOverrides.substr(text,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		text = text.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(text.length == 0) {
				text = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(text != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			if(text == textfield.get_placeholder()) {
				text = "";
			}
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_text("" + text);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
haxe_ui_components__$TextField_TextFieldHelper.validateHtmlText = function(textfield,htmlText) {
	if(htmlText == null) {
		htmlText = "";
	}
	var placeholderVisible = htmlText.length == 0;
	var password = (js_Boot.__cast(textfield.behaviours.find("password") , haxe_ui_components__$TextField_PasswordBehaviour)).originalValue;
	var regexp = (js_Boot.__cast(textfield.behaviours.find("restrictChars") , haxe_ui_components__$TextField_RestrictCharsBehaviour)).regexp;
	if(textfield.get_maxChars() > 0 && htmlText.length > textfield.get_maxChars() && placeholderVisible == false) {
		htmlText = HxOverrides.substr(htmlText,0,textfield.get_maxChars());
	}
	if(regexp != null) {
		htmlText = htmlText.replace(regexp.r,"");
	}
	if(textfield.get_placeholder() != null) {
		if(textfield.get_focus() == false) {
			if(htmlText.length == 0) {
				htmlText = textfield.get_placeholder();
				textfield.set_password(false);
				textfield.addClass(":empty");
			} else if(htmlText != textfield.get_placeholder()) {
				textfield.set_password(haxe_ui_util_Variant.toBool(password));
				textfield.removeClass(":empty");
			}
		} else {
			textfield.removeClass(":empty");
			if(htmlText == textfield.get_placeholder()) {
				htmlText = "";
			}
			textfield.set_password(haxe_ui_util_Variant.toBool(password));
		}
	} else {
		textfield.set_password(haxe_ui_util_Variant.toBool(password));
		if(placeholderVisible == true) {
			textfield.removeClass(":empty");
		}
	}
	textfield.getTextInput().set_htmlText("" + htmlText);
	if(!(textfield._layout == null || textfield._layoutLocked == true)) {
		textfield.invalidateComponent("layout",false);
	}
};
var haxe_ui_components__$TextField_Events = function(textfield) {
	haxe_ui_events_Events.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Events"] = haxe_ui_components__$TextField_Events;
haxe_ui_components__$TextField_Events.__name__ = "haxe.ui.components._TextField.Events";
haxe_ui_components__$TextField_Events.__super__ = haxe_ui_events_Events;
haxe_ui_components__$TextField_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_textfield: null
	,register: function() {
		var _gthis = this;
		if(this._textfield.getTextInput().get_data().onChangedCallback == null) {
			this._textfield.getTextInput().set_multiline(false);
			this._textfield.getTextInput().get_data().onChangedCallback = function() {
				if(_gthis._textfield.classes.indexOf(":empty") != -1 == false) {
					_gthis._textfield.set_text(_gthis._textfield.getTextInput().get_text());
					_gthis._textfield.dispatch(new haxe_ui_events_UIEvent("change"));
				}
			};
		}
		this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		this.registerEvent("focusin",$bind(this,this.onFocusChange));
		this.registerEvent("focusout",$bind(this,this.onFocusChange));
	}
	,unregister: function() {
		this._textfield.getTextInput().get_data().onChangedCallback = null;
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("focusin",$bind(this,this.onFocusChange));
		this.unregisterEvent("focusout",$bind(this,this.onFocusChange));
	}
	,onMouseDown: function(event) {
		this._textfield.set_focus(true);
	}
	,onFocusChange: function(event) {
		if(this._textfield.get_focus() == true) {
			this._textfield.getTextInput().focus();
		} else {
			this._textfield.getTextInput().blur();
		}
		haxe_ui_components__$TextField_TextFieldHelper.validateText(this._textfield,this._textfield.get_text());
	}
	,__class__: haxe_ui_components__$TextField_Events
});
var haxe_ui_components__$TextField_Builder = function(textfield) {
	haxe_ui_core_CompositeBuilder.call(this,textfield);
	this._textfield = textfield;
};
$hxClasses["haxe.ui.components._TextField.Builder"] = haxe_ui_components__$TextField_Builder;
haxe_ui_components__$TextField_Builder.__name__ = "haxe.ui.components._TextField.Builder";
haxe_ui_components__$TextField_Builder.isHtml = function(v) {
	if(v == null) {
		return false;
	} else {
		return v.indexOf("<font ") != -1;
	}
};
haxe_ui_components__$TextField_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_components__$TextField_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_textfield: null
	,applyStyle: function(style) {
		if(style.icon != null) {
			this._textfield.set_icon(style.icon);
		}
		if(this._textfield.hasTextInput() == true) {
			this._textfield.getTextInput().set_textStyle(style);
			var tmp;
			if((style.contentType == "auto" || style.contentType == "html") && this._textfield.getTextInput().get_supportsHtml()) {
				var v = Std.string(this._textfield.get_text());
				tmp = v == null ? false : v.indexOf("<font ") != -1;
			} else {
				tmp = false;
			}
			if(tmp) {
				this._textfield.set_htmlText(this._textfield.get_text());
			}
		}
	}
	,__class__: haxe_ui_components__$TextField_Builder
});
var haxe_ui_components_VerticalScroll = function() {
	haxe_ui_components_Scroll.call(this);
};
$hxClasses["haxe.ui.components.VerticalScroll"] = haxe_ui_components_VerticalScroll;
haxe_ui_components_VerticalScroll.__name__ = "haxe.ui.components.VerticalScroll";
haxe_ui_components_VerticalScroll.__super__ = haxe_ui_components_Scroll;
haxe_ui_components_VerticalScroll.prototype = $extend(haxe_ui_components_Scroll.prototype,{
	registerBehaviours: function() {
		haxe_ui_components_Scroll.prototype.registerBehaviours.call(this);
		this.behaviours.register("posFromCoord",haxe_ui_components__$VerticalScroll_PosFromCoord);
		this.behaviours.register("applyPageFromCoord",haxe_ui_components__$VerticalScroll_ApplyPageFromCoord);
	}
	,createChildren: function() {
		haxe_ui_components_Scroll.prototype.createChildren.call(this);
		if(this.get_componentHeight() <= 0) {
			this.set_componentHeight(150);
		}
	}
	,createDefaults: function() {
		haxe_ui_components_Scroll.prototype.createDefaults.call(this);
		this._defaultLayoutClass = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
	}
	,cloneComponent: function() {
		var c = haxe_ui_components_Scroll.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_components_VerticalScroll();
	}
	,__class__: haxe_ui_components_VerticalScroll
});
var haxe_ui_components__$VerticalScroll_PosFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.PosFromCoord"] = haxe_ui_components__$VerticalScroll_PosFromCoord;
haxe_ui_components__$VerticalScroll_PosFromCoord.__name__ = "haxe.ui.components._VerticalScroll.PosFromCoord";
haxe_ui_components__$VerticalScroll_PosFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_PosFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var deinc = this._component.findComponent("scroll-deinc-button");
		var thumb = this._component.findComponent("scroll-thumb-button");
		var ypos = p.y;
		var minY = 0;
		if(deinc != null && deinc.get_hidden() == false) {
			minY = deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		var maxY = scroll.get_layout().get_usableHeight() - thumb.get_height();
		if(deinc != null && deinc.get_hidden() == false) {
			maxY += deinc.get_height() + scroll.get_layout().get_verticalSpacing();
		}
		if(ypos < minY) {
			ypos = minY;
		} else if(ypos > maxY) {
			ypos = maxY;
		}
		var ucy = scroll.get_layout().get_usableHeight();
		ucy -= thumb.get_height();
		var m = scroll.get_max() - scroll.get_min() | 0;
		var v = ypos - minY;
		var value = scroll.get_min() + v / ucy * m;
		return haxe_ui_util_Variant.fromFloat(value);
	}
	,__class__: haxe_ui_components__$VerticalScroll_PosFromCoord
});
var haxe_ui_components__$VerticalScroll_ApplyPageFromCoord = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.components._VerticalScroll.ApplyPageFromCoord"] = haxe_ui_components__$VerticalScroll_ApplyPageFromCoord;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__name__ = "haxe.ui.components._VerticalScroll.ApplyPageFromCoord";
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_components__$VerticalScroll_ApplyPageFromCoord.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(pos) {
		var p = js_Boot.__cast(pos , haxe_ui_geom_Point);
		var scroll = js_Boot.__cast(this._component , haxe_ui_components_Scroll);
		var thumb = this._component.findComponent("scroll-thumb-button");
		if(p.y < thumb.get_screenTop()) {
			scroll.set_pos(scroll.get_pos() - scroll.get_pageSize());
		} else if(p.y > thumb.get_screenTop() + thumb.get_height()) {
			scroll.set_pos(scroll.get_pos() + scroll.get_pageSize());
		}
		return null;
	}
	,__class__: haxe_ui_components__$VerticalScroll_ApplyPageFromCoord
});
var haxe_ui_components__$VerticalScroll_VerticalScrollLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.components._VerticalScroll.VerticalScrollLayout"] = haxe_ui_components__$VerticalScroll_VerticalScrollLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__name__ = "haxe.ui.components._VerticalScroll.VerticalScrollLayout";
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_components__$VerticalScroll_VerticalScrollLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var ucy = this.get_usableHeight();
			var thumbHeight = scroll.get_pageSize() / m * ucy;
			if(thumbHeight < this.get_innerWidth()) {
				thumbHeight = this.get_innerWidth();
			} else if(thumbHeight > ucy) {
				thumbHeight = ucy;
			}
			if(thumbHeight > 0 && isNaN(thumbHeight) == false) {
				thumb.set_height(thumbHeight);
			}
		}
	}
	,repositionChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.repositionChildren.call(this);
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(inc != null && this.hidden(inc) == false) {
			inc.set_top(this.get_component().get_height() - inc.get_height() - this.get_paddingBottom());
		}
		var scroll = js_Boot.__cast(this.get_component() , haxe_ui_components_Scroll);
		var thumb = this.get_component().findComponent("scroll-thumb-button");
		if(thumb != null) {
			var m = scroll.get_max() - scroll.get_min();
			var u = this.get_usableHeight();
			u -= thumb.get_height();
			var y = (scroll.get_pos() - scroll.get_min()) / m * u;
			y += this.get_paddingTop();
			if(deinc != null && this.hidden(deinc) == false) {
				y += deinc.get_height() + this.get_verticalSpacing();
			}
			thumb.set_left(Math.round(thumb.get_left()));
			thumb.set_top(y);
		}
	}
	,get_usableHeight: function() {
		var ucy = this.get_innerHeight();
		var deinc = this.get_component().findComponent("scroll-deinc-button");
		var inc = this.get_component().findComponent("scroll-inc-button");
		if(deinc != null && this.hidden(deinc) == false) {
			ucy -= deinc.get_height() + this.get_verticalSpacing();
		}
		if(inc != null && this.hidden(inc) == false) {
			ucy -= inc.get_height() + this.get_verticalSpacing();
		}
		return ucy;
	}
	,__class__: haxe_ui_components__$VerticalScroll_VerticalScrollLayout
});
var haxe_ui_containers_ButtonBar = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.ButtonBar"] = haxe_ui_containers_ButtonBar;
haxe_ui_containers_ButtonBar.__name__ = "haxe.ui.containers.ButtonBar";
haxe_ui_containers_ButtonBar.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_ButtonBar.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_ButtonBar.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("toggle",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("allowUnselection",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ButtonBar_SelectedIndex);
		this.behaviours.register("selectedButton",haxe_ui_containers__$ButtonBar_SelectedButton);
	}
	,get_toggle: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("toggle"));
	}
	,set_toggle: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("toggle",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"toggle"));
		return value;
	}
	,get_allowUnselection: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowUnselection"));
	}
	,set_allowUnselection: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowUnselection",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"allowUnselection"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedButton: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedButton"));
	}
	,set_selectedButton: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedButton",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedButton"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		this.set_selectedIndex(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_toggle(this.get_toggle());
		c.set_allowUnselection(this.get_allowUnselection());
		c.set_selectedIndex(this.get_selectedIndex());
		if(this.get_selectedButton() != null) {
			c.set_selectedButton(this.get_selectedButton());
		}
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ButtonBar();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$ButtonBar_Events;
		this._compositeBuilderClass = haxe_ui_containers__$ButtonBar_Builder;
	}
	,__class__: haxe_ui_containers_ButtonBar
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedButton:"set_selectedButton",get_selectedButton:"get_selectedButton",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_allowUnselection:"set_allowUnselection",get_allowUnselection:"get_allowUnselection",set_toggle:"set_toggle",get_toggle:"get_toggle"})
});
var haxe_ui_containers__$ButtonBar_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ButtonBar.SelectedIndex"] = haxe_ui_containers__$ButtonBar_SelectedIndex;
haxe_ui_containers__$ButtonBar_SelectedIndex.__name__ = "haxe.ui.containers._ButtonBar.SelectedIndex";
haxe_ui_containers__$ButtonBar_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ButtonBar_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ButtonBar_Builder);
		var currentButton = builder._currentButton;
		var button = js_Boot.__cast(this._component.getComponentAt(haxe_ui_util_Variant.toInt(this._value)) , haxe_ui_components_Button);
		if(currentButton == button) {
			return;
		}
		if(currentButton != null && haxe_ui_util_Variant.toInt(this._value) < this._component.get_numComponents()) {
			builder._currentButton.set_selected(false);
		}
		if(button != null) {
			button.set_selected(true);
			builder._currentButton = button;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$ButtonBar_SelectedIndex
});
var haxe_ui_containers__$ButtonBar_SelectedButton = function(bar) {
	haxe_ui_behaviours_DataBehaviour.call(this,bar);
	this._bar = bar;
};
$hxClasses["haxe.ui.containers._ButtonBar.SelectedButton"] = haxe_ui_containers__$ButtonBar_SelectedButton;
haxe_ui_containers__$ButtonBar_SelectedButton.__name__ = "haxe.ui.containers._ButtonBar.SelectedButton";
haxe_ui_containers__$ButtonBar_SelectedButton.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ButtonBar_SelectedButton.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_bar: null
	,get: function() {
		var _g = 0;
		var _this = this._component;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_components_Button) && (js_Boot.__cast(child , haxe_ui_components_Button)).get_selected() == true) {
				return haxe_ui_util_Variant.fromComponent(child);
			}
		}
		return null;
	}
	,set: function(value) {
		this._bar.set_selectedIndex(this._component.getComponentIndex(haxe_ui_util_Variant.toComponent(value)));
	}
	,__class__: haxe_ui_containers__$ButtonBar_SelectedButton
});
var haxe_ui_containers__$ButtonBar_Events = function(bar) {
	haxe_ui_events_Events.call(this,bar);
	this._bar = bar;
};
$hxClasses["haxe.ui.containers._ButtonBar.Events"] = haxe_ui_containers__$ButtonBar_Events;
haxe_ui_containers__$ButtonBar_Events.__name__ = "haxe.ui.containers._ButtonBar.Events";
haxe_ui_containers__$ButtonBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$ButtonBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_bar: null
	,register: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			if(button.hasEvent("change",$bind(this,this.onButtonChanged)) == false) {
				button.registerEvent("change",$bind(this,this.onButtonChanged));
			}
		}
	}
	,unregister: function() {
		var buttons = this._target.findComponents(null,haxe_ui_components_Button,1);
		var _g = 0;
		while(_g < buttons.length) {
			var button = buttons[_g];
			++_g;
			button.unregisterEvent("change",$bind(this,this.onButtonChanged));
		}
	}
	,onButtonChanged: function(event) {
		var button = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = this._bar.getComponentIndex(button);
		if(this._bar.get_allowUnselection() == false && index == this._bar.get_selectedIndex() && button.get_selected() == false) {
			button.set_selected(true);
			return;
		}
		if(button.get_selected() == true) {
			this._bar.set_selectedIndex(index);
		}
	}
	,__class__: haxe_ui_containers__$ButtonBar_Events
});
var haxe_ui_containers__$ButtonBar_Builder = function(bar) {
	haxe_ui_core_CompositeBuilder.call(this,bar);
	this._bar = bar;
};
$hxClasses["haxe.ui.containers._ButtonBar.Builder"] = haxe_ui_containers__$ButtonBar_Builder;
haxe_ui_containers__$ButtonBar_Builder.__name__ = "haxe.ui.containers._ButtonBar.Builder";
haxe_ui_containers__$ButtonBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$ButtonBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_bar: null
	,_currentButton: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_Button)) {
			(js_Boot.__cast(child , haxe_ui_components_Button)).set_toggle(this._bar.get_toggle());
		}
		this._component.registerInternalEvents(null,true);
		return null;
	}
	,onReady: function() {
		this._component.registerInternalEvents(null,true);
	}
	,applyStyle: function(style) {
		if(style.direction != null) {
			var direction = style.direction;
			if(direction == "vertical") {
				this._component.swapClass("vertical-button-bar","horizontal-button-bar");
			} else if(direction == "horizontal") {
				this._component.swapClass("horizontal-button-bar","vertical-button-bar");
			}
			this._component.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(direction));
		}
	}
	,__class__: haxe_ui_containers__$ButtonBar_Builder
});
var haxe_ui_containers_CalendarView = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.CalendarView"] = haxe_ui_containers_CalendarView;
haxe_ui_containers_CalendarView.__name__ = "haxe.ui.containers.CalendarView";
haxe_ui_containers_CalendarView.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_CalendarView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$CalendarView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$CalendarView_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedDate",haxe_ui_containers__$CalendarView_SelectedDateBehaviour);
	}
	,get_selectedDate: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDate(this.behaviours.get("selectedDate"));
	}
	,set_selectedDate: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedDate",haxe_ui_util_Variant.fromDate(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedDate"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_CalendarView();
	}
	,__class__: haxe_ui_containers_CalendarView
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_selectedDate:"set_selectedDate",get_selectedDate:"get_selectedDate"})
});
var haxe_ui_containers__$CalendarView_SelectedDateBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._CalendarView.SelectedDateBehaviour"] = haxe_ui_containers__$CalendarView_SelectedDateBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__name__ = "haxe.ui.containers._CalendarView.SelectedDateBehaviour";
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$CalendarView_SelectedDateBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		return haxe_ui_util_Variant.fromDate(this._component.findComponent(null,haxe_ui_components_Calendar).get_selectedDate());
	}
	,set: function(value) {
		this._component.findComponent(null,haxe_ui_components_Calendar).set_selectedDate(haxe_ui_util_Variant.toDate(value));
	}
	,__class__: haxe_ui_containers__$CalendarView_SelectedDateBehaviour
});
var haxe_ui_containers__$CalendarView_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers._CalendarView.Events"] = haxe_ui_containers__$CalendarView_Events;
haxe_ui_containers__$CalendarView_Events.__name__ = "haxe.ui.containers._CalendarView.Events";
haxe_ui_containers__$CalendarView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$CalendarView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		var button = this._target.findComponent("prev-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onPrevMonth));
		}
		var button = this._target.findComponent("next-month");
		if(button != null && button.hasEvent("click") == false) {
			button.registerEvent("click",$bind(this,this.onNextMonth));
		}
		var stepper = this._target.findComponent("current-year");
		if(stepper != null && stepper.hasEvent("change") == false) {
			stepper.registerEvent("change",$bind(this,this.onYearChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("datechange",$bind(this,this.onDateChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("datechange",$bind(this,this.onDateChange));
		}
		if(this._target.findComponent(null,haxe_ui_components_Calendar).hasEvent("change",$bind(this,this.onCalendarChange)) == false) {
			this._target.findComponent(null,haxe_ui_components_Calendar).registerEvent("change",$bind(this,this.onCalendarChange));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
	}
	,onPrevMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
	}
	,onNextMonth: function(event) {
		this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
	}
	,onYearChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		if(stepper.get_pos() > calendar.get_date().getFullYear()) {
			calendar.nextYear();
		} else if(stepper.get_pos() < calendar.get_date().getFullYear()) {
			calendar.previousYear();
		}
	}
	,onDateChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var monthName = haxe_ui_containers_CalendarView.MONTH_NAMES[calendar.get_date().getMonth()];
		this._target.findComponent("current-month",haxe_ui_components_Label).set_text(monthName + "  " + calendar.get_date().getFullYear());
	}
	,onCalendarChange: function(event) {
		var calendar = this._target.findComponent(null,haxe_ui_components_Calendar);
		var stepper = this._target.findComponent("current-year");
		stepper.set_pos(calendar.get_selectedDate().getFullYear());
		this._target.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,onMouseWheel: function(event) {
		if(event.delta >= 1) {
			this._target.findComponent(null,haxe_ui_components_Calendar).nextMonth();
		} else {
			this._target.findComponent(null,haxe_ui_components_Calendar).previousMonth();
		}
	}
	,__class__: haxe_ui_containers__$CalendarView_Events
});
var haxe_ui_containers__$CalendarView_Builder = function(calendarView) {
	haxe_ui_core_CompositeBuilder.call(this,calendarView);
	this._calendarView = calendarView;
};
$hxClasses["haxe.ui.containers._CalendarView.Builder"] = haxe_ui_containers__$CalendarView_Builder;
haxe_ui_containers__$CalendarView_Builder.__name__ = "haxe.ui.containers._CalendarView.Builder";
haxe_ui_containers__$CalendarView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$CalendarView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_calendarView: null
	,create: function() {
		var box = new haxe_ui_containers_Box();
		box.set_percentWidth(100);
		var button = new haxe_ui_components_Button();
		button.set_id("prev-month");
		box.addComponent(button);
		var hbox = new haxe_ui_containers_HBox();
		hbox.set_horizontalAlign("center");
		hbox.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("current-month");
		var now = new Date();
		label.set_text(haxe_ui_containers_CalendarView.MONTH_NAMES[now.getMonth()] + "  " + now.getFullYear());
		hbox.addComponent(label);
		var stepper = new haxe_ui_components_Stepper();
		stepper.set_id("current-year");
		stepper.set_min(0);
		stepper.set_max(now.getFullYear() + 1000);
		stepper.set_pos(now.getFullYear());
		stepper.set_repeater(false);
		hbox.addComponent(stepper);
		box.addComponent(hbox);
		var button = new haxe_ui_components_Button();
		button.set_id("next-month");
		button.set_horizontalAlign("right");
		box.addComponent(button);
		this._calendarView.addComponent(box);
		var calendar = new haxe_ui_components_Calendar();
		this._calendarView.addComponent(calendar);
	}
	,__class__: haxe_ui_containers__$CalendarView_Builder
});
var haxe_ui_containers_Card = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.Card"] = haxe_ui_containers_Card;
haxe_ui_containers_Card.__name__ = "haxe.ui.containers.Card";
haxe_ui_containers_Card.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_Card.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Card_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers__$Card_TextBehaviour);
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Card();
	}
	,__class__: haxe_ui_containers_Card
});
var haxe_ui_containers__$Card_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Card.TextBehaviour"] = haxe_ui_containers__$Card_TextBehaviour;
haxe_ui_containers__$Card_TextBehaviour.__name__ = "haxe.ui.containers._Card.TextBehaviour";
haxe_ui_containers__$Card_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Card_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Card_Builder);
		builder.getTitleLabel().set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$Card_TextBehaviour
});
var haxe_ui_containers__$Card_Builder = function(card) {
	haxe_ui_core_CompositeBuilder.call(this,card);
	this._card = card;
};
$hxClasses["haxe.ui.containers._Card.Builder"] = haxe_ui_containers__$Card_Builder;
haxe_ui_containers__$Card_Builder.__name__ = "haxe.ui.containers._Card.Builder";
haxe_ui_containers__$Card_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Card_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_card: null
	,getTitleLabel: function() {
		var titleContainer = this.getTitleContainer();
		var titleLabel = titleContainer.findComponent("card-title-label",haxe_ui_components_Label);
		if(titleLabel == null) {
			var hbox = titleContainer.findComponent("card-title-box",haxe_ui_containers_HBox);
			if(hbox == null) {
				hbox = new haxe_ui_containers_HBox();
				hbox.addClass("card-title-box");
				hbox.set_id("card-title-box");
				hbox.set_scriptAccess(false);
				titleContainer.addComponent(hbox);
			}
			titleLabel = new haxe_ui_components_Label();
			titleLabel.addClass("card-title-label");
			titleLabel.set_id("card-title-label");
			titleLabel.set_scriptAccess(false);
			hbox.addComponentAt(titleLabel,0);
			var line = titleContainer.findComponent("card-title-line",haxe_ui_core_Component);
			if(line == null) {
				line = new haxe_ui_core_Component();
				line.set_id("card-title-line");
				line.addClass("card-title-line");
				line.set_scriptAccess(false);
				titleContainer.addComponent(line);
			}
		}
		return titleLabel;
	}
	,getTitleContainer: function() {
		var titleContainer = this._component.findComponent("card-title-container",haxe_ui_containers_VBox);
		if(titleContainer == null) {
			titleContainer = new haxe_ui_containers_VBox();
			titleContainer.addClass("card-title-container");
			titleContainer.set_id("card-title-container");
			titleContainer.set_scriptAccess(false);
			this._card.addComponentAt(titleContainer,0);
		}
		return titleContainer;
	}
	,__class__: haxe_ui_containers__$Card_Builder
});
var haxe_ui_containers_Frame = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Frame"] = haxe_ui_containers_Frame;
haxe_ui_containers_Frame.__name__ = "haxe.ui.containers.Frame";
haxe_ui_containers_Frame.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Frame.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers__$Frame_TextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers__$Frame_IconBehaviour);
	}
	,get_value: function() {
		return this.get_text();
	}
	,set_value: function(value) {
		this.set_text(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Frame();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Frame_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$Frame_Layout;
	}
	,__class__: haxe_ui_containers_Frame
});
var haxe_ui_containers__$Frame_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Frame.TextBehaviour"] = haxe_ui_containers__$Frame_TextBehaviour;
haxe_ui_containers__$Frame_TextBehaviour.__name__ = "haxe.ui.containers._Frame.TextBehaviour";
haxe_ui_containers__$Frame_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Frame_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent(null,haxe_ui_components_Label,false);
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$Frame_TextBehaviour
});
var haxe_ui_containers__$Frame_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Frame.IconBehaviour"] = haxe_ui_containers__$Frame_IconBehaviour;
haxe_ui_containers__$Frame_IconBehaviour.__name__ = "haxe.ui.containers._Frame.IconBehaviour";
haxe_ui_containers__$Frame_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Frame_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var icon = this._component.findComponent("frame-icon",null,false);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.addClass("frame-icon");
			icon.set_id("frame-icon");
			icon.set_scriptAccess(false);
			icon.set_includeInLayout(false);
			this._component.addComponent(icon);
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_containers__$Frame_IconBehaviour
});
var haxe_ui_containers__$Frame_Builder = function(frame) {
	haxe_ui_core_CompositeBuilder.call(this,frame);
	this._frame = frame;
};
$hxClasses["haxe.ui.containers._Frame.Builder"] = haxe_ui_containers__$Frame_Builder;
haxe_ui_containers__$Frame_Builder.__name__ = "haxe.ui.containers._Frame.Builder";
haxe_ui_containers__$Frame_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Frame_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_frame: null
	,_contents: null
	,_label: null
	,create: function() {
		this._contents = new haxe_ui_containers_Box();
		this._contents.set_id("frame-contents");
		this._contents.addClass("frame-contents");
		this._frame.addComponent(this._contents);
		this._label = new haxe_ui_components_Label();
		this._label.set_text("My Frame");
		this._label.set_id("frame-title");
		this._label.addClass("frame-title");
		this._label.set_includeInLayout(false);
		this._frame.addComponent(this._label);
		var line = new haxe_ui_core_Component();
		line.set_id("frame-left-line");
		line.addClass("frame-left-line");
		line.set_includeInLayout(false);
		this._frame.addComponent(line);
		var line = new haxe_ui_core_Component();
		line.set_id("frame-right-line");
		line.addClass("frame-right-line");
		line.set_includeInLayout(false);
		this._frame.addComponent(line);
	}
	,addComponent: function(child) {
		if(child.get_id() != "frame-contents" && child.get_id() != "frame-title" && child.get_id() != "frame-icon" && child.get_id() != "frame-left-line" && child.get_id() != "frame-right-line") {
			return this._contents.addComponent(child);
		}
		return haxe_ui_core_CompositeBuilder.prototype.addComponent.call(this,child);
	}
	,__class__: haxe_ui_containers__$Frame_Builder
});
var haxe_ui_containers__$Frame_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers._Frame.Layout"] = haxe_ui_containers__$Frame_Layout;
haxe_ui_containers__$Frame_Layout.__name__ = "haxe.ui.containers._Frame.Layout";
haxe_ui_containers__$Frame_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers__$Frame_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	resizeChildren: function() {
		var contents = this.findComponent("frame-contents",haxe_ui_containers_Box,false);
		var label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		var icon = this.findComponent("frame-icon",haxe_ui_components_Image,false);
		var line1 = this.findComponent("frame-left-line",haxe_ui_core_Component,false);
		var line2 = this.findComponent("frame-right-line",haxe_ui_core_Component,false);
		if(this._component.get_autoWidth() == false) {
			contents.set_width(this._component.get_width());
		}
		if(this._component.get_autoHeight() == false) {
			contents.set_height(this._component.get_height() - label.get_height() / 2);
		}
		var offset = 2;
		line1.set_width(this.get_paddingLeft() - offset);
		var cx = label.get_width();
		if(icon != null) {
			cx += icon.get_width() + this.get_horizontalSpacing();
		}
		line2.set_width(this._component.get_width() - (this.get_paddingLeft() + cx) - offset);
	}
	,repositionChildren: function() {
		var contents = this.findComponent("frame-contents",haxe_ui_containers_Box,false);
		var label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		var icon = this.findComponent("frame-icon",haxe_ui_components_Image,false);
		var line1 = this.findComponent("frame-left-line",haxe_ui_core_Component,false);
		var line2 = this.findComponent("frame-right-line",haxe_ui_core_Component,false);
		contents.set_top(this._component.get_height() - contents.get_height());
		var offset = 2;
		var x = this.get_paddingLeft();
		if(icon != null) {
			icon.set_top(label.get_height() / 2 - icon.get_height() / 2 - 1);
			icon.set_left(this.get_paddingLeft());
			x += icon.get_width() + this.get_horizontalSpacing();
		}
		label.set_left(x);
		line1.set_top(contents.get_top());
		line2.set_left(this._component.get_width() - line2.get_width());
		line2.set_top(contents.get_top());
	}
	,calcAutoSize: function(exclusions) {
		var label = this.findComponent("frame-title",haxe_ui_components_Label,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,exclusions);
		size.height += label.get_height() / 2;
		size.width -= this.get_paddingLeft();
		return size;
	}
	,__class__: haxe_ui_containers__$Frame_Layout
});
var haxe_ui_containers_Header = function() {
	haxe_ui_containers_HBox.call(this);
	this.set_layout(new haxe_ui_containers__$Header_Layout());
};
$hxClasses["haxe.ui.containers.Header"] = haxe_ui_containers_Header;
haxe_ui_containers_Header.__name__ = "haxe.ui.containers.Header";
haxe_ui_containers_Header.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_Header.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_containers__$Header_Layout;
		this._compositeBuilderClass = haxe_ui_containers__$Header_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Header();
	}
	,__class__: haxe_ui_containers_Header
});
var haxe_ui_containers__$Header_Builder = function(header) {
	haxe_ui_core_CompositeBuilder.call(this,header);
	this._header = header;
};
$hxClasses["haxe.ui.containers._Header.Builder"] = haxe_ui_containers__$Header_Builder;
haxe_ui_containers__$Header_Builder.__name__ = "haxe.ui.containers._Header.Builder";
haxe_ui_containers__$Header_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Header_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_header: null
	,addComponent: function(child) {
		this.addEventListeners(child);
		return null;
	}
	,addComponentAt: function(child,index) {
		this.addEventListeners(child);
		return null;
	}
	,addEventListeners: function(c) {
		if(!((c) instanceof haxe_ui_components_Column)) {
			return;
		}
		var column = js_Boot.__cast(c , haxe_ui_components_Column);
		column.registerEvent("sortchanged",$bind(this,this.onSortChanged));
	}
	,onSortChanged: function(e) {
		var _g = 0;
		var _this = this._header;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(e.target == c) {
				this._header.dispatch(e);
			} else {
				(js_Boot.__cast(c , haxe_ui_components_Column)).set_sortDirection(null);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Builder
});
var haxe_ui_containers__$Header_Layout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.containers._Header.Layout"] = haxe_ui_containers__$Header_Layout;
haxe_ui_containers__$Header_Layout.__name__ = "haxe.ui.containers._Header.Layout";
haxe_ui_containers__$Header_Layout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_containers__$Header_Layout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
		haxe_ui_layouts_HorizontalLayout.prototype.resizeChildren.call(this);
		var max = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_height() > max) {
				max = child.get_height();
			}
		}
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_text() == null || child.get_text().length == 0 || child.get_height() < max) {
				child.set_height(max);
			}
		}
	}
	,__class__: haxe_ui_containers__$Header_Layout
});
var haxe_ui_containers_Splitter = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Splitter"] = haxe_ui_containers_Splitter;
haxe_ui_containers_Splitter.__name__ = "haxe.ui.containers.Splitter";
haxe_ui_containers_Splitter.__interfaces__ = [haxe_ui_core_IDirectionalComponent];
haxe_ui_containers_Splitter.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Splitter.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Splitter();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_SplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers_SplitterBuilder;
	}
	,__class__: haxe_ui_containers_Splitter
});
var haxe_ui_containers_HorizontalSplitter = function() {
	haxe_ui_containers_Splitter.call(this);
	this.set_layoutName("horizontal");
};
$hxClasses["haxe.ui.containers.HorizontalSplitter"] = haxe_ui_containers_HorizontalSplitter;
haxe_ui_containers_HorizontalSplitter.__name__ = "haxe.ui.containers.HorizontalSplitter";
haxe_ui_containers_HorizontalSplitter.__super__ = haxe_ui_containers_Splitter;
haxe_ui_containers_HorizontalSplitter.prototype = $extend(haxe_ui_containers_Splitter.prototype,{
	registerComposite: function() {
		haxe_ui_containers_Splitter.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Splitter.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Splitter.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_HorizontalSplitter();
	}
	,__class__: haxe_ui_containers_HorizontalSplitter
});
var haxe_ui_containers_SplitterEvents = function(splitter) {
	this._currentOffset = null;
	this._currentGripper = null;
	haxe_ui_events_Events.call(this,splitter);
	this._splitter = splitter;
};
$hxClasses["haxe.ui.containers.SplitterEvents"] = haxe_ui_containers_SplitterEvents;
haxe_ui_containers_SplitterEvents.__name__ = "haxe.ui.containers.SplitterEvents";
haxe_ui_containers_SplitterEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_SplitterEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_splitter: null
	,register: function() {
		var builder = js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder);
		var grippers = this._splitter.findComponents(builder.getSplitterClass(),haxe_ui_core_Component,1);
		var _g = 0;
		while(_g < grippers.length) {
			var g = grippers[_g];
			++_g;
			g.registerEvent("mousedown",$bind(this,this.onGripperMouseDown));
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._splitter._compositeBuilder , haxe_ui_containers_SplitterBuilder);
		var grippers = this._splitter.findComponents(builder.getSplitterClass(),haxe_ui_core_Component,1);
		var _g = 0;
		while(_g < grippers.length) {
			var g = grippers[_g];
			++_g;
			g.unregisterEvent("mousedown",$bind(this,this.onGripperMouseDown));
		}
	}
	,_currentGripper: null
	,_currentOffset: null
	,onGripperMouseDown: function(event) {
		this._currentGripper = js_Boot.__cast(event.target , haxe_ui_containers__$Splitter_SizerGripper);
		this._currentOffset = new haxe_ui_geom_Point(event.screenX,event.screenY);
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
	}
	,onScreenMouseMove: function(event) {
		this._currentGripper.addClass(":hover");
		var index = this._splitter.getComponentIndex(this._currentGripper);
		var prev = this._splitter.getComponentAt(index - 1);
		var next = this._splitter.getComponentAt(index + 1);
		this.handleResize(prev,next,event);
		this._currentOffset = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,handleResize: function(prev,next,event) {
	}
	,onScreenMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		window.document.body.style.cursor = null;
	}
	,__class__: haxe_ui_containers_SplitterEvents
});
var haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents = function(splitter) {
	haxe_ui_containers_SplitterEvents.call(this,splitter);
};
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterEvents";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents.prototype = $extend(haxe_ui_containers_SplitterEvents.prototype,{
	onGripperMouseDown: function(event) {
		haxe_ui_containers_SplitterEvents.prototype.onGripperMouseDown.call(this,event);
		window.document.body.style.cursor = "col-resize";
	}
	,handleResize: function(prev,next,event) {
		var delta = event.screenX - this._currentOffset.x;
		var prevCX = prev.set_width(prev.get_width() + delta);
		var nextCX = next.set_width(next.get_width() - delta);
		var ucx = this._splitter.get_layout().get_usableWidth();
		if(prevCX <= 0 || nextCX <= 0) {
			return;
		}
		if(prev.get_percentWidth() != null) {
			prev.set_percentWidth(prevCX / ucx * 100);
		} else {
			prev.set_width(prevCX);
		}
		if(next.get_percentWidth() != null) {
			next.set_percentWidth(nextCX / ucx * 100);
		} else {
			next.set_width(nextCX);
		}
	}
	,__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterEvents
});
var haxe_ui_containers_SplitterBuilder = function(splitter) {
	haxe_ui_core_CompositeBuilder.call(this,splitter);
	this._splitter = splitter;
};
$hxClasses["haxe.ui.containers.SplitterBuilder"] = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers_SplitterBuilder.__name__ = "haxe.ui.containers.SplitterBuilder";
haxe_ui_containers_SplitterBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_SplitterBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_splitter: null
	,addComponent: function(child) {
		var tmp;
		var _this = this._splitter;
		if((_this._children == null ? [] : _this._children).length > 0) {
			var name = this.getSplitterClass();
			tmp = child.classes.indexOf(name) != -1 == false;
		} else {
			tmp = false;
		}
		if(tmp) {
			var gripper = new haxe_ui_containers__$Splitter_SizerGripper();
			gripper.set_id(this.getSplitterClass());
			gripper.addClass(this.getSplitterClass());
			this._splitter.addComponent(gripper);
			this._splitter.registerInternalEvents(null,true);
		}
		var name = this.getSplitterClass();
		if(child.classes.indexOf(name) != -1 == false) {
			child.registerEvent("shown",$bind(this,this.onComponentShown));
			child.registerEvent("hidden",$bind(this,this.onComponentHidden));
		}
		if(child.get_hidden() == true) {
			this.onComponentHidden(null);
		}
		return null;
	}
	,getSplitterClass: function() {
		return "splitter-gripper";
	}
	,onComponentShown: function(e) {
		var _this = this._splitter;
		var children = (_this._children == null ? [] : _this._children).slice();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
		children.reverse();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == true) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.show();
				}
				break;
			}
		}
	}
	,onComponentHidden: function(e) {
		var _this = this._splitter;
		var children = (_this._children == null ? [] : _this._children).slice();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
		children.reverse();
		var _g = 0;
		while(_g < children.length) {
			var c = children[_g];
			++_g;
			if(c.get_hidden() == false) {
				if(((c) instanceof haxe_ui_containers__$Splitter_SizerGripper)) {
					c.hide();
				}
				break;
			}
		}
	}
	,__class__: haxe_ui_containers_SplitterBuilder
});
var haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder = function(splitter) {
	haxe_ui_containers_SplitterBuilder.call(this,splitter);
};
$hxClasses["haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder"] = haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__name__ = "haxe.ui.containers._HorizontalSplitter.HorizontalSplitterBuilder";
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder.prototype = $extend(haxe_ui_containers_SplitterBuilder.prototype,{
	getSplitterClass: function() {
		return "horizontal-splitter-gripper";
	}
	,__class__: haxe_ui_containers__$HorizontalSplitter_HorizontalSplitterBuilder
});
var haxe_ui_containers_IVirtualContainer = function() { };
$hxClasses["haxe.ui.containers.IVirtualContainer"] = haxe_ui_containers_IVirtualContainer;
haxe_ui_containers_IVirtualContainer.__name__ = "haxe.ui.containers.IVirtualContainer";
haxe_ui_containers_IVirtualContainer.__isInterface__ = true;
haxe_ui_containers_IVirtualContainer.prototype = {
	get_itemWidth: null
	,set_itemWidth: null
	,get_itemHeight: null
	,set_itemHeight: null
	,get_itemCount: null
	,set_itemCount: null
	,get_variableItemSize: null
	,set_variableItemSize: null
	,get_virtual: null
	,set_virtual: null
	,get_hscrollPos: null
	,set_hscrollPos: null
	,get_hscrollMax: null
	,set_hscrollMax: null
	,get_hscrollPageSize: null
	,set_hscrollPageSize: null
	,get_vscrollPos: null
	,set_vscrollPos: null
	,get_vscrollMax: null
	,set_vscrollMax: null
	,get_vscrollPageSize: null
	,set_vscrollPageSize: null
	,get_itemRenderer: null
	,set_itemRenderer: null
	,get_itemRendererClass: null
	,set_itemRendererClass: null
	,__class__: haxe_ui_containers_IVirtualContainer
	,__properties__: {set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_virtual:"set_virtual",get_virtual:"get_virtual",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth"}
};
var haxe_ui_core_IScrollView = function() { };
$hxClasses["haxe.ui.core.IScrollView"] = haxe_ui_core_IScrollView;
haxe_ui_core_IScrollView.__name__ = "haxe.ui.core.IScrollView";
haxe_ui_core_IScrollView.__isInterface__ = true;
haxe_ui_core_IScrollView.prototype = {
	ensureVisible: null
	,__class__: haxe_ui_core_IScrollView
};
var haxe_ui_containers_ScrollView = function() {
	haxe_ui_core_InteractiveComponent.call(this);
};
$hxClasses["haxe.ui.containers.ScrollView"] = haxe_ui_containers_ScrollView;
haxe_ui_containers_ScrollView.__name__ = "haxe.ui.containers.ScrollView";
haxe_ui_containers_ScrollView.__interfaces__ = [haxe_ui_core_IScrollView];
haxe_ui_containers_ScrollView.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers_ScrollView.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	ensureVisible: function(component) {
		if(this.behaviours == null) {
			return;
		}
		this.behaviours.call("ensureVisible",component);
	}
	,validateComponentInternal: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this.get_native() == true) {
			haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
			return;
		}
		var scrollInvalid = this.isComponentInvalid("scroll");
		var layoutInvalid = this.isComponentInvalid("layout");
		haxe_ui_core_InteractiveComponent.prototype.validateComponentInternal.call(this,nextFrame);
		if(scrollInvalid || layoutInvalid) {
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).checkScrolls();
			(js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).updateScrollRect();
		}
	}
	,get_isScroller: function() {
		return true;
	}
	,registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
		this.behaviours.register("virtual",haxe_ui_containers__$ScrollView_Virtual);
		this.behaviours.register("contentLayoutName",haxe_ui_containers__$ScrollView_ContentLayoutName,haxe_ui_util_Variant.fromString("vertical"));
		this.behaviours.register("contentWidth",haxe_ui_containers__$ScrollView_ContentWidth);
		this.behaviours.register("percentContentWidth",haxe_ui_containers__$ScrollView_PercentContentWidth);
		this.behaviours.register("contentHeight",haxe_ui_containers__$ScrollView_ContentHeight);
		this.behaviours.register("percentContentHeight",haxe_ui_containers__$ScrollView_PercentContentHeight);
		this.behaviours.register("hscrollPos",haxe_ui_containers__$ScrollView_HScrollPos);
		this.behaviours.register("hscrollMax",haxe_ui_containers__$ScrollView_HScrollMax);
		this.behaviours.register("hscrollPageSize",haxe_ui_containers__$ScrollView_HScrollPageSize);
		this.behaviours.register("vscrollPos",haxe_ui_containers__$ScrollView_VScrollPos);
		this.behaviours.register("vscrollMax",haxe_ui_containers__$ScrollView_VScrollMax);
		this.behaviours.register("vscrollPageSize",haxe_ui_containers__$ScrollView_VScrollPageSize);
		this.behaviours.register("scrollMode",haxe_ui_containers__$ScrollView_ScrollModeBehaviour,haxe_ui_util_Variant.fromString("drag"));
		this.behaviours.register("contents",haxe_ui_containers__$ScrollView_GetContents);
		this.behaviours.register("autoHideScrolls",haxe_ui_behaviours_DefaultBehaviour);
		this.behaviours.register("allowAutoScroll",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromBool(true));
		this.behaviours.register("ensureVisible",haxe_ui_containers__$ScrollView_EnsureVisible);
	}
	,get_virtual: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("virtual"));
	}
	,set_virtual: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("virtual",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"virtual"));
		return value;
	}
	,get_contentLayoutName: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("contentLayoutName"));
	}
	,set_contentLayoutName: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"contentLayoutName",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("contentLayoutName",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"contentLayoutName"));
		return value;
	}
	,get_contentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentWidth"));
	}
	,set_contentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"contentWidth"));
		return value;
	}
	,get_percentContentWidth: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentWidth"));
	}
	,set_percentContentWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"percentContentWidth"));
		return value;
	}
	,get_contentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("contentHeight"));
	}
	,set_contentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"contentHeight"));
		return value;
	}
	,get_percentContentHeight: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("percentContentHeight"));
	}
	,set_percentContentHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("percentContentHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"percentContentHeight"));
		return value;
	}
	,get_hscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPos"));
	}
	,set_hscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"hscrollPos"));
		return value;
	}
	,get_hscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollMax"));
	}
	,set_hscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"hscrollMax"));
		return value;
	}
	,get_hscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("hscrollPageSize"));
	}
	,set_hscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("hscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"hscrollPageSize"));
		return value;
	}
	,get_vscrollPos: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPos"));
	}
	,set_vscrollPos: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPos",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollPos"));
		return value;
	}
	,get_vscrollMax: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollMax"));
	}
	,set_vscrollMax: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollMax",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollMax"));
		return value;
	}
	,get_vscrollPageSize: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("vscrollPageSize"));
	}
	,set_vscrollPageSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("vscrollPageSize",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"vscrollPageSize"));
		return value;
	}
	,get_scrollMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("scrollMode"));
	}
	,set_scrollMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("scrollMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"scrollMode"));
		return value;
	}
	,get_contents: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("contents"));
	}
	,set_contents: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("contents",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"contents"));
		return value;
	}
	,get_autoHideScrolls: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("autoHideScrolls"));
	}
	,set_autoHideScrolls: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("autoHideScrolls",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"autoHideScrolls"));
		return value;
	}
	,get_allowAutoScroll: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("allowAutoScroll"));
	}
	,set_allowAutoScroll: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("allowAutoScroll",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"allowAutoScroll"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ScrollView();
	}
	,registerComposite: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ScrollViewEvents;
		this._compositeBuilderClass = haxe_ui_containers_ScrollViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_ScrollViewLayout;
	}
	,__class__: haxe_ui_containers_ScrollView
	,__properties__: $extend(haxe_ui_core_InteractiveComponent.prototype.__properties__,{set_allowAutoScroll:"set_allowAutoScroll",get_allowAutoScroll:"get_allowAutoScroll",set_autoHideScrolls:"set_autoHideScrolls",get_autoHideScrolls:"get_autoHideScrolls",set_contents:"set_contents",get_contents:"get_contents",set_scrollMode:"set_scrollMode",get_scrollMode:"get_scrollMode",set_vscrollPageSize:"set_vscrollPageSize",get_vscrollPageSize:"get_vscrollPageSize",set_vscrollMax:"set_vscrollMax",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",set_hscrollPageSize:"set_hscrollPageSize",get_hscrollPageSize:"get_hscrollPageSize",set_hscrollMax:"set_hscrollMax",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_percentContentHeight:"set_percentContentHeight",get_percentContentHeight:"get_percentContentHeight",set_contentHeight:"set_contentHeight",get_contentHeight:"get_contentHeight",set_percentContentWidth:"set_percentContentWidth",get_percentContentWidth:"get_percentContentWidth",set_contentWidth:"set_contentWidth",get_contentWidth:"get_contentWidth",set_contentLayoutName:"set_contentLayoutName",get_contentLayoutName:"get_contentLayoutName",set_virtual:"set_virtual",get_virtual:"get_virtual"})
});
var haxe_ui_containers_ListView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.ListView"] = haxe_ui_containers_ListView;
haxe_ui_containers_ListView.__name__ = "haxe.ui.containers.ListView";
haxe_ui_containers_ListView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_ListView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_ListView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_ListViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$ListView_ListViewBuilder;
		this._defaultLayoutClass = haxe_ui_layouts_VerticalVirtualLayout;
	}
	,_internal__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this._internal__onComponentEvent != null) {
			this.unregisterEvent("itemComponentEvent",this._internal__onComponentEvent);
			this._internal__onComponentEvent = null;
		}
		if(value != null) {
			this._internal__onComponentEvent = value;
			this.registerEvent("itemComponentEvent",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$ListView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$ListView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$ListView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$ListView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$ListView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$ListView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"longPressSelectionTime"));
		return value;
	}
	,get_value: function() {
		return this.get_selectedIndex();
	}
	,set_value: function(value) {
		this.set_selectedIndex(value);
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_ListView();
	}
	,__class__: haxe_ui_containers_ListView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_onComponentEvent:"set_onComponentEvent",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var haxe_ui_containers_ScrollViewEvents = function(scrollview) {
	this._fadeTimer = null;
	this._containerEventsPaused = false;
	this._lastMousePos = null;
	this._movementThreshold = 3;
	this._inertia = null;
	haxe_ui_events_Events.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers.ScrollViewEvents"] = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ScrollViewEvents.__name__ = "haxe.ui.containers.ScrollViewEvents";
haxe_ui_containers_ScrollViewEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_ScrollViewEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_scrollview: null
	,register: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null && contents.hasEvent("resize",$bind(this,this.onContentsResized)) == false) {
			contents.registerEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null && hscroll.hasEvent("change",$bind(this,this.onHScroll)) == false) {
			hscroll.registerEvent("change",$bind(this,this.onHScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null && vscroll.hasEvent("change",$bind(this,this.onVScroll)) == false) {
			vscroll.registerEvent("change",$bind(this,this.onVScroll));
		}
		if(this._scrollview.get_scrollMode() == "drag" || this._scrollview.get_scrollMode() == "inertial") {
			this.registerEvent("mousedown",$bind(this,this.onMouseDown));
		} else if(this.hasEvent("mousedown",$bind(this,this.onMouseDown)) == false) {
			this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(this._scrollview.hasEvent("shown") == false) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
		this.registerEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.registerEvent("actionStart",$bind(this,this.onActionStart));
	}
	,unregister: function() {
		var contents = this._scrollview.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.unregisterEvent("resize",$bind(this,this.onContentsResized));
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.unregisterEvent("change",$bind(this,this.onHScroll));
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.unregisterEvent("change",$bind(this,this.onVScroll));
		}
		this.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
		this.unregisterEvent("mousewheel",$bind(this,this.onMouseWheel));
		this.unregisterEvent("shown",$bind(this,this.onShown));
		this.unregisterEvent("actionStart",$bind(this,this.onActionStart));
	}
	,onShown: function(event) {
		var _this = this._scrollview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			if(!(hscroll._layout == null || hscroll._layoutLocked == true)) {
				hscroll.invalidateComponent("layout",false);
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(!(vscroll._layout == null || vscroll._layoutLocked == true)) {
				vscroll.invalidateComponent("layout",false);
			}
		}
	}
	,onContentsResized: function(event) {
		this._scrollview.invalidateComponent("scroll");
	}
	,onHScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,onVScroll: function(event) {
		this._scrollview.invalidateComponent("scroll");
		this._target.dispatch(new haxe_ui_events_ScrollEvent("scrollchange"));
	}
	,_offset: null
	,_inertia: null
	,onMouseDown: function(event) {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll == null && vscroll == null) {
			return;
		}
		this._scrollview.addClass(":down");
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
		var componentOffset = this._scrollview.getComponentOffset();
		if(hscroll != null && hscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		if(vscroll != null && vscroll.hitTest(event.screenX - componentOffset.x,event.screenY - componentOffset.y) == true) {
			return;
		}
		var under = this._scrollview.findComponentsUnderPoint(event.screenX - componentOffset.x,event.screenY - componentOffset.y);
		var _g = 0;
		while(_g < under.length) {
			var c = under[_g];
			++_g;
			if(((c) instanceof haxe_ui_components_TextField)) {
				return;
			}
		}
		this._offset = new haxe_ui_geom_Point();
		if(hscroll != null) {
			var tmp = hscroll.get_pos();
			this._offset.x = tmp + event.screenX;
		}
		if(vscroll != null) {
			var tmp = vscroll.get_pos();
			this._offset.y = tmp + event.screenY;
		}
		if(this._scrollview.get_scrollMode() == "inertial") {
			if(this._inertia == null) {
				this._inertia = { screen : new haxe_ui_geom_Point(), target : new haxe_ui_geom_Point(), amplitude : new haxe_ui_geom_Point(), direction : new haxe_ui_geom_Point(), timestamp : 0};
			}
			this._inertia.target.x = this._scrollview.get_hscrollPos();
			this._inertia.target.y = this._scrollview.get_vscrollPos();
			this._inertia.amplitude.x = 0;
			this._inertia.amplitude.y = 0;
			this._inertia.screen.x = event.screenX;
			this._inertia.screen.y = event.screenY;
			this._inertia.timestamp = HxOverrides.now() / 1000;
		}
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onMouseUp));
	}
	,_movementThreshold: null
	,_lastMousePos: null
	,onMouseMove: function(event) {
		event.cancel();
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			hscroll.set_pos(this._offset.x - event.screenX);
			var distX = Math.abs(event.screenX - this._lastMousePos.x);
			if(distX > haxe_ui_Toolkit.get_scaleX()) {
				this.pauseContainerEvents();
			}
		}
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			vscroll.set_pos(this._offset.y - event.screenY);
			var distY = Math.abs(event.screenY - this._lastMousePos.y);
			if(distY > haxe_ui_Toolkit.get_scaleY()) {
				this.pauseContainerEvents();
			}
		}
		this._lastMousePos = new haxe_ui_geom_Point(event.screenX,event.screenY);
	}
	,_containerEventsPaused: null
	,pauseContainerEvents: function() {
		if(this._containerEventsPaused == true) {
			return;
		}
		this._containerEventsPaused = true;
		this.onContainerEventsStatusChanged();
	}
	,resumeContainerEvents: function() {
		if(this._containerEventsPaused == false) {
			return;
		}
		this._containerEventsPaused = false;
		this.onContainerEventsStatusChanged();
	}
	,onContainerEventsStatusChanged: function() {
		this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").disableInteractivity(this._containerEventsPaused);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("scrollview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		}
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null || vscroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._containerEventsPaused == true) {
					if(hscroll != null) {
						hscroll.fadeIn();
					}
					if(vscroll != null) {
						vscroll.fadeIn();
					}
				} else {
					if(hscroll != null) {
						hscroll.fadeOut();
					}
					if(vscroll != null) {
						vscroll.fadeOut();
					}
				}
			}
		}
	}
	,onMouseUp: function(event) {
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onMouseMove));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onMouseUp));
		if(this._scrollview.get_scrollMode() == "inertial") {
			var now = HxOverrides.now() / 1000;
			var elapsed = (now - this._inertia.timestamp) * 1000;
			var deltaX = Math.abs(this._inertia.screen.x - event.screenX);
			var deltaY = Math.abs(this._inertia.screen.y - event.screenY);
			this._inertia.direction.x = this._inertia.screen.x - event.screenX < 0 ? 0 : 1;
			var velocityX = deltaX / elapsed;
			var v = 1000 * deltaX / (1 + elapsed);
			velocityX = 0.8 * v + 0.2 * velocityX;
			this._inertia.direction.y = this._inertia.screen.y - event.screenY < 0 ? 0 : 1;
			var velocityY = deltaY / elapsed;
			var v = 1000 * deltaY / (1 + elapsed);
			velocityY = 0.8 * v + 0.2 * velocityY;
			if(velocityX <= 75 && velocityY <= 75) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			this._inertia.timestamp = HxOverrides.now() / 1000;
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				this._inertia.amplitude.x = 0.8 * velocityX;
			}
			if(this._inertia.direction.x == 0) {
				var tmp = this._scrollview.get_hscrollPos() - this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_hscrollPos() + this._inertia.amplitude.x;
				this._inertia.target.x = Math.round(tmp);
			}
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				this._inertia.amplitude.y = 0.8 * velocityY;
			}
			if(this._inertia.direction.y == 0) {
				var tmp = this._scrollview.get_vscrollPos() - this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			} else {
				var tmp = this._scrollview.get_vscrollPos() + this._inertia.amplitude.y;
				this._inertia.target.y = Math.round(tmp);
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x && this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
				haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
				return;
			}
			if(this._scrollview.get_hscrollPos() == this._inertia.target.x) {
				this._inertia.amplitude.x = 0;
			}
			if(this._scrollview.get_vscrollPos() == this._inertia.target.y) {
				this._inertia.amplitude.y = 0;
			}
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		} else {
			this._scrollview.removeClass(":down");
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		}
	}
	,inertialScroll: function() {
		var elapsed = (HxOverrides.now() / 1000 - this._inertia.timestamp) * 1000;
		var finishedX = false;
		if(this._inertia.amplitude.x != 0) {
			var deltaX = -this._inertia.amplitude.x * Math.exp(-elapsed / 325);
			if(deltaX > 0.5 || deltaX < -0.5) {
				var oldPos = this._scrollview.get_hscrollPos();
				var newPos = 0;
				if(this._inertia.direction.x == 0) {
					newPos = this._inertia.target.x - deltaX;
				} else {
					newPos = this._inertia.target.x + deltaX;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_hscrollMax()) {
					newPos = this._scrollview.get_hscrollMax();
				}
				this._scrollview.set_hscrollPos(newPos);
				finishedX = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_hscrollMax();
			} else {
				finishedX = true;
			}
		} else {
			finishedX = true;
		}
		var finishedY = false;
		if(this._inertia.amplitude.y != 0) {
			var deltaY = -this._inertia.amplitude.y * Math.exp(-elapsed / 325);
			if(deltaY > 0.5 || deltaY < -0.5) {
				var oldPos = this._scrollview.get_vscrollPos();
				var newPos = 0;
				if(this._inertia.direction.y == 0) {
					newPos = this._inertia.target.y - deltaY;
				} else {
					newPos = this._inertia.target.y + deltaY;
				}
				if(newPos < 0) {
					newPos = 0;
				} else if(newPos > this._scrollview.get_vscrollMax()) {
					newPos = this._scrollview.get_vscrollMax();
				}
				this._scrollview.set_vscrollPos(newPos);
				finishedY = newPos == oldPos || newPos == 0 || newPos == this._scrollview.get_vscrollMax();
			} else {
				finishedY = true;
			}
		} else {
			finishedY = true;
		}
		if(finishedX == true && finishedY == true) {
			this.dispatch(new haxe_ui_events_ScrollEvent("scrollstop"));
			haxe_ui_Toolkit.callLater($bind(this,this.resumeContainerEvents));
		} else {
			haxe_ui_Toolkit.callLater($bind(this,this.inertialScroll));
		}
	}
	,_fadeTimer: null
	,onMouseWheel: function(event) {
		var _gthis = this;
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			if(this._scrollview.get_autoHideScrolls() == true && this._fadeTimer == null) {
				vscroll.fadeIn();
			}
			event.cancel();
			var amount = 50;
			if(event.delta > 0) {
				vscroll.set_pos(vscroll.get_pos() - amount);
			} else if(event.delta < 0) {
				vscroll.set_pos(vscroll.get_pos() + amount);
			}
			if(this._scrollview.get_autoHideScrolls() == true) {
				if(this._fadeTimer != null) {
					this._fadeTimer.stop();
					this._fadeTimer = null;
				}
				this._fadeTimer = new haxe_ui_util_Timer(300,function() {
					vscroll.fadeOut();
					_gthis._fadeTimer.stop();
					_gthis._fadeTimer = null;
				});
			}
		}
	}
	,onActionStart: function(event) {
		switch(event.action) {
		case "actionDown":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionLeft":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() - 1);
			event.repeater = true;
			break;
		case "actionRight":
			var fh = this._scrollview;
			fh.set_hscrollPos(fh.get_hscrollPos() + 1);
			event.repeater = true;
			break;
		case "actionUp":
			var fh = this._scrollview;
			fh.set_vscrollPos(fh.get_vscrollPos() - 1);
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ScrollViewEvents
});
var haxe_ui_containers_ListViewEvents = function(listview) {
	haxe_ui_containers_ScrollViewEvents.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers.ListViewEvents"] = haxe_ui_containers_ListViewEvents;
haxe_ui_containers_ListViewEvents.__name__ = "haxe.ui.containers.ListViewEvents";
haxe_ui_containers_ListViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers_ListViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_listview: null
	,lastEvent: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		if(this._listview.get_virtual() == true) {
			var _this = this._listview;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._listview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._listview._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		this._listview.set_focus(true);
		if(this._listview.get_selectionMode() == "multiple-long-press") {
			if(this._listview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		} else if(this._listview.classes.indexOf(":mobile") != -1 == false) {
			e.target.addClass(":hover");
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._listview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._scrollview.findComponent("listview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(component != e.target && ((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		this.lastEvent = e;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._listview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._listview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._listview.get_selectionMode() == "multiple-click-modifier-key") {
				this._listview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._listview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._listview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._listview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._listview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._listview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._listview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,onActionStart: function(event) {
		this.lastEvent = event;
		switch(event.action) {
		case "actionDown":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(0);
			} else {
				var n = this._listview.get_selectedIndex();
				++n;
				if(n > this._listview.get_dataSource().get_size() - 1) {
					n = 0;
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		case "actionUp":
			if(this._listview.get_selectedIndex() < 0) {
				this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
			} else {
				var n = this._listview.get_selectedIndex();
				--n;
				if(n < 0) {
					n = this._listview.set_selectedIndex(this._listview.get_dataSource().get_size() - 1);
				}
				this._listview.set_selectedIndex(n);
			}
			event.repeater = true;
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers_ListViewEvents
});
var haxe_ui_containers_ScrollViewBuilder = function(scrollview) {
	haxe_ui_core_CompositeBuilder.call(this,scrollview);
	this._scrollview = scrollview;
	this._scrollview.cascadeActive = true;
};
$hxClasses["haxe.ui.containers.ScrollViewBuilder"] = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers_ScrollViewBuilder.__name__ = "haxe.ui.containers.ScrollViewBuilder";
haxe_ui_containers_ScrollViewBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_ScrollViewBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_scrollview: null
	,_contents: null
	,_contentsLayoutName: null
	,create: function() {
		var contentLayoutName = this._scrollview.get_contentLayoutName();
		if(contentLayoutName == null) {
			contentLayoutName = "vertical";
		}
		this.createContentContainer(contentLayoutName);
	}
	,destroy: function() {
	}
	,get_numComponents: function() {
		return this._contents.get_numComponents();
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponent(child);
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.addComponentAt(child,index);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.removeComponent(child,dispose,invalidate);
		}
		return null;
	}
	,removeAllComponents: function(dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._contents.removeAllComponents(dispose);
		return true;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return this._contents.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._contents.getComponentIndex(child);
	}
	,setComponentIndex: function(child,index) {
		if(((child) instanceof haxe_ui_components_HorizontalScroll) == false && ((child) instanceof haxe_ui_components_VerticalScroll) == false && child.classes.indexOf("scrollview-contents") != -1 == false) {
			return this._contents.setComponentIndex(child,index);
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._contents.getComponentAt(index);
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			this._contents = new haxe_ui_containers_Box();
			this._contents.addClass("scrollview-contents");
			this._contents.set_id("scrollview-contents");
			this._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(layoutName));
			this._component.addComponent(this._contents);
			this._contentsLayoutName = layoutName;
		}
	}
	,horizontalConstraintModifier: function() {
		return 0;
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,checkScrolls: function() {
		if(this._component.get_isNativeScroller() == true) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		if(this.get_virtualHorizontal() == false && usableSize.width > 0) {
			var horizontalConstraint = this._contents;
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
			if(vcw > usableSize.width) {
				if(hscroll == null) {
					hscroll = this.createHScroll();
				}
				hscroll.set_max(vcw - usableSize.width);
				hscroll.set_pageSize(usableSize.width / vcw * hscroll.get_max());
				hscroll.syncComponentValidation();
			} else if(hscroll != null) {
				this.destroyHScroll();
			}
		}
		if(this.get_virtualVertical() == false && usableSize.height > 0) {
			var verticalConstraint = this._contents;
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
			if(vch > usableSize.height) {
				if(vscroll == null) {
					vscroll = this.createVScroll();
				}
				vscroll.set_max(vch - usableSize.height);
				vscroll.set_pageSize(usableSize.height / vch * vscroll.get_max());
				vscroll.syncComponentValidation();
			} else if(vscroll != null) {
				this.destroyVScroll();
			}
		}
	}
	,createHScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var horizontalConstraint = this._contents;
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vcw = horizontalConstraint.get_width() + this.horizontalConstraintModifier();
		if(usableSize.width <= 0) {
			return hscroll;
		}
		if(vcw > usableSize.width && hscroll == null) {
			hscroll = new haxe_ui_components_HorizontalScroll();
			hscroll.set_scriptAccess(false);
			hscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			hscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			hscroll.set_percentWidth(100);
			hscroll.set_allowFocus(false);
			hscroll.set_id("scrollview-hscroll");
			this._component.addComponent(hscroll);
			this._component.registerInternalEvents(null,true);
		}
		return hscroll;
	}
	,createVScroll: function() {
		if(this._component.get_isNativeScroller() == true) {
			return null;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var verticalConstraint = this._contents;
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vch = verticalConstraint.get_height() + this.verticalConstraintModifier();
		if(usableSize.height <= 0) {
			return vscroll;
		}
		if(vch > usableSize.height && vscroll == null) {
			vscroll = new haxe_ui_components_VerticalScroll();
			vscroll.set_scriptAccess(false);
			vscroll.set_includeInLayout(!this._scrollview.get_autoHideScrolls());
			vscroll.set_hidden(this._scrollview.get_autoHideScrolls());
			vscroll.set_percentHeight(100);
			vscroll.set_allowFocus(false);
			vscroll.set_id("scrollview-vscroll");
			this._component.addComponent(vscroll);
			this._component.registerInternalEvents(null,true);
		}
		return vscroll;
	}
	,destroyHScroll: function() {
		var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll != null) {
			this._component.removeComponent(hscroll);
		}
	}
	,destroyVScroll: function() {
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll != null) {
			this._component.removeComponent(vscroll);
		}
	}
	,updateScrollRect: function() {
		if(this._contents == null) {
			return;
		}
		var usableSize = this._component.get_layout().get_usableSize();
		var clipCX = usableSize.width - this.horizontalConstraintModifier();
		if(clipCX > this._contents.get_width()) {
			clipCX = this._contents.get_width() + this.horizontalConstraintModifier();
		}
		var clipCY = usableSize.height - this.verticalConstraintModifier();
		if(clipCY > this._contents.get_height()) {
			clipCY = this._contents.get_height() + this.verticalConstraintModifier();
		}
		var xpos = 0;
		var ypos = 0;
		if(this.get_virtualHorizontal() == false) {
			var hscroll = this._component.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll != null) {
				xpos = hscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCX = this._contents.get_componentClipRect().width;
		}
		if(this.get_virtualVertical() == false) {
			var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll != null) {
				ypos = vscroll.get_pos();
			}
		} else if(this._contents.get_componentClipRect() != null) {
			clipCY = this._contents.get_componentClipRect().height;
		}
		var rc = new haxe_ui_geom_Rectangle(Math.round(xpos),Math.round(ypos),Math.round(clipCX),Math.round(clipCY));
		this._contents.set_componentClipRect(rc);
	}
	,virtualHorizontal: null
	,get_virtualHorizontal: function() {
		return this._scrollview.get_virtual();
	}
	,virtualVertical: null
	,get_virtualVertical: function() {
		return this._scrollview.get_virtual();
	}
	,onVirtualChanged: function() {
	}
	,applyStyle: function(style) {
		haxe_ui_core_CompositeBuilder.prototype.applyStyle.call(this,style);
		if(style.mode == "mobile") {
			this._scrollview.set_autoHideScrolls(true);
		}
		if(style.contentWidth != null && style.contentWidth != this._scrollview.get_contentWidth()) {
			this._scrollview.set_contentWidth(style.contentWidth);
		} else if(style.contentWidthPercent != null && style.contentWidthPercent != this._scrollview.get_percentContentWidth()) {
			this._scrollview.set_percentContentWidth(style.contentWidthPercent);
		}
		if(style.contentHeight != null && style.contentHeight != this._scrollview.get_contentHeight()) {
			this._scrollview.set_contentHeight(style.contentHeight);
		} else if(style.contentHeightPercent != null && style.contentHeightPercent != this._scrollview.get_percentContentHeight()) {
			this._scrollview.set_percentContentHeight(style.contentHeightPercent);
		}
	}
	,__class__: haxe_ui_containers_ScrollViewBuilder
	,__properties__: $extend(haxe_ui_core_CompositeBuilder.prototype.__properties__,{get_virtualVertical:"get_virtualVertical",get_virtualHorizontal:"get_virtualHorizontal"})
});
var haxe_ui_containers__$ListView_ListViewBuilder = function(listview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,listview);
	this._listview = listview;
};
$hxClasses["haxe.ui.containers._ListView.ListViewBuilder"] = haxe_ui_containers__$ListView_ListViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.__name__ = "haxe.ui.containers._ListView.ListViewBuilder";
haxe_ui_containers__$ListView_ListViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$ListView_ListViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_listview: null
	,create: function() {
		this.createContentContainer(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("listview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer) && (this._listview.get_itemRenderer() == null && this._listview.get_itemRendererClass() == null)) {
			this._listview.set_itemRenderer(js_Boot.__cast(child , haxe_ui_core_ItemRenderer));
			this._listview.get_itemRenderer().ready();
			this._listview.get_itemRenderer().handleVisibility(false);
			r = child;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._listview.get_virtual() ? "absolute" : "vertical");
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		var _gthis = this;
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
					haxe_ui_Toolkit.callLater(function() {
						_gthis.ensureVisible(js_Boot.__cast(c , haxe_ui_core_ItemRenderer));
					});
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,ensureVisible: function(itemToEnsure) {
		if(itemToEnsure != null && this._listview.get_virtual() == false) {
			var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = this._listview.findComponent("listview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
	}
	,ensureVirtualItemVisible: function(index) {
		var vscroll = this._listview.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null) {
			var layout = js_Boot.__cast(this._listview.get_layout() , haxe_ui_layouts_VerticalVirtualLayout);
			var itemHeight = layout.get_itemHeight();
			var itemTop = index * itemHeight;
			var vpos = vscroll.get_pos();
			var contents = this._listview.findComponent("listview-contents",null,null,"css");
			if(itemTop + itemHeight > vpos + contents.get_componentClipRect().height) {
				vscroll.set_pos(itemTop + itemHeight - contents.get_componentClipRect().height);
			} else if(itemTop < vpos) {
				vscroll.set_pos(itemTop);
			}
		}
	}
	,__class__: haxe_ui_containers__$ListView_ListViewBuilder
});
var haxe_ui_containers__$ListView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.DataSourceBehaviour"] = haxe_ui_containers__$ListView_DataSourceBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.__name__ = "haxe.ui.containers._ListView.DataSourceBehaviour";
haxe_ui_containers__$ListView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.onChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$ListView_DataSourceBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndexBehaviour"] = haxe_ui_containers__$ListView_SelectedIndexBehaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndexBehaviour";
haxe_ui_containers__$ListView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		listView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndexBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemBehaviour"] = haxe_ui_containers__$ListView_SelectedItemBehaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemBehaviour";
haxe_ui_containers__$ListView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return listView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var index = listView.get_dataSource().indexOf(value);
		if(index != -1 && listView.get_selectedIndices().indexOf(index) == -1) {
			listView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemBehaviour
});
var haxe_ui_containers__$ListView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedIndicesBehaviour"] = haxe_ui_containers__$ListView_SelectedIndicesBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedIndicesBehaviour";
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$ListView_ListViewBuilder);
		var events = js_Boot.__cast(this._component._internalEvents , haxe_ui_containers_ListViewEvents);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(listView.get_virtual() == true) {
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				builder.ensureVirtualItemVisible(i);
			}
		}
		if(listView.get_selectedIndex() != -1 && listView.get_selectedIndices().length != 0) {
			var event = new haxe_ui_events_UIEvent("change");
			event.relatedEvent = events.lastEvent;
			this._component.dispatch(event);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$ListView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectedItemsBehaviour"] = haxe_ui_containers__$ListView_SelectedItemsBehaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._ListView.SelectedItemsBehaviour";
haxe_ui_containers__$ListView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ListView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= listView.get_dataSource().get_size()) {
					continue;
				}
				var data = listView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = listView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			listView.set_selectedIndices(selectedIndices);
		} else {
			listView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectedItemsBehaviour
});
var haxe_ui_containers__$ListView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ListView.SelectionModeBehaviour"] = haxe_ui_containers__$ListView_SelectionModeBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._ListView.SelectionModeBehaviour";
haxe_ui_containers__$ListView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ListView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var listView = js_Boot.__cast(this._component , haxe_ui_containers_ListView);
		var selectedIndices = listView.get_selectedIndices();
		if(selectedIndices == null || selectedIndices.length == 0) {
			return;
		}
		var selectionMode = haxe_ui_util_Variant.toString(this._value);
		switch(selectionMode) {
		case "disabled":
			listView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				listView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$ListView_SelectionModeBehaviour
});
var haxe_ui_containers__$ScrollView_EnsureVisible = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.EnsureVisible"] = haxe_ui_containers__$ScrollView_EnsureVisible;
haxe_ui_containers__$ScrollView_EnsureVisible.__name__ = "haxe.ui.containers._ScrollView.EnsureVisible";
haxe_ui_containers__$ScrollView_EnsureVisible.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_EnsureVisible.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	call: function(param) {
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		if(scrollview.get_allowAutoScroll() == false) {
			return null;
		}
		var c = js_Boot.__cast(param , haxe_ui_core_Component);
		if(c == scrollview) {
			return null;
		}
		var hscroll = scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var hscrollPos = 0;
		if(hscroll != null) {
			hscrollPos = hscroll.get_pos();
		}
		var vscroll = scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		var vscrollPos = 0;
		if(vscroll != null) {
			vscrollPos = vscroll.get_pos();
		}
		var componentScreenRect = new haxe_ui_geom_Rectangle(c.get_screenLeft(),c.get_screenTop(),c.get_width(),c.get_height());
		var componentRect = new haxe_ui_geom_Rectangle(c.get_screenLeft() + hscrollPos,c.get_screenTop() + vscrollPos,c.get_width(),c.get_height());
		var scrollRect = new haxe_ui_geom_Rectangle(scrollview.get_screenLeft(),scrollview.get_screenTop(),scrollview.get_width(),scrollview.get_height());
		var scrollRectFixed = scrollRect.copy();
		var usableSize = scrollview.get_layout().get_usableSize();
		scrollRectFixed.width = usableSize.width;
		scrollRectFixed.height = usableSize.height;
		if(scrollRectFixed.containsRect(componentScreenRect)) {
			return null;
		}
		var newHScrollPos = hscrollPos;
		var newVScrollPos = vscrollPos;
		var fixedRight = componentRect.get_right() - scrollRect.left;
		var fixedLeft = componentRect.left - scrollRect.left;
		var fixedBottom = componentRect.get_bottom() - scrollRect.top;
		var fixedTop = componentRect.top - scrollRect.top;
		var offsetLeft = 1;
		var offsetTop = 1;
		if(scrollRectFixed.containsPoint(componentScreenRect.get_right(),componentScreenRect.top) == false) {
			newHScrollPos = fixedRight - usableSize.width + (this.calcOffset(c,"right") - offsetLeft);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newHScrollPos = fixedLeft - (this.calcOffset(c,"left") + offsetLeft);
		}
		if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.get_bottom()) == false) {
			newVScrollPos = fixedBottom - usableSize.height + (this.calcOffset(c,"bottom") - offsetTop);
		} else if(scrollRectFixed.containsPoint(componentScreenRect.left,componentScreenRect.top) == false) {
			newVScrollPos = fixedTop - (this.calcOffset(c,"top") + offsetTop);
		}
		if(hscroll != null) {
			hscroll.set_pos(newHScrollPos);
		}
		if(vscroll != null) {
			vscroll.set_pos(newVScrollPos);
		}
		return null;
	}
	,calcOffset: function(c,which) {
		var p = 0;
		var r = c.parentComponent;
		while(r != null) {
			if(r.get_style() != null) {
				switch(which) {
				case "bottom":
					if(r.get_paddingBottom() != null) {
						p += r.get_paddingBottom();
					}
					break;
				case "left":
					if(r.get_paddingLeft() != null) {
						p += r.get_paddingLeft();
					}
					break;
				case "right":
					if(r.get_paddingRight() != null) {
						p += r.get_paddingRight();
					}
					break;
				case "top":
					if(r.get_paddingTop() != null) {
						p += r.get_paddingTop();
					}
					break;
				}
			}
			r = r.parentComponent;
			if(r == this._component) {
				break;
			}
		}
		return p;
	}
	,__class__: haxe_ui_containers__$ScrollView_EnsureVisible
});
var haxe_ui_containers__$ScrollView_Virtual = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.Virtual"] = haxe_ui_containers__$ScrollView_Virtual;
haxe_ui_containers__$ScrollView_Virtual.__name__ = "haxe.ui.containers._ScrollView.Virtual";
haxe_ui_containers__$ScrollView_Virtual.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_Virtual.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		if(this._component._compositeBuilder != null) {
			(js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).onVirtualChanged();
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_Virtual
});
var haxe_ui_containers__$ScrollView_ContentLayoutName = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentLayoutName"] = haxe_ui_containers__$ScrollView_ContentLayoutName;
haxe_ui_containers__$ScrollView_ContentLayoutName.__name__ = "haxe.ui.containers._ScrollView.ContentLayoutName";
haxe_ui_containers__$ScrollView_ContentLayoutName.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_ContentLayoutName.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers_ScrollViewBuilder);
		if(builder != null && haxe_ui_util_Variant.fromString(builder._contentsLayoutName) != value) {
			builder._contentsLayoutName = haxe_ui_util_Variant.toString(value);
			builder._contents.set_layout(haxe_ui_layouts_LayoutFactory.createFromName(haxe_ui_util_Variant.toString(value)));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentLayoutName
});
var haxe_ui_containers__$ScrollView_ContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentWidth"] = haxe_ui_containers__$ScrollView_ContentWidth;
haxe_ui_containers__$ScrollView_ContentWidth.__name__ = "haxe.ui.containers._ScrollView.ContentWidth";
haxe_ui_containers__$ScrollView_ContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_width());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentWidth(null);
			contents.set_width(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentWidth
});
var haxe_ui_containers__$ScrollView_PercentContentWidth = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentWidth"] = haxe_ui_containers__$ScrollView_PercentContentWidth;
haxe_ui_containers__$ScrollView_PercentContentWidth.__name__ = "haxe.ui.containers._ScrollView.PercentContentWidth";
haxe_ui_containers__$ScrollView_PercentContentWidth.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentWidth.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentWidth());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentWidth(null);
			contents.set_percentWidth(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentWidth
});
var haxe_ui_containers__$ScrollView_ContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ContentHeight"] = haxe_ui_containers__$ScrollView_ContentHeight;
haxe_ui_containers__$ScrollView_ContentHeight.__name__ = "haxe.ui.containers._ScrollView.ContentHeight";
haxe_ui_containers__$ScrollView_ContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_ContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_height());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_percentHeight(null);
			contents.set_height(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_ContentHeight
});
var haxe_ui_containers__$ScrollView_PercentContentHeight = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.PercentContentHeight"] = haxe_ui_containers__$ScrollView_PercentContentHeight;
haxe_ui_containers__$ScrollView_PercentContentHeight.__name__ = "haxe.ui.containers._ScrollView.PercentContentHeight";
haxe_ui_containers__$ScrollView_PercentContentHeight.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$ScrollView_PercentContentHeight.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return null;
		}
		return haxe_ui_util_Variant.fromFloat(contents.get_percentHeight());
	}
	,set: function(value) {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.set_componentHeight(null);
			contents.set_percentHeight(haxe_ui_util_Variant.toFloat(value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_PercentContentHeight
});
var haxe_ui_containers__$ScrollView_HScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPos"] = haxe_ui_containers__$ScrollView_HScrollPos;
haxe_ui_containers__$ScrollView_HScrollPos.__name__ = "haxe.ui.containers._ScrollView.HScrollPos";
haxe_ui_containers__$ScrollView_HScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_pos());
	}
	,validateData: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(hscroll != null) {
			hscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPos
});
var haxe_ui_containers__$ScrollView_VScrollPos = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPos"] = haxe_ui_containers__$ScrollView_VScrollPos;
haxe_ui_containers__$ScrollView_VScrollPos.__name__ = "haxe.ui.containers._ScrollView.VScrollPos";
haxe_ui_containers__$ScrollView_VScrollPos.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPos.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_pos());
	}
	,validateData: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(this._scrollview.get_virtual() == true) {
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
			}
		} else if(vscroll != null) {
			vscroll.set_pos(haxe_ui_util_Variant.toFloat(this._value));
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPos
});
var haxe_ui_containers__$ScrollView_HScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollMax"] = haxe_ui_containers__$ScrollView_HScrollMax;
haxe_ui_containers__$ScrollView_HScrollMax.__name__ = "haxe.ui.containers._ScrollView.HScrollMax";
haxe_ui_containers__$ScrollView_HScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
		if(hscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(hscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(hscroll == null) {
					hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
				}
			} else if(hscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyHScroll();
			}
			if(hscroll != null) {
				hscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollMax
});
var haxe_ui_containers__$ScrollView_VScrollMax = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollMax"] = haxe_ui_containers__$ScrollView_VScrollMax;
haxe_ui_containers__$ScrollView_VScrollMax.__name__ = "haxe.ui.containers._ScrollView.VScrollMax";
haxe_ui_containers__$ScrollView_VScrollMax.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollMax.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,get: function() {
		var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(vscroll == null) {
			return haxe_ui_util_Variant.fromInt(0);
		}
		return haxe_ui_util_Variant.fromFloat(vscroll.get_max());
	}
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(0))) {
				if(vscroll == null) {
					vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
				}
			} else if(vscroll != null) {
				(js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).destroyVScroll();
			}
			if(vscroll != null) {
				vscroll.set_max(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollMax
});
var haxe_ui_containers__$ScrollView_HScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.HScrollPageSize"] = haxe_ui_containers__$ScrollView_HScrollPageSize;
haxe_ui_containers__$ScrollView_HScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.HScrollPageSize";
haxe_ui_containers__$ScrollView_HScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_HScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var hscroll = this._scrollview.findComponent(null,haxe_ui_components_HorizontalScroll,false);
			if(hscroll == null) {
				hscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createHScroll();
			}
			if(hscroll != null) {
				hscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_HScrollPageSize
});
var haxe_ui_containers__$ScrollView_VScrollPageSize = function(scrollview) {
	haxe_ui_behaviours_DataBehaviour.call(this,scrollview);
	this._scrollview = scrollview;
};
$hxClasses["haxe.ui.containers._ScrollView.VScrollPageSize"] = haxe_ui_containers__$ScrollView_VScrollPageSize;
haxe_ui_containers__$ScrollView_VScrollPageSize.__name__ = "haxe.ui.containers._ScrollView.VScrollPageSize";
haxe_ui_containers__$ScrollView_VScrollPageSize.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_VScrollPageSize.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_scrollview: null
	,validateData: function() {
		if(this._scrollview.get_virtual() == true) {
			var vscroll = this._scrollview.findComponent(null,haxe_ui_components_VerticalScroll,false);
			if(vscroll == null) {
				vscroll = (js_Boot.__cast(this._scrollview._compositeBuilder , haxe_ui_containers_ScrollViewBuilder)).createVScroll();
			}
			if(vscroll != null) {
				vscroll.set_pageSize(haxe_ui_util_Variant.toFloat(this._value));
			}
		}
	}
	,__class__: haxe_ui_containers__$ScrollView_VScrollPageSize
});
var haxe_ui_containers__$ScrollView_ScrollModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.ScrollModeBehaviour"] = haxe_ui_containers__$ScrollView_ScrollModeBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__name__ = "haxe.ui.containers._ScrollView.ScrollModeBehaviour";
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$ScrollView_ScrollModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		this._component.registerInternalEvents(null,true);
	}
	,__class__: haxe_ui_containers__$ScrollView_ScrollModeBehaviour
});
var haxe_ui_containers__$ScrollView_GetContents = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._ScrollView.GetContents"] = haxe_ui_containers__$ScrollView_GetContents;
haxe_ui_containers__$ScrollView_GetContents.__name__ = "haxe.ui.containers._ScrollView.GetContents";
haxe_ui_containers__$ScrollView_GetContents.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$ScrollView_GetContents.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		return haxe_ui_util_Variant.fromComponent(contents);
	}
	,__class__: haxe_ui_containers__$ScrollView_GetContents
});
var haxe_ui_containers_SideBar = function() {
	this._position = null;
	this._modalOverlay = null;
	this._lastMethod = null;
	this.modal = false;
	this.method = "shift";
	var _gthis = this;
	haxe_ui_containers_Box.call(this);
	haxe_ui_containers_Box.prototype.hide.call(this);
	this.set_position("left");
	this.set_animatable(false);
	haxe_ui_core_Screen.get_instance().registerEvent("resize",function(_) {
		if(haxe_ui_containers_SideBar.activeSideBar == _gthis) {
			_gthis.setEndPos();
		}
	});
};
$hxClasses["haxe.ui.containers.SideBar"] = haxe_ui_containers_SideBar;
haxe_ui_containers_SideBar.__name__ = "haxe.ui.containers.SideBar";
haxe_ui_containers_SideBar.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_SideBar.prototype = $extend(haxe_ui_containers_Box.prototype,{
	method: null
	,modal: null
	,_lastMethod: null
	,_modalOverlay: null
	,_position: null
	,get_position: function() {
		return this._position;
	}
	,set_position: function(value) {
		if(this._position == value) {
			return value;
		}
		if(this._position != null) {
			this.removeClass(":" + this._position);
		}
		this._position = value;
		this.addClass(":" + this._position);
		return value;
	}
	,onReady: function() {
		var _gthis = this;
		haxe_ui_containers_Box.prototype.onReady.call(this);
		this.set_animatable(true);
		var closeButton = this.findComponent("closeSideBar",haxe_ui_core_Component);
		if(closeButton != null) {
			closeButton.registerEvent("click",function(_) {
				_gthis.hide();
			});
		}
		haxe_ui_Toolkit.callLater(function() {
			_gthis.invalidateComponent(null,true);
		});
	}
	,showModalOverlay: function() {
		if(this._modalOverlay == null) {
			this._modalOverlay = new haxe_ui_core_Component();
			this._modalOverlay.set_id("sidebar-modal-background");
			this._modalOverlay.addClass("sidebar-modal-background");
			this._modalOverlay.set_percentWidth(this._modalOverlay.set_percentHeight(100));
			haxe_ui_core_Screen.get_instance().addComponent(this._modalOverlay);
			this._modalOverlay.set_onClick(function(_) {
				if(haxe_ui_containers_SideBar.activeSideBar != null) {
					haxe_ui_containers_SideBar.activeSideBar.hide();
				}
			});
		}
		var i = haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this);
		if(i != -1) {
			haxe_ui_core_Screen.get_instance().setComponentIndex(this._modalOverlay,i - 1);
		}
		this._modalOverlay.show();
	}
	,hideModalOverlay: function() {
		if(this._modalOverlay == null) {
			return;
		}
		this._modalOverlay.hide();
	}
	,setStartPos: function() {
		if(this.get_position() == "left") {
			this.set_left(-this.get_actualComponentWidth());
		} else if(this.get_position() == "right") {
			this.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth());
		} else if(this.get_position() == "top") {
			this.set_top(-this.get_actualComponentHeight());
		} else if(this.get_position() == "bottom") {
			this.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight());
		}
	}
	,setEndPos: function() {
		if(this.get_position() == "left") {
			this.set_left(0);
		} else if(this.get_position() == "right") {
			this.set_left(haxe_ui_core_Screen.get_instance().get_actualWidth() - this.get_actualComponentWidth());
		} else if(this.get_position() == "top") {
			this.set_top(0);
		} else if(this.get_position() == "bottom") {
			this.set_top(haxe_ui_core_Screen.get_instance().get_actualHeight() - this.get_actualComponentHeight());
		}
	}
	,show: function() {
		var _gthis = this;
		if(haxe_ui_containers_SideBar.activeSideBar == this) {
			return;
		}
		if(haxe_ui_core_Screen.get_instance().rootComponents.indexOf(this) == -1) {
			if(this.modal == true) {
				this.showModalOverlay();
			}
			haxe_ui_core_Screen.get_instance().addComponent(this);
			this.validateNow();
			haxe_ui_Toolkit.callLater(function() {
				_gthis.setStartPos();
				_gthis.show();
			});
			return;
		} else {
			if(this.modal == true) {
				this.showModalOverlay();
			}
			this.validateNow();
			this.setStartPos();
		}
		var animation = haxe_ui_Toolkit.styleSheet.findAnimation("sideBarModifyContent");
		var first = animation.get_keyFrames()[0];
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		var rootComponent = haxe_ui_core_Screen.get_instance().rootComponents[0];
		first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		first.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		first.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		this._lastMethod = this.method;
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.buildHideContentAnimation(animation);
		}
		this.buildContentAnimation(animation);
		var showSideBarClass = null;
		var hideSideBarClass = null;
		if(this.get_position() == "left") {
			showSideBarClass = "showSideBarLeft";
			hideSideBarClass = "hideSideBarLeft";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarLeft");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentWidth() - this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		} else if(this.get_position() == "right") {
			showSideBarClass = "showSideBarRight";
			hideSideBarClass = "hideSideBarRight";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarRight");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualWidth() + this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualWidth() - this.get_actualComponentWidth()))));
		} else if(this.get_position() == "top") {
			showSideBarClass = "showSideBarTop";
			hideSideBarClass = "hideSideBarTop";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarTop");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentHeight() - this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		} else if(this.get_position() == "bottom") {
			showSideBarClass = "showSideBarBottom";
			hideSideBarClass = "hideSideBarBottom";
			var animation = haxe_ui_Toolkit.styleSheet.findAnimation("showSideBarBottom");
			var first = animation.get_keyFrames()[0];
			var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
			first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualHeight() + this.getAppropriateMargin()))));
			last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_actualHeight() - this.get_actualComponentHeight()))));
		}
		this.set_onAnimationEnd(function(_) {
			_gthis.removeClass(showSideBarClass);
		});
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.hideSideBar();
		}
		var _g = 0;
		var _g1 = haxe_ui_core_Screen.get_instance().rootComponents;
		while(_g < _g1.length) {
			var r = [_g1[_g]];
			++_g;
			if(r[0].classes.indexOf("sidebar") == -1) {
				r[0].cachePercentSizes();
				r[0].swapClass("sideBarModifyContent","sideBarRestoreContent");
				r[0].set_onAnimationEnd((function(r) {
					return function(_) {
						r[0].set_onAnimationEnd(null);
						rootComponent.removeClass("sideBarModifyContent");
					};
				})(r));
			}
		}
		this.swapClass(showSideBarClass,hideSideBarClass);
		haxe_ui_containers_SideBar.activeSideBar = this;
		haxe_ui_containers_Box.prototype.show.call(this);
	}
	,getAppropriateMargin: function() {
		return 0;
	}
	,buildHideContentAnimation: function(animation) {
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		if(this._lastMethod == "shift") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
			}
		} else if(this._lastMethod == "squash") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
			}
		}
	}
	,buildContentAnimation: function(animation) {
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		if(this.method == "shift") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentWidth()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentWidth()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentHeight()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(-this.get_actualComponentHeight()))));
			}
		} else if(this.method == "squash") {
			if(this.get_position() == "left") {
				last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentWidth()))));
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width() - this.get_width()))));
			} else if(this.get_position() == "right") {
				last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width() - this.get_width()))));
			}
			if(this.get_position() == "top") {
				last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(this.get_actualComponentHeight()))));
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height() - this.get_height()))));
			} else if(this.get_position() == "bottom") {
				last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height() - this.get_height()))));
			}
		}
	}
	,hideSideBar: function() {
		var _gthis = this;
		var showSideBarClass = null;
		var hideSideBarClass = null;
		if(this.get_position() == "left") {
			showSideBarClass = "showSideBarLeft";
			hideSideBarClass = "hideSideBarLeft";
		} else if(this.get_position() == "right") {
			showSideBarClass = "showSideBarRight";
			hideSideBarClass = "hideSideBarRight";
		} else if(this.get_position() == "top") {
			showSideBarClass = "showSideBarTop";
			hideSideBarClass = "hideSideBarTop";
		} else if(this.get_position() == "bottom") {
			showSideBarClass = "showSideBarBottom";
			hideSideBarClass = "hideSideBarBottom";
		}
		this.set_onAnimationEnd(function(_) {
			_gthis.removeClass(hideSideBarClass);
			_gthis.onHideAnimationEnd();
		});
		this.swapClass(hideSideBarClass,showSideBarClass);
		if(this.modal == true) {
			this.hideModalOverlay();
		}
	}
	,onHideAnimationEnd: function() {
		haxe_ui_containers_Box.prototype.hide.call(this);
	}
	,hide: function() {
		if(haxe_ui_containers_SideBar.activeSideBar != null && haxe_ui_containers_SideBar.activeSideBar != this) {
			haxe_ui_containers_SideBar.activeSideBar.hide();
			return;
		}
		var animation = haxe_ui_Toolkit.styleSheet.findAnimation("sideBarRestoreContent");
		var first = animation.get_keyFrames()[0];
		var last = animation.get_keyFrames()[animation.get_keyFrames().length - 1];
		var rootComponent = haxe_ui_core_Screen.get_instance().rootComponents[0];
		first.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_left()))));
		first.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_top()))));
		first.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_width()))));
		first.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(rootComponent.get_height()))));
		last.set(new haxe_ui_styles_elements_Directive("left",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		last.set(new haxe_ui_styles_elements_Directive("top",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(0))));
		last.set(new haxe_ui_styles_elements_Directive("width",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_width()))));
		last.set(new haxe_ui_styles_elements_Directive("height",haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(haxe_ui_core_Screen.get_instance().get_height()))));
		var _g = 0;
		var _g1 = haxe_ui_core_Screen.get_instance().rootComponents;
		while(_g < _g1.length) {
			var r = [_g1[_g]];
			++_g;
			if(r[0].classes.indexOf("sidebar") == -1) {
				r[0].swapClass("sideBarRestoreContent","sideBarModifyContent");
				r[0].set_onAnimationEnd((function(r) {
					return function(_) {
						r[0].restorePercentSizes();
						r[0].set_onAnimationEnd(null);
						rootComponent.removeClass("sideBarRestoreContent");
					};
				})(r));
			}
		}
		this.hideSideBar();
		haxe_ui_containers_SideBar.activeSideBar = null;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_SideBar();
	}
	,__class__: haxe_ui_containers_SideBar
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_position:"set_position",get_position:"get_position"})
});
var haxe_ui_containers__$Splitter_SizerGripper = function() {
	haxe_ui_core_InteractiveComponent.call(this);
	var image = new haxe_ui_components_Image();
	this.addComponent(image);
};
$hxClasses["haxe.ui.containers._Splitter.SizerGripper"] = haxe_ui_containers__$Splitter_SizerGripper;
haxe_ui_containers__$Splitter_SizerGripper.__name__ = "haxe.ui.containers._Splitter.SizerGripper";
haxe_ui_containers__$Splitter_SizerGripper.__super__ = haxe_ui_core_InteractiveComponent;
haxe_ui_containers__$Splitter_SizerGripper.prototype = $extend(haxe_ui_core_InteractiveComponent.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_InteractiveComponent.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_InteractiveComponent.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$Splitter_SizerGripper();
	}
	,__class__: haxe_ui_containers__$Splitter_SizerGripper
});
var haxe_ui_containers_Stack = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.containers.Stack"] = haxe_ui_containers_Stack;
haxe_ui_containers_Stack.__name__ = "haxe.ui.containers.Stack";
haxe_ui_containers_Stack.__super__ = haxe_ui_containers_Box;
haxe_ui_containers_Stack.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
		this.behaviours.register("selectedIndex",haxe_ui_containers__$Stack_SelectedIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedId",haxe_ui_containers__$Stack_SelectedId);
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedId: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectedId"));
	}
	,set_selectedId: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"selectedId",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("selectedId",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedId"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_Stack();
	}
	,registerComposite: function() {
		haxe_ui_containers_Box.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$Stack_Builder;
	}
	,__class__: haxe_ui_containers_Stack
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_selectedId:"set_selectedId",get_selectedId:"get_selectedId",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex"})
});
var haxe_ui_containers__$Stack_SelectedIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._Stack.SelectedIndex"] = haxe_ui_containers__$Stack_SelectedIndex;
haxe_ui_containers__$Stack_SelectedIndex.__name__ = "haxe.ui.containers._Stack.SelectedIndex";
haxe_ui_containers__$Stack_SelectedIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Stack_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		var _this = this._component;
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1))) {
			var _this = this._component;
			this._value = haxe_ui_util_Variant.fromInt((_this._children == null ? [] : _this._children).length - 1);
			return;
		}
		if(builder._currentPage != null) {
			builder._currentPage.hide();
		}
		var _this = this._component;
		builder._currentPage = (_this._children == null ? [] : _this._children)[haxe_ui_util_Variant.toInt(this._value)];
		builder._currentPage.show();
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$Stack_SelectedIndex
});
var haxe_ui_containers__$Stack_SelectedId = function(stack) {
	haxe_ui_behaviours_DataBehaviour.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.SelectedId"] = haxe_ui_containers__$Stack_SelectedId;
haxe_ui_containers__$Stack_SelectedId.__name__ = "haxe.ui.containers._Stack.SelectedId";
haxe_ui_containers__$Stack_SelectedId.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$Stack_SelectedId.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_stack: null
	,validateData: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$Stack_Builder);
		var item = this._component.findComponent(haxe_ui_util_Variant.toString(this._value),haxe_ui_core_Component,false);
		if(item != null) {
			this._stack.set_selectedIndex(this._component.getComponentIndex(item));
		}
	}
	,__class__: haxe_ui_containers__$Stack_SelectedId
});
var haxe_ui_containers__$Stack_Builder = function(stack) {
	this._currentPage = null;
	haxe_ui_core_CompositeBuilder.call(this,stack);
	this._stack = stack;
};
$hxClasses["haxe.ui.containers._Stack.Builder"] = haxe_ui_containers__$Stack_Builder;
haxe_ui_containers__$Stack_Builder.__name__ = "haxe.ui.containers._Stack.Builder";
haxe_ui_containers__$Stack_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$Stack_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_stack: null
	,_currentPage: null
	,addComponent: function(child) {
		if(this._stack.get_selectedIndex() < 0) {
			this._stack.set_selectedIndex(0);
		}
		if(this._stack.get_numComponents() > 0) {
			child.hide();
		}
		return null;
	}
	,__class__: haxe_ui_containers__$Stack_Builder
});
var haxe_ui_containers_TabView = function() {
	haxe_ui_core_Component.call(this);
};
$hxClasses["haxe.ui.containers.TabView"] = haxe_ui_containers_TabView;
haxe_ui_containers_TabView.__name__ = "haxe.ui.containers.TabView";
haxe_ui_containers_TabView.__super__ = haxe_ui_core_Component;
haxe_ui_containers_TabView.prototype = $extend(haxe_ui_core_Component.prototype,{
	removePage: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removePage",index);
	}
	,getPage: function(index) {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("getPage",index));
	}
	,removeAllPages: function() {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeAllPages",null);
	}
	,registerComposite: function() {
		haxe_ui_core_Component.prototype.registerComposite.call(this);
		this._compositeBuilderClass = haxe_ui_containers__$TabView_Builder;
		this._internalEventsClass = haxe_ui_containers__$TabView_Events;
		this._defaultLayoutClass = haxe_ui_containers__$TabView_Layout;
	}
	,registerBehaviours: function() {
		haxe_ui_core_Component.prototype.registerBehaviours.call(this);
		this.behaviours.register("pageIndex",haxe_ui_containers__$TabView_PageIndex,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedPage",haxe_ui_containers__$TabView_SelectedPage,null);
		this.behaviours.register("tabPosition",haxe_ui_containers__$TabView_TabPosition);
		this.behaviours.register("pageCount",haxe_ui_containers__$TabView_PageCount);
		this.behaviours.register("closable",haxe_ui_containers__$TabView_Closable,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("removePage",haxe_ui_containers__$TabView_RemovePage);
		this.behaviours.register("getPage",haxe_ui_containers__$TabView_GetPage);
		this.behaviours.register("removeAllPages",haxe_ui_containers__$TabView_RemoveAllPages);
	}
	,get_pageIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageIndex"));
	}
	,set_pageIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageIndex"));
		return value;
	}
	,get_selectedPage: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("selectedPage"));
	}
	,set_selectedPage: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedPage",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedPage"));
		return value;
	}
	,get_tabPosition: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("tabPosition"));
	}
	,set_tabPosition: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"tabPosition",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("tabPosition",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"tabPosition"));
		return value;
	}
	,get_pageCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("pageCount"));
	}
	,set_pageCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("pageCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"pageCount"));
		return value;
	}
	,get_closable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("closable"));
	}
	,set_closable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("closable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"closable"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_Component.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TabView();
	}
	,__class__: haxe_ui_containers_TabView
	,__properties__: $extend(haxe_ui_core_Component.prototype.__properties__,{set_closable:"set_closable",get_closable:"get_closable",set_pageCount:"set_pageCount",get_pageCount:"get_pageCount",set_tabPosition:"set_tabPosition",get_tabPosition:"get_tabPosition",set_selectedPage:"set_selectedPage",get_selectedPage:"get_selectedPage",set_pageIndex:"set_pageIndex",get_pageIndex:"get_pageIndex"})
});
var haxe_ui_containers__$TabView_Layout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.containers._TabView.Layout"] = haxe_ui_containers__$TabView_Layout;
haxe_ui_containers__$TabView_Layout.__name__ = "haxe.ui.containers._TabView.Layout";
haxe_ui_containers__$TabView_Layout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_containers__$TabView_Layout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		if(this.get_component().classes.indexOf(":bottom") != -1) {
			content.set_left(this.get_paddingLeft());
			content.set_top(this.get_paddingTop());
			tabs.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				tabs.set_top(this.get_component().get_height() - tabs.get_height() - this.get_paddingBottom() + this.marginTop(tabs));
			}
		} else {
			tabs.set_left(this.get_paddingLeft());
			tabs.set_top(this.get_paddingTop() + this.marginTop(tabs));
			content.set_left(this.get_paddingLeft());
			if(tabs.get_height() != 0) {
				content.set_top(tabs.get_top() + tabs.get_height() - this.marginTop(tabs) + this.marginTop(content));
			}
		}
	}
	,resizeChildren: function() {
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		var content = this.get_component().findComponent(null,haxe_ui_containers_Box,false);
		if(tabs == null || content == null) {
			return;
		}
		var usableSize = this.get_usableSize();
		tabs.set_width(usableSize.width);
		if(this.get_component().get_autoHeight() == false) {
			content.set_height(usableSize.height + 1);
		}
		if(this.get_component().get_autoWidth() == false) {
			content.set_width(this.get_component().get_width());
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var tabs = this.get_component().findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs != null && tabs.get_componentHeight() != null) {
			size.height -= tabs.get_componentHeight();
		}
		return size;
	}
	,__class__: haxe_ui_containers__$TabView_Layout
});
var haxe_ui_containers__$TabView_Closable = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.Closable"] = haxe_ui_containers__$TabView_Closable;
haxe_ui_containers__$TabView_Closable.__name__ = "haxe.ui.containers._TabView.Closable";
haxe_ui_containers__$TabView_Closable.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_Closable.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		builder._tabs.set_closable(haxe_ui_util_Variant.toBool(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_Closable
});
var haxe_ui_containers__$TabView_PageIndex = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageIndex"] = haxe_ui_containers__$TabView_PageIndex;
haxe_ui_containers__$TabView_PageIndex.__name__ = "haxe.ui.containers._TabView.PageIndex";
haxe_ui_containers__$TabView_PageIndex.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_PageIndex.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.gt(value,haxe_ui_util_Variant.fromInt(-1))) {
			var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
			builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(value));
		}
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
	}
	,validateData: function() {
		if(this._component.get_native() == true) {
			return;
		}
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		if(haxe_ui_util_Variant.lt(this._value,haxe_ui_util_Variant.fromInt(0))) {
			return;
		}
		if(haxe_ui_util_Variant.gt(this._value,haxe_ui_util_Variant.fromInt(builder._views.length - 1))) {
			this._value = haxe_ui_util_Variant.fromInt(builder._views.length - 1);
			return;
		}
		builder._tabs.set_selectedIndex(haxe_ui_util_Variant.toInt(this._value));
		var view = builder._views[haxe_ui_util_Variant.toInt(this._value)];
		if(view != null) {
			if(builder._currentView != null) {
				builder._currentView.hide();
			}
			if(builder._content.getComponentIndex(view) == -1) {
				builder._content.addComponent(view);
			} else {
				view.show();
			}
			builder._currentView = view;
		}
		this._component.dispatch(new haxe_ui_events_UIEvent("change"));
	}
	,__class__: haxe_ui_containers__$TabView_PageIndex
});
var haxe_ui_containers__$TabView_SelectedPage = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.SelectedPage"] = haxe_ui_containers__$TabView_SelectedPage;
haxe_ui_containers__$TabView_SelectedPage.__name__ = "haxe.ui.containers._TabView.SelectedPage";
haxe_ui_containers__$TabView_SelectedPage.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TabView_SelectedPage.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[tabview.get_pageIndex()];
		return haxe_ui_util_Variant.fromComponent(view);
	}
	,set: function(value) {
		var tabview = js_Boot.__cast(this._component , haxe_ui_containers_TabView);
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = haxe_ui_util_Variant.toComponent(value);
		var viewIndex = builder._views.indexOf(view);
		if(viewIndex != -1) {
			tabview.set_pageIndex(viewIndex);
		}
	}
	,__class__: haxe_ui_containers__$TabView_SelectedPage
});
var haxe_ui_containers__$TabView_TabPosition = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.TabPosition"] = haxe_ui_containers__$TabView_TabPosition;
haxe_ui_containers__$TabView_TabPosition.__name__ = "haxe.ui.containers._TabView.TabPosition";
haxe_ui_containers__$TabView_TabPosition.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TabView_TabPosition.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromString("bottom"))) {
			this._component.addClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 1;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 0;
		} else {
			this._component.removeClass(":bottom");
			this._component.findComponent(null,haxe_ui_components_TabBar,false).componentTabIndex = 0;
			this._component.findComponent("tabview-content",haxe_ui_containers_Box,false).componentTabIndex = 1;
		}
		this._component.findComponent(null,haxe_ui_components_TabBar,false).set_tabPosition(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers__$TabView_TabPosition
});
var haxe_ui_containers__$TabView_PageCount = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.PageCount"] = haxe_ui_containers__$TabView_PageCount;
haxe_ui_containers__$TabView_PageCount.__name__ = "haxe.ui.containers._TabView.PageCount";
haxe_ui_containers__$TabView_PageCount.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_PageCount.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		return haxe_ui_util_Variant.fromInt(builder._tabs.get_tabCount());
	}
	,__class__: haxe_ui_containers__$TabView_PageCount
});
var haxe_ui_containers__$TabView_RemovePage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemovePage"] = haxe_ui_containers__$TabView_RemovePage;
haxe_ui_containers__$TabView_RemovePage.__name__ = "haxe.ui.containers._TabView.RemovePage";
haxe_ui_containers__$TabView_RemovePage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemovePage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		if(index < builder._views.length) {
			builder._tabs.removeTab(index);
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemovePage
});
var haxe_ui_containers__$TabView_GetPage = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.GetPage"] = haxe_ui_containers__$TabView_GetPage;
haxe_ui_containers__$TabView_GetPage.__name__ = "haxe.ui.containers._TabView.GetPage";
haxe_ui_containers__$TabView_GetPage.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_GetPage.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var index = param;
		var page = null;
		if(index < builder._views.length) {
			page = builder._views[index];
		}
		return haxe_ui_util_Variant.fromComponent(page);
	}
	,__class__: haxe_ui_containers__$TabView_GetPage
});
var haxe_ui_containers__$TabView_RemoveAllPages = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TabView.RemoveAllPages"] = haxe_ui_containers__$TabView_RemoveAllPages;
haxe_ui_containers__$TabView_RemoveAllPages.__name__ = "haxe.ui.containers._TabView.RemoveAllPages";
haxe_ui_containers__$TabView_RemoveAllPages.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TabView_RemoveAllPages.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		while(builder._views.length > 0) builder._tabs.removeTab(0);
		(js_Boot.__cast(this._component , haxe_ui_containers_TabView)).set_pageIndex(-1);
		builder._tabs.set_selectedIndex(-1);
		return null;
	}
	,__class__: haxe_ui_containers__$TabView_RemoveAllPages
});
var haxe_ui_containers__$TabView_Events = function(tabview) {
	haxe_ui_events_Events.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Events"] = haxe_ui_containers__$TabView_Events;
haxe_ui_containers__$TabView_Events.__name__ = "haxe.ui.containers._TabView.Events";
haxe_ui_containers__$TabView_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TabView_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_tabview: null
	,register: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		if(tabs.hasEvent("change",$bind(this,this.onTabChanged)) == false) {
			tabs.registerEvent("change",$bind(this,this.onTabChanged));
		}
		if(tabs.hasEvent("beforeClose",$bind(this,this.onBeforeTabClosed)) == false) {
			tabs.registerEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
		}
		if(tabs.hasEvent("close",$bind(this,this.onTabClosed)) == false) {
			tabs.registerEvent("close",$bind(this,this.onTabClosed));
		}
	}
	,unregister: function() {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		tabs.unregisterEvent("change",$bind(this,this.onTabChanged));
		tabs.unregisterEvent("beforeClose",$bind(this,this.onBeforeTabClosed));
	}
	,onBeforeTabClosed: function(event) {
		this._tabview.dispatch(event);
	}
	,onTabClosed: function(event) {
		var builder = js_Boot.__cast(this._tabview._compositeBuilder , haxe_ui_containers__$TabView_Builder);
		var view = builder._views[event.data];
		HxOverrides.remove(builder._views,view);
		builder._content.removeComponent(view);
		this._tabview.dispatch(new haxe_ui_events_UIEvent("close",event.data));
	}
	,onTabChanged: function(event) {
		var tabs = this._tabview.findComponent(null,haxe_ui_components_TabBar,false);
		this._tabview.set_pageIndex(-1);
		this._tabview.set_pageIndex(tabs.get_selectedIndex());
	}
	,__class__: haxe_ui_containers__$TabView_Events
});
var haxe_ui_containers__$TabView_Builder = function(tabview) {
	this._views = [];
	this._currentView = null;
	haxe_ui_core_CompositeBuilder.call(this,tabview);
	this._tabview = tabview;
};
$hxClasses["haxe.ui.containers._TabView.Builder"] = haxe_ui_containers__$TabView_Builder;
haxe_ui_containers__$TabView_Builder.__name__ = "haxe.ui.containers._TabView.Builder";
haxe_ui_containers__$TabView_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TabView_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_tabview: null
	,_tabs: null
	,_content: null
	,_currentView: null
	,_views: null
	,create: function() {
		if(this._content == null) {
			this._content = new haxe_ui_containers_Box();
			this._content.set_id("tabview-content");
			this._content.addClass("tabview-content");
			this._content.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("vertical"));
			this._content.componentTabIndex = 1;
			this._tabview.addComponent(this._content);
		}
		if(this._tabs == null) {
			this._tabs = new haxe_ui_components_TabBar();
			this._tabs.set_id("tabview-tabs");
			this._tabs.addClass("tabview-tabs");
			this._tabs.componentTabIndex = 0;
			this._tabview.addComponent(this._tabs);
		}
	}
	,get_numComponents: function() {
		return this._views.length;
	}
	,addComponent: function(child) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			child.registerEvent("propertyChange",$bind(this,this.onPagePropertyChanged));
			this._views.push(child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponent(button);
			return child;
		}
		return null;
	}
	,addComponentAt: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var text = child.get_text();
			var icon = null;
			if(((child) instanceof haxe_ui_containers_Box)) {
				icon = (js_Boot.__cast(child , haxe_ui_containers_Box)).get_icon();
			}
			child.registerEvent("propertyChange",$bind(this,this.onPagePropertyChanged));
			this._views.splice(index,0,child);
			var button = new haxe_ui_components_Button();
			button.set_text(text);
			button.set_icon(haxe_ui_util_Variant.fromString(icon));
			button.set_tooltip(child.get_tooltip());
			if(child.get_id() != null) {
				button.set_id(child.get_id() + "_button");
			}
			this._tabs.addComponentAt(button,index);
			return child;
		}
		return null;
	}
	,onPagePropertyChanged: function(event) {
		if(event.data == "text") {
			var index = this._views.indexOf(event.target);
			var button = this._tabs.getTab(index);
			if(button != null && button.get_text() != event.target.get_text()) {
				button.set_text(event.target.get_text());
			}
		} else if(event.data == "icon") {
			var index = this._views.indexOf(event.target);
			var button = js_Boot.__cast(this._tabs.getTab(index) , haxe_ui_components_Button);
			if(button != null && haxe_ui_util_Variant.neq(button.get_icon(),haxe_ui_util_Variant.fromString((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon()))) {
				button.set_icon(haxe_ui_util_Variant.fromString((js_Boot.__cast(event.target , haxe_ui_containers_Box)).get_icon()));
			}
		}
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._tabs.removeComponentAt(i,dispose,invalidate);
				return child;
			}
		}
		return null;
	}
	,removeComponentAt: function(index,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		this._views.splice(index,1);
		return this._tabs.removeComponentAt(index,dispose,invalidate);
	}
	,getComponentIndex: function(child) {
		return this._views.indexOf(child);
	}
	,setComponentIndex: function(child,index) {
		if(child != this._content && child != this._tabs) {
			var _g = this._views.indexOf(child);
			if(_g != -1) {
				var i = _g;
				this._views.splice(i,1);
				this._views.splice(index,0,child);
				this._tabs.setComponentIndex(this._tabs.getComponentAt(i),index);
				return child;
			}
		}
		return null;
	}
	,getComponentAt: function(index) {
		return this._views[index];
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				match = view.findComponent(criteria,type,recursive,searchType);
				if(view.matchesSearch(criteria,type,searchType)) {
					return view;
				} else {
					match = view.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,__class__: haxe_ui_containers__$TabView_Builder
});
var haxe_ui_containers_TableView = function() {
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TableView"] = haxe_ui_containers_TableView;
haxe_ui_containers_TableView.__name__ = "haxe.ui.containers.TableView";
haxe_ui_containers_TableView.__interfaces__ = [haxe_ui_containers_IVirtualContainer,haxe_ui_core_IDataComponent];
haxe_ui_containers_TableView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TableView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	clearContents: function(clearHeader) {
		if(clearHeader == null) {
			clearHeader = false;
		}
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("clearContents",clearHeader);
	}
	,addColumn: function(text) {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.call("addColumn",text));
	}
	,removeColumn: function(text) {
		if(this.behaviours == null) {
			return null;
		}
		return this.behaviours.call("removeColumn",text);
	}
	,_itemRendererClass: null
	,get_itemRendererClass: function() {
		return this._itemRendererClass;
	}
	,set_itemRendererClass: function(value) {
		if(this._itemRendererClass != value) {
			this._itemRendererClass = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
			if(!(this._layout == null || this._layoutLocked == true)) {
				this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TableView_Events;
		this._compositeBuilderClass = haxe_ui_containers__$TableView_Builder;
		this._defaultLayoutClass = haxe_ui_containers__$TableView_Layout;
	}
	,_internal__onComponentEvent: null
	,onComponentEvent: null
	,set_onComponentEvent: function(value) {
		if(this._internal__onComponentEvent != null) {
			this.unregisterEvent("itemComponentEvent",this._internal__onComponentEvent);
			this._internal__onComponentEvent = null;
		}
		if(value != null) {
			this._internal__onComponentEvent = value;
			this.registerEvent("itemComponentEvent",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
		this.behaviours.register("dataSource",haxe_ui_containers__$TableView_DataSourceBehaviour);
		this.behaviours.register("itemWidth",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemHeight",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("itemCount",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("variableItemSize",haxe_ui_behaviours_LayoutBehaviour,haxe_ui_util_Variant.fromBool(false));
		this.behaviours.register("selectedIndex",haxe_ui_containers__$TableView_SelectedIndexBehaviour,haxe_ui_util_Variant.fromInt(-1));
		this.behaviours.register("selectedItem",haxe_ui_containers__$TableView_SelectedItemBehaviour);
		this.behaviours.register("selectedIndices",haxe_ui_containers__$TableView_SelectedIndicesBehaviour);
		this.behaviours.register("selectedItems",haxe_ui_containers__$TableView_SelectedItemsBehaviour);
		this.behaviours.register("selectionMode",haxe_ui_containers__$TableView_SelectionModeBehaviour,haxe_ui_util_Variant.fromString("one-item"));
		this.behaviours.register("longPressSelectionTime",haxe_ui_behaviours_DefaultBehaviour,haxe_ui_util_Variant.fromInt(500));
		this.behaviours.register("header",haxe_ui_containers__$TableView_GetHeader);
		this.behaviours.register("clearContents",haxe_ui_containers__$TableView_ClearTable);
		this.behaviours.register("addColumn",haxe_ui_containers__$TableView_AddColumn);
		this.behaviours.register("removeColumn",haxe_ui_containers__$TableView_RemoveColumn);
	}
	,get_dataSource: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toDataSource(this.behaviours.get("dataSource"));
	}
	,set_dataSource: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("dataSource",haxe_ui_util_Variant.fromDataSource(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"dataSource"));
		return value;
	}
	,get_itemWidth: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemWidth"));
	}
	,set_itemWidth: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemWidth",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemWidth"));
		return value;
	}
	,get_itemHeight: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toFloat(this.behaviours.get("itemHeight"));
	}
	,set_itemHeight: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemHeight",haxe_ui_util_Variant.fromFloat(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemHeight"));
		return value;
	}
	,get_itemCount: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("itemCount"));
	}
	,set_itemCount: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("itemCount",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"itemCount"));
		return value;
	}
	,get_variableItemSize: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("variableItemSize"));
	}
	,set_variableItemSize: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("variableItemSize",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"variableItemSize"));
		return value;
	}
	,get_selectedIndex: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("selectedIndex"));
	}
	,set_selectedIndex: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndex",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndex"));
		return value;
	}
	,get_selectedItem: function() {
		return this.behaviours.getDynamic("selectedItem");
	}
	,set_selectedItem: function(value) {
		this.behaviours.setDynamic("selectedItem",value);
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItem"));
		return value;
	}
	,get_selectedIndices: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedIndices"));
	}
	,set_selectedIndices: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedIndices",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedIndices"));
		return value;
	}
	,get_selectedItems: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toArray(this.behaviours.get("selectedItems"));
	}
	,set_selectedItems: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectedItems",haxe_ui_util_Variant.fromArray(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectedItems"));
		return value;
	}
	,get_selectionMode: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("selectionMode"));
	}
	,set_selectionMode: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("selectionMode",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"selectionMode"));
		return value;
	}
	,get_longPressSelectionTime: function() {
		if(this.behaviours == null) {
			return 0;
		}
		return haxe_ui_util_Variant.toInt(this.behaviours.get("longPressSelectionTime"));
	}
	,set_longPressSelectionTime: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("longPressSelectionTime",haxe_ui_util_Variant.fromInt(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"longPressSelectionTime"));
		return value;
	}
	,get_header: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toComponent(this.behaviours.get("header"));
	}
	,set_header: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("header",haxe_ui_util_Variant.fromComponent(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"header"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TableView();
	}
	,__class__: haxe_ui_containers_TableView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_header:"set_header",get_header:"get_header",set_longPressSelectionTime:"set_longPressSelectionTime",get_longPressSelectionTime:"get_longPressSelectionTime",set_selectionMode:"set_selectionMode",get_selectionMode:"get_selectionMode",set_selectedItems:"set_selectedItems",get_selectedItems:"get_selectedItems",set_selectedIndices:"set_selectedIndices",get_selectedIndices:"get_selectedIndices",set_selectedItem:"set_selectedItem",get_selectedItem:"get_selectedItem",set_selectedIndex:"set_selectedIndex",get_selectedIndex:"get_selectedIndex",set_variableItemSize:"set_variableItemSize",get_variableItemSize:"get_variableItemSize",set_itemCount:"set_itemCount",get_itemCount:"get_itemCount",set_itemHeight:"set_itemHeight",get_itemHeight:"get_itemHeight",set_itemWidth:"set_itemWidth",get_itemWidth:"get_itemWidth",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource",set_onComponentEvent:"set_onComponentEvent",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_itemRendererClass:"set_itemRendererClass",get_itemRendererClass:"get_itemRendererClass"})
});
var haxe_ui_core_ItemRenderer = function() {
	this._fieldList = null;
	this.itemIndex = -1;
	this._allowHover = true;
	haxe_ui_containers_Box.call(this);
	this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
	this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
	this.registerEvent("mousedown",$bind(this,this._onItemMouseDown));
	this.registerEvent("mouseup",$bind(this,this._onItemMouseUp));
};
$hxClasses["haxe.ui.core.ItemRenderer"] = haxe_ui_core_ItemRenderer;
haxe_ui_core_ItemRenderer.__name__ = "haxe.ui.core.ItemRenderer";
haxe_ui_core_ItemRenderer.__super__ = haxe_ui_containers_Box;
haxe_ui_core_ItemRenderer.prototype = $extend(haxe_ui_containers_Box.prototype,{
	_onItemMouseOver: function(event) {
		this.addClass(":hover");
	}
	,_onItemMouseOut: function(event) {
		this.removeClass(":hover");
	}
	,_onItemMouseDown: function(event) {
		this.addClass(":down");
	}
	,_onItemMouseUp: function(event) {
		this.removeClass(":down");
	}
	,_allowHover: null
	,get_allowHover: function() {
		return this._allowHover;
	}
	,set_allowHover: function(value) {
		if(this._allowHover == value) {
			return value;
		}
		this._allowHover = value;
		if(this._allowHover == true) {
			this.registerEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.registerEvent("mouseout",$bind(this,this._onItemMouseOut));
		} else {
			this.unregisterEvent("mouseover",$bind(this,this._onItemMouseOver));
			this.unregisterEvent("mouseout",$bind(this,this._onItemMouseOut));
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.invalidateComponent("data",false);
		return value;
	}
	,itemIndex: null
	,_fieldList: null
	,validateComponentData: function() {
		if(this._data != null && (this._fieldList == null || this._fieldList.length == 0)) {
			var _g = Type.typeof(this._data);
			switch(_g._hx_index) {
			case 4:
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g1 = 0;
						while(_g1 < instanceFields.length) {
							var i = instanceFields[_g1];
							++_g1;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			case 6:
				var _g1 = _g.c;
				if(typeof(this._data) == "string" == false) {
					var fieldList = Reflect.fields(this._data);
					if(js_Boot.getClass(this._data) != null) {
						var instanceFields = Type.getInstanceFields(js_Boot.getClass(this._data));
						var _g = 0;
						while(_g < instanceFields.length) {
							var i = instanceFields[_g];
							++_g;
							if(fieldList.indexOf(i) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == false) {
								fieldList.push(i);
							} else if(StringTools.startsWith(i,"get_") && fieldList.indexOf(HxOverrides.substr(i,4,null)) == -1 && Reflect.isFunction(Reflect.getProperty(this._data,i)) == true) {
								fieldList.push(HxOverrides.substr(i,4,null));
							}
						}
						this._fieldList = fieldList;
					}
				} else {
					this._fieldList = ["text"];
				}
				break;
			default:
				this._fieldList = ["text"];
			}
		}
		this.updateValues(this._data,this._fieldList);
		var components = this.findComponents(null,haxe_ui_core_InteractiveComponent);
		var _g = 0;
		while(_g < components.length) {
			var c = components[_g];
			++_g;
			if(((c) instanceof haxe_ui_components_Button)) {
				if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
					c.registerEvent("click",$bind(this,this.onItemClick));
				}
			} else if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
				c.registerEvent("change",$bind(this,this.onItemChange));
			}
		}
		this.onDataChanged(this._data);
	}
	,onDataChanged: function(data) {
	}
	,onItemChange: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var v = event.target.get_value();
		if(this._data != null) {
			Reflect.setProperty(this._data,event.target.get_id(),v);
		}
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,onItemClick: function(event) {
		if(this.itemIndex < 0) {
			return;
		}
		var e = new haxe_ui_events_ItemEvent("itemComponentEvent");
		e.bubble = true;
		e.source = event.target;
		e.sourceEvent = event;
		e.itemIndex = this.itemIndex;
		e.data = this._data;
		this.dispatch(e);
	}
	,updateValues: function(value,fieldList) {
		if(fieldList == null) {
			fieldList = Reflect.fields(value);
		}
		var valueObject = null;
		var _g = Type.typeof(value);
		switch(_g._hx_index) {
		case 4:
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		case 6:
			var _g1 = _g.c;
			if(typeof(value) == "string" == false) {
				valueObject = value;
			} else {
				valueObject = { text : value};
			}
			break;
		default:
			valueObject = { text : value};
		}
		var _g = 0;
		while(_g < fieldList.length) {
			var f = fieldList[_g];
			++_g;
			var v = Reflect.getProperty(valueObject,f);
			var c = this.findComponent(f,null,true);
			if(c != null && v != null) {
				var propValue = haxe_ui_util_TypeConverter.convertTo(v,haxe_ui_core_TypeMap.getTypeInfo(c.get_className(),"value"));
				c.set_value(propValue);
				if(((c) instanceof haxe_ui_core_InteractiveComponent)) {
					if(c.hasEvent("change",$bind(this,this.onItemChange)) == false) {
						c.registerEvent("change",$bind(this,this.onItemChange));
					}
					if(c.hasEvent("click",$bind(this,this.onItemClick)) == false) {
						c.registerEvent("click",$bind(this,this.onItemClick));
					}
				}
				c.show();
			} else if(c != null) {
				c.hide();
			} else if(f != "id" && f != "layout") {
				try {
					Reflect.setProperty(this,f,v);
				} catch( _g1 ) {
				}
			} else if(Type.typeof(v) == ValueType.TObject) {
				this.updateValues(v);
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		c.set_allowHover(this.get_allowHover());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_ItemRenderer();
	}
	,__class__: haxe_ui_core_ItemRenderer
	,__properties__: $extend(haxe_ui_containers_Box.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_allowHover:"set_allowHover",get_allowHover:"get_allowHover"})
});
var haxe_ui_containers__$TableView_CompoundItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	this.set_layout(haxe_ui_layouts_LayoutFactory.createFromName("horizontal"));
	this.set_styleString("spacing: 2px;");
	this.removeClass("itemrenderer");
};
$hxClasses["haxe.ui.containers._TableView.CompoundItemRenderer"] = haxe_ui_containers__$TableView_CompoundItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.__name__ = "haxe.ui.containers._TableView.CompoundItemRenderer";
haxe_ui_containers__$TableView_CompoundItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_containers__$TableView_CompoundItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	onDataChanged: function(data) {
		var renderers = this.findComponents(null,haxe_ui_core_ItemRenderer);
		var _g = 0;
		while(_g < renderers.length) {
			var r = renderers[_g];
			++_g;
			r.onDataChanged(data);
		}
	}
	,registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers__$TableView_CompoundItemRenderer();
	}
	,__class__: haxe_ui_containers__$TableView_CompoundItemRenderer
});
var haxe_ui_containers__$TableView_Events = function(tableview) {
	haxe_ui_containers_ScrollViewEvents.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Events"] = haxe_ui_containers__$TableView_Events;
haxe_ui_containers__$TableView_Events.__name__ = "haxe.ui.containers._TableView.Events";
haxe_ui_containers__$TableView_Events.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TableView_Events.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_tableview: null
	,register: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.register.call(this);
		this.registerEvent("scrollchange",$bind(this,this.onScrollChange));
		this.registerEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.registerEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,unregister: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.unregister.call(this);
		this.unregisterEvent("scrollchange",$bind(this,this.onScrollChange));
		this.unregisterEvent("rendererCreated",$bind(this,this.onRendererCreated));
		this.unregisterEvent("rendererDestroyed",$bind(this,this.onRendererDestroyed));
	}
	,onScrollChange: function(e) {
		var _this = this._tableview;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,onRendererCreated: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.registerEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.registerEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected");
		}
	}
	,onRendererDestroyed: function(e) {
		var instance = js_Boot.__cast(e.data , haxe_ui_core_ItemRenderer);
		instance.unregisterEvent("mousedown",$bind(this,this.onRendererMouseDown));
		instance.unregisterEvent("click",$bind(this,this.onRendererClick));
		if(this._tableview.get_selectedIndices().indexOf(instance.itemIndex) != -1) {
			var builder = js_Boot.__cast(this._tableview._compositeBuilder , haxe_ui_containers__$TableView_Builder);
			builder.addItemRendererClass(instance,":selected",false);
		}
	}
	,onRendererMouseDown: function(e) {
		if(this._tableview.get_selectionMode() == "multiple-long-press") {
			if(this._tableview.get_selectedIndices().length == 0) {
				this.startLongPressSelection(e);
			}
		}
	}
	,startLongPressSelection: function(e) {
		var _gthis = this;
		var timerClick = null;
		var currentMouseX = e.screenX;
		var currentMouseY = e.screenY;
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		var __onMouseMove = null;
		var __onMouseUp = null;
		var __onMouseClick = null;
		__onMouseMove = function(_e) {
			currentMouseX = _e.screenX;
			currentMouseY = _e.screenY;
		};
		__onMouseUp = function(_e) {
			if(timerClick != null) {
				timerClick.stop();
				timerClick = null;
			}
			renderer.get_screen().unregisterEvent("mousemove",__onMouseMove);
			renderer.get_screen().unregisterEvent("mouseup",__onMouseUp);
		};
		__onMouseClick = function(_e) {
			_e.cancel();
			renderer.unregisterEvent("click",__onMouseClick);
		};
		renderer.get_screen().registerEvent("mousemove",__onMouseMove);
		renderer.get_screen().registerEvent("mouseup",__onMouseUp);
		timerClick = haxe_Timer.delay(function() {
			if(timerClick != null) {
				timerClick = null;
				var timerClick1;
				if(renderer.hitTest(currentMouseX,currentMouseY)) {
					var x1 = e.screenX;
					var y1 = e.screenY;
					timerClick1 = Math.sqrt((x1 - currentMouseX) * (x1 - currentMouseX) + (y1 - currentMouseY) * (y1 - currentMouseY)) < 2 * haxe_ui_Toolkit.pixelsPerRem;
				} else {
					timerClick1 = false;
				}
				if(timerClick1) {
					_gthis.toggleSelection(renderer);
					renderer.registerEvent("click",__onMouseClick,1);
				}
			}
		},this._tableview.get_longPressSelectionTime());
	}
	,onContainerEventsStatusChanged: function() {
		haxe_ui_containers_ScrollViewEvents.prototype.onContainerEventsStatusChanged.call(this);
		if(this._containerEventsPaused == true) {
			this._tableview.findComponent("tableview-contents",haxe_ui_core_Component,true,"css").removeClass(":hover",true,true);
		} else {
			var tmp = this._lastMousePos != null;
		}
	}
	,onRendererClick: function(e) {
		if(this._containerEventsPaused == true) {
			return;
		}
		var components = e.target.findComponentsUnderPoint(e.screenX,e.screenY);
		var _g = 0;
		while(_g < components.length) {
			var component = components[_g];
			++_g;
			if(((component) instanceof haxe_ui_core_InteractiveComponent) && (js_Boot.__cast(component , haxe_ui_core_InteractiveComponent)).get_allowInteraction() == true) {
				return;
			}
		}
		var renderer = js_Boot.__cast(e.target , haxe_ui_core_ItemRenderer);
		switch(this._tableview.get_selectionMode()) {
		case "disabled":
			break;
		case "multiple-click-modifier-key":case "multiple-modifier-key":
			if(e.ctrlKey == true) {
				this.toggleSelection(renderer);
			} else if(e.shiftKey == true) {
				var selectedIndices = this._tableview.get_selectedIndices();
				var fromIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : 0;
				var toIndex = renderer.itemIndex;
				if(fromIndex < toIndex) {
					var _g = 0;
					while(_g < selectedIndices.length) {
						var i = selectedIndices[_g];
						++_g;
						if(i < fromIndex) {
							fromIndex = i;
						}
					}
				} else {
					var tmp = fromIndex;
					fromIndex = toIndex;
					toIndex = tmp;
				}
				this.selectRange(fromIndex,toIndex);
			} else if(this._tableview.get_selectionMode() == "multiple-click-modifier-key") {
				this._tableview.set_selectedIndex(renderer.itemIndex);
			}
			break;
		case "multiple-long-press":
			var selectedIndices = this._tableview.get_selectedIndices();
			if(selectedIndices.length > 0) {
				this.toggleSelection(renderer);
			}
			break;
		case "one-item":
			this._tableview.set_selectedIndex(renderer.itemIndex);
			break;
		case "one-item-repeated":
			this._tableview.set_selectedIndices([renderer.itemIndex]);
			break;
		default:
		}
	}
	,toggleSelection: function(renderer) {
		var itemIndex = renderer.itemIndex;
		var selectedIndices = this._tableview.get_selectedIndices().slice();
		var index = selectedIndices.indexOf(itemIndex);
		if(index == -1) {
			selectedIndices.push(itemIndex);
		} else {
			selectedIndices.splice(index,1);
		}
		this._tableview.set_selectedIndices(selectedIndices);
	}
	,selectRange: function(fromIndex,toIndex) {
		var tmp = this._tableview;
		var _g = [];
		var _g1 = fromIndex;
		var _g2 = toIndex + 1;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(i);
		}
		tmp.set_selectedIndices(_g);
	}
	,__class__: haxe_ui_containers__$TableView_Events
});
var haxe_ui_containers__$TableView_Builder = function(tableview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,tableview);
	this._tableview = tableview;
};
$hxClasses["haxe.ui.containers._TableView.Builder"] = haxe_ui_containers__$TableView_Builder;
haxe_ui_containers__$TableView_Builder.__name__ = "haxe.ui.containers._TableView.Builder";
haxe_ui_containers__$TableView_Builder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TableView_Builder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_tableview: null
	,_header: null
	,create: function() {
		this.createContentContainer(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,onInitialize: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
	}
	,onReady: function() {
		if(this._header == null) {
			return;
		}
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,createContentContainer: function(layoutName) {
		if(this._contents == null) {
			haxe_ui_containers_ScrollViewBuilder.prototype.createContentContainer.call(this,layoutName);
			this._contents.addClass("tableview-contents");
		}
	}
	,addComponent: function(child) {
		var r = null;
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			var itemRenderer = this._tableview.get_itemRenderer();
			if(itemRenderer == null) {
				itemRenderer = new haxe_ui_containers__$TableView_CompoundItemRenderer();
				this._tableview.set_itemRenderer(itemRenderer);
			}
			itemRenderer.addComponent(child);
			return child;
		} else if(((child) instanceof haxe_ui_containers_Header)) {
			this._header = js_Boot.__cast(child , haxe_ui_containers_Header);
			this._header.registerEvent("componentAdded",$bind(this,this.onColumnAdded));
			this._header.registerEvent("sortchanged",$bind(this,this.onSortChanged));
			r = null;
		} else {
			r = haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
		}
		return r;
	}
	,onColumnAdded: function(e) {
		if(this._tableview.get_itemRenderer() == null) {
			this.buildDefaultRenderer();
		} else {
			this.fillExistingRenderer();
		}
		var _this = this._component;
		if(!(_this._layout == null || _this._layoutLocked == true)) {
			_this.invalidateComponent("layout",false);
		}
	}
	,onSortChanged: function(e) {
		var column = js_Boot.__cast(e.target , haxe_ui_components_Column);
		var field = column.get_id();
		if(column.sortField != null) {
			field = column.sortField;
		}
		this._tableview.get_dataSource().sort(field,e.direction);
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_Header) == true) {
			this._header = null;
			return null;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.removeComponent.call(this,child,dispose,invalidate);
	}
	,createRenderer: function(id) {
		var itemRenderer = null;
		if(this._tableview.get_itemRendererClass() == null) {
			itemRenderer = new haxe_ui_core_ItemRenderer();
		} else {
			itemRenderer = Type.createInstance(this._tableview.get_itemRendererClass(),[]);
		}
		if((itemRenderer._children == null ? [] : itemRenderer._children).length == 0) {
			var label = new haxe_ui_components_Label();
			label.set_id(id);
			label.set_percentWidth(100);
			label.set_verticalAlign("center");
			itemRenderer.addComponent(label);
		}
		return itemRenderer;
	}
	,buildDefaultRenderer: function() {
		var r = new haxe_ui_containers__$TableView_CompoundItemRenderer();
		if(this._header != null) {
			var _g = 0;
			var _this = this._header;
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var column = _g1[_g];
				++_g;
				var itemRenderer = this.createRenderer(column.get_id());
				r.addComponent(itemRenderer);
			}
		}
		this._tableview.set_itemRenderer(r);
	}
	,fillExistingRenderer: function() {
		var i = 0;
		var _g = 0;
		var _this = this._header;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var column = _g1[_g];
			++_g;
			var existing = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true);
			if(existing == null) {
				var temp = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_Component,true);
				if(temp != null) {
					if(((temp) instanceof haxe_ui_core_ItemRenderer)) {
						existing = js_Boot.__cast(temp , haxe_ui_core_ItemRenderer);
					} else {
						existing = temp.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					this._tableview.get_itemRenderer().setComponentIndex(existing,i);
				} else {
					var itemRenderer = this.createRenderer(column.get_id());
					this._tableview.get_itemRenderer().addComponentAt(itemRenderer,i);
				}
			} else {
				this._tableview.get_itemRenderer().setComponentIndex(existing,i);
			}
			++i;
		}
		var data = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			var _g = 0;
			var _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var _g2 = 0;
				var _this = this._header;
				var _g3 = _this._children == null ? [] : _this._children;
				while(_g2 < _g3.length) {
					var column = _g3[_g2];
					++_g2;
					var existing = item.findComponent(column.get_id(),haxe_ui_core_ItemRenderer,true);
					if(existing == null) {
						var temp = this._tableview.get_itemRenderer().findComponent(column.get_id(),haxe_ui_core_Component,true);
						var renderer = null;
						if(((temp) instanceof haxe_ui_core_ItemRenderer)) {
							renderer = js_Boot.__cast(temp , haxe_ui_core_ItemRenderer);
						} else {
							renderer = temp.findAncestor(null,haxe_ui_core_ItemRenderer);
						}
						var index = this._tableview.get_itemRenderer().getComponentIndex(renderer);
						var instance = renderer.cloneComponent();
						if(index < 0) {
							item.addComponent(instance);
						} else {
							item.addComponentAt(instance,index);
						}
					}
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		if(this._header == null) {
			return 0;
		}
		return this._header.get_height();
	}
	,onVirtualChanged: function() {
		this._contents.set_layoutName(this._tableview.get_virtual() ? "absolute" : "vertical");
	}
	,get_virtualHorizontal: function() {
		return false;
	}
	,addItemRendererClass: function(child,className,add) {
		if(add == null) {
			add = true;
		}
		child.walkComponents(function(c) {
			if(((c) instanceof haxe_ui_core_ItemRenderer)) {
				if(add == true) {
					c.addClass(className);
				} else {
					c.removeClass(className);
				}
			} else {
				c.invalidateComponent("style",false);
			}
			return true;
		});
	}
	,__class__: haxe_ui_containers__$TableView_Builder
});
var haxe_ui_layouts_ScrollViewLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.ScrollViewLayout"] = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_ScrollViewLayout.__name__ = "haxe.ui.layouts.ScrollViewLayout";
haxe_ui_layouts_ScrollViewLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_ScrollViewLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents == null) {
			return;
		}
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var borderSize = this.get_borderSize();
		if(hscroll != null && this.hidden(hscroll) == false) {
			hscroll.moveComponent(this.get_paddingLeft() + borderSize,Math.round(this.get_component().get_componentHeight() - hscroll.get_componentHeight() - this.get_paddingBottom() + this.marginTop(hscroll) - borderSize));
		}
		if(vscroll != null && this.hidden(vscroll) == false) {
			vscroll.moveComponent(Math.round(this.get_component().get_componentWidth() - vscroll.get_componentWidth() - this.get_paddingRight() + this.marginLeft(vscroll)) - borderSize,this.get_paddingTop() + borderSize);
		}
		var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
		if(contents != null) {
			contents.moveComponent(this.get_paddingLeft() + borderSize,this.get_paddingTop() + borderSize);
		}
	}
	,resizeChildren: function() {
		haxe_ui_layouts_DefaultLayout.prototype.resizeChildren.call(this);
		var scrollview = js_Boot.__cast(this._component , haxe_ui_containers_ScrollView);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var usableSize = this.get_usableSize();
		var percentWidth = 100;
		var percentHeight = 100;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != hscroll && child != vscroll) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				cx = usableSize.width * child.get_percentWidth() / percentWidth - this.marginLeft(child) - this.marginRight(child);
			}
			if(child.get_percentHeight() != null) {
				cy = usableSize.height * child.get_percentHeight() / percentHeight - this.marginTop(child) - this.marginBottom(child);
			}
			if(this.fixedMinWidth(child) && child.get_percentWidth() != null) {
				percentWidth -= child.get_percentWidth();
			}
			if(this.fixedMinHeight(child) && child.get_percentHeight() != null) {
				percentHeight -= child.get_percentHeight();
			}
			if(scrollview.get_autoHideScrolls() == true) {
				if(child == hscroll && vscroll != null && vscroll.get_hidden() == false) {
					cx -= vscroll.get_width();
				} else if(child == vscroll && hscroll != null && hscroll.get_hidden() == false) {
					cy -= hscroll.get_height();
				}
			}
			child.resizeComponent(cx,cy);
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		if(hscroll != null && hscroll.get_includeInLayout() == true && this.hidden(hscroll) == false) {
			size.height -= hscroll.get_componentHeight() - this.marginTop(hscroll);
		}
		if(vscroll != null && vscroll.get_includeInLayout() == true && this.hidden(vscroll) == false) {
			size.width -= vscroll.get_componentWidth() - this.marginLeft(vscroll);
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_componentWidth() > size.width) {
					size.height -= haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_componentHeight() > size.height) {
					size.width -= haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		var borderSize = this.get_borderSize();
		size.width -= borderSize * 2;
		size.height -= borderSize * 2;
		return size;
	}
	,calcAutoSize: function(exclusions) {
		var hscroll = this.get_component().findComponent(null,haxe_ui_components_HorizontalScroll,false);
		var vscroll = this.get_component().findComponent(null,haxe_ui_components_VerticalScroll,false);
		var size = haxe_ui_layouts_DefaultLayout.prototype.calcAutoSize.call(this,[hscroll,vscroll]);
		if(hscroll != null && hscroll.get_hidden() == false) {
			size.height += hscroll.get_componentHeight();
		}
		if(vscroll != null && vscroll.get_hidden() == false) {
			size.width += vscroll.get_componentWidth();
		}
		if((js_Boot.__cast(this.get_component() , haxe_ui_containers_ScrollView)).get_native() == true || this._component.get_isNativeScroller() == true) {
			var contents = this.get_component().findComponent("scrollview-contents",null,false,"css");
			if(contents != null) {
				if(contents.get_width() > this.get_component().get_width()) {
					size.height += haxe_ui_core_Platform.get_hscrollHeight();
				}
				if(contents.get_height() > this.get_component().get_height()) {
					size.width += haxe_ui_core_Platform.get_vscrollWidth();
				}
			}
		}
		size.width += this.get_borderSize() * 2;
		size.height += this.get_borderSize() * 2;
		return size;
	}
	,__class__: haxe_ui_layouts_ScrollViewLayout
});
var haxe_ui_layouts_VirtualLayout = function() {
	this._lastItemRenderer = null;
	this._firstPass = true;
	this._sizeCache = [];
	this._rendererPool = [];
	this._lastIndex = -1;
	this._firstIndex = -1;
	haxe_ui_layouts_ScrollViewLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VirtualLayout"] = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VirtualLayout.__name__ = "haxe.ui.layouts.VirtualLayout";
haxe_ui_layouts_VirtualLayout.__super__ = haxe_ui_layouts_ScrollViewLayout;
haxe_ui_layouts_VirtualLayout.prototype = $extend(haxe_ui_layouts_ScrollViewLayout.prototype,{
	_firstIndex: null
	,_lastIndex: null
	,_rendererPool: null
	,_sizeCache: null
	,contents: null
	,get_contents: function() {
		if(this.contents == null) {
			this.contents = this.findComponent("scrollview-contents",null,false,"css");
		}
		return this.contents;
	}
	,get_dataSource: function() {
		return (js_Boot.__cast(this._component , haxe_ui_core_IDataComponent)).get_dataSource();
	}
	,itemWidth: null
	,get_itemWidth: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemWidth() > 0) {
			return comp.get_itemWidth();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_width();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_width();
			}
		}
		if(result > 0) {
			comp.set_itemWidth(result);
		} else {
			result = 1;
		}
		return result;
	}
	,_firstPass: null
	,itemHeight: null
	,get_itemHeight: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemHeight() > 0) {
			return comp.get_itemHeight();
		}
		var _this = this.get_contents();
		var childComponents = _this._children == null ? [] : _this._children;
		var result = 0;
		if(childComponents.length > 0) {
			result = childComponents[0].get_height();
			if(result <= 0) {
				childComponents[0].syncComponentValidation();
				result = childComponents[0].get_height();
			}
		}
		if(result <= 0) {
			result = 25;
		} else if(comp.get_virtual() == true) {
			if(this._firstPass == false) {
				comp.set_itemHeight(result);
			}
			if(this._firstPass == true) {
				this._firstPass = false;
			}
		}
		return result;
	}
	,itemCount: null
	,get_itemCount: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() >= 0) {
			return comp.get_itemCount();
		} else {
			return 0;
		}
	}
	,refresh: function() {
		this.refreshData();
		haxe_ui_layouts_ScrollViewLayout.prototype.refresh.call(this);
	}
	,refreshData: function() {
		if(this.get_dataSource() == null) {
			return;
		}
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == false) {
			this.refreshNonVirtualData();
		} else {
			this.refreshVirtualData();
		}
	}
	,_lastItemRenderer: null
	,refreshNonVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
		}
		var dataSource = this.get_dataSource();
		var contents = this.get_contents();
		var _g = 0;
		var _g1 = dataSource.get_size();
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			if(n < (contents._children == null ? [] : contents._children).length) {
				item = js_Boot.__cast((contents._children == null ? [] : contents._children)[n] , haxe_ui_core_ItemRenderer);
				if(item.get_data() == data) {
					item.invalidateComponent("data",false);
					continue;
				}
				var cls = this.itemClass(n,data);
				if(!js_Boot.__instanceof(item,cls)) {
					this.removeRenderer(item);
					item = this.getRenderer(cls,n);
					contents.addComponentAt(item,n);
				}
			} else {
				var cls1 = this.itemClass(n,data);
				item = this.getRenderer(cls1,n);
				contents.addComponent(item);
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.itemIndex = n;
			item.set_data(data);
		}
		while(dataSource.get_size() < (contents._children == null ? [] : contents._children).length) {
			var item = js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer);
			this.removeRenderer(item);
		}
	}
	,refreshVirtualData: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRenderer() != this._lastItemRenderer) {
			this._lastItemRenderer = comp.get_itemRenderer();
			this.get_contents().removeAllComponents();
			this._rendererPool = [];
		}
		this.removeInvisibleRenderers();
		this.calculateRangeVisible();
		this.updateScroll();
		var dataSource = this.get_dataSource();
		var i = 0;
		var _g = this._firstIndex;
		var _g1 = this._lastIndex;
		while(_g < _g1) {
			var n = _g++;
			var data = dataSource.get(n);
			var item = null;
			var cls = this.itemClass(n,data);
			var _this = this.get_contents();
			if((_this._children == null ? [] : _this._children).length <= i) {
				item = this.getRenderer(cls,n);
				this.get_contents().addComponent(item);
			} else {
				var _this1 = this.get_contents();
				item = js_Boot.__cast((_this1._children == null ? [] : _this1._children)[i] , haxe_ui_core_ItemRenderer);
				if(!js_Boot.__instanceof(item,cls)) {
					item = this.getRenderer(cls,n);
					this.get_contents().addComponentAt(item,i);
				} else if(item.itemIndex != n) {
					if(this._component.hasEvent("rendererDestroyed")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,item));
					}
					this._component.setComponentIndex(item,i);
					item.itemIndex = n;
					if(this._component.hasEvent("rendererCreated")) {
						this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,item));
					}
				}
			}
			var className = n % 2 == 0 ? "even" : "odd";
			if(item.classes.indexOf(className) == -1) {
				var inverseClassName = n % 2 == 0 ? "odd" : "even";
				item.removeClass(inverseClassName);
				item.addClass(className);
			}
			item.set_data(data);
			++i;
		}
		while(true) {
			var _this = this.get_contents();
			if(!((_this._children == null ? [] : _this._children).length > i)) {
				break;
			}
			var _this1 = this.get_contents();
			var tmp = _this1._children == null ? [] : _this1._children;
			var _this2 = this.get_contents();
			this.removeRenderer(js_Boot.__cast(tmp[(_this2._children == null ? [] : _this2._children).length - 1] , haxe_ui_core_ItemRenderer),false);
		}
	}
	,calculateRangeVisible: function() {
	}
	,updateScroll: function() {
	}
	,itemClass: function(index,data) {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemRendererClass() != null) {
			return comp.get_itemRendererClass();
		} else if(comp.get_itemRenderer() != null) {
			return js_Boot.getClass(comp.get_itemRenderer());
		} else {
			return haxe_ui_core_BasicItemRenderer;
		}
	}
	,getRenderer: function(cls,index) {
		var instance = null;
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			var _g = 0;
			var _g1 = this._rendererPool.length;
			while(_g < _g1) {
				var i = _g++;
				var renderer = this._rendererPool[i];
				if(js_Boot.__instanceof(renderer,cls)) {
					this._rendererPool.splice(i,1);
					instance = renderer;
					break;
				}
			}
		}
		if(instance == null) {
			if(comp.get_itemRenderer() != null && js_Boot.getClass(comp.get_itemRenderer()) == cls) {
				instance = comp.get_itemRenderer().cloneComponent();
				instance.handleVisibility(true);
			} else {
				instance = Type.createInstance(cls,[]);
			}
		}
		instance.itemIndex = index;
		if(this._component.hasEvent("rendererCreated")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererCreated",null,instance));
		}
		if(this._component.get_hidden() == false) {
			instance.handleVisibility(true);
		}
		return js_Boot.__cast(instance , haxe_ui_core_ItemRenderer);
	}
	,removeRenderer: function(renderer,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		this._component.removeComponent(renderer,dispose);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_virtual() == true) {
			this._rendererPool.push(js_Boot.__cast(renderer , haxe_ui_core_ItemRenderer));
		}
		if(this._component.hasEvent("rendererDestroyed")) {
			this._component.dispatch(new haxe_ui_events_UIEvent("rendererDestroyed",null,renderer));
		}
		renderer.itemIndex = -1;
	}
	,removeInvisibleRenderers: function() {
		var contents = this.get_contents();
		if(this._firstIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[0])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[0] , haxe_ui_core_ItemRenderer),false);
				++this._firstIndex;
			}
		}
		if(this._lastIndex >= 0) {
			while((contents._children == null ? [] : contents._children).length > 0 && !this.isRendererVisible((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1])) {
				this.removeRenderer(js_Boot.__cast((contents._children == null ? [] : contents._children)[(contents._children == null ? [] : contents._children).length - 1] , haxe_ui_core_ItemRenderer),false);
				--this._lastIndex;
			}
		}
	}
	,isRendererVisible: function(renderer) {
		if(renderer == null) {
			return false;
		}
		if(renderer.get_top() < this._component.get_componentHeight() && renderer.get_top() + renderer.get_componentHeight() >= 0 && renderer.get_left() < this._component.get_componentWidth()) {
			return renderer.get_left() + renderer.get_componentWidth() >= 0;
		} else {
			return false;
		}
	}
	,isIndexVisible: function(index) {
		if(index >= this._firstIndex) {
			return index <= this._lastIndex;
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_layouts_VirtualLayout
	,__properties__: $extend(haxe_ui_layouts_ScrollViewLayout.prototype.__properties__,{get_itemCount:"get_itemCount",get_itemHeight:"get_itemHeight",get_itemWidth:"get_itemWidth",get_dataSource:"get_dataSource",get_contents:"get_contents"})
});
var haxe_ui_layouts_VerticalVirtualLayout = function() {
	haxe_ui_layouts_VirtualLayout.call(this);
};
$hxClasses["haxe.ui.layouts.VerticalVirtualLayout"] = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.__name__ = "haxe.ui.layouts.VerticalVirtualLayout";
haxe_ui_layouts_VerticalVirtualLayout.__super__ = haxe_ui_layouts_VirtualLayout;
haxe_ui_layouts_VerticalVirtualLayout.prototype = $extend(haxe_ui_layouts_VirtualLayout.prototype,{
	repositionChildren: function() {
		haxe_ui_layouts_VirtualLayout.prototype.repositionChildren.call(this);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var itemHeight = this.get_itemHeight();
		var contents = this.get_contents();
		var verticalSpacing = contents.get_layout().get_verticalSpacing();
		if(comp.get_virtual() == true) {
			var n = this._firstIndex;
			if(comp.get_variableItemSize() == true) {
				var pos = -comp.get_vscrollPos();
				var _g = 0;
				var _g1 = this._lastIndex;
				while(_g < _g1) {
					var i = _g++;
					if(i >= this._firstIndex) {
						var c = contents.getComponentAt(i - this._firstIndex);
						c.set_top(pos);
					}
					var size = this._sizeCache[i];
					pos += (size != null && size != 0 ? size : itemHeight) + verticalSpacing;
				}
			} else {
				var _g = 0;
				var _g1 = contents._children == null ? [] : contents._children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.set_top(n * (itemHeight + verticalSpacing) - comp.get_vscrollPos());
					++n;
				}
			}
		}
	}
	,verticalConstraintModifier: function() {
		return 0;
	}
	,calculateRangeVisible: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var itemHeight = this.get_itemHeight();
		var visibleItemsCount = 0;
		var contentsHeight = 0;
		if(this.get_contents().get_autoHeight() == true) {
			var itemCount = this.get_itemCount();
			if(itemCount > 0 || this._component.get_autoHeight() == true) {
				contentsHeight = itemCount * itemHeight - this.verticalConstraintModifier();
			} else {
				contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
			}
		} else {
			contentsHeight = this.get_contents().get_height() - this.verticalConstraintModifier();
		}
		if(contentsHeight > this._component.get_height() - this.verticalConstraintModifier()) {
			contentsHeight = this._component.get_height() - this.verticalConstraintModifier();
		}
		if(comp.get_variableItemSize() == true) {
			var totalSize = 0;
			var requireInvalidation = false;
			var newFirstIndex = -1;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					if(i >= this._firstIndex && i <= this._lastIndex) {
						var c = this.get_contents().getComponentAt(i - this._firstIndex);
						if(c != null && c.get_componentHeight() > 0) {
							this._sizeCache[i] = c.get_componentHeight();
							size = c.get_componentHeight();
						} else {
							requireInvalidation = true;
							size = itemHeight;
						}
					} else {
						requireInvalidation = true;
						size = itemHeight;
					}
				}
				size += verticalSpacing;
				if(newFirstIndex == -1) {
					if(totalSize + size > comp.get_vscrollPos()) {
						newFirstIndex = i;
						totalSize += size - comp.get_vscrollPos();
						++visibleItemsCount;
					} else {
						totalSize += size;
					}
				} else if(totalSize + size > contentsHeight) {
					break;
				} else {
					++visibleItemsCount;
					totalSize += size;
				}
			}
			if(requireInvalidation == true) {
				var _this = this._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
			}
			this._firstIndex = newFirstIndex;
		} else {
			visibleItemsCount = Math.ceil(contentsHeight / (itemHeight + verticalSpacing));
			this._firstIndex = comp.get_vscrollPos() / (itemHeight + verticalSpacing) | 0;
		}
		if(this._firstIndex < 0) {
			this._firstIndex = 0;
		}
		var rc = new haxe_ui_geom_Rectangle(0,0,this.get_contents().get_width(),contentsHeight - (this.get_paddingTop() + this.get_paddingBottom()) - this.get_borderSize() * 2);
		this.get_contents().set_componentClipRect(rc);
		this._lastIndex = this._firstIndex + visibleItemsCount + 1;
		if(this._lastIndex > this.get_dataSource().get_size()) {
			this._lastIndex = this.get_dataSource().get_size();
		}
	}
	,updateScroll: function() {
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		var usableSize = this.get_usableSize();
		var dataSize = this.get_dataSource().get_size();
		var verticalSpacing = this.get_contents().get_layout().get_verticalSpacing();
		var scrollMax = 0;
		var itemHeight = this.get_itemHeight();
		if(comp.get_variableItemSize() == true) {
			scrollMax = -usableSize.height;
			var _g = 0;
			var _g1 = this.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var size = this._sizeCache[i];
				if(size == null || size == 0) {
					size = itemHeight;
				}
				scrollMax += size + verticalSpacing + this.verticalConstraintModifier();
			}
		} else {
			scrollMax = dataSize * itemHeight + (dataSize - 1) * verticalSpacing - usableSize.height + this.verticalConstraintModifier();
		}
		if(scrollMax < 0) {
			scrollMax = 0;
		}
		comp.set_vscrollMax(scrollMax);
		comp.set_vscrollPageSize(usableSize.height / (scrollMax + usableSize.height) * scrollMax);
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VirtualLayout.prototype.calcAutoSize.call(this,exclusions);
		var comp = js_Boot.__cast(this._component , haxe_ui_containers_IVirtualContainer);
		if(comp.get_itemCount() > 0 && this._component.get_autoHeight() == true) {
			var contents = this._component.findComponent("scrollview-contents",null,false);
			var contentsPadding = 0;
			if(contents != null) {
				var layout = contents.get_layout();
				if(layout != null) {
					contentsPadding = layout.get_paddingTop() + layout.get_paddingBottom();
				}
			}
			size.height = this.get_itemHeight() * comp.get_itemCount() + this.get_paddingTop() + this.get_paddingBottom() + contentsPadding + this.get_borderSize() * 2;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalVirtualLayout
});
var haxe_ui_containers__$TableView_Layout = function() {
	haxe_ui_layouts_VerticalVirtualLayout.call(this);
};
$hxClasses["haxe.ui.containers._TableView.Layout"] = haxe_ui_containers__$TableView_Layout;
haxe_ui_containers__$TableView_Layout.__name__ = "haxe.ui.containers._TableView.Layout";
haxe_ui_containers__$TableView_Layout.__super__ = haxe_ui_layouts_VerticalVirtualLayout;
haxe_ui_containers__$TableView_Layout.prototype = $extend(haxe_ui_layouts_VerticalVirtualLayout.prototype,{
	itemClass: function(index,data) {
		return haxe_ui_containers__$TableView_CompoundItemRenderer;
	}
	,repositionChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.repositionChildren.call(this);
		header.set_left(this.get_paddingLeft() + this.get_borderSize());
		header.set_top(this.get_paddingTop() + this.get_borderSize());
		var vscroll = this._component.findComponent(null,haxe_ui_components_VerticalScroll);
		if(vscroll != null && vscroll.get_hidden() == false) {
			header.addClass("scrolling");
			header.invalidateComponent(null,true);
		} else {
			header.removeClass("scrolling");
			header.invalidateComponent(null,true);
		}
		var rc = new haxe_ui_geom_Rectangle((js_Boot.__cast(this._component , haxe_ui_containers_ScrollView)).get_hscrollPos() + 1,1,this.get_usableWidth(),header.get_height());
		header.set_componentClipRect(rc);
		var data = this.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(data != null) {
			var _g = 0;
			var _g1 = data._children == null ? [] : data._children;
			while(_g < _g1.length) {
				var item = _g1[_g];
				++_g;
				var headerChildComponents = header._children == null ? [] : header._children;
				var _g2 = 0;
				while(_g2 < headerChildComponents.length) {
					var column = headerChildComponents[_g2];
					++_g2;
					var isLast = headerChildComponents.indexOf(column) == headerChildComponents.length - 1;
					var itemRenderer = item.findComponent(column.get_id(),haxe_ui_core_Component);
					if(itemRenderer != null && ((itemRenderer) instanceof haxe_ui_core_ItemRenderer) == false) {
						itemRenderer = itemRenderer.findAncestor(null,haxe_ui_core_ItemRenderer);
					}
					if(itemRenderer != null) {
						itemRenderer.set_percentWidth(null);
						if(isLast == false) {
							itemRenderer.set_width(column.get_width() - item.get_layout().get_horizontalSpacing());
						} else {
							itemRenderer.set_width(column.get_width());
						}
					}
				}
			}
			data.set_left(this.get_paddingLeft() + this.get_borderSize());
			data.set_top(header.get_top() + header.get_height() - 1);
			data.set_componentWidth(header.get_width());
		}
	}
	,resizeChildren: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return;
		}
		haxe_ui_layouts_VerticalVirtualLayout.prototype.resizeChildren.call(this);
	}
	,verticalConstraintModifier: function() {
		var header = this.findComponent(null,haxe_ui_containers_Header,true);
		if(header == null) {
			return 0;
		}
		return header.get_height();
	}
	,calcAutoSize: function(exclusions) {
		var size = haxe_ui_layouts_VerticalVirtualLayout.prototype.calcAutoSize.call(this);
		size.height += 1;
		return size;
	}
	,__class__: haxe_ui_containers__$TableView_Layout
});
var haxe_ui_containers__$TableView_DataSourceBehaviour = function(component) {
	this._firstPass = true;
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.DataSourceBehaviour"] = haxe_ui_containers__$TableView_DataSourceBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.__name__ = "haxe.ui.containers._TableView.DataSourceBehaviour";
haxe_ui_containers__$TableView_DataSourceBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_DataSourceBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	_firstPass: null
	,set: function(value) {
		var _gthis = this;
		haxe_ui_behaviours_DataBehaviour.prototype.set.call(this,value);
		var dataSource = haxe_ui_util_Variant.toDataSource(this._value);
		if(dataSource != null) {
			dataSource.transformer = new haxe_ui_data_transformation_NativeTypeTransformer();
			dataSource.onChange = function() {
				var _this = _gthis._component;
				if(!(_this._layout == null || _this._layoutLocked == true)) {
					_this.invalidateComponent("layout",false);
				}
				if(_gthis._firstPass == true) {
					_gthis._component.syncComponentValidation();
					_gthis._firstPass = false;
					var _this = _gthis._component;
					if(!(_this._layout == null || _this._layoutLocked == true)) {
						_this.invalidateComponent("layout",false);
					}
				}
			};
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		} else {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
	}
	,get: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			this._value = haxe_ui_util_Variant.fromDataSource(new haxe_ui_data_ArrayDataSource());
			this.set(this._value);
		}
		return this._value;
	}
	,__class__: haxe_ui_containers__$TableView_DataSourceBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndexBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndexBehaviour"] = haxe_ui_containers__$TableView_SelectedIndexBehaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndexBehaviour";
haxe_ui_containers__$TableView_SelectedIndexBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedIndexBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			return haxe_ui_util_Variant.fromInt(selectedIndices[selectedIndices.length - 1]);
		} else {
			return haxe_ui_util_Variant.fromInt(-1);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		tableView.set_selectedIndices(haxe_ui_util_Variant.neq(value,haxe_ui_util_Variant.fromInt(-1)) ? [haxe_ui_util_Variant.toInt(value)] : null);
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndexBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemBehaviour"] = haxe_ui_containers__$TableView_SelectedItemBehaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemBehaviour";
haxe_ui_containers__$TableView_SelectedItemBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	getDynamic: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length > 0) {
			return tableView.get_dataSource().get(selectedIndices[selectedIndices.length - 1]);
		} else {
			return null;
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var index = tableView.get_dataSource().indexOf(value);
		if(index != -1 && tableView.get_selectedIndices().indexOf(index) == -1) {
			tableView.set_selectedIndices([index]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemBehaviour
});
var haxe_ui_containers__$TableView_SelectedIndicesBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedIndicesBehaviour"] = haxe_ui_containers__$TableView_SelectedIndicesBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedIndicesBehaviour";
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectedIndicesBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	get: function() {
		if(haxe_ui_util_Variant.get_isNull(this._value)) {
			return haxe_ui_util_Variant.fromArray([]);
		} else {
			return this._value;
		}
	}
	,validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		var contents = this._component.findComponent("scrollview-contents",null,false,"css");
		var itemToEnsure = null;
		var builder = js_Boot.__cast(this._component._compositeBuilder , haxe_ui_containers__$TableView_Builder);
		var _g = 0;
		var _g1 = contents._children == null ? [] : contents._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(selectedIndices.indexOf((js_Boot.__cast(child , haxe_ui_core_ItemRenderer)).itemIndex) != -1) {
				itemToEnsure = js_Boot.__cast(child , haxe_ui_core_ItemRenderer);
				builder.addItemRendererClass(child,":selected");
			} else {
				builder.addItemRendererClass(child,":selected",false);
			}
		}
		if(itemToEnsure != null && tableView.get_virtual() == false) {
			var vscroll = tableView.findComponent(null,haxe_ui_components_VerticalScroll);
			if(vscroll != null) {
				var vpos = vscroll.get_pos();
				var contents = tableView.findComponent("tableview-contents",null,null,"css");
				if(itemToEnsure.get_top() + itemToEnsure.get_height() > vpos + contents.get_componentClipRect().height) {
					vscroll.set_pos(itemToEnsure.get_top() + itemToEnsure.get_height() - contents.get_componentClipRect().height);
				} else if(itemToEnsure.get_top() < vpos) {
					vscroll.set_pos(itemToEnsure.get_top());
				}
			}
		}
		if(tableView.get_selectedIndex() != -1 && tableView.get_selectedIndices().length != 0) {
			this._component.dispatch(new haxe_ui_events_UIEvent("change"));
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedIndicesBehaviour
});
var haxe_ui_containers__$TableView_SelectedItemsBehaviour = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectedItemsBehaviour"] = haxe_ui_containers__$TableView_SelectedItemsBehaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__name__ = "haxe.ui.containers._TableView.SelectedItemsBehaviour";
haxe_ui_containers__$TableView_SelectedItemsBehaviour.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_SelectedItemsBehaviour.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	get: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices != null && selectedIndices.length > 0) {
			var selectedItems = [];
			var _g = 0;
			while(_g < selectedIndices.length) {
				var i = selectedIndices[_g];
				++_g;
				if(i < 0 || i >= tableView.get_dataSource().get_size()) {
					continue;
				}
				var data = tableView.get_dataSource().get(i);
				selectedItems.push(data);
			}
			return haxe_ui_util_Variant.fromArray(selectedItems);
		} else {
			return haxe_ui_util_Variant.fromArray([]);
		}
	}
	,set: function(value) {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedItems = haxe_ui_util_Variant.toArray(value);
		if(selectedItems != null && selectedItems.length > 0) {
			var selectedIndices = [];
			var index;
			var _g = 0;
			while(_g < selectedItems.length) {
				var item = selectedItems[_g];
				++_g;
				index = tableView.get_dataSource().indexOf(item);
				if(index != -1) {
					selectedIndices.push(index);
				}
			}
			tableView.set_selectedIndices(selectedIndices);
		} else {
			tableView.set_selectedIndices([]);
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectedItemsBehaviour
});
var haxe_ui_containers__$TableView_SelectionModeBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.SelectionModeBehaviour"] = haxe_ui_containers__$TableView_SelectionModeBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.__name__ = "haxe.ui.containers._TableView.SelectionModeBehaviour";
haxe_ui_containers__$TableView_SelectionModeBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers__$TableView_SelectionModeBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var tableView = js_Boot.__cast(this._component , haxe_ui_containers_TableView);
		var selectedIndices = tableView.get_selectedIndices();
		if(selectedIndices.length == 0) {
			return;
		}
		var selectionMode = this._value;
		switch(selectionMode) {
		case "disabled":
			tableView.set_selectedIndices(null);
			break;
		case "one-item":
			if(selectedIndices.length > 1) {
				tableView.set_selectedIndices([selectedIndices[0]]);
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_containers__$TableView_SelectionModeBehaviour
});
var haxe_ui_containers__$TableView_GetHeader = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.GetHeader"] = haxe_ui_containers__$TableView_GetHeader;
haxe_ui_containers__$TableView_GetHeader.__name__ = "haxe.ui.containers._TableView.GetHeader";
haxe_ui_containers__$TableView_GetHeader.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_containers__$TableView_GetHeader.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	get: function() {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		return haxe_ui_util_Variant.fromComponent(header);
	}
	,__class__: haxe_ui_containers__$TableView_GetHeader
});
var haxe_ui_containers__$TableView_ClearTable = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.ClearTable"] = haxe_ui_containers__$TableView_ClearTable;
haxe_ui_containers__$TableView_ClearTable.__name__ = "haxe.ui.containers._TableView.ClearTable";
haxe_ui_containers__$TableView_ClearTable.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_ClearTable.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		if(param == true) {
			if((js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer() != null) {
				(js_Boot.__cast(this._component , haxe_ui_containers_TableView)).get_itemRenderer().removeAllComponents();
			}
			var header = this._component.findComponent(null,haxe_ui_containers_Header);
			if(header != null) {
				header.removeAllComponents();
			}
		}
		var contents = this._component.findComponent("tableview-contents",haxe_ui_containers_Box,true,"css");
		if(contents != null) {
			contents.removeAllComponents();
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_ClearTable
});
var haxe_ui_containers__$TableView_AddColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.AddColumn"] = haxe_ui_containers__$TableView_AddColumn;
haxe_ui_containers__$TableView_AddColumn.__name__ = "haxe.ui.containers._TableView.AddColumn";
haxe_ui_containers__$TableView_AddColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_AddColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			header = new haxe_ui_containers_Header();
			this._component.addComponent(header);
		}
		var column = new haxe_ui_components_Column();
		column.set_text(param);
		column.set_id(StringTools.replace(param," ","_"));
		header.addComponent(column);
		return haxe_ui_util_Variant.fromComponent(column);
	}
	,__class__: haxe_ui_containers__$TableView_AddColumn
});
var haxe_ui_containers__$TableView_RemoveColumn = function(component) {
	haxe_ui_behaviours_Behaviour.call(this,component);
};
$hxClasses["haxe.ui.containers._TableView.RemoveColumn"] = haxe_ui_containers__$TableView_RemoveColumn;
haxe_ui_containers__$TableView_RemoveColumn.__name__ = "haxe.ui.containers._TableView.RemoveColumn";
haxe_ui_containers__$TableView_RemoveColumn.__super__ = haxe_ui_behaviours_Behaviour;
haxe_ui_containers__$TableView_RemoveColumn.prototype = $extend(haxe_ui_behaviours_Behaviour.prototype,{
	call: function(param) {
		var header = this._component.findComponent(null,haxe_ui_containers_Header);
		if(header == null) {
			return null;
		}
		var _g = 0;
		var _g1 = header._children == null ? [] : header._children;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(c.get_text() == param) {
				header.removeComponent(c);
				break;
			}
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TableView_RemoveColumn
});
var haxe_ui_containers_TreeView = function() {
	this._expandableItemRenderer = null;
	this._itemRenderer = new haxe_ui_core_BasicItemRenderer();
	this._selectedNode = null;
	this._dataSource = null;
	haxe_ui_containers_ScrollView.call(this);
};
$hxClasses["haxe.ui.containers.TreeView"] = haxe_ui_containers_TreeView;
haxe_ui_containers_TreeView.__name__ = "haxe.ui.containers.TreeView";
haxe_ui_containers_TreeView.__interfaces__ = [haxe_ui_core_IDataComponent];
haxe_ui_containers_TreeView.__super__ = haxe_ui_containers_ScrollView;
haxe_ui_containers_TreeView.prototype = $extend(haxe_ui_containers_ScrollView.prototype,{
	_dataSource: null
	,get_dataSource: function() {
		if(this._dataSource == null) {
			this._dataSource = new haxe_ui_data_ArrayDataSource();
			this._dataSource.onChange = $bind(this,this.onDataChanged);
		}
		return this._dataSource;
	}
	,set_dataSource: function(value) {
		var dataSource = value;
		if(dataSource != null) {
			this._dataSource = dataSource;
			this._dataSource.onChange = $bind(this,this.onDataChanged);
		}
		this.syncNodes();
		return value;
	}
	,_selectedNode: null
	,get_selectedNode: function() {
		return this._selectedNode;
	}
	,set_selectedNode: function(value) {
		if(value == this._selectedNode) {
			return value;
		}
		this.clearSelection();
		this._selectedNode = value;
		if(this._selectedNode != null) {
			var p = this._selectedNode.parentNode;
			while(p != null) {
				p.set_expanded(true);
				p = p.parentNode;
			}
			var renderer = this._selectedNode.findComponent(null,haxe_ui_core_ItemRenderer,true);
			if(renderer != null) {
				renderer.addClass(":node-selected",true,true);
			}
		}
		var event = new haxe_ui_events_UIEvent("change");
		this.dispatch(event);
		return value;
	}
	,clearSelection: function() {
		if(this._selectedNode != null) {
			var renderer = this._selectedNode.findComponent(null,haxe_ui_core_ItemRenderer,true);
			if(renderer != null) {
				renderer.removeClass(":node-selected",true,true);
			}
			this._selectedNode = null;
		}
	}
	,onDataChanged: function() {
	}
	,syncNodes: function() {
		var _g = 0;
		var _g1 = this._dataSource.get_size();
		while(_g < _g1) {
			var i = _g++;
			var item = this._dataSource.get(i);
			this.syncNode(i,item);
		}
	}
	,syncNode: function(index,nodeData) {
		var node = this.getNodes()[index];
		if(node == null) {
			node = new haxe_ui_containers_TreeViewNode();
			this.addComponent(node);
		}
		node.set_data(nodeData);
	}
	,getNodes: function() {
		return this.findComponents(null,haxe_ui_containers_TreeViewNode,3);
	}
	,_itemRenderer: null
	,get_itemRenderer: function() {
		return this._itemRenderer;
	}
	,set_itemRenderer: function(value) {
		if(this._itemRenderer != value) {
			this._itemRenderer = value;
		}
		return value;
	}
	,_expandableItemRenderer: null
	,get_expandableItemRenderer: function() {
		if(this._expandableItemRenderer == null) {
			return this._itemRenderer;
		}
		return this._expandableItemRenderer;
	}
	,set_expandableItemRenderer: function(value) {
		if(this._expandableItemRenderer != value) {
			this._expandableItemRenderer = value;
		}
		return value;
	}
	,addNode: function(data) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.set_data(data);
		this.addComponent(node);
		return node;
	}
	,clearNodes: function() {
		this.set_selectedNode(null);
		var nodes = this.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			this.removeComponent(n);
		}
	}
	,onReady: function() {
		haxe_ui_containers_ScrollView.prototype.onReady.call(this);
		if(this._selectedNode != null) {
			var node = this._selectedNode;
			this._selectedNode = null;
			this.set_selectedNode(node);
		}
	}
	,findNodeByPath: function(path,field) {
		var foundNode = null;
		var parts = path.split("/");
		var part = parts.shift();
		var nodes = this.getNodes();
		var _g = 0;
		while(_g < nodes.length) {
			var node = nodes[_g];
			++_g;
			if(node.matchesPathPart(part,field)) {
				if(parts.length == 0) {
					foundNode = node;
				} else {
					foundNode = node.findNodeByPath(parts.join("/"),field);
				}
				break;
			}
		}
		return foundNode;
	}
	,registerComposite: function() {
		haxe_ui_containers_ScrollView.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeView_TreeViewEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeView_TreeViewBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ScrollView.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ScrollView.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeView();
	}
	,__class__: haxe_ui_containers_TreeView
	,__properties__: $extend(haxe_ui_containers_ScrollView.prototype.__properties__,{set_expandableItemRenderer:"set_expandableItemRenderer",get_expandableItemRenderer:"get_expandableItemRenderer",set_itemRenderer:"set_itemRenderer",get_itemRenderer:"get_itemRenderer",set_selectedNode:"set_selectedNode",get_selectedNode:"get_selectedNode",set_dataSource:"set_dataSource",get_dataSource:"get_dataSource"})
});
var haxe_ui_containers__$TreeView_TreeViewEvents = function(treeview) {
	haxe_ui_containers_ScrollViewEvents.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewEvents"] = haxe_ui_containers__$TreeView_TreeViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.__name__ = "haxe.ui.containers._TreeView.TreeViewEvents";
haxe_ui_containers__$TreeView_TreeViewEvents.__super__ = haxe_ui_containers_ScrollViewEvents;
haxe_ui_containers__$TreeView_TreeViewEvents.prototype = $extend(haxe_ui_containers_ScrollViewEvents.prototype,{
	_treeview: null
	,__class__: haxe_ui_containers__$TreeView_TreeViewEvents
});
var haxe_ui_containers__$TreeView_TreeViewBuilder = function(treeview) {
	haxe_ui_containers_ScrollViewBuilder.call(this,treeview);
	this._treeview = treeview;
};
$hxClasses["haxe.ui.containers._TreeView.TreeViewBuilder"] = haxe_ui_containers__$TreeView_TreeViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.__name__ = "haxe.ui.containers._TreeView.TreeViewBuilder";
haxe_ui_containers__$TreeView_TreeViewBuilder.__super__ = haxe_ui_containers_ScrollViewBuilder;
haxe_ui_containers__$TreeView_TreeViewBuilder.prototype = $extend(haxe_ui_containers_ScrollViewBuilder.prototype,{
	_treeview: null
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_core_ItemRenderer)) {
			if(child.get_id() == null) {
				this._treeview._itemRenderer = child;
			} else if(child.get_id() == "expandable") {
				this._treeview._expandableItemRenderer = child;
			}
			return child;
		}
		return haxe_ui_containers_ScrollViewBuilder.prototype.addComponent.call(this,child);
	}
	,__class__: haxe_ui_containers__$TreeView_TreeViewBuilder
});
var haxe_ui_containers_TreeViewNode = function() {
	this._expanded = false;
	this.parentNode = null;
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.TreeViewNode"] = haxe_ui_containers_TreeViewNode;
haxe_ui_containers_TreeViewNode.__name__ = "haxe.ui.containers.TreeViewNode";
haxe_ui_containers_TreeViewNode.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_TreeViewNode.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	parentNode: null
	,nodePath: function(field) {
		if(field == null) {
			var o = this.get_data();
			if(Object.prototype.hasOwnProperty.call(o,"id")) {
				field = "id";
			} else {
				var o = this.get_data();
				if(Object.prototype.hasOwnProperty.call(o,"nodeId")) {
					field = "nodeId";
				} else {
					field = "text";
				}
			}
		}
		var parts = [];
		var p = this;
		while(p != null) {
			parts.push(Reflect.field(p.get_data(),field));
			p = p.parentNode;
		}
		parts.reverse();
		return parts.join("/");
	}
	,findNodeByPath: function(path,field) {
		var foundNode = null;
		var parts = path.split("/");
		var part = parts.shift();
		var nodes = this.getNodes();
		var _g = 0;
		while(_g < nodes.length) {
			var node = nodes[_g];
			++_g;
			if(node.matchesPathPart(part,field)) {
				if(parts.length == 0) {
					foundNode = node;
				} else {
					foundNode = node.findNodeByPath(parts.join("/"),field);
				}
				break;
			}
		}
		return foundNode;
	}
	,matchesPathPart: function(part,field) {
		if(field == null) {
			var o = this.get_data();
			if(Object.prototype.hasOwnProperty.call(o,"id")) {
				field = "id";
			} else {
				var o = this.get_data();
				if(Object.prototype.hasOwnProperty.call(o,"nodeId")) {
					field = "nodeId";
				} else {
					field = "text";
				}
			}
		}
		var o = this.get_data();
		if(Object.prototype.hasOwnProperty.call(o,field) == false) {
			return false;
		}
		return Std.string(Reflect.field(this.get_data(),field)) == part;
	}
	,addNode: function(data) {
		var node = new haxe_ui_containers_TreeViewNode();
		node.parentNode = this;
		node.set_data(data);
		this.addComponent(node);
		return node;
	}
	,getNodes: function() {
		return this.findComponents(null,haxe_ui_containers_TreeViewNode,3);
	}
	,expandable: null
	,get_expandable: function() {
		var childContainer = this.findComponent("treenode-child-container",haxe_ui_containers_Box);
		if(childContainer != null) {
			return childContainer.get_numComponents() > 0;
		} else {
			return false;
		}
	}
	,get_selected: function() {
		var treeview = this.findAncestor(null,haxe_ui_containers_TreeView);
		return treeview.get_selectedNode() == this;
	}
	,set_selected: function(value) {
		var treeview = this.findAncestor(null,haxe_ui_containers_TreeView);
		treeview.set_selectedNode(this);
		return value;
	}
	,_expanded: null
	,get_expanded: function() {
		var childContainer = this.findComponent("treenode-child-container",haxe_ui_containers_Box);
		if(childContainer == null) {
			return this._expanded;
		}
		return !childContainer.get_hidden();
	}
	,set_expanded: function(value) {
		this._expanded = value;
		var childContainer = this.findComponent("treenode-child-container",haxe_ui_containers_Box);
		if(childContainer == null) {
			return value;
		}
		if(value == true) {
			childContainer.show();
		} else {
			childContainer.hide();
		}
		return value;
	}
	,_data: null
	,get_data: function() {
		return this._data;
	}
	,set_data: function(value) {
		if(value == this._data) {
			return value;
		}
		this._data = value;
		this.syncChildNodes();
		this.invalidateComponent("data",false);
		return value;
	}
	,syncChildNodes: function() {
		var childDataArray = null;
		var _g = 0;
		var _g1 = Reflect.fields(this._data);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			var _g2 = Type.typeof(Reflect.field(this._data,f));
			if(_g2._hx_index == 6) {
				if(_g2.c == Array) {
					childDataArray = Reflect.field(this._data,f);
					break;
				}
			}
		}
		if(childDataArray != null) {
			var i = 0;
			var _g = 0;
			while(_g < childDataArray.length) {
				var childData = childDataArray[_g];
				++_g;
				var childNode = this.getChildNodes()[i];
				if(childNode == null) {
					childNode = new haxe_ui_containers_TreeViewNode();
					this.addComponent(childNode);
				}
				childNode.set_data(childData);
				++i;
			}
		}
	}
	,getChildNodes: function() {
		return this.findComponents(null,haxe_ui_containers_TreeViewNode,3);
	}
	,clearNodes: function() {
		var nodes = this.findComponents(null,haxe_ui_containers_TreeViewNode,3);
		var _g = 0;
		while(_g < nodes.length) {
			var n = nodes[_g];
			++_g;
			this.removeComponent(n);
		}
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
		this._compositeBuilderClass = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_TreeViewNode();
	}
	,__class__: haxe_ui_containers_TreeViewNode
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_data:"set_data",get_data:"get_data",set_expanded:"set_expanded",get_expanded:"get_expanded",set_selected:"set_selected",get_selected:"get_selected",get_expandable:"get_expandable"})
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents = function(node) {
	haxe_ui_events_Events.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeEvents"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeEvents";
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_node: null
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeEvents
});
var haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder = function(node) {
	this._isExpandable = false;
	this._childContainer = null;
	this._renderer = null;
	this._expandCollapseIcon = null;
	this._nodeContainer = null;
	haxe_ui_core_CompositeBuilder.call(this,node);
	this._node = node;
};
$hxClasses["haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder"] = haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__name__ = "haxe.ui.containers._TreeViewNode.TreeViewNodeBuilder";
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_node: null
	,_nodeContainer: null
	,_expandCollapseIcon: null
	,_renderer: null
	,_childContainer: null
	,_isExpandable: null
	,onInitialize: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		this._nodeContainer = new haxe_ui_containers_HBox();
		this._nodeContainer.addClass("treenode-container");
		this._expandCollapseIcon = new haxe_ui_components_Image();
		this._expandCollapseIcon.set_scriptAccess(false);
		this._expandCollapseIcon.addClass("treenode-expand-collapse-icon");
		this._expandCollapseIcon.set_id("treenode-expand-collapse-icon");
		this._expandCollapseIcon.registerEvent("click",$bind(this,this.onExpandCollapseClicked));
		this._nodeContainer.registerEvent("click",$bind(this,this.onContainerClick));
		this._nodeContainer.registerEvent("doubleclick",$bind(this,this.onContainerDblClick));
		this._nodeContainer.addComponent(this._expandCollapseIcon);
		this._renderer = treeview.get_itemRenderer().cloneComponent();
		this._renderer.set_data(this._node.get_data());
		this._nodeContainer.addComponent(this._renderer);
		if(this._isExpandable == true) {
			this.makeExpandableRendererChanges();
		}
		this._node.addComponentAt(this._nodeContainer,0);
	}
	,onContainerClick: function(event) {
		if(this._expandCollapseIcon.hitTest(event.screenX,event.screenY)) {
			return;
		}
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		treeview.set_selectedNode(this._node);
	}
	,onContainerDblClick: function(_) {
		this.onExpandCollapseClicked(null);
	}
	,onExpandCollapseClicked: function(_) {
		this._node.set_expanded(!this._node.get_expanded());
		if(this._expandCollapseIcon != null) {
			if(this._childContainer != null) {
				if(this._childContainer.get_hidden() == true) {
					this._expandCollapseIcon.swapClass("node-collapsed","node-expanded");
				} else {
					this._expandCollapseIcon.swapClass("node-expanded","node-collapsed");
				}
			}
		}
	}
	,changeToExpandableRenderer: function() {
		if(this._isExpandable == true) {
			return;
		}
		this._isExpandable = true;
		this.makeExpandableRendererChanges();
	}
	,changeToNonExpandableRenderer: function() {
		if(this._isExpandable == false) {
			return;
		}
		this._isExpandable = false;
		this.makeNonExpandableRendererChanges();
	}
	,makeNonExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		if(this._expandCollapseIcon != null) {
			this._expandCollapseIcon.removeClasses(["node-collapsed","node-expanded"]);
		}
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_itemRenderer().cloneComponent();
			newRenderer.set_data(data);
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.clearSelection();
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,makeExpandableRendererChanges: function() {
		var treeview = this._node.findAncestor(null,haxe_ui_containers_TreeView);
		if(this._expandCollapseIcon != null) {
			if(this._childContainer != null) {
				if(this._childContainer.get_hidden() == true) {
					this._expandCollapseIcon.swapClass("node-collapsed","node-expanded");
				} else {
					this._expandCollapseIcon.swapClass("node-expanded","node-collapsed");
				}
			}
		}
		if(this._renderer != null) {
			var wasSelected = treeview.get_selectedNode() == this._node;
			var data = this._renderer.get_data();
			var newRenderer = treeview.get_expandableItemRenderer().cloneComponent();
			newRenderer.set_data(data);
			this._nodeContainer.removeComponent(this._renderer);
			this._renderer = newRenderer;
			this._nodeContainer.addComponent(newRenderer);
			if(wasSelected == true) {
				treeview.clearSelection();
				treeview.set_selectedNode(this._node);
			}
		}
	}
	,addComponent: function(child) {
		if(child == this._renderer || child == this._childContainer) {
			return null;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			if(this._childContainer == null) {
				this._childContainer = new haxe_ui_containers_VBox();
				if(this._node.get_expanded() == true) {
					this._childContainer.show();
				} else {
					this._childContainer.hide();
				}
				this._childContainer.addClass("treenode-child-container");
				this._childContainer.set_id("treenode-child-container");
				this._node.addComponent(this._childContainer);
			}
			this.changeToExpandableRenderer();
			return this._childContainer.addComponent(child);
		}
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		if(((child) instanceof haxe_ui_containers_TreeViewNode)) {
			(js_Boot.__cast(child , haxe_ui_containers_TreeViewNode)).parentNode = null;
			var c = this._childContainer.removeComponent(child,dispose,invalidate);
			if(this._childContainer.get_numComponents() == 0) {
				this.changeToNonExpandableRenderer();
			}
			return c;
		}
		return null;
	}
	,__class__: haxe_ui_containers__$TreeViewNode_TreeViewNodeBuilder
});
var haxe_ui_containers_VerticalButtonBar = function() {
	haxe_ui_containers_ButtonBar.call(this);
};
$hxClasses["haxe.ui.containers.VerticalButtonBar"] = haxe_ui_containers_VerticalButtonBar;
haxe_ui_containers_VerticalButtonBar.__name__ = "haxe.ui.containers.VerticalButtonBar";
haxe_ui_containers_VerticalButtonBar.__super__ = haxe_ui_containers_ButtonBar;
haxe_ui_containers_VerticalButtonBar.prototype = $extend(haxe_ui_containers_ButtonBar.prototype,{
	registerComposite: function() {
		haxe_ui_containers_ButtonBar.prototype.registerComposite.call(this);
		this._defaultLayoutClass = haxe_ui_layouts_VerticalLayout;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_ButtonBar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_ButtonBar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VerticalButtonBar();
	}
	,__class__: haxe_ui_containers_VerticalButtonBar
});
var haxe_ui_containers_VerticalSplitter = function() {
	haxe_ui_containers_Splitter.call(this);
	this.set_layoutName("vertical");
};
$hxClasses["haxe.ui.containers.VerticalSplitter"] = haxe_ui_containers_VerticalSplitter;
haxe_ui_containers_VerticalSplitter.__name__ = "haxe.ui.containers.VerticalSplitter";
haxe_ui_containers_VerticalSplitter.__super__ = haxe_ui_containers_Splitter;
haxe_ui_containers_VerticalSplitter.prototype = $extend(haxe_ui_containers_Splitter.prototype,{
	registerComposite: function() {
		haxe_ui_containers_Splitter.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents;
		this._compositeBuilderClass = haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_Splitter.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Splitter.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_VerticalSplitter();
	}
	,__class__: haxe_ui_containers_VerticalSplitter
});
var haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents = function(splitter) {
	haxe_ui_containers_SplitterEvents.call(this,splitter);
};
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterEvents";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.__super__ = haxe_ui_containers_SplitterEvents;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents.prototype = $extend(haxe_ui_containers_SplitterEvents.prototype,{
	onGripperMouseDown: function(event) {
		haxe_ui_containers_SplitterEvents.prototype.onGripperMouseDown.call(this,event);
		window.document.body.style.cursor = "row-resize";
	}
	,handleResize: function(prev,next,event) {
		var delta = event.screenY - this._currentOffset.y;
		var prevCY = prev.set_height(prev.get_height() + delta);
		var nextCY = next.set_height(next.get_height() - delta);
		var ucy = this._splitter.get_layout().get_usableHeight();
		if(prevCY <= 0 || nextCY <= 0) {
			return;
		}
		if(prev.get_percentHeight() != null) {
			prev.set_percentHeight(prevCY / ucy * 100);
		} else {
			prev.set_height(prevCY);
		}
		if(next.get_percentHeight() != null) {
			next.set_percentHeight(nextCY / ucy * 100);
		} else {
			next.set_height(nextCY);
		}
	}
	,__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterEvents
});
var haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder = function(splitter) {
	haxe_ui_containers_SplitterBuilder.call(this,splitter);
};
$hxClasses["haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder"] = haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__name__ = "haxe.ui.containers._VerticalSplitter.VerticalSplitterBuilder";
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.__super__ = haxe_ui_containers_SplitterBuilder;
haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder.prototype = $extend(haxe_ui_containers_SplitterBuilder.prototype,{
	getSplitterClass: function() {
		return "vertical-splitter-gripper";
	}
	,__class__: haxe_ui_containers__$VerticalSplitter_VerticalSplitterBuilder
});
var haxe_ui_containers_dialogs_DialogButton = {};
haxe_ui_containers_dialogs_DialogButton.bitOr = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	var rarr = haxe_ui_containers_dialogs_DialogButton.toString(rhs).split("|");
	var _g = 0;
	while(_g < rarr.length) {
		var r = rarr[_g];
		++_g;
		if(larr.indexOf(r) == -1) {
			larr.push(r);
		}
	}
	return larr.join("|");
};
haxe_ui_containers_dialogs_DialogButton.eq = function(lhs,rhs) {
	var larr = haxe_ui_containers_dialogs_DialogButton.toString(lhs).split("|");
	return larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString(rhs)) != -1;
};
haxe_ui_containers_dialogs_DialogButton.toArray = function(this1) {
	var a = [];
	var _g = 0;
	var _g1 = (this1 == null ? "null" : "" + this1).split("|");
	while(_g < _g1.length) {
		var i = _g1[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0 || i == "null") {
			continue;
		}
		a.push(i);
	}
	return a;
};
haxe_ui_containers_dialogs_DialogButton.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_DialogEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.containers.dialogs.DialogEvent"] = haxe_ui_containers_dialogs_DialogEvent;
haxe_ui_containers_dialogs_DialogEvent.__name__ = "haxe.ui.containers.dialogs.DialogEvent";
haxe_ui_containers_dialogs_DialogEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_dialogs_DialogEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	button: null
	,clone: function() {
		var c = new haxe_ui_containers_dialogs_DialogEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.button = this.button;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_dialogs_DialogEvent
});
var haxe_ui_containers_dialogs_Dialogs = function() { };
$hxClasses["haxe.ui.containers.dialogs.Dialogs"] = haxe_ui_containers_dialogs_Dialogs;
haxe_ui_containers_dialogs_Dialogs.__name__ = "haxe.ui.containers.dialogs.Dialogs";
haxe_ui_containers_dialogs_Dialogs.messageBox = function(message,title,type,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	if(type == null) {
		type = "info";
	} else if(type == "info") {
		type = "info";
	} else if(type == "question") {
		type = "question";
	} else if(type == "warning") {
		type = "warning";
	} else if(type == "error") {
		type = "error";
	} else if(type == "yesno") {
		type = "yesno";
	}
	var messageBox = new haxe_ui_containers_dialogs_MessageBox();
	messageBox.set_type(type);
	messageBox.set_message(message);
	messageBox.modal = modal;
	if(title != null) {
		messageBox.set_title(title);
	}
	messageBox.show();
	if(callback != null) {
		messageBox.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return messageBox;
};
haxe_ui_containers_dialogs_Dialogs.dialog = function(contents,title,buttons,modal,callback) {
	if(modal == null) {
		modal = true;
	}
	var dialog = new haxe_ui_containers_dialogs_Dialog();
	dialog.modal = modal;
	if(title != null) {
		dialog.set_title(title);
	}
	if(buttons != null) {
		dialog.buttons = buttons;
	}
	dialog.addComponent(contents);
	dialog.show();
	if(callback != null) {
		dialog.registerEvent("dialogClosed",function(e) {
			callback(e.button);
		});
	}
	return dialog;
};
haxe_ui_containers_dialogs_Dialogs.selectFile = function(callback,options) {
	var dialog = new haxe_ui_containers_dialogs_SelectFileDialog();
	dialog.callback = callback;
	dialog.options = options;
	dialog.show();
};
var haxe_ui_containers_dialogs_MessageBoxType = {};
haxe_ui_containers_dialogs_MessageBoxType.toString = function(this1) {
	if(this1 == null) {
		return "null";
	} else {
		return "" + this1;
	}
};
var haxe_ui_containers_dialogs_MessageBox = function() {
	haxe_ui_backend_MessageBoxBase.call(this);
	this.set_title("Message");
};
$hxClasses["haxe.ui.containers.dialogs.MessageBox"] = haxe_ui_containers_dialogs_MessageBox;
haxe_ui_containers_dialogs_MessageBox.__name__ = "haxe.ui.containers.dialogs.MessageBox";
haxe_ui_containers_dialogs_MessageBox.__super__ = haxe_ui_backend_MessageBoxBase;
haxe_ui_containers_dialogs_MessageBox.prototype = $extend(haxe_ui_backend_MessageBoxBase.prototype,{
	onInitialize: function() {
		haxe_ui_backend_MessageBoxBase.prototype.onInitialize.call(this);
		if(haxe_ui_containers_dialogs_DialogButton.toArray(this.buttons).length == 0) {
			switch(this.get_type()) {
			case "error":
				this.buttons = "{{dialog.close}}";
				break;
			case "info":
				this.buttons = "{{dialog.ok}}";
				break;
			case "question":
				var larr = "{{dialog.yes}}".split("|");
				var rarr = "{{dialog.no}}".split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				var larr1 = haxe_ui_containers_dialogs_DialogButton.toString(larr.join("|")).split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.cancel}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr1.indexOf(r) == -1) {
						larr1.push(r);
					}
				}
				this.buttons = larr1.join("|");
				break;
			case "warning":
				this.buttons = "{{dialog.close}}";
				break;
			case "yesno":
				var larr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.yes}}").split("|");
				var rarr = haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.no}}").split("|");
				var _g = 0;
				while(_g < rarr.length) {
					var r = rarr[_g];
					++_g;
					if(larr.indexOf(r) == -1) {
						larr.push(r);
					}
				}
				this.buttons = larr.join("|");
				break;
			}
			this.createButtons();
		}
		if(this.get_title() == "Message") {
			switch(this.get_type()) {
			case "error":
				this.set_title("Error");
				break;
			case "info":
				this.set_title("Info");
				break;
			case "question":
				this.set_title("Question");
				break;
			case "warning":
				this.set_title("Warning");
				break;
			case "yesno":
				this.set_title("Question");
				break;
			}
		}
	}
	,registerBehaviours: function() {
		haxe_ui_backend_MessageBoxBase.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_backend_MessageBoxBase.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_dialogs_MessageBox();
	}
	,__class__: haxe_ui_containers_dialogs_MessageBox
});
var haxe_ui_containers_dialogs_SelectFileDialog = function() {
	haxe_ui_backend_SelectFileDialogImpl.call(this);
};
$hxClasses["haxe.ui.containers.dialogs.SelectFileDialog"] = haxe_ui_containers_dialogs_SelectFileDialog;
haxe_ui_containers_dialogs_SelectFileDialog.__name__ = "haxe.ui.containers.dialogs.SelectFileDialog";
haxe_ui_containers_dialogs_SelectFileDialog.__super__ = haxe_ui_backend_SelectFileDialogImpl;
haxe_ui_containers_dialogs_SelectFileDialog.prototype = $extend(haxe_ui_backend_SelectFileDialogImpl.prototype,{
	__class__: haxe_ui_containers_dialogs_SelectFileDialog
});
var haxe_ui_containers_menus_MenuEvent = function(type,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.menuItem = null;
	this.menu = null;
	haxe_ui_events_UIEvent.call(this,type,true,data);
};
$hxClasses["haxe.ui.containers.menus.MenuEvent"] = haxe_ui_containers_menus_MenuEvent;
haxe_ui_containers_menus_MenuEvent.__name__ = "haxe.ui.containers.menus.MenuEvent";
haxe_ui_containers_menus_MenuEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_containers_menus_MenuEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	menu: null
	,menuItem: null
	,clone: function() {
		var c = new haxe_ui_containers_menus_MenuEvent(this.type);
		c.menu = this.menu;
		c.menuItem = this.menuItem;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_containers_menus_MenuEvent
});
var haxe_ui_containers_menus_Menu = function() {
	haxe_ui_containers_VBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.Menu"] = haxe_ui_containers_menus_Menu;
haxe_ui_containers_menus_Menu.__name__ = "haxe.ui.containers.menus.Menu";
haxe_ui_containers_menus_Menu.__super__ = haxe_ui_containers_VBox;
haxe_ui_containers_menus_Menu.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_VBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_VBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus_MenuEvents;
		this._compositeBuilderClass = haxe_ui_containers_menus__$Menu_Builder;
	}
	,_internal__onMenuSelected: null
	,onMenuSelected: null
	,set_onMenuSelected: function(value) {
		if(this._internal__onMenuSelected != null) {
			this.unregisterEvent("menuselected",this._internal__onMenuSelected);
			this._internal__onMenuSelected = null;
		}
		if(value != null) {
			this._internal__onMenuSelected = value;
			this.registerEvent("menuselected",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,set_menuStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"menuStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"menuStyleNames"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_Menu();
	}
	,__class__: haxe_ui_containers_menus_Menu
	,__properties__: $extend(haxe_ui_containers_VBox.prototype.__properties__,{set_menuStyleNames:"set_menuStyleNames",get_menuStyleNames:"get_menuStyleNames",set_onMenuSelected:"set_onMenuSelected"})
});
var haxe_ui_containers_menus_MenuEvents = function(menu) {
	this.hasScreenMouseDown = false;
	this._over = false;
	this.button = null;
	this.parentMenu = null;
	this.currentSubMenu = null;
	this._currentItem = null;
	haxe_ui_events_Events.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus.MenuEvents"] = haxe_ui_containers_menus_MenuEvents;
haxe_ui_containers_menus_MenuEvents.__name__ = "haxe.ui.containers.menus.MenuEvents";
haxe_ui_containers_menus_MenuEvents.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus_MenuEvents.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menu: null
	,_currentItem: null
	,currentSubMenu: null
	,parentMenu: null
	,button: null
	,register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(((child) instanceof haxe_ui_containers_menus_MenuItem)) {
				var item = js_Boot.__cast(child , haxe_ui_containers_menus_MenuItem);
				if(!item.hasEvent("click",$bind(this,this.onItemClick))) {
					item.registerEvent("click",$bind(this,this.onItemClick));
				}
				if(!item.hasEvent("mouseover",$bind(this,this.onItemMouseOver))) {
					item.registerEvent("mouseover",$bind(this,this.onItemMouseOver));
				}
				if(!item.hasEvent("mouseout",$bind(this,this.onItemMouseOut))) {
					item.registerEvent("mouseout",$bind(this,this.onItemMouseOut));
				}
			}
		}
		if(!this.hasEvent("hidden",$bind(this,this.onHidden))) {
			this.registerEvent("hidden",$bind(this,this.onHidden));
		}
		if(!this.hasEvent("shown",$bind(this,this.onShown))) {
			this.registerEvent("shown",$bind(this,this.onShown));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.unregisterEvent("click",$bind(this,this.onItemClick));
			child.unregisterEvent("mouseover",$bind(this,this.onItemMouseOver));
			child.unregisterEvent("mouseout",$bind(this,this.onItemMouseOut));
		}
		this.unregisterEvent("hidden",$bind(this,this.onHidden));
		this.unregisterEvent("shown",$bind(this,this.onShown));
	}
	,_over: null
	,onMouseOver: function(event) {
		this._over = true;
	}
	,onMouseOut: function(event) {
		this._over = false;
	}
	,onItemClick: function(event) {
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		if(!item.get_expandable()) {
			var event = new haxe_ui_containers_menus_MenuEvent("menuselected");
			event.menu = this._menu;
			event.menuItem = item;
			this.findRootMenu().dispatch(event);
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,onItemMouseOver: function(event) {
		var builder = js_Boot.__cast(this._menu._compositeBuilder , haxe_ui_containers_menus__$Menu_Builder);
		var subMenus = builder._subMenus;
		var item = js_Boot.__cast(event.target , haxe_ui_containers_menus_MenuItem);
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child != item) {
				child.removeClass(":hover",true,true);
			}
		}
		if(subMenus.h[item.__id__] != null) {
			this._currentItem = item;
			this.showSubMenu(js_Boot.__cast(subMenus.h[item.__id__] , haxe_ui_containers_menus_Menu),item);
		} else {
			this.hideCurrentSubMenu();
		}
	}
	,onItemMouseOut: function(event) {
		if(this.currentSubMenu != null) {
			this._currentItem.addClass(":hover",true,true);
			return;
		} else {
			this._currentItem = null;
		}
	}
	,showSubMenu: function(subMenu,source) {
		this.hideCurrentSubMenu();
		subMenu.set_menuStyleNames(this._menu.get_menuStyleNames());
		subMenu.addClass(this._menu.get_menuStyleNames());
		var componentOffset = source.getComponentOffset();
		var left = source.get_screenLeft() + source.get_actualComponentWidth() + componentOffset.x;
		var top = source.get_screenTop();
		haxe_ui_core_Screen.get_instance().addComponent(subMenu);
		subMenu.syncComponentValidation();
		if(left + subMenu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_width()) {
			left = source.get_screenLeft() - subMenu.get_actualComponentWidth();
		}
		subMenu.set_left(left);
		subMenu.set_top(top);
		this.currentSubMenu = subMenu;
	}
	,hideMenu: function() {
		var root = this.findRootMenu();
		if(root == null) {
			return;
		}
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.button == null) {
			var _g = 0;
			var _g1 = root._children == null ? [] : root._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				child.removeClass(":hover",true,true);
			}
			events.hideCurrentSubMenu();
			haxe_ui_core_Screen.get_instance().removeComponent(root,false);
		}
	}
	,hideCurrentSubMenu: function() {
		if(this.currentSubMenu == null) {
			return;
		}
		var _g = 0;
		var _this = this.currentSubMenu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		var subMenuEvents = js_Boot.__cast(this.currentSubMenu._internalEvents , haxe_ui_containers_menus_MenuEvents);
		subMenuEvents.hideCurrentSubMenu();
		haxe_ui_core_Screen.get_instance().removeComponent(this.currentSubMenu,false);
		this.currentSubMenu = null;
	}
	,onHidden: function(event) {
		var _g = 0;
		var _this = this._menu;
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			child.removeClass(":hover",true,true);
		}
		this.hideCurrentSubMenu();
	}
	,onShown: function(event) {
		this.addScreenMouseDown();
	}
	,findRootMenu: function() {
		var root = null;
		var ref = this._menu;
		while(ref != null) {
			var events = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			if(events.parentMenu == null) {
				root = events._menu;
				break;
			}
			ref = events.parentMenu;
		}
		return root;
	}
	,hasScreenMouseDown: null
	,addScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		if(events.hasScreenMouseDown == false) {
			events.hasScreenMouseDown = true;
			haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
			haxe_ui_core_Screen.get_instance().registerEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
		}
	}
	,removeScreenMouseDown: function() {
		var root = this.findRootMenu();
		var events = js_Boot.__cast(root._internalEvents , haxe_ui_containers_menus_MenuEvents);
		events.hasScreenMouseDown = false;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
		haxe_ui_core_Screen.get_instance().unregisterEvent("rightmousedown",$bind(this,this.onScreenMouseDown));
	}
	,onScreenMouseDown: function(event) {
		var close = true;
		if(this._menu.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else if(this.button != null && this.button.hitTest(event.screenX,event.screenY)) {
			close = false;
		} else {
			var ref = this._menu;
			var refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
			var refSubMenu = refEvents.currentSubMenu;
			while(refSubMenu != null) {
				if(refSubMenu.hitTest(event.screenX,event.screenY)) {
					close = false;
					break;
				}
				ref = refSubMenu;
				refEvents = js_Boot.__cast(ref._internalEvents , haxe_ui_containers_menus_MenuEvents);
				refSubMenu = refEvents.currentSubMenu;
			}
		}
		if(close) {
			this.hideMenu();
			this.removeScreenMouseDown();
			this._menu.dispatch(new haxe_ui_events_UIEvent("close"));
		}
	}
	,__class__: haxe_ui_containers_menus_MenuEvents
});
var haxe_ui_containers_menus__$Menu_Builder = function(menu) {
	this._subMenus = new haxe_ds_ObjectMap();
	haxe_ui_core_CompositeBuilder.call(this,menu);
	this._menu = menu;
};
$hxClasses["haxe.ui.containers.menus._Menu.Builder"] = haxe_ui_containers_menus__$Menu_Builder;
haxe_ui_containers_menus__$Menu_Builder.__name__ = "haxe.ui.containers.menus._Menu.Builder";
haxe_ui_containers_menus__$Menu_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$Menu_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menu: null
	,_subMenus: null
	,onThemeChanged: function() {
		var menuItem = this._subMenus.keys();
		while(menuItem.hasNext()) {
			var menuItem1 = menuItem.next();
			var menu = this._subMenus.h[menuItem1.__id__];
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var item = new haxe_ui_containers_menus_MenuItem();
			item.set_id(child.get_id() + "Item");
			item.set_text(child.get_text());
			item.set_icon(menu.get_icon());
			item.set_tooltip(child.get_tooltip());
			item.set_expandable(true);
			this._menu.addComponent(item);
			(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).parentMenu = this._menu;
			menu.registerEvent("propertyChange",$bind(this,this.onMenuPropertyChanged));
			this._subMenus.set(item,menu);
			return child;
		}
		return null;
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var item = this._subMenus.keys();
			while(item.hasNext()) {
				var item1 = item.next();
				var subMenu = this._subMenus.h[item1.__id__];
				if(subMenu == menu) {
					item1.set_text(event.target.get_text());
					break;
				}
			}
		}
	}
	,onComponentAdded: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu) || ((child) instanceof haxe_ui_containers_menus_MenuItem)) {
			this._menu.registerInternalEvents(null,true);
		}
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var menu = this._subMenus.iterator();
			while(menu.hasNext()) {
				var menu1 = menu.next();
				match = menu1.findComponent(criteria,type,recursive,searchType);
				if(menu1.matchesSearch(criteria,type,searchType)) {
					return menu1;
				} else {
					match = menu1.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var menu = this._subMenus.iterator();
		while(menu.hasNext()) {
			var menu1 = menu.next();
			var match = true;
			if(styleName != null && menu1.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu1,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu1);
			} else {
				var childArray = menu1.findComponents(styleName,type,maxDepth);
				var _g = 0;
				while(_g < childArray.length) {
					var c = childArray[_g];
					++_g;
					r.push(c);
				}
			}
		}
		return r;
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		if(this._menu != null && this._menu._isDisposed == false) {
			haxe_ui_core_Screen.get_instance().removeComponent(this._menu);
		}
		var subMenu = this._subMenus.iterator();
		while(subMenu.hasNext()) {
			var subMenu1 = subMenu.next();
			haxe_ui_core_Screen.get_instance().removeComponent(subMenu1);
		}
	}
	,__class__: haxe_ui_containers_menus__$Menu_Builder
});
var haxe_ui_containers_menus_MenuBar = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuBar"] = haxe_ui_containers_menus_MenuBar;
haxe_ui_containers_menus_MenuBar.__name__ = "haxe.ui.containers.menus.MenuBar";
haxe_ui_containers_menus_MenuBar.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuBar.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	onThemeChanged: function() {
		haxe_ui_containers_HBox.prototype.onThemeChanged.call(this);
		var builder = js_Boot.__cast(this._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		builder.onThemeChanged();
	}
	,registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuBar_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuBar_Builder;
	}
	,_internal__onMenuSelected: null
	,onMenuSelected: null
	,set_onMenuSelected: function(value) {
		if(this._internal__onMenuSelected != null) {
			this.unregisterEvent("menuselected",this._internal__onMenuSelected);
			this._internal__onMenuSelected = null;
		}
		if(value != null) {
			this._internal__onMenuSelected = value;
			this.registerEvent("menuselected",value);
		}
		return value;
	}
	,_internal__onMenuOpened: null
	,onMenuOpened: null
	,set_onMenuOpened: function(value) {
		if(this._internal__onMenuOpened != null) {
			this.unregisterEvent("menuopened",this._internal__onMenuOpened);
			this._internal__onMenuOpened = null;
		}
		if(value != null) {
			this._internal__onMenuOpened = value;
			this.registerEvent("menuopened",value);
		}
		return value;
	}
	,_internal__onMenuClosed: null
	,onMenuClosed: null
	,set_onMenuClosed: function(value) {
		if(this._internal__onMenuClosed != null) {
			this.unregisterEvent("menuclosed",this._internal__onMenuClosed);
			this._internal__onMenuClosed = null;
		}
		if(value != null) {
			this._internal__onMenuClosed = value;
			this.registerEvent("menuclosed",value);
		}
		return value;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("menuStyleNames",haxe_ui_behaviours_DefaultBehaviour);
	}
	,get_menuStyleNames: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("menuStyleNames"));
	}
	,set_menuStyleNames: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"menuStyleNames",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("menuStyleNames",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"menuStyleNames"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuBar();
	}
	,__class__: haxe_ui_containers_menus_MenuBar
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_menuStyleNames:"set_menuStyleNames",get_menuStyleNames:"get_menuStyleNames",set_onMenuClosed:"set_onMenuClosed",set_onMenuOpened:"set_onMenuOpened",set_onMenuSelected:"set_onMenuSelected"})
});
var haxe_ui_containers_menus__$MenuBar_Events = function(menubar) {
	haxe_ui_events_Events.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Events"] = haxe_ui_containers_menus__$MenuBar_Events;
haxe_ui_containers_menus__$MenuBar_Events.__name__ = "haxe.ui.containers.menus._MenuBar.Events";
haxe_ui_containers_menus__$MenuBar_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuBar_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	_menubar: null
	,_currentMenu: null
	,_currentButton: null
	,register: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(!button.hasEvent("click",$bind(this,this.onButtonClick))) {
				button.registerEvent("click",$bind(this,this.onButtonClick));
			}
			if(!button.hasEvent("mouseover",$bind(this,this.onButtonOver))) {
				button.registerEvent("mouseover",$bind(this,this.onButtonOver));
			}
		}
	}
	,unregister: function() {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			button.unregisterEvent("click",$bind(this,this.onButtonClick));
			button.unregisterEvent("mouseover",$bind(this,this.onButtonOver));
		}
	}
	,onCompleteButton: function(event) {
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		target.unregisterEvent("mouseout",$bind(this,this.onCompleteButton));
		this.hideCurrentMenu();
	}
	,onButtonClick: function(event) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		if(target.get_toggle() == false) {
			var menu = builder._menus[index];
			var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
			newEvent.menu = menu;
			this._menubar.dispatch(newEvent);
			target.registerEvent("mouseout",$bind(this,this.onCompleteButton));
			menu.dispatch(new haxe_ui_events_MouseEvent("click"));
			return;
		}
		if(target.get_selected() == true) {
			this.showMenu(index);
		} else if(this._currentButton != null) {
			(js_Boot.__cast(this._currentButton._internalEvents , haxe_ui_components_ButtonEvents)).lastMouseEvent = event;
			this.hideCurrentMenu();
		}
	}
	,onButtonOver: function(event) {
		if(this._currentMenu == null) {
			return;
		}
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var target = js_Boot.__cast(event.target , haxe_ui_components_Button);
		var index = builder._buttons.indexOf(target);
		var menu = builder._menus[index];
		if(menu != this._currentMenu) {
			this.showMenu(index);
		}
	}
	,showMenu: function(index) {
		var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
		var menu = builder._menus[index];
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		var target = builder._buttons[index];
		if(this._currentMenu == menu) {
			return;
		}
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(button != target) {
				button.set_selected(false);
			}
		}
		target.set_selected(true);
		this.hideCurrentMenu();
		var _g = 0;
		var _g1 = builder._buttons;
		while(_g < _g1.length) {
			var button = _g1[_g];
			++_g;
			if(button.classes.indexOf("menubar-button-no-children") != -1) {
				button.swapClass("menubar-button-no-children-active","menubar-button-no-children");
			}
		}
		(js_Boot.__cast(menu._internalEvents , haxe_ui_containers_menus_MenuEvents)).button = target;
		if(menu.hasEvent("close",$bind(this,this.onMenuClose)) == false) {
			menu.registerEvent("close",$bind(this,this.onMenuClose));
		}
		var rtl = false;
		if(hasChildren == true) {
			var componentOffset = target.getComponentOffset();
			var left = target.get_screenLeft() + componentOffset.x;
			var marginTop = 0;
			if(menu.get_style() != null && menu.get_style().marginTop != null) {
				marginTop = menu.get_style().marginTop;
			}
			var top = target.get_screenTop() + (target.get_actualComponentHeight() - haxe_ui_Toolkit.get_scaleY()) + componentOffset.y + marginTop;
			menu.set_menuStyleNames(this._menubar.get_menuStyleNames());
			menu.addClasses([this._menubar.get_menuStyleNames(),"expanded"]);
			if(menu.findComponent("menu-filler",null,false) == null) {
				var filler = new haxe_ui_core_Component();
				filler.set_horizontalAlign("right");
				filler.set_includeInLayout(false);
				filler.addClass("menu-filler");
				filler.set_id("menu-filler");
				menu.addComponent(filler);
			}
			menu.show();
			haxe_ui_core_Screen.get_instance().addComponent(menu);
			menu.syncComponentValidation();
			if(left + menu.get_actualComponentWidth() > haxe_ui_core_Screen.get_instance().get_actualWidth()) {
				left = target.get_screenLeft() - menu.get_actualComponentWidth() + target.get_actualComponentWidth();
				rtl = true;
			}
			menu.set_left(left);
			menu.set_top(top - haxe_ui_Toolkit.get_scaleY());
		}
		this._currentButton = target;
		this._currentMenu = menu;
		if(hasChildren == true) {
			var cx = menu.get_width() - this._currentButton.get_width();
			var filler = menu.findComponent("menu-filler",null,false);
			if(cx > 0 && filler != null) {
				++cx;
				filler.set_width(cx);
				if(rtl == false) {
					filler.set_left(menu.get_width() - cx);
				}
				filler.set_hidden(false);
			} else if(filler != null) {
				filler.set_hidden(true);
			}
			if(!this._currentMenu.hasEvent("menuselected",$bind(this,this.onMenuSelected))) {
				this._currentMenu.registerEvent("menuselected",$bind(this,this.onMenuSelected));
			}
		}
		if(hasChildren == true) {
			this._currentMenu.dispatch(new haxe_ui_events_MouseEvent("click"));
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuopened");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
		}
	}
	,hideCurrentMenu: function() {
		if(this._currentMenu != null) {
			var builder = js_Boot.__cast(this._menubar._compositeBuilder , haxe_ui_containers_menus__$MenuBar_Builder);
			var _g = 0;
			var _g1 = builder._buttons;
			while(_g < _g1.length) {
				var button = _g1[_g];
				++_g;
				if(button.classes.indexOf("menubar-button-no-children-active") != -1) {
					button.swapClass("menubar-button-no-children","menubar-button-no-children-active");
				}
			}
			var menuEvent = new haxe_ui_containers_menus_MenuEvent("menuclosed");
			menuEvent.menu = this._currentMenu;
			this._currentMenu.dispatch(menuEvent);
			this.dispatch(menuEvent);
			this._currentMenu.unregisterEvent("menuselected",$bind(this,this.onMenuSelected));
			this._currentMenu.hide();
			this._currentButton.set_selected(false);
			haxe_ui_core_Screen.get_instance().removeComponent(this._currentMenu,false);
			this._currentButton = null;
			this._currentMenu = null;
		}
	}
	,onMenuClose: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		if(this._currentMenu == menu) {
			this.hideCurrentMenu();
		}
	}
	,onMenuSelected: function(event) {
		var newEvent = new haxe_ui_containers_menus_MenuEvent("menuselected");
		newEvent.menu = event.menu;
		newEvent.menuItem = event.menuItem;
		this._menubar.dispatch(newEvent);
		this.hideCurrentMenu();
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Events
});
var haxe_ui_containers_menus__$MenuBar_Builder = function(menubar) {
	this._menus = [];
	this._buttons = [];
	haxe_ui_core_CompositeBuilder.call(this,menubar);
	this._menubar = menubar;
};
$hxClasses["haxe.ui.containers.menus._MenuBar.Builder"] = haxe_ui_containers_menus__$MenuBar_Builder;
haxe_ui_containers_menus__$MenuBar_Builder.__name__ = "haxe.ui.containers.menus._MenuBar.Builder";
haxe_ui_containers_menus__$MenuBar_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuBar_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	_menubar: null
	,_buttons: null
	,_menus: null
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().invalidateChildren(menu);
			haxe_ui_core_Screen.get_instance().onThemeChangedChildren(menu);
		}
	}
	,create: function() {
	}
	,destroy: function() {
		haxe_ui_core_CompositeBuilder.prototype.destroy.call(this);
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			haxe_ui_core_Screen.get_instance().removeComponent(menu);
		}
		this._menus = null;
	}
	,addComponent: function(child) {
		if(((child) instanceof haxe_ui_containers_menus_Menu)) {
			var menu = js_Boot.__cast(child , haxe_ui_containers_menus_Menu);
			var button = new haxe_ui_components_Button();
			button.set_text(menu.get_text());
			button.set_icon(haxe_ui_util_Variant.fromString(menu.get_icon()));
			button.set_tooltip(menu.get_tooltip());
			haxe_ui_locale_LocaleManager.get_instance().cloneForComponent(child,button);
			this._buttons.push(button);
			this._menubar.addComponent(button);
			this._menubar.registerInternalEvents(null,true);
			this._menus.push(menu);
			this.styleMenuButton(menu,button);
			menu.registerEvent("componentAdded",$bind(this,this.onChildAdded));
			menu.registerEvent("componentRemoved",$bind(this,this.onChildRemoved));
			menu.registerEvent("propertyChange",$bind(this,this.onMenuPropertyChanged));
			return menu;
		}
		return null;
	}
	,onChildAdded: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onChildRemoved: function(event) {
		var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
		var index = this._menus.indexOf(menu);
		var button = this._buttons[index];
		this.styleMenuButton(menu,button);
	}
	,onMenuPropertyChanged: function(event) {
		if(event.data == "text") {
			var menu = js_Boot.__cast(event.target , haxe_ui_containers_menus_Menu);
			var index = this._menus.indexOf(menu);
			var button = this._buttons[index];
			button.set_text(event.target.get_text());
		}
	}
	,addComponentAt: function(child,index) {
		return null;
	}
	,removeComponent: function(child,dispose,invalidate) {
		if(invalidate == null) {
			invalidate = true;
		}
		if(dispose == null) {
			dispose = true;
		}
		return null;
	}
	,styleMenuButton: function(menu,button) {
		var hasChildren = (menu._children == null ? [] : menu._children).length > 0;
		if(hasChildren == true) {
			button.swapClass("menubar-button","menubar-button-no-children");
		} else {
			button.swapClass("menubar-button-no-children","menubar-button");
		}
		button.set_toggle(hasChildren);
		this._menubar.registerInternalEvents(null,true);
	}
	,getComponentIndex: function(child) {
		return -1;
	}
	,setComponentIndex: function(child,index) {
		return null;
	}
	,getComponentAt: function(index) {
		return null;
	}
	,findComponent: function(criteria,type,recursive,searchType) {
		var match = haxe_ui_core_CompositeBuilder.prototype.findComponent.call(this,criteria,type,recursive,searchType);
		if(match == null) {
			var _g = 0;
			var _g1 = this._menus;
			while(_g < _g1.length) {
				var menu = _g1[_g];
				++_g;
				match = menu.findComponent(criteria,type,recursive,searchType);
				if(menu.matchesSearch(criteria,type,searchType)) {
					return menu;
				} else {
					match = menu.findComponent(criteria,type,recursive,searchType);
				}
				if(match != null) {
					break;
				}
			}
		}
		return match;
	}
	,findComponents: function(styleName,type,maxDepth) {
		if(maxDepth == null) {
			maxDepth = 5;
		}
		var r = [];
		var _g = 0;
		var _g1 = this._menus;
		while(_g < _g1.length) {
			var menu = _g1[_g];
			++_g;
			var match = true;
			if(styleName != null && menu.classes.indexOf(styleName) != -1 == false) {
				match = false;
			}
			if(type != null && js_Boot.__instanceof(menu,type) == false) {
				match = false;
			}
			if(match == true) {
				r.push(menu);
			}
			var childArray = menu.findComponents(styleName,type,maxDepth);
			var _g2 = 0;
			while(_g2 < childArray.length) {
				var c = childArray[_g2];
				++_g2;
				r.push(c);
			}
		}
		return r;
	}
	,__class__: haxe_ui_containers_menus__$MenuBar_Builder
});
var haxe_ui_containers_menus_MenuItem = function() {
	haxe_ui_containers_HBox.call(this);
};
$hxClasses["haxe.ui.containers.menus.MenuItem"] = haxe_ui_containers_menus_MenuItem;
haxe_ui_containers_menus_MenuItem.__name__ = "haxe.ui.containers.menus.MenuItem";
haxe_ui_containers_menus_MenuItem.__super__ = haxe_ui_containers_HBox;
haxe_ui_containers_menus_MenuItem.prototype = $extend(haxe_ui_containers_HBox.prototype,{
	registerComposite: function() {
		haxe_ui_containers_HBox.prototype.registerComposite.call(this);
		this._internalEventsClass = haxe_ui_containers_menus__$MenuItem_Events;
		this._compositeBuilderClass = haxe_ui_containers_menus__$MenuItem_Builder;
	}
	,registerBehaviours: function() {
		haxe_ui_containers_HBox.prototype.registerBehaviours.call(this);
		this.behaviours.register("text",haxe_ui_containers_menus__$MenuItem_TextBehaviour);
		this.behaviours.register("shortcutText",haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour);
		this.behaviours.register("icon",haxe_ui_containers_menus__$MenuItem_IconBehaviour);
		this.behaviours.register("expandable",haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour);
	}
	,get_shortcutText: function() {
		if(this.behaviours == null) {
			return null;
		}
		return haxe_ui_util_Variant.toString(this.behaviours.get("shortcutText"));
	}
	,set_shortcutText: function(value) {
		var _g = Type.typeof(value);
		if(_g._hx_index == 6) {
			if(_g.c == String) {
				if(value != null && value.indexOf("{{") != -1 && value.indexOf("}}") != -1) {
					haxe_ui_locale_LocaleManager.get_instance().registerComponent(this,"shortcutText",null,value);
					return value;
				}
			}
		}
		this.behaviours.set("shortcutText",haxe_ui_util_Variant.fromString(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"shortcutText"));
		return value;
	}
	,get_expandable: function() {
		if(this.behaviours == null) {
			return false;
		}
		return haxe_ui_util_Variant.toBool(this.behaviours.get("expandable"));
	}
	,set_expandable: function(value) {
		if(this.behaviours == null) {
			return value;
		}
		this.behaviours.set("expandable",haxe_ui_util_Variant.fromBool(value));
		this.dispatch(new haxe_ui_events_UIEvent("propertyChange",null,"expandable"));
		return value;
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_HBox.prototype.cloneComponent.call(this);
		if(this.get_shortcutText() != null) {
			c.set_shortcutText(this.get_shortcutText());
		}
		c.set_expandable(this.get_expandable());
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_containers_menus_MenuItem();
	}
	,__class__: haxe_ui_containers_menus_MenuItem
	,__properties__: $extend(haxe_ui_containers_HBox.prototype.__properties__,{set_expandable:"set_expandable",get_expandable:"get_expandable",set_shortcutText:"set_shortcutText",get_shortcutText:"get_shortcutText"})
});
var haxe_ui_containers_menus__$MenuItem_TextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.TextBehaviour"] = haxe_ui_containers_menus__$MenuItem_TextBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.TextBehaviour";
haxe_ui_containers_menus__$MenuItem_TextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_TextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-label",null,true);
		label.set_text(haxe_ui_util_Variant.toString(this._value));
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_TextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour"] = haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ShortcutTextBehaviour";
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var label = this._component.findComponent("menuitem-shortcut-label",null,true);
		if(label != null) {
			label.set_text(haxe_ui_util_Variant.toString(this._value));
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ShortcutTextBehaviour
});
var haxe_ui_containers_menus__$MenuItem_IconBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.IconBehaviour"] = haxe_ui_containers_menus__$MenuItem_IconBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.IconBehaviour";
haxe_ui_containers_menus__$MenuItem_IconBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_IconBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			return;
		}
		var icon = this._component.findComponent("menuitem-icon",null,true);
		if(icon == null) {
			icon = new haxe_ui_components_Image();
			icon.set_scriptAccess(false);
			icon.set_id("menuitem-icon");
			icon.addClass("menuitem-icon");
			icon.addClass("icon");
			this._component.addComponentAt(icon,0);
		}
		icon.set_resource(this._value);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_IconBehaviour
});
var haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.ExpandableBehaviour"] = haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__name__ = "haxe.ui.containers.menus._MenuItem.ExpandableBehaviour";
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		var image = this._component.findComponent("menuitem-expandable");
		if(image == null && haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(true))) {
			image = new haxe_ui_components_Image();
			image.set_id("menuitem-expandable");
			image.set_styleNames("menuitem-expandable");
			image.set_scriptAccess(false);
			this._component.addComponent(image);
			var _this = this._component;
			var force = true;
			if(force == null) {
				force = false;
			}
			_this.invalidateComponent("style",false);
			if(force == true) {
				_this._style = null;
			}
		} else if(haxe_ui_util_Variant.eq(this._value,haxe_ui_util_Variant.fromBool(false))) {
			this._component.removeComponent(image);
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_ExpandableBehaviour
});
var haxe_ui_containers_menus__$MenuItem_Events = function(target) {
	haxe_ui_events_Events.call(this,target);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Events"] = haxe_ui_containers_menus__$MenuItem_Events;
haxe_ui_containers_menus__$MenuItem_Events.__name__ = "haxe.ui.containers.menus._MenuItem.Events";
haxe_ui_containers_menus__$MenuItem_Events.__super__ = haxe_ui_events_Events;
haxe_ui_containers_menus__$MenuItem_Events.prototype = $extend(haxe_ui_events_Events.prototype,{
	register: function() {
		if(!this.hasEvent("mouseover",$bind(this,this.onMouseOver))) {
			this.registerEvent("mouseover",$bind(this,this.onMouseOver));
		}
		if(!this.hasEvent("mouseout",$bind(this,this.onMouseOut))) {
			this.registerEvent("mouseout",$bind(this,this.onMouseOut));
		}
	}
	,unregister: function() {
		this.unregisterEvent("mouseover",$bind(this,this.onMouseOver));
		this.unregisterEvent("mouseout",$bind(this,this.onMouseOut));
	}
	,onMouseOver: function(event) {
		this._target.addClass(":hover",true,true);
	}
	,onMouseOut: function(event) {
		this._target.removeClass(":hover",true,true);
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Events
});
var haxe_ui_containers_menus__$MenuItem_Builder = function(component) {
	haxe_ui_core_CompositeBuilder.call(this,component);
};
$hxClasses["haxe.ui.containers.menus._MenuItem.Builder"] = haxe_ui_containers_menus__$MenuItem_Builder;
haxe_ui_containers_menus__$MenuItem_Builder.__name__ = "haxe.ui.containers.menus._MenuItem.Builder";
haxe_ui_containers_menus__$MenuItem_Builder.__super__ = haxe_ui_core_CompositeBuilder;
haxe_ui_containers_menus__$MenuItem_Builder.prototype = $extend(haxe_ui_core_CompositeBuilder.prototype,{
	create: function() {
		haxe_ui_core_CompositeBuilder.prototype.create.call(this);
		var box = new haxe_ui_containers_HBox();
		box.set_percentWidth(100);
		box.set_verticalAlign("center");
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-label");
		label.set_percentWidth(100);
		label.set_styleNames("menuitem-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		var label = new haxe_ui_components_Label();
		label.set_id("menuitem-shortcut-label");
		label.set_styleNames("menuitem-shortcut-label");
		label.set_scriptAccess(false);
		box.addComponent(label);
		this._component.addComponent(box);
	}
	,applyStyle: function(style) {
		var c = this._component.findComponent("menuitem-label",haxe_ui_core_Component);
		if(c != null) {
			var invalidate = false;
			if(c.get_customStyle().color != style.color) {
				c.get_customStyle().color = style.color;
				invalidate = true;
			}
			if(c.get_customStyle().fontName != style.fontName) {
				c.get_customStyle().fontName = style.fontName;
				invalidate = true;
			}
			if(c.get_customStyle().fontSize != style.fontSize) {
				c.get_customStyle().fontSize = style.fontSize;
				invalidate = true;
			}
			if(c.get_customStyle().cursor != style.cursor) {
				c.get_customStyle().cursor = style.cursor;
				invalidate = true;
			}
			if(c.get_customStyle().textAlign != style.textAlign) {
				c.get_customStyle().textAlign = style.textAlign;
				invalidate = true;
			}
			if(invalidate == true) {
				c.invalidateComponent("style",false);
			}
		}
	}
	,__class__: haxe_ui_containers_menus__$MenuItem_Builder
});
var haxe_ui_core_BasicItemRenderer = function() {
	haxe_ui_core_ItemRenderer.call(this);
	var hbox = new haxe_ui_containers_HBox();
	hbox.addClass("basic-renderer-container");
	var icon = new haxe_ui_components_Image();
	icon.set_id("icon");
	icon.addClass("basic-renderer-icon");
	icon.set_verticalAlign("center");
	icon.hide();
	hbox.addComponent(icon);
	var label = new haxe_ui_components_Label();
	label.set_id("text");
	label.addClass("basic-renderer-label");
	label.set_verticalAlign("center");
	label.hide();
	hbox.addComponent(label);
	this.addComponent(hbox);
};
$hxClasses["haxe.ui.core.BasicItemRenderer"] = haxe_ui_core_BasicItemRenderer;
haxe_ui_core_BasicItemRenderer.__name__ = "haxe.ui.core.BasicItemRenderer";
haxe_ui_core_BasicItemRenderer.__super__ = haxe_ui_core_ItemRenderer;
haxe_ui_core_BasicItemRenderer.prototype = $extend(haxe_ui_core_ItemRenderer.prototype,{
	registerBehaviours: function() {
		haxe_ui_core_ItemRenderer.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_core_ItemRenderer.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_core_BasicItemRenderer();
	}
	,__class__: haxe_ui_core_BasicItemRenderer
});
var haxe_ui_core_ComponentClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.ComponentClassMap"] = haxe_ui_core_ComponentClassMap;
haxe_ui_core_ComponentClassMap.__name__ = "haxe.ui.core.ComponentClassMap";
haxe_ui_core_ComponentClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_ComponentClassMap.get_instance = function() {
	if(haxe_ui_core_ComponentClassMap._instance == null) {
		haxe_ui_core_ComponentClassMap._instance = new haxe_ui_core_ComponentClassMap();
	}
	return haxe_ui_core_ComponentClassMap._instance;
};
haxe_ui_core_ComponentClassMap.get = function(alias) {
	alias = StringTools.replace(alias,"-","").toLowerCase();
	return haxe_ui_core_ComponentClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_ComponentClassMap.register = function(alias,className) {
	haxe_ui_core_ComponentClassMap.get_instance().registerClassName(alias.toLowerCase(),className);
};
haxe_ui_core_ComponentClassMap.list = function() {
	return new haxe_ds__$StringMap_StringMapKeyIterator(haxe_ui_core_ComponentClassMap.get_instance()._map.h);
};
haxe_ui_core_ComponentClassMap.clear = function() {
	haxe_ui_core_ComponentClassMap.get_instance()._map = new haxe_ds_StringMap();
};
haxe_ui_core_ComponentClassMap.hasClass = function(className) {
	return haxe_ui_core_ComponentClassMap.get_instance().hasClassName(className);
};
haxe_ui_core_ComponentClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		return this._map.h[alias];
	}
	,registerClassName: function(alias,className) {
		this._map.h[alias] = className;
	}
	,hasClassName: function(className) {
		var h = this._map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			if(this._map.h[k] == className) {
				return true;
			}
		}
		return false;
	}
	,__class__: haxe_ui_core_ComponentClassMap
};
var haxe_ui_core_ComponentTextBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentTextBehaviour"] = haxe_ui_core_ComponentTextBehaviour;
haxe_ui_core_ComponentTextBehaviour.__name__ = "haxe.ui.core.ComponentTextBehaviour";
haxe_ui_core_ComponentTextBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentTextBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		haxe_ui_behaviours_DefaultBehaviour.prototype.set.call(this,value);
	}
	,__class__: haxe_ui_core_ComponentTextBehaviour
});
var haxe_ui_core_ComponentDisabledBehaviour = function(component) {
	haxe_ui_behaviours_DefaultBehaviour.call(this,component);
	this._value = haxe_ui_util_Variant.fromBool(false);
};
$hxClasses["haxe.ui.core.ComponentDisabledBehaviour"] = haxe_ui_core_ComponentDisabledBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.__name__ = "haxe.ui.core.ComponentDisabledBehaviour";
haxe_ui_core_ComponentDisabledBehaviour.__super__ = haxe_ui_behaviours_DefaultBehaviour;
haxe_ui_core_ComponentDisabledBehaviour.prototype = $extend(haxe_ui_behaviours_DefaultBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		if(value != null && haxe_ui_util_Variant.get_isNull(value) == false) {
			this._component.disableInteractivity(haxe_ui_util_Variant.toBool(value),true,true);
		}
	}
	,get: function() {
		return haxe_ui_util_Variant.fromBool(this._component.classes.indexOf(":disabled") != -1);
	}
	,__class__: haxe_ui_core_ComponentDisabledBehaviour
});
var haxe_ui_core_ComponentValueBehaviour = function(component) {
	haxe_ui_behaviours_ValueBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentValueBehaviour"] = haxe_ui_core_ComponentValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.__name__ = "haxe.ui.core.ComponentValueBehaviour";
haxe_ui_core_ComponentValueBehaviour.__super__ = haxe_ui_behaviours_ValueBehaviour;
haxe_ui_core_ComponentValueBehaviour.prototype = $extend(haxe_ui_behaviours_ValueBehaviour.prototype,{
	set: function(value) {
		if(haxe_ui_util_Variant.eq(value,this._value)) {
			return;
		}
		this._value = value;
		this._component.set_text(haxe_ui_util_Variant.toString(value));
	}
	,get: function() {
		return this._value;
	}
	,getDynamic: function() {
		return haxe_ui_util_Variant.toDynamic(this._value);
	}
	,__class__: haxe_ui_core_ComponentValueBehaviour
});
var haxe_ui_core_ComponentToolTipBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipBehaviour"] = haxe_ui_core_ComponentToolTipBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.__name__ = "haxe.ui.core.ComponentToolTipBehaviour";
haxe_ui_core_ComponentToolTipBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : haxe_ui_util_Variant.toDynamic(this._value), renderer : this._component.get_tooltipRenderer()});
		}
	}
	,setDynamic: function(value) {
		haxe_ui_tooltips_ToolTipManager.get_instance().unregisterTooltip(this._component);
		if(value != null) {
			haxe_ui_tooltips_ToolTipManager.get_instance().registerTooltip(this._component,{ tipData : value, renderer : this._component.get_tooltipRenderer()});
		}
	}
	,getDynamic: function() {
		var options = haxe_ui_tooltips_ToolTipManager.get_instance().getTooltipOptions(this._component);
		if(options == null) {
			return null;
		}
		return options.tipData;
	}
	,__class__: haxe_ui_core_ComponentToolTipBehaviour
});
var haxe_ui_core_ComponentToolTipRendererBehaviour = function(component) {
	haxe_ui_behaviours_DataBehaviour.call(this,component);
};
$hxClasses["haxe.ui.core.ComponentToolTipRendererBehaviour"] = haxe_ui_core_ComponentToolTipRendererBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.__name__ = "haxe.ui.core.ComponentToolTipRendererBehaviour";
haxe_ui_core_ComponentToolTipRendererBehaviour.__super__ = haxe_ui_behaviours_DataBehaviour;
haxe_ui_core_ComponentToolTipRendererBehaviour.prototype = $extend(haxe_ui_behaviours_DataBehaviour.prototype,{
	validateData: function() {
		if(this._value == null || haxe_ui_util_Variant.get_isNull(this._value)) {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,null);
		} else {
			haxe_ui_tooltips_ToolTipManager.get_instance().updateTooltipRenderer(this._component,haxe_ui_util_Variant.toComponent(this._value));
		}
	}
	,__class__: haxe_ui_core_ComponentToolTipRendererBehaviour
});
var haxe_ui_core_ComponentFieldMap = function() { };
$hxClasses["haxe.ui.core.ComponentFieldMap"] = haxe_ui_core_ComponentFieldMap;
haxe_ui_core_ComponentFieldMap.__name__ = "haxe.ui.core.ComponentFieldMap";
haxe_ui_core_ComponentFieldMap.mapField = function(name) {
	if(Object.prototype.hasOwnProperty.call(haxe_ui_core_ComponentFieldMap.MAP.h,name)) {
		return haxe_ui_core_ComponentFieldMap.MAP.h[name];
	}
	return name;
};
var haxe_ui_core_ImageDisplay = function() {
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_ImageDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.ImageDisplay"] = haxe_ui_core_ImageDisplay;
haxe_ui_core_ImageDisplay.__name__ = "haxe.ui.core.ImageDisplay";
haxe_ui_core_ImageDisplay.__super__ = haxe_ui_backend_ImageDisplayImpl;
haxe_ui_core_ImageDisplay.prototype = $extend(haxe_ui_backend_ImageDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_imageWidth: function(value) {
		if(this._imageWidth == value || value <= 0) {
			return value;
		}
		this._imageWidth = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageWidth: function() {
		return this._imageWidth;
	}
	,set_imageHeight: function(value) {
		if(this._imageHeight == value || value <= 0) {
			return value;
		}
		this._imageHeight = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_imageHeight: function() {
		return this._imageHeight;
	}
	,get_imageInfo: function() {
		return this._imageInfo;
	}
	,set_imageInfo: function(value) {
		if(value == this._imageInfo) {
			return value;
		}
		this._imageInfo = value;
		this._imageWidth = this._imageInfo.width;
		this._imageHeight = this._imageInfo.height;
		this.invalidateComponent("data");
		this.invalidateComponent("display");
		return value;
	}
	,get_imageClipRect: function() {
		return this._imageClipRect;
	}
	,set_imageClipRect: function(value) {
		this._imageClipRect = value;
		this.invalidateComponent("display");
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this.parentComponent == null) {
			return;
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("imageDisplay");
		}
	}
	,validateComponent: function() {
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.handleValidate();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,handleValidate: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		if(dataInvalid) {
			this.validateData();
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
	}
	,__class__: haxe_ui_core_ImageDisplay
	,__properties__: {set_imageClipRect:"set_imageClipRect",get_imageClipRect:"get_imageClipRect",set_imageInfo:"set_imageInfo",get_imageInfo:"get_imageInfo",set_imageHeight:"set_imageHeight",get_imageHeight:"get_imageHeight",set_imageWidth:"set_imageWidth",get_imageWidth:"get_imageWidth",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left"}
});
var haxe_ui_core_LayoutClassMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.core.LayoutClassMap"] = haxe_ui_core_LayoutClassMap;
haxe_ui_core_LayoutClassMap.__name__ = "haxe.ui.core.LayoutClassMap";
haxe_ui_core_LayoutClassMap.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_LayoutClassMap.get_instance = function() {
	if(haxe_ui_core_LayoutClassMap._instance == null) {
		haxe_ui_core_LayoutClassMap._instance = new haxe_ui_core_LayoutClassMap();
	}
	return haxe_ui_core_LayoutClassMap._instance;
};
haxe_ui_core_LayoutClassMap.get = function(alias) {
	return haxe_ui_core_LayoutClassMap.get_instance().getClassName(alias);
};
haxe_ui_core_LayoutClassMap.register = function(alias,className) {
	haxe_ui_core_LayoutClassMap.get_instance().registerClassName(StringTools.replace(alias,"layout",""),className);
	haxe_ui_core_LayoutClassMap.get_instance().registerClassName(alias,className);
};
haxe_ui_core_LayoutClassMap.list = function() {
	return new haxe_ds__$StringMap_StringMapKeyIterator(haxe_ui_core_LayoutClassMap.get_instance()._map.h);
};
haxe_ui_core_LayoutClassMap.prototype = {
	_map: null
	,getClassName: function(alias) {
		return this._map.h[alias];
	}
	,registerClassName: function(alias,className) {
		this._map.h[alias] = className;
	}
	,__class__: haxe_ui_core_LayoutClassMap
};
var haxe_ui_core_Platform = function() {
	haxe_ui_backend_PlatformImpl.call(this);
};
$hxClasses["haxe.ui.core.Platform"] = haxe_ui_core_Platform;
haxe_ui_core_Platform.__name__ = "haxe.ui.core.Platform";
haxe_ui_core_Platform.__properties__ = {get_instance:"get_instance",get_hscrollHeight:"get_hscrollHeight",get_vscrollWidth:"get_vscrollWidth"};
haxe_ui_core_Platform.get_vscrollWidth = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.vscroll.width");
};
haxe_ui_core_Platform.get_hscrollHeight = function() {
	return haxe_ui_core_Platform.get_instance().getMetric("patform.metrics.hscroll.height");
};
haxe_ui_core_Platform.get_instance = function() {
	if(haxe_ui_core_Platform._instance == null) {
		haxe_ui_core_Platform._instance = new haxe_ui_core_Platform();
	}
	return haxe_ui_core_Platform._instance;
};
haxe_ui_core_Platform.__super__ = haxe_ui_backend_PlatformImpl;
haxe_ui_core_Platform.prototype = $extend(haxe_ui_backend_PlatformImpl.prototype,{
	getMetric: function(id) {
		return haxe_ui_backend_PlatformImpl.prototype.getMetric.call(this,id);
	}
	,__class__: haxe_ui_core_Platform
});
var haxe_ui_core_Screen = function() {
	haxe_ui_backend_ScreenImpl.call(this);
	this.rootComponents = [];
	this._eventMap = new haxe_ui_util_EventMap();
};
$hxClasses["haxe.ui.core.Screen"] = haxe_ui_core_Screen;
haxe_ui_core_Screen.__name__ = "haxe.ui.core.Screen";
haxe_ui_core_Screen.__properties__ = {get_instance:"get_instance"};
haxe_ui_core_Screen.get_instance = function() {
	if(haxe_ui_core_Screen._instance == null) {
		haxe_ui_core_Screen._instance = new haxe_ui_core_Screen();
	}
	return haxe_ui_core_Screen._instance;
};
haxe_ui_core_Screen.__super__ = haxe_ui_backend_ScreenImpl;
haxe_ui_core_Screen.prototype = $extend(haxe_ui_backend_ScreenImpl.prototype,{
	_eventMap: null
	,addComponent: function(component) {
		var wasReady = component.get_isReady();
		component._hasScreen = true;
		haxe_ui_backend_ScreenImpl.prototype.addComponent.call(this,component);
		component.ready();
		if(this.rootComponents.indexOf(component) == -1) {
			this.rootComponents.push(component);
		}
		haxe_ui_focus_FocusManager.get_instance().pushView(component);
		if(component.hasEvent("resize",$bind(this,this._onRootComponentResize)) == false) {
			component.registerEvent("resize",$bind(this,this._onRootComponentResize));
		}
		if(wasReady && component.get_hidden() == false) {
			component.dispatch(new haxe_ui_events_UIEvent("shown"));
		}
		return component;
	}
	,removeComponent: function(component,dispose) {
		if(dispose == null) {
			dispose = true;
		}
		if(this.rootComponents.indexOf(component) == -1) {
			return component;
		}
		component._hasScreen = false;
		haxe_ui_backend_ScreenImpl.prototype.removeComponent.call(this,component,dispose);
		component.set_depth(-1);
		HxOverrides.remove(this.rootComponents,component);
		haxe_ui_focus_FocusManager.get_instance().removeView(component);
		component.unregisterEvent("resize",$bind(this,this._onRootComponentResize));
		if(dispose == true) {
			component.disposeComponent();
		}
		return component;
	}
	,setComponentIndex: function(child,index) {
		if(index >= 0 && index <= this.rootComponents.length) {
			this.handleSetComponentIndex(child,index);
			HxOverrides.remove(this.rootComponents,child);
			this.rootComponents.splice(index,0,child);
		}
		return child;
	}
	,moveComponentToFront: function(child) {
		if(this.rootComponents.indexOf(child) != -1) {
			this.setComponentIndex(child,this.rootComponents.length - 1);
		}
	}
	,findComponentsUnderPoint: function(screenX,screenY,type) {
		var copy = this.rootComponents.slice();
		copy.reverse();
		var c = [];
		var _g = 0;
		while(_g < copy.length) {
			var r = copy[_g];
			++_g;
			if(r.hitTest(screenX,screenY)) {
				var match = true;
				if(type != null && js_Boot.__instanceof(r,type) == false) {
					match = false;
				}
				if(match == true) {
					c.push(r);
				}
			}
			c = c.concat(r.findComponentsUnderPoint(screenX,screenY,type));
		}
		return c;
	}
	,hasComponentUnderPoint: function(screenX,screenY,type) {
		var copy = this.rootComponents.slice();
		copy.reverse();
		var _g = 0;
		while(_g < copy.length) {
			var r = copy[_g];
			++_g;
			if(r.hasComponentUnderPoint(screenX,screenY,type) == true) {
				return true;
			}
		}
		return false;
	}
	,onThemeChanged: function() {
		var _g = 0;
		var _g1 = this.rootComponents;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			this.onThemeChangedChildren(c);
		}
	}
	,onThemeChangedChildren: function(c) {
		var _g = 0;
		var _g1 = c._children == null ? [] : c._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			this.onThemeChangedChildren(child);
		}
		c.onThemeChanged();
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this.supportsEvent(type) == true) {
			if(this._eventMap.add(type,listener,priority) == true) {
				this.mapEvent(type,$bind(this,this._onMappedEvent));
			}
		}
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap.remove(type,listener) == true) {
			this.unmapEvent(type,$bind(this,this._onMappedEvent));
		}
	}
	,_onMappedEvent: function(event) {
		this._eventMap.invoke(event.type,event);
	}
	,__class__: haxe_ui_core_Screen
});
var haxe_ui_core_TextDisplayData = function() {
	this.wordWrap = false;
	this.multiline = false;
};
$hxClasses["haxe.ui.core.TextDisplayData"] = haxe_ui_core_TextDisplayData;
haxe_ui_core_TextDisplayData.__name__ = "haxe.ui.core.TextDisplayData";
haxe_ui_core_TextDisplayData.prototype = {
	multiline: null
	,wordWrap: null
	,__class__: haxe_ui_core_TextDisplayData
};
var haxe_ui_core_TextDisplay = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextDisplayImpl.call(this);
};
$hxClasses["haxe.ui.core.TextDisplay"] = haxe_ui_core_TextDisplay;
haxe_ui_core_TextDisplay.__name__ = "haxe.ui.core.TextDisplay";
haxe_ui_core_TextDisplay.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextDisplay.__super__ = haxe_ui_backend_TextDisplayImpl;
haxe_ui_core_TextDisplay.prototype = $extend(haxe_ui_backend_TextDisplayImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textdisplay";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
				_gthis.parentComponent.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this._htmlText = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this.invalidateComponent("position");
		this._left = value;
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this.invalidateComponent("position");
		this._top = value;
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._width = value;
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this.invalidateComponent("display");
		this._height = value;
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		if(this._text == null && this._htmlText == null) {
			return 0;
		}
		if(this._text != null && this._text.length == 0) {
			return 0;
		}
		if(this._htmlText != null && this._htmlText.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.multiline = value;
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this.invalidateComponent("style");
		this._displayData.wordWrap = value;
		return value;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textDisplay");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textDisplay");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		this._invalidationFlags.h = Object.create(null);
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid || styleInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			var oldTextWidth = this.get_textWidth();
			var oldTextHeight = this.get_textHeight();
			this.measureText();
			if(this.get_textWidth() != oldTextWidth || this.get_textHeight() != oldTextHeight) {
				this.parentComponent.invalidateComponent("layout");
			}
		}
	}
	,__class__: haxe_ui_core_TextDisplay
	,__properties__: $extend(haxe_ui_backend_TextDisplayImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TextInputData = function() {
	this.onChangedCallback = null;
	this.onScrollCallback = null;
	this.vscrollNativeWheel = false;
	this.vscrollPageStep = null;
	this.vscrollPageSize = 0;
	this.vscrollMax = 0;
	this.vscrollPos = 0;
	this.hscrollPageSize = 0;
	this.hscrollMax = 0;
	this.hscrollPos = 0;
	this.password = false;
};
$hxClasses["haxe.ui.core.TextInputData"] = haxe_ui_core_TextInputData;
haxe_ui_core_TextInputData.__name__ = "haxe.ui.core.TextInputData";
haxe_ui_core_TextInputData.prototype = {
	password: null
	,hscrollPos: null
	,hscrollMax: null
	,hscrollPageSize: null
	,vscrollPos: null
	,vscrollMax: null
	,vscrollPageSize: null
	,vscrollPageStep: null
	,vscrollNativeWheel: null
	,onScrollCallback: null
	,onChangedCallback: null
	,__class__: haxe_ui_core_TextInputData
};
var haxe_ui_core_TextInput = function() {
	this._depth = -1;
	this._isValidating = false;
	this._isAllInvalid = false;
	this._invalidationFlags = new haxe_ds_StringMap();
	haxe_ui_backend_TextInputImpl.call(this);
	this._isAllInvalid = true;
};
$hxClasses["haxe.ui.core.TextInput"] = haxe_ui_core_TextInput;
haxe_ui_core_TextInput.__name__ = "haxe.ui.core.TextInput";
haxe_ui_core_TextInput.__interfaces__ = [haxe_ui_validation_IValidating];
haxe_ui_core_TextInput.__super__ = haxe_ui_backend_TextInputImpl;
haxe_ui_core_TextInput.prototype = $extend(haxe_ui_backend_TextInputImpl.prototype,{
	_invalidationFlags: null
	,_isAllInvalid: null
	,_isValidating: null
	,get_id: function() {
		if(this.parentComponent == null) {
			return null;
		}
		return this.parentComponent.get_id() + "_textinput";
	}
	,set_id: function(value) {
		return value;
	}
	,isComponentOffscreen: null
	,get_isComponentOffscreen: function() {
		return false;
	}
	,focus: function() {
		haxe_ui_backend_TextInputImpl.prototype.focus.call(this);
	}
	,blur: function() {
		haxe_ui_backend_TextInputImpl.prototype.blur.call(this);
	}
	,get_textStyle: function() {
		return this._textStyle;
	}
	,set_textStyle: function(value) {
		var _gthis = this;
		if(value == null) {
			return value;
		}
		if(value.fontName != null && this._textStyle == null || this._textStyle != null && value.fontName != this._textStyle.fontName) {
			haxe_ui_ToolkitAssets.get_instance().getFont(value.fontName,function(fontInfo) {
				_gthis._fontInfo = fontInfo;
				_gthis.invalidateComponent("style");
			});
		} else {
			this.invalidateComponent("style");
		}
		this._textStyle = value;
		return value;
	}
	,data: null
	,get_data: function() {
		return this._inputData;
	}
	,get_text: function() {
		return this._text;
	}
	,set_text: function(value) {
		if(value == this._text) {
			return value;
		}
		this._text = value;
		this.invalidateComponent("data");
		return value;
	}
	,get_htmlText: function() {
		return this._htmlText;
	}
	,set_htmlText: function(value) {
		if(value == this._htmlText) {
			return value;
		}
		this._htmlText = value;
		this._text = null;
		this.invalidateComponent("data");
		return value;
	}
	,get_password: function() {
		return this._inputData.password;
	}
	,set_password: function(value) {
		if(value == this._inputData.password) {
			return value;
		}
		this._inputData.password = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_left: function() {
		return this._left;
	}
	,set_left: function(value) {
		if(value == this._left) {
			return value;
		}
		this._left = value;
		this.invalidateComponent("position");
		return value;
	}
	,get_top: function() {
		return this._top;
	}
	,set_top: function(value) {
		if(value == this._top) {
			return value;
		}
		this._top = value;
		this.invalidateComponent("position");
		return value;
	}
	,set_width: function(value) {
		if(this._width == value) {
			return value;
		}
		this._width = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_width: function() {
		return this._width;
	}
	,set_height: function(value) {
		if(this._height == value) {
			return value;
		}
		this._height = value;
		this.invalidateComponent("display");
		return value;
	}
	,get_height: function() {
		return this._height;
	}
	,textWidth: null
	,get_textWidth: function() {
		if(this._text == null || this._text.length == 0) {
			return 0;
		}
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textWidth;
	}
	,textHeight: null
	,get_textHeight: function() {
		var tmp = this._text == null || this._text.length == 0;
		if(this.isComponentInvalid() == true) {
			this.validateComponent();
		}
		return this._textHeight;
	}
	,get_multiline: function() {
		return this._displayData.multiline;
	}
	,set_multiline: function(value) {
		if(value == this._displayData.multiline) {
			return value;
		}
		this._displayData.multiline = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_wordWrap: function() {
		return this._displayData.wordWrap;
	}
	,set_wordWrap: function(value) {
		if(value == this._displayData.wordWrap) {
			return value;
		}
		this._displayData.wordWrap = value;
		this.invalidateComponent("style");
		return value;
	}
	,get_hscrollPos: function() {
		return this._inputData.hscrollPos;
	}
	,set_hscrollPos: function(value) {
		if(value == this._inputData.hscrollPos) {
			return value;
		}
		this._inputData.hscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,hscrollMax: null
	,get_hscrollMax: function() {
		return this._inputData.hscrollMax;
	}
	,hscrollPageSize: null
	,get_hscrollPageSize: function() {
		return this._inputData.hscrollPageSize;
	}
	,get_vscrollPos: function() {
		return this._inputData.vscrollPos;
	}
	,set_vscrollPos: function(value) {
		if(value == this._inputData.vscrollPos) {
			return value;
		}
		this._inputData.vscrollPos = value;
		this.invalidateComponent("data");
		return value;
	}
	,vscrollMax: null
	,get_vscrollMax: function() {
		return this._inputData.vscrollMax;
	}
	,vscrollPageSize: null
	,get_vscrollPageSize: function() {
		return this._inputData.vscrollPageSize;
	}
	,isComponentInvalid: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(this._isAllInvalid == true) {
			return true;
		}
		if(flag == "all") {
			var h = this._invalidationFlags.h;
			var value_h = h;
			var value_keys = Object.keys(h);
			var value_length = value_keys.length;
			var value_current = 0;
			while(value_current < value_length) {
				var value = value_h[value_keys[value_current++]];
				return true;
			}
			return false;
		}
		return Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag);
	}
	,invalidateComponent: function(flag) {
		if(flag == null) {
			flag = "all";
		}
		if(flag == "all") {
			this._isAllInvalid = true;
			this.parentComponent.invalidateComponent("textInput");
		} else if(!Object.prototype.hasOwnProperty.call(this._invalidationFlags.h,flag)) {
			this._invalidationFlags.h[flag] = true;
			this.parentComponent.invalidateComponent("textInput");
		}
	}
	,_depth: null
	,get_depth: function() {
		return this._depth;
	}
	,set_depth: function(value) {
		if(this._depth == value) {
			return value;
		}
		this._depth = value;
		return value;
	}
	,updateComponentDisplay: function() {
	}
	,validateComponent: function(nextFrame) {
		if(nextFrame == null) {
			nextFrame = true;
		}
		if(this._isValidating == true || this.isComponentInvalid() == false) {
			return;
		}
		this._isValidating = true;
		this.validateComponentInternal();
		var h = this._invalidationFlags.h;
		var flag_h = h;
		var flag_keys = Object.keys(h);
		var flag_length = flag_keys.length;
		var flag_current = 0;
		while(flag_current < flag_length) {
			var flag = flag_keys[flag_current++];
			var _this = this._invalidationFlags;
			if(Object.prototype.hasOwnProperty.call(_this.h,flag)) {
				delete(_this.h[flag]);
			}
		}
		this._isAllInvalid = false;
		this._isValidating = false;
	}
	,validateComponentInternal: function() {
		var dataInvalid = this.isComponentInvalid("data");
		var styleInvalid = this.isComponentInvalid("style");
		var positionInvalid = this.isComponentInvalid("position");
		var displayInvalid = this.isComponentInvalid("display");
		var measureInvalid = this.isComponentInvalid("measure");
		if(dataInvalid) {
			this.validateData();
		}
		if(styleInvalid) {
			if(this.validateStyle()) {
				measureInvalid = true;
			}
		}
		if(positionInvalid) {
			this.validatePosition();
		}
		if(displayInvalid) {
			this.validateDisplay();
		}
		if(dataInvalid || displayInvalid || measureInvalid) {
			this.measureText();
		}
		if(dataInvalid) {
			if(this._inputData.onChangedCallback != null) {
				this._inputData.onChangedCallback();
			}
		}
	}
	,__class__: haxe_ui_core_TextInput
	,__properties__: $extend(haxe_ui_backend_TextInputImpl.prototype.__properties__,{set_depth:"set_depth",get_depth:"get_depth",get_vscrollPageSize:"get_vscrollPageSize",get_vscrollMax:"get_vscrollMax",set_vscrollPos:"set_vscrollPos",get_vscrollPos:"get_vscrollPos",get_hscrollPageSize:"get_hscrollPageSize",get_hscrollMax:"get_hscrollMax",set_hscrollPos:"set_hscrollPos",get_hscrollPos:"get_hscrollPos",set_wordWrap:"set_wordWrap",get_wordWrap:"get_wordWrap",set_multiline:"set_multiline",get_multiline:"get_multiline",get_textHeight:"get_textHeight",get_textWidth:"get_textWidth",set_height:"set_height",get_height:"get_height",set_width:"set_width",get_width:"get_width",set_top:"set_top",get_top:"get_top",set_left:"set_left",get_left:"get_left",set_password:"set_password",get_password:"get_password",set_htmlText:"set_htmlText",get_htmlText:"get_htmlText",set_text:"set_text",get_text:"get_text",get_data:"get_data",set_textStyle:"set_textStyle",get_textStyle:"get_textStyle",get_isComponentOffscreen:"get_isComponentOffscreen",set_id:"set_id",get_id:"get_id"})
});
var haxe_ui_core_TypeMap = function() { };
$hxClasses["haxe.ui.core.TypeMap"] = haxe_ui_core_TypeMap;
haxe_ui_core_TypeMap.__name__ = "haxe.ui.core.TypeMap";
haxe_ui_core_TypeMap.getTypeInfo = function(className,property) {
	var entry = haxe_ui_util_RTTI.getClassInfo(className);
	if(entry == null) {
		return null;
	}
	if(entry.properties == null) {
		return null;
	}
	var propInfo = entry.properties.h[property.toLowerCase()];
	if(propInfo == null) {
		return null;
	}
	return propInfo.propertyType;
};
var haxe_ui_data_DataSource = function(transformer) {
	this.onClear = null;
	this.onRemove = null;
	this.onUpdate = null;
	this.onInsert = null;
	this.onAdd = null;
	this.transformer = transformer;
	this._allowCallbacks = true;
	this._changed = false;
};
$hxClasses["haxe.ui.data.DataSource"] = haxe_ui_data_DataSource;
haxe_ui_data_DataSource.__name__ = "haxe.ui.data.DataSource";
haxe_ui_data_DataSource.fromString = function(data,type) {
	return null;
};
haxe_ui_data_DataSource.prototype = {
	onChange: null
	,transformer: null
	,_changed: null
	,onAdd: null
	,onInsert: null
	,onUpdate: null
	,onRemove: null
	,onClear: null
	,_allowCallbacks: null
	,get_allowCallbacks: function() {
		return this._allowCallbacks;
	}
	,set_allowCallbacks: function(value) {
		this._allowCallbacks = value;
		if(this._allowCallbacks == true && this._changed == true) {
			this._changed = false;
			if(this.onChange != null) {
				this.onChange();
			}
		}
		return value;
	}
	,get_data: function() {
		return this.handleGetData();
	}
	,set_data: function(value) {
		this.handleSetData(value);
		this.handleChanged();
		return value;
	}
	,size: null
	,get_size: function() {
		return this.handleGetSize();
	}
	,get: function(index) {
		var r = this.handleGetItem(index);
		if(js_Boot.__implements(r,haxe_ui_data_IDataItem)) {
			(js_Boot.__cast(r , haxe_ui_data_IDataItem)).onDataSourceChanged = this.onChange;
		}
		if(this.transformer != null) {
			r = this.transformer.transformFrom(r);
		}
		return r;
	}
	,indexOf: function(item) {
		if(this.transformer != null) {
			item = this.transformer.transformFrom(item);
		}
		return this.handleIndexOf(item);
	}
	,add: function(item) {
		var r = this.handleAddItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onAdd != null) {
			this.onAdd(r);
		}
		return r;
	}
	,insert: function(index,item) {
		var r = this.handleInsert(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onInsert != null) {
			this.onInsert(index,r);
		}
		return r;
	}
	,remove: function(item) {
		var r = this.handleRemoveItem(item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onRemove != null) {
			this.onRemove(r);
		}
		return r;
	}
	,removeAt: function(index) {
		var item = this.get(index);
		return this.remove(item);
	}
	,update: function(index,item) {
		var r = this.handleUpdateItem(index,item);
		this.handleChanged();
		if(this._allowCallbacks == true && this.onUpdate != null) {
			this.onUpdate(index,r);
		}
		return r;
	}
	,clear: function() {
		var o = this._allowCallbacks;
		this._allowCallbacks = false;
		this.handleClear();
		this._allowCallbacks = o;
		this.handleChanged();
		if(this._allowCallbacks == true && this.onClear != null) {
			this.onClear();
		}
	}
	,clearFilter: function() {
	}
	,filter: function(fn) {
	}
	,handleChanged: function() {
		this._changed = true;
		if(this._allowCallbacks == true && this.onChange != null) {
			this._changed = false;
			this.onChange();
		}
	}
	,sortCustom: function(fn) {
	}
	,sort: function(field,direction) {
		var _g = $bind(this,this.sortByFn);
		var field1 = field;
		var direction1 = direction;
		this.sortCustom(function(o1,o2) {
			return _g(o1,o2,field1,direction1);
		});
	}
	,sortByFn: function(o1,o2,field,direction) {
		var f1 = o1;
		var f2 = o2;
		if(field != null) {
			f1 = Reflect.field(o1,field);
			f2 = Reflect.field(o2,field);
		}
		if(f1 == null || f2 == null) {
			return 0;
		}
		f1 = Std.string(f1);
		f2 = Std.string(f2);
		if(direction == null) {
			direction = "asc";
		}
		var high = 1;
		var low = -1;
		if(direction == "desc") {
			high = -1;
			low = 1;
		}
		var alpha1 = f1.replace(haxe_ui_data_DataSource.regexAlpha.r,"");
		var alpha2 = f2.replace(haxe_ui_data_DataSource.regexAlpha.r,"");
		if(alpha1 == alpha2) {
			var numeric1 = Std.parseInt(f1.replace(haxe_ui_data_DataSource.regexNumeric.r,""));
			var numeric2 = Std.parseInt(f2.replace(haxe_ui_data_DataSource.regexNumeric.r,""));
			if(numeric1 == numeric2) {
				return 0;
			} else if(numeric1 > numeric2) {
				return high;
			} else {
				return low;
			}
		}
		if(alpha1 > alpha2) {
			return high;
		} else {
			return low;
		}
	}
	,handleGetSize: function() {
		return 0;
	}
	,handleGetItem: function(index) {
		return null;
	}
	,handleIndexOf: function(item) {
		return 0;
	}
	,handleAddItem: function(item) {
		return null;
	}
	,handleInsert: function(index,item) {
		return null;
	}
	,handleRemoveItem: function(item) {
		return null;
	}
	,handleGetData: function() {
		return null;
	}
	,handleSetData: function(v) {
	}
	,handleClear: function() {
		var cachedTransformer = this.transformer;
		this.transformer = null;
		while(this.get_size() > 0) this.remove(this.get(0));
		this.transformer = cachedTransformer;
	}
	,handleUpdateItem: function(index,item) {
		return null;
	}
	,clone: function() {
		var c = new haxe_ui_data_DataSource();
		return c;
	}
	,__class__: haxe_ui_data_DataSource
	,__properties__: {get_size:"get_size",set_data:"set_data",get_data:"get_data",set_allowCallbacks:"set_allowCallbacks",get_allowCallbacks:"get_allowCallbacks"}
};
var haxe_ui_data_ArrayDataSource = function(transformer) {
	this._filterFn = null;
	this._filteredArray = null;
	haxe_ui_data_DataSource.call(this,transformer);
	this._array = [];
};
$hxClasses["haxe.ui.data.ArrayDataSource"] = haxe_ui_data_ArrayDataSource;
haxe_ui_data_ArrayDataSource.__name__ = "haxe.ui.data.ArrayDataSource";
haxe_ui_data_ArrayDataSource.fromArray = function(source,transformer) {
	var ds = new haxe_ui_data_ArrayDataSource(transformer);
	ds._array = source;
	return ds;
};
haxe_ui_data_ArrayDataSource.__super__ = haxe_ui_data_DataSource;
haxe_ui_data_ArrayDataSource.prototype = $extend(haxe_ui_data_DataSource.prototype,{
	_array: null
	,_filteredArray: null
	,clearFilter: function() {
		if(this._filteredArray == null) {
			return;
		}
		this._filterFn = null;
		this._filteredArray = null;
		this.handleChanged();
	}
	,_filterFn: null
	,filter: function(fn) {
		this._filterFn = fn;
		this._filteredArray = [];
		var index = 0;
		var _g = 0;
		var _g1 = this._array;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			if(fn(index,item) == true) {
				this._filteredArray.push(item);
			}
			++index;
		}
		this.handleChanged();
	}
	,sortCustom: function(fn) {
		this._array.sort(fn);
		this.handleChanged();
	}
	,handleGetSize: function() {
		if(this._filteredArray != null) {
			return this._filteredArray.length;
		}
		return this._array.length;
	}
	,handleGetItem: function(index) {
		if(this._filteredArray != null) {
			return this._filteredArray[index];
		}
		return this._array[index];
	}
	,handleIndexOf: function(item) {
		if(this._filteredArray != null) {
			return this._filteredArray.indexOf(item);
		}
		return this._array.indexOf(item);
	}
	,handleAddItem: function(item) {
		this._array.push(item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(this._array.length - 1,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleInsert: function(index,item) {
		this._array.splice(index,0,item);
		if(this._filteredArray != null && this._filterFn != null) {
			if(this._filterFn(index,item) == true) {
				this._filteredArray.push(item);
			}
		}
		return item;
	}
	,handleRemoveItem: function(item) {
		HxOverrides.remove(this._array,item);
		if(this._filteredArray != null) {
			HxOverrides.remove(this._filteredArray,item);
		}
		return item;
	}
	,handleClear: function() {
		while(this._array.length > 0) this._array.pop();
		if(this._filteredArray != null) {
			while(this._filteredArray.length > 0) this._filteredArray.pop();
		}
	}
	,handleGetData: function() {
		if(this._filteredArray != null) {
			return this._filteredArray;
		}
		return this._array;
	}
	,handleSetData: function(v) {
		this._array = v;
		if(this._filterFn != null) {
			this.filter(this._filterFn);
		}
	}
	,handleUpdateItem: function(index,item) {
		if(this._filteredArray != null) {
			return this._filteredArray[index] = item;
		}
		return this._array[index] = item;
	}
	,clone: function() {
		var c = new haxe_ui_data_ArrayDataSource();
		c._array = this._array.slice();
		if(this._filteredArray != null) {
			c._filteredArray = this._filteredArray.slice();
		}
		if(this._filterFn != null) {
			c._filterFn = this._filterFn;
		}
		return c;
	}
	,__class__: haxe_ui_data_ArrayDataSource
});
var haxe_ui_data_DataSourceFactory = function() {
};
$hxClasses["haxe.ui.data.DataSourceFactory"] = haxe_ui_data_DataSourceFactory;
haxe_ui_data_DataSourceFactory.__name__ = "haxe.ui.data.DataSourceFactory";
haxe_ui_data_DataSourceFactory.prototype = {
	create: function(type) {
		var ds = Type.createInstance(type,[]);
		return ds;
	}
	,fromString: function(data,type) {
		var ds = this.create(type);
		if(StringTools.startsWith(data,"<")) {
			var xml = Xml.parse(data).firstElement();
			var el = xml.elements();
			while(el.hasNext()) {
				var el1 = el.next();
				var o = this.xml2Object(el1);
				ds.add(o);
			}
		} else if(StringTools.startsWith(data,"[")) {
			var json = JSON.parse(StringTools.replace(data,"'","\""));
			var _g = 0;
			while(_g < json.length) {
				var o = json[_g];
				++_g;
				ds.add(o);
			}
		}
		return ds;
	}
	,xml2Object: function(el,addId) {
		if(addId == null) {
			addId = true;
		}
		var o = { };
		if(addId == true) {
			if(el.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (el.nodeType == null ? "null" : XmlType.toString(el.nodeType)));
			}
			o["id"] = el.nodeName;
		}
		var attr = el.attributes();
		while(attr.hasNext()) {
			var attr1 = attr.next();
			o[attr1] = el.get(attr1);
		}
		var childEl = el.elements();
		while(childEl.hasNext()) {
			var childEl1 = childEl.next();
			var childObject = this.xml2Object(childEl1,false);
			if(childEl1.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (childEl1.nodeType == null ? "null" : XmlType.toString(childEl1.nodeType)));
			}
			o[childEl1.nodeName] = childObject;
		}
		return o;
	}
	,__class__: haxe_ui_data_DataSourceFactory
};
var haxe_ui_data_IDataItem = function() { };
$hxClasses["haxe.ui.data.IDataItem"] = haxe_ui_data_IDataItem;
haxe_ui_data_IDataItem.__name__ = "haxe.ui.data.IDataItem";
haxe_ui_data_IDataItem.__isInterface__ = true;
haxe_ui_data_IDataItem.prototype = {
	onDataSourceChanged: null
	,__class__: haxe_ui_data_IDataItem
};
var haxe_ui_data_transformation_IItemTransformer = function() { };
$hxClasses["haxe.ui.data.transformation.IItemTransformer"] = haxe_ui_data_transformation_IItemTransformer;
haxe_ui_data_transformation_IItemTransformer.__name__ = "haxe.ui.data.transformation.IItemTransformer";
haxe_ui_data_transformation_IItemTransformer.__isInterface__ = true;
haxe_ui_data_transformation_IItemTransformer.prototype = {
	transformFrom: null
	,__class__: haxe_ui_data_transformation_IItemTransformer
};
var haxe_ui_data_transformation_NativeTypeTransformer = function() {
};
$hxClasses["haxe.ui.data.transformation.NativeTypeTransformer"] = haxe_ui_data_transformation_NativeTypeTransformer;
haxe_ui_data_transformation_NativeTypeTransformer.__name__ = "haxe.ui.data.transformation.NativeTypeTransformer";
haxe_ui_data_transformation_NativeTypeTransformer.__interfaces__ = [haxe_ui_data_transformation_IItemTransformer];
haxe_ui_data_transformation_NativeTypeTransformer.prototype = {
	transformFrom: function(i) {
		var o = null;
		if(typeof(i) == "string") {
			o = { text : i, value : i};
		} else if(typeof(i) == "number" && ((i | 0) === i) || typeof(i) == "number" || typeof(i) == "boolean") {
			o = { value : i};
		} else {
			o = i;
		}
		return o;
	}
	,__class__: haxe_ui_data_transformation_NativeTypeTransformer
};
var haxe_ui_dragdrop_DragManager = function() {
	this._dragComponents = new haxe_ds_ObjectMap();
	this._mouseTargetToDragTarget = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.dragdrop.DragManager"] = haxe_ui_dragdrop_DragManager;
haxe_ui_dragdrop_DragManager.__name__ = "haxe.ui.dragdrop.DragManager";
haxe_ui_dragdrop_DragManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_dragdrop_DragManager.get_instance = function() {
	if(haxe_ui_dragdrop_DragManager._instance == null) {
		haxe_ui_dragdrop_DragManager._instance = new haxe_ui_dragdrop_DragManager();
	}
	return haxe_ui_dragdrop_DragManager._instance;
};
haxe_ui_dragdrop_DragManager.prototype = {
	_dragComponents: null
	,_mouseTargetToDragTarget: null
	,_currentComponent: null
	,_currentOptions: null
	,_mouseOffset: null
	,getDragOptions: function(component) {
		var dragOptions = this._dragComponents.h[component.__id__];
		return dragOptions;
	}
	,registerDraggable: function(component,dragOptions) {
		if(this.isRegisteredDraggable(component)) {
			return null;
		}
		if(dragOptions == null) {
			dragOptions = { };
		}
		if(dragOptions.mouseTarget == null) {
			dragOptions.mouseTarget = component;
		}
		if(dragOptions.dragOffsetX == null) {
			dragOptions.dragOffsetX = 0;
		}
		if(dragOptions.dragOffsetY == null) {
			dragOptions.dragOffsetY = 0;
		}
		if(dragOptions.dragTolerance == null) {
			dragOptions.dragTolerance = haxe_ui_Toolkit.get_scale() | 0;
		}
		if(dragOptions.draggableStyleName == null) {
			dragOptions.draggableStyleName = "draggable";
		}
		if(dragOptions.draggingStyleName == null) {
			dragOptions.draggingStyleName = "dragging";
		}
		this._dragComponents.set(component,dragOptions);
		this._mouseTargetToDragTarget.set(dragOptions.mouseTarget,component);
		if(!dragOptions.mouseTarget.hasEvent("mousedown",$bind(this,this.onMouseDown))) {
			dragOptions.mouseTarget.registerEvent("mousedown",$bind(this,this.onMouseDown));
		}
		if(dragOptions.draggableStyleName != null) {
			dragOptions.mouseTarget.addClass(dragOptions.draggableStyleName);
		}
		return dragOptions;
	}
	,unregisterDraggable: function(component) {
		if(!this.isRegisteredDraggable(component)) {
			return;
		}
		var dragOptions = this.getDragOptions(component);
		if(dragOptions != null && dragOptions.mouseTarget != null) {
			dragOptions.mouseTarget.unregisterEvent("mousedown",$bind(this,this.onMouseDown));
			this._mouseTargetToDragTarget.remove(dragOptions.mouseTarget);
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		this._dragComponents.remove(component);
	}
	,isRegisteredDraggable: function(component) {
		return this._dragComponents.h.__keys__[component.__id__] != null;
	}
	,onMouseDown: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		this._currentComponent = this._mouseTargetToDragTarget.h[e.target.__id__];
		this._currentOptions = this.getDragOptions(this._currentComponent);
		this._mouseOffset = new haxe_ui_geom_Point(e.screenX - this._currentComponent.get_left(),e.screenY - this._currentComponent.get_top());
		haxe_ui_core_Screen.get_instance().registerEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
	}
	,onScreenCheckForDrag: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var x1 = e.screenX - this._currentComponent.get_left();
		var y1 = e.screenY - this._currentComponent.get_top();
		var x2 = this._mouseOffset.x;
		var y2 = this._mouseOffset.y;
		if(Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)) > this._currentOptions.dragTolerance) {
			haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
			haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenDrag));
			this._mouseOffset.x -= this._currentOptions.dragOffsetX;
			this._mouseOffset.y -= this._currentOptions.dragOffsetY;
			if(this._currentOptions.draggingStyleName != null) {
				this._currentComponent.addClass(this._currentOptions.draggingStyleName);
			}
			this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragStart"));
		}
	}
	,onScreenDrag: function(e) {
		e.screenX *= haxe_ui_Toolkit.get_scaleX();
		e.screenY *= haxe_ui_Toolkit.get_scaleY();
		var event = new haxe_ui_events_DragEvent("drag");
		if(this._currentOptions.dragBounds != null) {
			var v = e.screenX;
			var min = this._currentOptions.dragBounds.left + this._mouseOffset.x;
			var max = this._currentOptions.dragBounds.get_right() - this._currentComponent.get_actualComponentWidth() + this._mouseOffset.x;
			var boundX;
			if(v == null || isNaN(v)) {
				boundX = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundX = v;
			}
			var v = e.screenY;
			var min = this._currentOptions.dragBounds.top + this._mouseOffset.y;
			var max = this._currentOptions.dragBounds.get_bottom() - this._currentComponent.get_actualComponentHeight() + this._mouseOffset.y;
			var boundY;
			if(v == null || isNaN(v)) {
				boundY = min;
			} else {
				if(min != null && v < min) {
					v = min;
				} else if(max != null && v > max) {
					v = max;
				}
				boundY = v;
			}
			event.left = boundX - this._mouseOffset.x;
			event.top = boundY - this._mouseOffset.y;
		} else {
			var xpos = e.screenX;
			var ypos = e.screenY;
			event.left = xpos - this._mouseOffset.x;
			event.top = ypos - this._mouseOffset.y;
		}
		this._currentComponent.dispatch(event);
		if(event.canceled == true) {
			return;
		}
		this._currentComponent.moveComponent(event.left,event.top);
	}
	,onScreenMouseUp: function(e) {
		if(this._currentOptions.draggingStyleName != null) {
			this._currentComponent.removeClass(this._currentOptions.draggingStyleName);
		}
		this._currentComponent.dispatch(new haxe_ui_events_DragEvent("dragEnd"));
		this._currentComponent = null;
		this._currentOptions = null;
		this._mouseOffset.x = 0;
		this._mouseOffset.y = 0;
		haxe_ui_core_Screen.get_instance().unregisterEvent("mouseup",$bind(this,this.onScreenMouseUp));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenCheckForDrag));
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenDrag));
	}
	,__class__: haxe_ui_dragdrop_DragManager
};
var haxe_ui_events_ActionEvent = function(type,action,bubble,data) {
	if(bubble == null) {
		bubble = false;
	}
	this.repeater = false;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
	this.action = action;
};
$hxClasses["haxe.ui.events.ActionEvent"] = haxe_ui_events_ActionEvent;
haxe_ui_events_ActionEvent.__name__ = "haxe.ui.events.ActionEvent";
haxe_ui_events_ActionEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ActionEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	action: null
	,repeater: null
	,clone: function() {
		var c = new haxe_ui_events_ActionEvent(this.type,this.action);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.relatedEvent = this.relatedEvent;
		c.action = this.action;
		c.repeater = this.repeater;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(e) {
		var ae = js_Boot.__cast(e , haxe_ui_events_ActionEvent);
		this.action = ae.action;
		this.repeater = ae.repeater;
	}
	,__class__: haxe_ui_events_ActionEvent
});
var haxe_ui_events_AnimationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.AnimationEvent"] = haxe_ui_events_AnimationEvent;
haxe_ui_events_AnimationEvent.__name__ = "haxe.ui.events.AnimationEvent";
haxe_ui_events_AnimationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_AnimationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_AnimationEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_events_AnimationEvent
});
var haxe_ui_events_DragEvent = function(type,bubble,data) {
	this.top = 0;
	this.left = 0;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.DragEvent"] = haxe_ui_events_DragEvent;
haxe_ui_events_DragEvent.__name__ = "haxe.ui.events.DragEvent";
haxe_ui_events_DragEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_DragEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	left: null
	,top: null
	,clone: function() {
		var c = new haxe_ui_events_DragEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.left = this.left;
		c.top = this.top;
		this.postClone(c);
		return c;
	}
	,copyFrom: function(c) {
		var d = js_Boot.__cast(c , haxe_ui_events_DragEvent);
		this.left = d.left;
		this.top = d.top;
	}
	,__class__: haxe_ui_events_DragEvent
});
var haxe_ui_events_FocusEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.FocusEvent"] = haxe_ui_events_FocusEvent;
haxe_ui_events_FocusEvent.__name__ = "haxe.ui.events.FocusEvent";
haxe_ui_events_FocusEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_FocusEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_FocusEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_FocusEvent
});
var haxe_ui_events_ItemEvent = function(type,bubble,data) {
	this.itemIndex = -1;
	this.sourceEvent = null;
	this.source = null;
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ItemEvent"] = haxe_ui_events_ItemEvent;
haxe_ui_events_ItemEvent.__name__ = "haxe.ui.events.ItemEvent";
haxe_ui_events_ItemEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ItemEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	source: null
	,sourceEvent: null
	,itemIndex: null
	,clone: function() {
		var c = new haxe_ui_events_ItemEvent(this.type);
		c.source = this.source;
		c.sourceEvent = this.sourceEvent;
		c.itemIndex = this.itemIndex;
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ItemEvent
});
var haxe_ui_events_KeyboardEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.KeyboardEvent"] = haxe_ui_events_KeyboardEvent;
haxe_ui_events_KeyboardEvent.__name__ = "haxe.ui.events.KeyboardEvent";
haxe_ui_events_KeyboardEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_KeyboardEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	keyCode: null
	,altKey: null
	,ctrlKey: null
	,shiftKey: null
	,clone: function() {
		var c = new haxe_ui_events_KeyboardEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.keyCode = this.keyCode;
		c.altKey = this.altKey;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		return c;
	}
	,__class__: haxe_ui_events_KeyboardEvent
});
var haxe_ui_events_MouseEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.MouseEvent"] = haxe_ui_events_MouseEvent;
haxe_ui_events_MouseEvent.__name__ = "haxe.ui.events.MouseEvent";
haxe_ui_events_MouseEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_MouseEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	screenX: null
	,screenY: null
	,buttonDown: null
	,delta: null
	,touchEvent: null
	,ctrlKey: null
	,shiftKey: null
	,localX: null
	,get_localX: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenX * haxe_ui_Toolkit.get_scaleX() - this.target.get_screenLeft()) / haxe_ui_Toolkit.get_scaleX();
	}
	,localY: null
	,get_localY: function() {
		if(this.target == null) {
			return null;
		}
		return (this.screenY * haxe_ui_Toolkit.get_scaleY() - this.target.get_screenTop()) / haxe_ui_Toolkit.get_scaleY();
	}
	,clone: function() {
		var c = new haxe_ui_events_MouseEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		c.screenX = this.screenX;
		c.screenY = this.screenY;
		c.buttonDown = this.buttonDown;
		c.delta = this.delta;
		c.touchEvent = this.touchEvent;
		c.ctrlKey = this.ctrlKey;
		c.shiftKey = this.shiftKey;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_MouseEvent
	,__properties__: {get_localY:"get_localY",get_localX:"get_localX"}
});
var haxe_ui_events_ScrollEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ScrollEvent"] = haxe_ui_events_ScrollEvent;
haxe_ui_events_ScrollEvent.__name__ = "haxe.ui.events.ScrollEvent";
haxe_ui_events_ScrollEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ScrollEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ScrollEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ScrollEvent
});
var haxe_ui_events_SortEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.SortEvent"] = haxe_ui_events_SortEvent;
haxe_ui_events_SortEvent.__name__ = "haxe.ui.events.SortEvent";
haxe_ui_events_SortEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_SortEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	direction: null
	,clone: function() {
		var c = new haxe_ui_events_SortEvent(this.type);
		c.type = this.type;
		c.bubble = this.bubble;
		c.target = this.target;
		c.data = this.data;
		c.canceled = this.canceled;
		c.direction = this.direction;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_SortEvent
});
var haxe_ui_events_ThemeEvent = function(type,bubble,data) {
	haxe_ui_events_UIEvent.call(this,type,bubble,data);
};
$hxClasses["haxe.ui.events.ThemeEvent"] = haxe_ui_events_ThemeEvent;
haxe_ui_events_ThemeEvent.__name__ = "haxe.ui.events.ThemeEvent";
haxe_ui_events_ThemeEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ThemeEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	__class__: haxe_ui_events_ThemeEvent
});
var haxe_ui_events_ValidationEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.events.ValidationEvent"] = haxe_ui_events_ValidationEvent;
haxe_ui_events_ValidationEvent.__name__ = "haxe.ui.events.ValidationEvent";
haxe_ui_events_ValidationEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_events_ValidationEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_events_ValidationEvent(this.type);
		c.type = this.type;
		c.target = this.target;
		this.postClone(c);
		return c;
	}
	,__class__: haxe_ui_events_ValidationEvent
});
var haxe_ui_filters_Filter = function() {
};
$hxClasses["haxe.ui.filters.Filter"] = haxe_ui_filters_Filter;
haxe_ui_filters_Filter.__name__ = "haxe.ui.filters.Filter";
haxe_ui_filters_Filter.prototype = {
	__class__: haxe_ui_filters_Filter
};
var haxe_ui_filters_Blur = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Blur"] = haxe_ui_filters_Blur;
haxe_ui_filters_Blur.__name__ = "haxe.ui.filters.Blur";
haxe_ui_filters_Blur.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Blur.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Blur
});
var haxe_ui_filters_DropShadow = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.DropShadow"] = haxe_ui_filters_DropShadow;
haxe_ui_filters_DropShadow.__name__ = "haxe.ui.filters.DropShadow";
haxe_ui_filters_DropShadow.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_DropShadow.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	distance: null
	,angle: null
	,color: null
	,alpha: null
	,blurX: null
	,blurY: null
	,strength: null
	,quality: null
	,inner: null
	,__class__: haxe_ui_filters_DropShadow
});
var haxe_ui_filters_FilterParser = function() { };
$hxClasses["haxe.ui.filters.FilterParser"] = haxe_ui_filters_FilterParser;
haxe_ui_filters_FilterParser.__name__ = "haxe.ui.filters.FilterParser";
haxe_ui_filters_FilterParser.parseFilter = function(filterDetails) {
	var filter = null;
	if(filterDetails[0] == "drop-shadow") {
		filter = haxe_ui_filters_FilterParser.parseDropShadow(filterDetails);
	} else if(filterDetails[0] == "blur") {
		filter = haxe_ui_filters_FilterParser.parseBlur(filterDetails);
	} else if(filterDetails[0] == "outline") {
		filter = haxe_ui_filters_FilterParser.parseOutline(filterDetails);
	} else if(filterDetails[0] == "grayscale") {
		filter = haxe_ui_filters_FilterParser.parseGrayscale(filterDetails);
	}
	return filter;
};
haxe_ui_filters_FilterParser.parseDropShadow = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var dropShadow = new haxe_ui_filters_DropShadow();
	dropShadow.distance = copy[0];
	dropShadow.angle = copy[1];
	dropShadow.color = copy[2];
	dropShadow.alpha = copy[3];
	dropShadow.blurX = copy[4];
	dropShadow.blurY = copy[5];
	dropShadow.strength = copy[6];
	dropShadow.quality = copy[7];
	dropShadow.inner = copy[8];
	return dropShadow;
};
haxe_ui_filters_FilterParser.parseBlur = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var blur = new haxe_ui_filters_Blur();
	blur.amount = copy[0];
	return blur;
};
haxe_ui_filters_FilterParser.parseOutline = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var outline = new haxe_ui_filters_Outline();
	outline.color = copy[0];
	outline.size = copy[1];
	return outline;
};
haxe_ui_filters_FilterParser.copyFilterDefaults = function(filterName,params) {
	var copy = [];
	var defaultParams = haxe_ui_filters_FilterParser.filterParamDefaults.h[filterName];
	if(defaultParams != null) {
		var _g = 0;
		while(_g < defaultParams.length) {
			var p = defaultParams[_g];
			++_g;
			copy.push(p);
		}
	}
	if(params != null) {
		var n = 0;
		var _g = 0;
		while(_g < params.length) {
			var p = params[_g];
			++_g;
			copy[n] = p;
			++n;
		}
	}
	return copy;
};
haxe_ui_filters_FilterParser.parseGrayscale = function(filterDetails) {
	if(filterDetails == null || filterDetails.length == 0) {
		return null;
	}
	var copy = filterDetails.slice();
	haxe_ui_filters_FilterParser.buildDefaults();
	var filterName = copy[0];
	HxOverrides.remove(copy,filterName);
	copy = haxe_ui_filters_FilterParser.copyFilterDefaults(filterName,copy);
	var grayscale = new haxe_ui_filters_Grayscale();
	grayscale.amount = copy[0];
	return grayscale;
};
haxe_ui_filters_FilterParser.buildDefaults = function() {
	if(haxe_ui_filters_FilterParser.filterParamDefaults != null) {
		return;
	}
	haxe_ui_filters_FilterParser.filterParamDefaults = new haxe_ds_StringMap();
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["drop-shadow"].concat([4,45,0,1,4,4,1,1,false,false,false]);
	this1.h["drop-shadow"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["blur"].concat([1]);
	this1.h["blur"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["outline"].concat([0,1]);
	this1.h["outline"] = v;
	var v = [];
	haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"] = v;
	var this1 = haxe_ui_filters_FilterParser.filterParamDefaults;
	var v = haxe_ui_filters_FilterParser.filterParamDefaults.h["grayscale"].concat([100]);
	this1.h["grayscale"] = v;
};
var haxe_ui_filters_Grayscale = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Grayscale"] = haxe_ui_filters_Grayscale;
haxe_ui_filters_Grayscale.__name__ = "haxe.ui.filters.Grayscale";
haxe_ui_filters_Grayscale.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Grayscale.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	amount: null
	,__class__: haxe_ui_filters_Grayscale
});
var haxe_ui_filters_Outline = function() {
	haxe_ui_filters_Filter.call(this);
};
$hxClasses["haxe.ui.filters.Outline"] = haxe_ui_filters_Outline;
haxe_ui_filters_Outline.__name__ = "haxe.ui.filters.Outline";
haxe_ui_filters_Outline.__super__ = haxe_ui_filters_Filter;
haxe_ui_filters_Outline.prototype = $extend(haxe_ui_filters_Filter.prototype,{
	color: null
	,size: null
	,__class__: haxe_ui_filters_Outline
});
var haxe_ui_focus_IFocusApplicator = function() { };
$hxClasses["haxe.ui.focus.IFocusApplicator"] = haxe_ui_focus_IFocusApplicator;
haxe_ui_focus_IFocusApplicator.__name__ = "haxe.ui.focus.IFocusApplicator";
haxe_ui_focus_IFocusApplicator.__isInterface__ = true;
haxe_ui_focus_IFocusApplicator.prototype = {
	get_enabled: null
	,set_enabled: null
	,apply: null
	,unapply: null
	,__class__: haxe_ui_focus_IFocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusApplicator = function() {
	this._enabled = true;
};
$hxClasses["haxe.ui.focus.FocusApplicator"] = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_FocusApplicator.__name__ = "haxe.ui.focus.FocusApplicator";
haxe_ui_focus_FocusApplicator.__interfaces__ = [haxe_ui_focus_IFocusApplicator];
haxe_ui_focus_FocusApplicator.prototype = {
	apply: function(target) {
	}
	,unapply: function(target) {
	}
	,_enabled: null
	,set_enabled: function(value) {
		this._enabled = value;
		return value;
	}
	,get_enabled: function() {
		return this._enabled;
	}
	,__class__: haxe_ui_focus_FocusApplicator
	,__properties__: {set_enabled:"set_enabled",get_enabled:"get_enabled"}
};
var haxe_ui_focus_FocusManager = function() {
	this._lastFocuses = new haxe_ds_ObjectMap();
	this._applicators = [];
	this.autoFocus = true;
	haxe_ui_backend_FocusManagerImpl.call(this);
	this._applicators.push(new haxe_ui_focus_StyleFocusApplicator());
};
$hxClasses["haxe.ui.focus.FocusManager"] = haxe_ui_focus_FocusManager;
haxe_ui_focus_FocusManager.__name__ = "haxe.ui.focus.FocusManager";
haxe_ui_focus_FocusManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_focus_FocusManager.get_instance = function() {
	if(haxe_ui_focus_FocusManager._instance == null) {
		haxe_ui_focus_FocusManager._instance = new haxe_ui_focus_FocusManager();
	}
	return haxe_ui_focus_FocusManager._instance;
};
haxe_ui_focus_FocusManager.__super__ = haxe_ui_backend_FocusManagerImpl;
haxe_ui_focus_FocusManager.prototype = $extend(haxe_ui_backend_FocusManagerImpl.prototype,{
	autoFocus: null
	,_applicators: null
	,onScreenMouseDown: function(event) {
		return;
	}
	,pushView: function(view) {
		var k = this._lastFocuses.keys();
		while(k.hasNext()) {
			var k1 = k.next();
			this._lastFocuses.h[k1.__id__].set_focus(false);
			this.unapplyFocus(this._lastFocuses.h[k1.__id__]);
		}
		if(this.autoFocus == true) {
			this.focusOnFirstInteractive(view);
			view.registerEvent("ready",$bind(this,this.onViewReady));
		}
	}
	,onViewReady: function(e) {
		e.target.unregisterEvent("ready",$bind(this,this.onViewReady));
		this.focusOnFirstInteractive(e.target);
	}
	,focusOnFirstInteractive: function(view) {
		var list = [];
		this.buildFocusableList(view,list);
		if(list.length > 0) {
			list[0].set_focus(true);
		}
	}
	,removeView: function(view) {
		this._lastFocuses.remove(view);
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return;
		}
		if(this._lastFocuses.h.__keys__[top.__id__] != null) {
			this.set_focus(this._lastFocuses.h[top.__id__]);
		}
	}
	,get_focus: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		if(top == null) {
			return null;
		}
		return this.buildFocusableList(top,null);
	}
	,_lastFocuses: null
	,set_focus: function(value) {
		if(value != null) {
			var c = js_Boot.__cast(value , haxe_ui_core_Component);
			var root = c.get_rootComponent();
			var currentFocus = this.buildFocusableList(root,null);
			if(currentFocus != null && currentFocus != value) {
				this.unapplyFocus(currentFocus);
				currentFocus.set_focus(false);
			}
			if(this._lastFocuses.h.__keys__[root.__id__] != null && this._lastFocuses.h[root.__id__] != value) {
				this._lastFocuses.h[root.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[root.__id__]);
			}
			this._lastFocuses.set(root,value);
			this.applyFocus(value);
		} else {
			var top = haxe_ui_core_Screen.get_instance().get_topComponent();
			if(this._lastFocuses.h.__keys__[top.__id__] != null) {
				this._lastFocuses.h[top.__id__].set_focus(false);
				this.unapplyFocus(this._lastFocuses.h[top.__id__]);
			}
		}
		return value;
	}
	,focusNext: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var nextIndex = index + 1;
		if(nextIndex > list.length - 1) {
			nextIndex = 0;
		}
		var nextFocus = list[nextIndex];
		this.set_focus(nextFocus);
		return nextFocus;
	}
	,focusPrev: function() {
		var top = haxe_ui_core_Screen.get_instance().get_topComponent();
		var list = [];
		var currentFocus = this.buildFocusableList(top,list);
		var index = -1;
		if(currentFocus != null) {
			index = list.indexOf(currentFocus);
		}
		var prevIndex = index - 1;
		if(prevIndex < 0) {
			prevIndex = list.length - 1;
		}
		var prevFocus = list[prevIndex];
		this.set_focus(prevFocus);
		return prevFocus;
	}
	,buildFocusableList: function(c,list) {
		var currentFocus = null;
		if(c._isDisposed == true) {
			return null;
		}
		if(c.get_hidden() == true) {
			return null;
		}
		if(js_Boot.__implements(c,haxe_ui_focus_IFocusable)) {
			var f = c;
			if(f.get_allowFocus() == true && f.get_disabled() == false) {
				if(f.get_focus() == true) {
					currentFocus = f;
				}
				if(list != null) {
					list.push(f);
				}
			}
		}
		var childList = (c._children == null ? [] : c._children).slice();
		childList.sort(function(c1,c2) {
			return c1.componentTabIndex - c2.componentTabIndex;
		});
		var _g = 0;
		while(_g < childList.length) {
			var child = childList[_g];
			++_g;
			var f = this.buildFocusableList(child,list);
			if(f != null) {
				currentFocus = f;
			}
		}
		return currentFocus;
	}
	,applyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.applyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(true);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.apply(c);
			}
		}
	}
	,unapplyFocus: function(c) {
		haxe_ui_backend_FocusManagerImpl.prototype.unapplyFocus.call(this,c);
		(js_Boot.__cast(c , haxe_ui_focus_IFocusable)).set_focus(false);
		var _g = 0;
		var _g1 = this._applicators;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.get_enabled() == true) {
				a.unapply(c);
			}
		}
	}
	,__class__: haxe_ui_focus_FocusManager
	,__properties__: {set_focus:"set_focus",get_focus:"get_focus"}
});
var haxe_ui_focus_StyleFocusApplicator = function() {
	haxe_ui_focus_FocusApplicator.call(this);
};
$hxClasses["haxe.ui.focus.StyleFocusApplicator"] = haxe_ui_focus_StyleFocusApplicator;
haxe_ui_focus_StyleFocusApplicator.__name__ = "haxe.ui.focus.StyleFocusApplicator";
haxe_ui_focus_StyleFocusApplicator.__super__ = haxe_ui_focus_FocusApplicator;
haxe_ui_focus_StyleFocusApplicator.prototype = $extend(haxe_ui_focus_FocusApplicator.prototype,{
	apply: function(target) {
		target.addClass(":active");
	}
	,unapply: function(target) {
		target.removeClass(":active");
	}
	,__class__: haxe_ui_focus_StyleFocusApplicator
});
var haxe_ui_geom_Point = function(x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.x = x;
	this.y = y;
};
$hxClasses["haxe.ui.geom.Point"] = haxe_ui_geom_Point;
haxe_ui_geom_Point.__name__ = "haxe.ui.geom.Point";
haxe_ui_geom_Point.prototype = {
	x: null
	,y: null
	,__class__: haxe_ui_geom_Point
};
var haxe_ui_geom_Rectangle = function(left,top,width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	if(top == null) {
		top = 0;
	}
	if(left == null) {
		left = 0;
	}
	this._intersectionCache = null;
	this.left = left;
	this.top = top;
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Rectangle"] = haxe_ui_geom_Rectangle;
haxe_ui_geom_Rectangle.__name__ = "haxe.ui.geom.Rectangle";
haxe_ui_geom_Rectangle.prototype = {
	left: null
	,top: null
	,width: null
	,height: null
	,set: function(left,top,width,height) {
		if(height == null) {
			height = 0;
		}
		if(width == null) {
			width = 0;
		}
		if(top == null) {
			top = 0;
		}
		if(left == null) {
			left = 0;
		}
		this.left = left;
		this.top = top;
		this.width = width;
		this.height = height;
	}
	,get_right: function() {
		return this.left + this.width;
	}
	,set_right: function(value) {
		this.width = value - this.left;
		return value;
	}
	,get_bottom: function() {
		return this.top + this.height;
	}
	,set_bottom: function(value) {
		this.height = value - this.top;
		return value;
	}
	,inflate: function(dx,dy) {
		this.left -= dx;
		this.width += dx * 2;
		this.top -= dy;
		this.height += dy * 2;
	}
	,containsPoint: function(x,y) {
		if(x >= this.left && x < this.left + this.width && y >= this.top && y < this.top + this.height) {
			return true;
		}
		return false;
	}
	,containsRect: function(rect) {
		if(rect.width <= 0 || rect.height <= 0) {
			if(rect.left > this.left && rect.top > this.top && rect.get_right() < this.get_right()) {
				return rect.get_bottom() < this.get_bottom();
			} else {
				return false;
			}
		} else if(rect.left >= this.left && rect.top >= this.top && rect.get_right() <= this.get_right()) {
			return rect.get_bottom() <= this.get_bottom();
		} else {
			return false;
		}
	}
	,intersects: function(rect) {
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			return false;
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		return y1 > y0;
	}
	,_intersectionCache: null
	,intersection: function(rect,noAlloc) {
		if(noAlloc == null) {
			noAlloc = true;
		}
		if(noAlloc == true && this._intersectionCache == null) {
			this._intersectionCache = new haxe_ui_geom_Rectangle();
		}
		var x0 = this.left < rect.left ? rect.left : this.left;
		var x1 = this.get_right() > rect.get_right() ? rect.get_right() : this.get_right();
		if(x1 <= x0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var y0 = this.top < rect.top ? rect.top : this.top;
		var y1 = this.get_bottom() > rect.get_bottom() ? rect.get_bottom() : this.get_bottom();
		if(y1 <= y0) {
			if(noAlloc == true) {
				this._intersectionCache.set();
				return this._intersectionCache;
			} else {
				return new haxe_ui_geom_Rectangle();
			}
		}
		var r = null;
		if(noAlloc == true) {
			r = this._intersectionCache;
		} else {
			r = new haxe_ui_geom_Rectangle();
		}
		r.set(x0,y0,x1 - x0,y1 - y0);
		return r;
	}
	,toInts: function() {
		this.left = this.left | 0;
		this.top = this.top | 0;
		this.width = this.width | 0;
		this.height = this.height | 0;
	}
	,copy: function() {
		return new haxe_ui_geom_Rectangle(this.left,this.top,this.width,this.height);
	}
	,toString: function() {
		return "{left: " + this.left + ", top: " + this.top + ", bottom: " + this.get_bottom() + ", right: " + this.get_right() + ", width: " + this.width + ", height: " + this.height + "}";
	}
	,__class__: haxe_ui_geom_Rectangle
	,__properties__: {set_bottom:"set_bottom",get_bottom:"get_bottom",set_right:"set_right",get_right:"get_right"}
};
var haxe_ui_geom_Size = function(width,height) {
	if(height == null) {
		height = 0;
	}
	if(width == null) {
		width = 0;
	}
	this.width = width;
	this.height = height;
};
$hxClasses["haxe.ui.geom.Size"] = haxe_ui_geom_Size;
haxe_ui_geom_Size.__name__ = "haxe.ui.geom.Size";
haxe_ui_geom_Size.prototype = {
	width: null
	,height: null
	,round: function() {
		this.width = Math.round(this.width);
		this.height = Math.round(this.height);
	}
	,toString: function() {
		return "[" + this.width + "x" + this.height + "]";
	}
	,__class__: haxe_ui_geom_Size
};
var haxe_ui_geom_Slice9 = function() { };
$hxClasses["haxe.ui.geom.Slice9"] = haxe_ui_geom_Slice9;
haxe_ui_geom_Slice9.__name__ = "haxe.ui.geom.Slice9";
haxe_ui_geom_Slice9.buildRects = function(w,h,bitmapWidth,bitmapHeight,slice) {
	var srcRects = haxe_ui_geom_Slice9.buildSrcRects(bitmapWidth,bitmapHeight,slice);
	var dstRects = haxe_ui_geom_Slice9.buildDstRects(w,h,srcRects);
	return { src : srcRects, dst : dstRects};
};
haxe_ui_geom_Slice9.buildSrcRects = function(bitmapWidth,bitmapHeight,slice) {
	var x1 = slice.left;
	var y1 = slice.top;
	var x2 = slice.get_right();
	var y2 = slice.get_bottom();
	var srcRects = [];
	srcRects.push(new haxe_ui_geom_Rectangle(0,0,x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,0,x2 - x1,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,0,bitmapWidth - x2,y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y1,x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y1,x2 - x1,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y1,bitmapWidth - x2,y2 - y1));
	srcRects.push(new haxe_ui_geom_Rectangle(0,y2,x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x1,y2,x2 - x1,bitmapHeight - y2));
	srcRects.push(new haxe_ui_geom_Rectangle(x2,y2,bitmapWidth - x2,bitmapHeight - y2));
	return srcRects;
};
haxe_ui_geom_Slice9.buildDstRects = function(w,h,srcRects) {
	var dstRects = [];
	dstRects.push(new haxe_ui_geom_Rectangle(0,0,srcRects[0].width,srcRects[0].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[0].width,0,w - srcRects[0].width - srcRects[2].width,srcRects[1].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[2].width,0,srcRects[2].width,srcRects[2].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,srcRects[0].height,srcRects[3].width,h - srcRects[0].height - srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[3].width,srcRects[0].height,w - srcRects[3].width - srcRects[5].width,h - srcRects[1].height - srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[5].width,srcRects[2].height,srcRects[5].width,h - srcRects[2].height - srcRects[8].height));
	dstRects.push(new haxe_ui_geom_Rectangle(0,h - srcRects[6].height,srcRects[6].width,srcRects[6].height));
	dstRects.push(new haxe_ui_geom_Rectangle(srcRects[6].width,h - srcRects[7].height,w - srcRects[6].width - srcRects[8].width,srcRects[7].height));
	dstRects.push(new haxe_ui_geom_Rectangle(w - srcRects[8].width,h - srcRects[8].height,srcRects[8].width,srcRects[8].height));
	return dstRects;
};
var haxe_ui_layouts_AbsoluteLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
};
$hxClasses["haxe.ui.layouts.AbsoluteLayout"] = haxe_ui_layouts_AbsoluteLayout;
haxe_ui_layouts_AbsoluteLayout.__name__ = "haxe.ui.layouts.AbsoluteLayout";
haxe_ui_layouts_AbsoluteLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_AbsoluteLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
	}
	,__class__: haxe_ui_layouts_AbsoluteLayout
});
var haxe_ui_layouts_DelegateLayout = function(size) {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._size = size;
};
$hxClasses["haxe.ui.layouts.DelegateLayout"] = haxe_ui_layouts_DelegateLayout;
haxe_ui_layouts_DelegateLayout.__name__ = "haxe.ui.layouts.DelegateLayout";
haxe_ui_layouts_DelegateLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_DelegateLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	_size: null
	,calcAutoSize: function(exclusions) {
		this._size.component = this.get_component();
		var cx = this._size.get_width();
		var cy = this._size.get_height();
		if(this._size.getBool("includePadding",false) == true) {
			cx += this.get_paddingLeft() + this.get_paddingRight();
			cy += this.get_paddingTop() + this.get_paddingBottom();
		}
		var size = new haxe_ui_geom_Size(cx,cy);
		return size;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		this._size.component = this.get_component();
		size.width -= this._size.get_usableWidthModifier();
		size.height -= this._size.get_usableHeightModifier();
		return size;
	}
	,__class__: haxe_ui_layouts_DelegateLayout
});
var haxe_ui_layouts_DelegateLayoutSize = function() {
};
$hxClasses["haxe.ui.layouts.DelegateLayoutSize"] = haxe_ui_layouts_DelegateLayoutSize;
haxe_ui_layouts_DelegateLayoutSize.__name__ = "haxe.ui.layouts.DelegateLayoutSize";
haxe_ui_layouts_DelegateLayoutSize.prototype = {
	component: null
	,config: null
	,width: null
	,get_width: function() {
		return 0;
	}
	,height: null
	,get_height: function() {
		return 0;
	}
	,usableWidthModifier: null
	,get_usableWidthModifier: function() {
		return 0;
	}
	,usableHeightModifier: null
	,get_usableHeightModifier: function() {
		return 0;
	}
	,getString: function(name,defaultValue) {
		if(this.config == null) {
			return defaultValue;
		}
		if(Object.prototype.hasOwnProperty.call(this.config.h,name) == false) {
			return defaultValue;
		}
		return this.config.h[name];
	}
	,getInt: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = 0;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return Std.parseInt(v);
	}
	,getBool: function(name,defaultValue) {
		if(defaultValue == null) {
			defaultValue = false;
		}
		var v = this.getString(name);
		if(v == null) {
			return defaultValue;
		}
		return v == "true";
	}
	,__class__: haxe_ui_layouts_DelegateLayoutSize
	,__properties__: {get_usableHeightModifier:"get_usableHeightModifier",get_usableWidthModifier:"get_usableWidthModifier",get_height:"get_height",get_width:"get_width"}
};
var haxe_ui_layouts_HorizontalContinuousLayout = function() {
	haxe_ui_layouts_HorizontalLayout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalContinuousLayout"] = haxe_ui_layouts_HorizontalContinuousLayout;
haxe_ui_layouts_HorizontalContinuousLayout.__name__ = "haxe.ui.layouts.HorizontalContinuousLayout";
haxe_ui_layouts_HorizontalContinuousLayout.__super__ = haxe_ui_layouts_HorizontalLayout;
haxe_ui_layouts_HorizontalContinuousLayout.prototype = $extend(haxe_ui_layouts_HorizontalLayout.prototype,{
	resizeChildren: function() {
	}
	,repositionChildren: function() {
		if(this.get_component().get_autoWidth() == true) {
			haxe_ui_layouts_HorizontalLayout.prototype.repositionChildren.call(this);
			return;
		}
		var ucx = this.get_usableWidth();
		if(ucx <= 0) {
			return;
		}
		var ucx = this.get_component().get_componentWidth() - (this.get_paddingLeft() + this.get_paddingRight());
		var ucy = this.get_component().get_componentHeight() - (this.get_paddingTop() + this.get_paddingBottom());
		var dimensions = [];
		var heights = [];
		var row = 0;
		var usedCX = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var rowCY = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var rc = new haxe_ui_layouts_ComponentRectangle(child.get_left(),child.get_top(),child.get_componentWidth(),child.get_componentHeight());
			if(child.get_percentWidth() != null) {
				rc.width = ucx * child.get_percentWidth() / 100;
			} else {
				usedCX += this.get_horizontalSpacing();
			}
			if(child.get_percentHeight() != null) {
				rc.height = ucy * child.get_percentHeight() / 100;
			}
			rc.component = child;
			usedCX += rc.width;
			if(usedCX - this.get_horizontalSpacing() > ucx) {
				heights.push(rowCY);
				ypos += rowCY + this.get_verticalSpacing();
				xpos = this.get_paddingLeft();
				usedCX = rc.width + this.get_horizontalSpacing();
				rowCY = 0;
				++row;
			}
			if(dimensions.length <= row) {
				dimensions.push([]);
			}
			if(dimensions[row] == null) {
				ypos -= this.get_verticalSpacing();
				--row;
				dimensions[row].pop();
			}
			rc.left = xpos;
			rc.top = ypos;
			dimensions[row].push(rc);
			xpos += rc.width;
			if(rc.height > rowCY) {
				rowCY = rc.height;
			}
		}
		if(rowCY > 0) {
			heights.push(rowCY);
		}
		var x = 0;
		var _g = 0;
		while(_g < dimensions.length) {
			var r = dimensions[_g];
			++_g;
			var height = heights[x];
			var spaceX = (r.length - 1) / r.length * this.get_horizontalSpacing();
			var n = 0;
			var _g1 = 0;
			while(_g1 < r.length) {
				var c = r[_g1];
				++_g1;
				switch(this.verticalAlign(c.component)) {
				case "bottom":
					c.top += height - c.height;
					break;
				case "center":
					c.top += height / 2 - c.height / 2;
					break;
				default:
				}
				if(c.component.get_percentWidth() != null) {
					c.left += n * (this.get_horizontalSpacing() - spaceX);
					c.width -= spaceX;
				} else {
					c.left += n * this.get_horizontalSpacing();
				}
				c.apply();
				++n;
			}
			++x;
		}
	}
	,get_usableSize: function() {
		if(this.get_component().get_autoWidth() == true) {
			return haxe_ui_layouts_HorizontalLayout.prototype.get_usableSize.call(this);
		}
		var ucx = 0;
		if(this._component.get_componentWidth() != null) {
			ucx = this._component.get_componentWidth();
			ucx -= this.get_paddingLeft() + this.get_paddingRight();
		}
		var ucy = 0;
		if(this._component.get_componentHeight() != null) {
			ucy = this._component.get_componentHeight();
			ucy -= this.get_paddingTop() + this.get_paddingBottom();
		}
		return new haxe_ui_geom_Size(ucx,ucy);
	}
	,__class__: haxe_ui_layouts_HorizontalContinuousLayout
});
var haxe_ui_layouts_ComponentRectangle = function(left,top,width,height) {
	haxe_ui_geom_Rectangle.call(this,left,top,width,height);
};
$hxClasses["haxe.ui.layouts.ComponentRectangle"] = haxe_ui_layouts_ComponentRectangle;
haxe_ui_layouts_ComponentRectangle.__name__ = "haxe.ui.layouts.ComponentRectangle";
haxe_ui_layouts_ComponentRectangle.__super__ = haxe_ui_geom_Rectangle;
haxe_ui_layouts_ComponentRectangle.prototype = $extend(haxe_ui_geom_Rectangle.prototype,{
	component: null
	,apply: function() {
		this.component.moveComponent(this.left,this.top);
		this.component.resizeComponent(this.width,this.height);
	}
	,__class__: haxe_ui_layouts_ComponentRectangle
});
var haxe_ui_layouts_HorizontalGridLayout = function() {
	this._rows = 1;
	haxe_ui_layouts_Layout.call(this);
};
$hxClasses["haxe.ui.layouts.HorizontalGridLayout"] = haxe_ui_layouts_HorizontalGridLayout;
haxe_ui_layouts_HorizontalGridLayout.__name__ = "haxe.ui.layouts.HorizontalGridLayout";
haxe_ui_layouts_HorizontalGridLayout.__super__ = haxe_ui_layouts_Layout;
haxe_ui_layouts_HorizontalGridLayout.prototype = $extend(haxe_ui_layouts_Layout.prototype,{
	_rows: null
	,get_rows: function() {
		return this._rows;
	}
	,set_rows: function(value) {
		if(this._rows == value) {
			return value;
		}
		this._rows = value;
		if(this._component != null) {
			var _this = this._component;
			if(!(_this._layout == null || _this._layoutLocked == true)) {
				_this.invalidateComponent("layout",false);
			}
		}
		return value;
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_Layout.prototype.get_usableSize.call(this);
		var columnWidths = this.calcColumnWidths(size,false);
		var rowHeights = this.calcRowHeights(size,false);
		var _g = 0;
		while(_g < columnWidths.length) {
			var columnWidth = columnWidths[_g];
			++_g;
			size.width -= columnWidth;
		}
		var _g = 0;
		while(_g < rowHeights.length) {
			var rowHeight = rowHeights[_g];
			++_g;
			size.height -= rowHeight;
		}
		var _this = this.get_component();
		if((_this._children == null ? [] : _this._children).length > 1) {
			var _this = this.get_component();
			var columns = Math.ceil((_this._children == null ? [] : _this._children).length / this._rows);
			size.width -= this.get_horizontalSpacing() * (columns - 1);
			size.height -= this.get_verticalSpacing() * (this.get_rows() - 1);
		}
		if(size.width < 0) {
			size.width = 0;
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,resizeChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var explicitWidths = this.calcExplicitWidths();
		var explicitHeights = this.calcExplicitHeights();
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var cx = null;
			var cy = null;
			if(child.get_percentWidth() != null) {
				var ucx = columnWidths[columnIndex];
				if(explicitWidths[columnIndex] == false) {
					cx = ucx;
				} else {
					cx = ucx * child.get_percentWidth() / 100;
				}
			}
			if(child.get_percentHeight() != null) {
				var ucy = rowHeights[rowIndex];
				if(explicitHeights[rowIndex] == false) {
					cy = ucy;
				} else {
					cy = ucy * child.get_percentHeight() / 100;
				}
			}
			child.resizeComponent(cx,cy);
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,repositionChildren: function() {
		var size = this.get_usableSize();
		var columnWidths = this.calcColumnWidths(size,true);
		var rowHeights = this.calcRowHeights(size,true);
		var rowIndex = 0;
		var columnIndex = 0;
		var xpos = this.get_paddingLeft();
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var halign = this.horizontalAlign(child);
			var valign = this.verticalAlign(child);
			var xposChild = 0;
			var yposChild = 0;
			switch(halign) {
			case "center":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) * 0.5 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				xposChild = xpos + (columnWidths[columnIndex] - child.get_componentWidth()) + this.marginLeft(child) - this.marginRight(child);
				break;
			default:
				xposChild = xpos + this.marginLeft(child) - this.marginRight(child);
			}
			switch(valign) {
			case "bottom":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) + this.marginTop(child) - this.marginBottom(child);
				break;
			case "center":
				yposChild = ypos + (rowHeights[rowIndex] - child.get_componentHeight()) * 0.5 + this.marginTop(child) - this.marginBottom(child);
				break;
			default:
				yposChild = ypos + this.marginTop(child) - this.marginBottom(child);
			}
			child.moveComponent(xposChild,yposChild);
			ypos += rowHeights[rowIndex] + this.get_verticalSpacing();
			++rowIndex;
			if(rowIndex >= this._rows) {
				ypos = this.get_paddingTop();
				xpos += columnWidths[columnIndex] + this.get_horizontalSpacing();
				rowIndex = 0;
				++columnIndex;
			}
		}
	}
	,calcColumnWidths: function(usableSize,includePercentage) {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var columnWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			columnWidths.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null) {
				if(child.get_componentWidth() > columnWidths[columnIndex]) {
					columnWidths[columnIndex] = child.get_componentWidth();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentWidth() != null) {
					var cx = usableSize.width * child.get_percentWidth() / 100;
					if(cx > columnWidths[rowIndex] && this._rows == 1) {
						columnWidths[columnIndex] = cx;
					} else if(usableSize.width > columnWidths[columnIndex]) {
						columnWidths[columnIndex] = usableSize.width;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return columnWidths;
	}
	,calcRowHeights: function(usableSize,includePercentage) {
		var rowHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			rowHeights.push(0);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null) {
				if(child.get_componentHeight() > rowHeights[rowIndex]) {
					rowHeights[rowIndex] = child.get_componentHeight();
				}
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		if(includePercentage) {
			rowIndex = 0;
			columnIndex = 0;
			var _g = 0;
			var _this = this.get_component();
			var _g1 = _this._children == null ? [] : _this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				if(child.get_includeInLayout() == false) {
					continue;
				}
				if(child.get_percentHeight() != null) {
					var cy = usableSize.height * child.get_percentHeight() / 100;
					if(cy > rowHeights[rowIndex]) {
						rowHeights[rowIndex] = cy;
					}
				}
				++rowIndex;
				if(rowIndex >= this._rows) {
					rowIndex = 0;
					++columnIndex;
				}
			}
		}
		return rowHeights;
	}
	,calcExplicitWidths: function() {
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
			}
		}
		var columnCount = visibleChildren / this._rows | 0;
		if(visibleChildren % this._rows != 0) {
			++columnCount;
		}
		var explicitWidths = [];
		var _g = 0;
		var _g1 = columnCount;
		while(_g < _g1) {
			var _ = _g++;
			explicitWidths.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentWidth() == null && child.get_componentWidth() > 0) {
				explicitWidths[rowIndex % this._rows] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitWidths;
	}
	,calcExplicitHeights: function() {
		var explicitHeights = [];
		var _g = 0;
		var _g1 = this._rows;
		while(_g < _g1) {
			var _ = _g++;
			explicitHeights.push(false);
		}
		var rowIndex = 0;
		var columnIndex = 0;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			if(child.get_percentHeight() == null && child.get_componentHeight() > 0) {
				explicitHeights[rowIndex] = true;
			}
			++rowIndex;
			if(rowIndex >= this._rows) {
				rowIndex = 0;
				++columnIndex;
			}
		}
		return explicitHeights;
	}
	,__class__: haxe_ui_layouts_HorizontalGridLayout
	,__properties__: $extend(haxe_ui_layouts_Layout.prototype.__properties__,{set_rows:"set_rows",get_rows:"get_rows"})
});
var haxe_ui_layouts_LayoutFactory = function() { };
$hxClasses["haxe.ui.layouts.LayoutFactory"] = haxe_ui_layouts_LayoutFactory;
haxe_ui_layouts_LayoutFactory.__name__ = "haxe.ui.layouts.LayoutFactory";
haxe_ui_layouts_LayoutFactory.createFromName = function(name) {
	switch(name) {
	case "absolute":
		return new haxe_ui_layouts_AbsoluteLayout();
	case "continuous horizontal":case "continuousHorizontal":
		return new haxe_ui_layouts_HorizontalContinuousLayout();
	case "horizontal":
		return new haxe_ui_layouts_HorizontalLayout();
	case "horizontal grid":case "horizontalgrid":
		return new haxe_ui_layouts_HorizontalGridLayout();
	case "vertical":
		return new haxe_ui_layouts_VerticalLayout();
	case "vertical grid":case "verticalgrid":
		return new haxe_ui_layouts_VerticalGridLayout();
	}
	return new haxe_ui_layouts_DefaultLayout();
};
var haxe_ui_layouts_VerticalLayout = function() {
	haxe_ui_layouts_DefaultLayout.call(this);
	this._calcFullHeights = true;
};
$hxClasses["haxe.ui.layouts.VerticalLayout"] = haxe_ui_layouts_VerticalLayout;
haxe_ui_layouts_VerticalLayout.__name__ = "haxe.ui.layouts.VerticalLayout";
haxe_ui_layouts_VerticalLayout.__super__ = haxe_ui_layouts_DefaultLayout;
haxe_ui_layouts_VerticalLayout.prototype = $extend(haxe_ui_layouts_DefaultLayout.prototype,{
	repositionChildren: function() {
		var ypos = this.get_paddingTop();
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				continue;
			}
			var xpos = 0;
			switch(this.horizontalAlign(child)) {
			case "center":
				xpos = (this.get_component().get_componentWidth() - child.get_componentWidth()) / 2 + this.marginLeft(child) - this.marginRight(child);
				break;
			case "right":
				if(child.get_componentWidth() < this.get_component().get_componentWidth()) {
					xpos = this.get_component().get_componentWidth() - (child.get_componentWidth() + this.get_paddingRight() + this.marginLeft(child));
				}
				break;
			default:
				xpos = this.get_paddingLeft() + this.marginLeft(child);
			}
			child.moveComponent(xpos,ypos + this.marginTop(child));
			ypos += child.get_componentHeight() + this.get_verticalSpacing();
		}
	}
	,get_usableSize: function() {
		var size = haxe_ui_layouts_DefaultLayout.prototype.get_usableSize.call(this);
		var _this = this.get_component();
		var visibleChildren = (_this._children == null ? [] : _this._children).length;
		var _g = 0;
		var _this = this.get_component();
		var _g1 = _this._children == null ? [] : _this._children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.get_includeInLayout() == false) {
				--visibleChildren;
				continue;
			}
			if(child.get_componentHeight() > 0 && (child.get_percentHeight() == null || this.fixedMinHeight(child) == true)) {
				size.height -= child.get_componentHeight() + this.marginTop(child) + this.marginBottom(child);
			}
		}
		if(visibleChildren > 1) {
			size.height -= this.get_verticalSpacing() * (visibleChildren - 1);
		}
		if(size.height < 0) {
			size.height = 0;
		}
		return size;
	}
	,__class__: haxe_ui_layouts_VerticalLayout
});
var haxe_ui_locale_LocaleEvent = function(type) {
	haxe_ui_events_UIEvent.call(this,type);
};
$hxClasses["haxe.ui.locale.LocaleEvent"] = haxe_ui_locale_LocaleEvent;
haxe_ui_locale_LocaleEvent.__name__ = "haxe.ui.locale.LocaleEvent";
haxe_ui_locale_LocaleEvent.__super__ = haxe_ui_events_UIEvent;
haxe_ui_locale_LocaleEvent.prototype = $extend(haxe_ui_events_UIEvent.prototype,{
	clone: function() {
		var c = new haxe_ui_locale_LocaleEvent(this.type);
		return c;
	}
	,__class__: haxe_ui_locale_LocaleEvent
});
var haxe_ui_locale_LocaleManager = function() {
	this._localeMap = new haxe_ds_StringMap();
	this._language = "en";
	this._eventMap = null;
};
$hxClasses["haxe.ui.locale.LocaleManager"] = haxe_ui_locale_LocaleManager;
haxe_ui_locale_LocaleManager.__name__ = "haxe.ui.locale.LocaleManager";
haxe_ui_locale_LocaleManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_locale_LocaleManager.get_instance = function() {
	if(haxe_ui_locale_LocaleManager._instance == null) {
		haxe_ui_locale_LocaleManager._instance = new haxe_ui_locale_LocaleManager();
	}
	return haxe_ui_locale_LocaleManager._instance;
};
haxe_ui_locale_LocaleManager.prototype = {
	_eventMap: null
	,registerComponent: function(component,prop,callback,expr,fix) {
		if(fix == null) {
			fix = true;
		}
		if(callback == null && expr == null) {
			return;
		}
		var fixedExpr = null;
		if(fix == true) {
			if(expr != null) {
				fixedExpr = haxe_ui_util_ExpressionUtil.stringToLanguageExpression(expr,"LocaleManager");
				if(StringTools.endsWith(fixedExpr,";") == true) {
					fixedExpr = HxOverrides.substr(fixedExpr,0,fixedExpr.length - 1);
				}
			}
		} else {
			fixedExpr = expr;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			propMap = new haxe_ds_StringMap();
			haxe_ui_locale_LocaleManager._registeredComponents.set(component,propMap);
		}
		propMap.h[prop] = { callback : callback, expr : fixedExpr};
		this.refreshFor(component);
	}
	,unregisterComponent: function(component) {
		haxe_ui_locale_LocaleManager._registeredComponents.remove(component);
	}
	,findBindingExpr: function(component,prop) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return null;
		}
		var entry = propMap.h[prop];
		return entry.expr;
	}
	,cloneForComponent: function(from,to) {
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[from.__id__];
		if(propMap == null) {
			return;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			this.registerComponent(to,prop,entry.callback,entry.expr,false);
		}
	}
	,onComponentReady: function(e) {
		e.target.unregisterEvent("initialize",$bind(this,this.onComponentReady));
		this.refreshFor(e.target);
	}
	,refreshFor: function(component) {
		if(component.get_isReady() == false) {
			component.registerEvent("initialize",$bind(this,this.onComponentReady));
			return;
		}
		var propMap = haxe_ui_locale_LocaleManager._registeredComponents.h[component.__id__];
		if(propMap == null) {
			return;
		}
		var context = { LocaleManager : haxe_ui_locale_LocaleManager, MathUtil : haxe_ui_util_MathUtil};
		var root = this.findRoot(component);
		var _g = 0;
		var _g1 = root.get_namedComponents();
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			if(k.get_scriptAccess() == false) {
				continue;
			}
			context[k.get_id()] = k;
		}
		var h = propMap.h;
		var prop_h = h;
		var prop_keys = Object.keys(h);
		var prop_length = prop_keys.length;
		var prop_current = 0;
		while(prop_current < prop_length) {
			var prop = prop_keys[prop_current++];
			var entry = propMap.h[prop];
			if(entry.callback != null) {
				var value = entry.callback();
				Reflect.setProperty(component,prop,value);
			} else if(entry.expr != null) {
				var value1 = haxe_ui_util_SimpleExpressionEvaluator.eval(entry.expr,context);
				Reflect.setProperty(component,prop,value1);
			}
		}
	}
	,refreshAll: function() {
		var c = haxe_ui_locale_LocaleManager._registeredComponents.keys();
		while(c.hasNext()) {
			var c1 = c.next();
			this.refreshFor(c1);
		}
	}
	,_language: null
	,get_language: function() {
		return this._language;
	}
	,set_language: function(value) {
		if(value == null) {
			return value;
		}
		if(this._language == value) {
			return value;
		}
		if(this.getStrings(value) == null) {
			return value;
		}
		this._language = value;
		this.refreshAll();
		if(this._eventMap != null) {
			var event = new haxe_ui_locale_LocaleEvent("localeChanged");
			this._eventMap.invoke("localeChanged",event);
		}
		return value;
	}
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener,priority);
	}
	,hasEvent: function(type,listener) {
		if(this._eventMap == null) {
			return false;
		}
		return this._eventMap.contains(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap != null) {
			this._eventMap.remove(type,listener);
		}
	}
	,parseResource: function(localeId,resourceId) {
		var content = haxe_ui_ToolkitAssets.get_instance().getText(resourceId);
		if(content != null) {
			var parts = resourceId.split(".");
			var extension = parts.pop();
			var filename = parts.join(".");
			var n = filename.lastIndexOf("/");
			if(n != -1) {
				filename = HxOverrides.substr(filename,n + 1,null);
			}
			var parser = haxe_ui_parsers_locale_LocaleParser.get(extension);
			var map = parser.parse(content);
			this.addStrings(localeId,map,filename);
		}
	}
	,_localeMap: null
	,addStrings: function(localeId,map,filename) {
		var stringMap = this._localeMap.h[localeId];
		if(stringMap == null) {
			stringMap = new haxe_ds_StringMap();
			this._localeMap.h[localeId] = stringMap;
		}
		var h = map.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = map.h[k];
			if(filename != null && filename != localeId && StringTools.startsWith(k,filename) == false) {
				var altKey = filename + "." + k;
				stringMap.h[altKey] = v;
			}
			stringMap.h[k] = v;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		if(parts.length > 1) {
			var parent = this._localeMap.h[parts[0]];
			if(parent != null) {
				var h = parent.h;
				var k_h = h;
				var k_keys = Object.keys(h);
				var k_length = k_keys.length;
				var k_current = 0;
				while(k_current < k_length) {
					var k = k_keys[k_current++];
					if(Object.prototype.hasOwnProperty.call(stringMap.h,k) == false) {
						stringMap.h[k] = parent.h[k];
					}
				}
			}
		}
	}
	,getStrings: function(localeId) {
		var strings = this._localeMap.h[localeId];
		if(strings != null) {
			return strings;
		}
		localeId = StringTools.replace(localeId,"-","_");
		var parts = localeId.split("_");
		return this._localeMap.h[parts[0]];
	}
	,hasString: function(id) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return false;
		}
		return Object.prototype.hasOwnProperty.call(strings.h,id);
	}
	,lookupString: function(id,param0,param1,param2,param3) {
		var strings = this.getStrings(this.get_language());
		if(strings == null) {
			return id;
		}
		var value = strings.h[id];
		if(value == null) {
			return id;
		}
		if(param0 != null) {
			value = StringTools.replace(value,"{0}",param0);
		}
		if(param1 != null) {
			value = StringTools.replace(value,"{1}",param1);
		}
		if(param2 != null) {
			value = StringTools.replace(value,"{2}",param2);
		}
		if(param3 != null) {
			value = StringTools.replace(value,"{3}",param3);
		}
		return value;
	}
	,findRoot: function(c) {
		var root = c;
		var ref = c;
		while(ref != null) {
			root = ref;
			if(root.bindingRoot) {
				break;
			}
			ref = ref.parentComponent;
		}
		return root;
	}
	,__class__: haxe_ui_locale_LocaleManager
	,__properties__: {set_language:"set_language",get_language:"get_language"}
};
var haxe_ui_macros_BackendMacros = function() { };
$hxClasses["haxe.ui.macros.BackendMacros"] = haxe_ui_macros_BackendMacros;
haxe_ui_macros_BackendMacros.__name__ = "haxe.ui.macros.BackendMacros";
var haxe_ui_macros_ComponentMacros = function() { };
$hxClasses["haxe.ui.macros.ComponentMacros"] = haxe_ui_macros_ComponentMacros;
haxe_ui_macros_ComponentMacros.__name__ = "haxe.ui.macros.ComponentMacros";
var haxe_ui_macros_ModuleMacros = function() { };
$hxClasses["haxe.ui.macros.ModuleMacros"] = haxe_ui_macros_ModuleMacros;
haxe_ui_macros_ModuleMacros.__name__ = "haxe.ui.macros.ModuleMacros";
var haxe_ui_macros_NativeMacros = function() { };
$hxClasses["haxe.ui.macros.NativeMacros"] = haxe_ui_macros_NativeMacros;
haxe_ui_macros_NativeMacros.__name__ = "haxe.ui.macros.NativeMacros";
var haxe_ui_parsers_locale_LocaleParser = function() {
};
$hxClasses["haxe.ui.parsers.locale.LocaleParser"] = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_LocaleParser.__name__ = "haxe.ui.parsers.locale.LocaleParser";
haxe_ui_parsers_locale_LocaleParser.get = function(extension) {
	haxe_ui_parsers_locale_LocaleParser.defaultParsers();
	var cls = haxe_ui_parsers_locale_LocaleParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No locale parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create locale parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_locale_LocaleParser.defaultParsers = function() {
	haxe_ui_parsers_locale_LocaleParser.register("properties",haxe_ui_parsers_locale_PropertiesParser);
	haxe_ui_parsers_locale_LocaleParser.register("po",haxe_ui_parsers_locale_PoParser);
};
haxe_ui_parsers_locale_LocaleParser.register = function(extension,cls) {
	if(haxe_ui_parsers_locale_LocaleParser._parsers == null) {
		haxe_ui_parsers_locale_LocaleParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_locale_LocaleParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_locale_LocaleParser.prototype = {
	parse: function(data) {
		throw haxe_Exception.thrown("Locale parser not implemented!");
	}
	,__class__: haxe_ui_parsers_locale_LocaleParser
};
var haxe_ui_parsers_locale_PoParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PoParser"] = haxe_ui_parsers_locale_PoParser;
haxe_ui_parsers_locale_PoParser.__name__ = "haxe.ui.parsers.locale.PoParser";
haxe_ui_parsers_locale_PoParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PoParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var msgidEReg = new EReg("msgid *= *\"(.*)\"","");
		var msgstrEReg = new EReg("msgstr *= *\"(.*)\"","");
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var currentID = null;
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			if(currentID == null) {
				if(msgidEReg.match(line)) {
					currentID = msgidEReg.matched(1);
				} else {
					throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
				}
			} else if(msgstrEReg.match(line)) {
				var value = msgstrEReg.matched(1);
				result.h[currentID] = value;
				currentID = null;
			} else {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PoParser
});
var haxe_ui_parsers_locale_PropertiesParser = function() {
	haxe_ui_parsers_locale_LocaleParser.call(this);
};
$hxClasses["haxe.ui.parsers.locale.PropertiesParser"] = haxe_ui_parsers_locale_PropertiesParser;
haxe_ui_parsers_locale_PropertiesParser.__name__ = "haxe.ui.parsers.locale.PropertiesParser";
haxe_ui_parsers_locale_PropertiesParser.__super__ = haxe_ui_parsers_locale_LocaleParser;
haxe_ui_parsers_locale_PropertiesParser.prototype = $extend(haxe_ui_parsers_locale_LocaleParser.prototype,{
	parse: function(data) {
		var result = new haxe_ds_StringMap();
		var lines = data.split("\n");
		var _g = 0;
		while(_g < lines.length) {
			var line = lines[_g];
			++_g;
			line = StringTools.trim(line);
			if(line.length == 0 || StringTools.startsWith(line,"#")) {
				continue;
			}
			var separator = line.indexOf("=");
			if(separator == -1) {
				throw haxe_Exception.thrown("Locale parser: Invalid line " + line);
			}
			var key = StringTools.trim(HxOverrides.substr(line,0,separator));
			var content = StringTools.trim(HxOverrides.substr(line,separator + 1,null));
			result.h[key] = content;
		}
		return result;
	}
	,__class__: haxe_ui_parsers_locale_PropertiesParser
});
var haxe_ui_parsers_ui_ComponentInfo = function() {
	this.properties = new haxe_ds_StringMap();
	this.children = [];
	this.scriptlets = [];
	this.styles = [];
};
$hxClasses["haxe.ui.parsers.ui.ComponentInfo"] = haxe_ui_parsers_ui_ComponentInfo;
haxe_ui_parsers_ui_ComponentInfo.__name__ = "haxe.ui.parsers.ui.ComponentInfo";
haxe_ui_parsers_ui_ComponentInfo.prototype = {
	type: null
	,id: null
	,left: null
	,top: null
	,width: null
	,height: null
	,percentWidth: null
	,percentHeight: null
	,contentWidth: null
	,contentHeight: null
	,percentContentWidth: null
	,percentContentHeight: null
	,text: null
	,style: null
	,styleNames: null
	,composite: null
	,layoutName: null
	,direction: null
	,properties: null
	,parent: null
	,children: null
	,layout: null
	,scriptlets: null
	,styles: null
	,data: null
	,condition: null
	,resolvedClassName: null
	,get_styleString: function() {
		if(this.style == null) {
			return null;
		}
		return StringTools.replace(this.style,"\"","'");
	}
	,get_dataString: function() {
		if(this.data == null) {
			return null;
		}
		return StringTools.replace(this.data,"\"","'");
	}
	,findRootComponent: function() {
		var r = this;
		while(r.parent != null) r = r.parent;
		return r;
	}
	,validate: function() {
		var propsToRemove = [];
		if(this.layoutName != null && this.layout == null) {
			this.layout = new haxe_ui_parsers_ui_LayoutInfo();
			this.layout.type = this.layoutName;
			var h = this.properties.h;
			var propName_h = h;
			var propName_keys = Object.keys(h);
			var propName_length = propName_keys.length;
			var propName_current = 0;
			while(propName_current < propName_length) {
				var propName = propName_keys[propName_current++];
				if(StringTools.startsWith(propName,"layout")) {
					var propValue = this.properties.h[propName];
					propsToRemove.push(propName);
					propName = StringTools.replace(propName,"layout","");
					propName = haxe_ui_util_StringUtil.uncapitalizeFirstLetter(propName);
					this.layout.properties.h[propName] = propValue;
				}
			}
		}
		var _g = 0;
		while(_g < propsToRemove.length) {
			var propName = propsToRemove[_g];
			++_g;
			var _this = this.properties;
			if(Object.prototype.hasOwnProperty.call(_this.h,propName)) {
				delete(_this.h[propName]);
			}
		}
	}
	,__class__: haxe_ui_parsers_ui_ComponentInfo
	,__properties__: {get_dataString:"get_dataString",get_styleString:"get_styleString"}
};
var haxe_ui_parsers_ui_ComponentParserException = function(message,fileName,original,previous,native) {
	haxe_Exception.call(this,message,previous,native);
	this.fileName = fileName;
	this.original = original;
};
$hxClasses["haxe.ui.parsers.ui.ComponentParserException"] = haxe_ui_parsers_ui_ComponentParserException;
haxe_ui_parsers_ui_ComponentParserException.__name__ = "haxe.ui.parsers.ui.ComponentParserException";
haxe_ui_parsers_ui_ComponentParserException.__super__ = haxe_Exception;
haxe_ui_parsers_ui_ComponentParserException.prototype = $extend(haxe_Exception.prototype,{
	fileName: null
	,original: null
	,__class__: haxe_ui_parsers_ui_ComponentParserException
});
var haxe_ui_parsers_ui_ComponentParser = function() {
};
$hxClasses["haxe.ui.parsers.ui.ComponentParser"] = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_ComponentParser.__name__ = "haxe.ui.parsers.ui.ComponentParser";
haxe_ui_parsers_ui_ComponentParser.get = function(extension) {
	haxe_ui_parsers_ui_ComponentParser.defaultParsers();
	var cls = haxe_ui_parsers_ui_ComponentParser._parsers.h[extension];
	if(cls == null) {
		throw haxe_Exception.thrown("No component parser found for \"" + extension + "\"");
	}
	var instance = Type.createInstance(cls,[]);
	if(instance == null) {
		throw haxe_Exception.thrown("Could not create component parser instance \"" + Std.string(cls) + "\"");
	}
	return instance;
};
haxe_ui_parsers_ui_ComponentParser.defaultParsers = function() {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser.register("xml",haxe_ui_parsers_ui_XMLParser);
	}
};
haxe_ui_parsers_ui_ComponentParser.register = function(extension,cls) {
	if(haxe_ui_parsers_ui_ComponentParser._parsers == null) {
		haxe_ui_parsers_ui_ComponentParser._parsers = new haxe_ds_StringMap();
	}
	haxe_ui_parsers_ui_ComponentParser._parsers.h[extension] = cls;
};
haxe_ui_parsers_ui_ComponentParser.nextId = function(prefix) {
	if(prefix == null) {
		prefix = "component";
	}
	var s = prefix + haxe_ui_parsers_ui_ComponentParser._nextId;
	haxe_ui_parsers_ui_ComponentParser._nextId++;
	return s;
};
haxe_ui_parsers_ui_ComponentParser.float = function(value) {
	return parseFloat(value);
};
haxe_ui_parsers_ui_ComponentParser.isPercentage = function(value) {
	if(value.indexOf("%") == value.length - 1) {
		return true;
	}
	return false;
};
haxe_ui_parsers_ui_ComponentParser.prototype = {
	_resourceResolver: null
	,parse: function(data,resourceResolver,fileName) {
		throw haxe_Exception.thrown("Component parser not implemented!");
	}
	,__class__: haxe_ui_parsers_ui_ComponentParser
};
var haxe_ui_parsers_ui_ComponentStyleInfo = function(style,scope) {
	if(scope == null) {
		scope = "global";
	}
	this.style = null;
	this.scope = "global";
	this.style = style;
	this.scope = scope;
};
$hxClasses["haxe.ui.parsers.ui.ComponentStyleInfo"] = haxe_ui_parsers_ui_ComponentStyleInfo;
haxe_ui_parsers_ui_ComponentStyleInfo.__name__ = "haxe.ui.parsers.ui.ComponentStyleInfo";
haxe_ui_parsers_ui_ComponentStyleInfo.prototype = {
	scope: null
	,style: null
	,__class__: haxe_ui_parsers_ui_ComponentStyleInfo
};
var haxe_ui_parsers_ui_LayoutInfo = function() {
	this.properties = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.parsers.ui.LayoutInfo"] = haxe_ui_parsers_ui_LayoutInfo;
haxe_ui_parsers_ui_LayoutInfo.__name__ = "haxe.ui.parsers.ui.LayoutInfo";
haxe_ui_parsers_ui_LayoutInfo.prototype = {
	type: null
	,properties: null
	,__class__: haxe_ui_parsers_ui_LayoutInfo
};
var haxe_ui_parsers_ui_XMLParser = function() {
	haxe_ui_parsers_ui_ComponentParser.call(this);
};
$hxClasses["haxe.ui.parsers.ui.XMLParser"] = haxe_ui_parsers_ui_XMLParser;
haxe_ui_parsers_ui_XMLParser.__name__ = "haxe.ui.parsers.ui.XMLParser";
haxe_ui_parsers_ui_XMLParser.parseComponent = function(component,xml,resourceResolver) {
	var isComponent = false;
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	var nodeName = xml.nodeName;
	if(nodeName == "import") {
		haxe_ui_parsers_ui_XMLParser.parseImportNode(component.parent,xml,resourceResolver);
	} else if(nodeName == "script") {
		haxe_ui_parsers_ui_XMLParser.parseScriptNode(component,xml,resourceResolver);
	} else if(nodeName == "style") {
		haxe_ui_parsers_ui_XMLParser.parseStyleNode(component,xml,resourceResolver);
	} else if(nodeName == "data") {
		if(xml.firstElement() != null) {
			var tmp = haxe_xml_Printer.print(xml);
			component.parent.data = StringTools.trim(tmp);
		} else {
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
			}
			var _this = xml.children[0];
			if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
			}
			if(StringTools.startsWith(StringTools.trim(_this.nodeValue),"[")) {
				if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
				}
				var _this = xml.children[0];
				if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
				}
				component.parent.data = StringTools.trim(_this.nodeValue);
			}
		}
	} else if(nodeName == "layout") {
		haxe_ui_parsers_ui_XMLParser.parseLayoutNode(component.parent,xml);
	} else {
		haxe_ui_parsers_ui_XMLParser.parseDetails(component,xml);
		haxe_ui_parsers_ui_XMLParser.parseAttributes(component,xml);
		var childXml = xml.elements();
		while(childXml.hasNext()) {
			var childXml1 = childXml.next();
			var child = new haxe_ui_parsers_ui_ComponentInfo();
			child.parent = component;
			if(haxe_ui_parsers_ui_XMLParser.parseComponent(child,childXml1,resourceResolver) == true) {
				component.children.push(child);
			}
		}
		if(component.type == "itemrenderer" && component.parent != null && component.parent.type.toLowerCase() == "listview") {
			component.parent.properties.h["native"] = "false";
		}
		component.validate();
		isComponent = true;
	}
	return isComponent;
};
haxe_ui_parsers_ui_XMLParser.parseImportNode = function(component,xml,resourceResolver) {
	if(xml.get("source") != null || xml.get("resource") != null) {
		var source = xml.get("source");
		if(source == null) {
			source = xml.get("resource");
		}
		var omitRoot = xml.get("omitRoot") == "true";
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			var extension = resourceResolver.extension(source);
			var c = haxe_ui_parsers_ui_ComponentParser.get(extension).parse(sourceData,resourceResolver,source);
			component.findRootComponent().styles = component.findRootComponent().styles.concat(c.styles);
			c.styles = [];
			component.findRootComponent().scriptlets = component.findRootComponent().scriptlets.concat(c.scriptlets);
			c.scriptlets = [];
			if(omitRoot == false) {
				c.parent = component;
				component.children.push(c);
			} else {
				var _g = 0;
				var _g1 = c.children;
				while(_g < _g1.length) {
					var child = _g1[_g];
					++_g;
					child.parent = component;
					component.children.push(child);
				}
			}
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseScriptNode = function(component,xml,resourceResolver) {
	var scriptText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
		}
		scriptText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(scriptText == null) {
				scriptText = "";
			}
			scriptText += "\n" + sourceData;
		}
	}
	if(scriptText != null) {
		var scope = "global";
		if(scope == "global") {
			component.findRootComponent().scriptlets.push(scriptText);
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseStyleNode = function(component,xml,resourceResolver) {
	var styleText = null;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
		}
		styleText = _this.nodeValue;
	}
	if(xml.get("source") != null) {
		var source = xml.get("source");
		var sourceData = resourceResolver.getResourceData(source);
		if(sourceData != null) {
			if(styleText == null) {
				styleText = "";
			}
			styleText += "\n" + sourceData;
		}
	}
	if(styleText != null) {
		var scope = xml.get("scope");
		if(scope == null) {
			scope = "global";
		}
		if(scope == "global") {
			component.findRootComponent().styles.push(new haxe_ui_parsers_ui_ComponentStyleInfo(styleText,scope));
		} else if(scope == "local" && component.parent != null) {
			component.parent.styles.push(new haxe_ui_parsers_ui_ComponentStyleInfo(styleText,scope));
		}
	}
};
haxe_ui_parsers_ui_XMLParser.parseLayoutNode = function(component,xml) {
	var layoutXml = xml.firstElement();
	var layout = new haxe_ui_parsers_ui_LayoutInfo();
	component.layout = layout;
	if(layoutXml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (layoutXml.nodeType == null ? "null" : XmlType.toString(layoutXml.nodeType)));
	}
	layout.type = layoutXml.nodeName;
	var attrName = layoutXml.attributes();
	while(attrName.hasNext()) {
		var attrName1 = attrName.next();
		var attrValue = layoutXml.get(attrName1);
		layout.properties.h[attrName1] = attrValue;
	}
};
haxe_ui_parsers_ui_XMLParser.parseDetails = function(component,xml) {
	var tmp;
	if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	if(xml.children[0] != null) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
		}
		var tmp1 = xml.children[0].nodeType;
		tmp = "" + (tmp1 == null ? "null" : XmlType.toString(tmp1)) == "1";
	} else {
		tmp = false;
	}
	if(tmp) {
		if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
		}
		var _this = xml.children[0];
		if(_this.nodeType == Xml.Document || _this.nodeType == Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, unexpected " + (_this.nodeType == null ? "null" : XmlType.toString(_this.nodeType)));
		}
		var value = StringTools.trim(_this.nodeValue);
		if(value != null && value.length > 0) {
			component.text = value;
		}
	}
	if(xml.nodeType != Xml.Element) {
		throw haxe_Exception.thrown("Bad node type, expected Element but found " + (xml.nodeType == null ? "null" : XmlType.toString(xml.nodeType)));
	}
	component.type = StringTools.replace(xml.nodeName.toLowerCase(),"-","");
};
haxe_ui_parsers_ui_XMLParser.parseAttributes = function(component,xml) {
	var attrName = xml.attributes();
	while(attrName.hasNext()) {
		var attrName1 = attrName.next();
		var attrValue = xml.get(attrName1);
		switch(attrName1) {
		case "composite":
			component.composite = attrValue == "true";
			break;
		case "condition":
			component.condition = attrValue;
			break;
		case "contentHeight":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "contentWidth":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentContentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.contentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "direction":
			component.direction = attrValue;
			break;
		case "height":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentHeight = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.height = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		case "id":
			component.id = attrValue;
			break;
		case "if":
			var condition = [];
			var _g = 0;
			var _g1 = attrValue.split(",");
			while(_g < _g1.length) {
				var t = _g1[_g];
				++_g;
				condition.push("defined(\"" + StringTools.trim(t) + "\") == true");
			}
			component.condition = condition.join(" || ");
			break;
		case "layout":
			component.layoutName = attrValue;
			break;
		case "left":
			component.left = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "style":
			component.style = attrValue;
			break;
		case "styleName":case "styleNames":
			component.styleNames = attrValue;
			break;
		case "text":
			component.text = attrValue;
			break;
		case "top":
			component.top = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			break;
		case "unless":
			var condition1 = [];
			var _g2 = 0;
			var _g3 = attrValue.split(",");
			while(_g2 < _g3.length) {
				var t1 = _g3[_g2];
				++_g2;
				condition1.push("defined(\"" + StringTools.trim(t1) + "\") == false");
			}
			component.condition = condition1.join(" && ");
			break;
		case "width":
			if(haxe_ui_parsers_ui_ComponentParser.isPercentage(attrValue) == true) {
				component.percentWidth = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			} else {
				component.width = haxe_ui_parsers_ui_ComponentParser.float(attrValue);
			}
			break;
		default:
			component.properties.h[attrName1] = attrValue;
		}
	}
};
haxe_ui_parsers_ui_XMLParser.__super__ = haxe_ui_parsers_ui_ComponentParser;
haxe_ui_parsers_ui_XMLParser.prototype = $extend(haxe_ui_parsers_ui_ComponentParser.prototype,{
	parse: function(data,resourceResolver,fileName) {
		this._resourceResolver = resourceResolver;
		var component = new haxe_ui_parsers_ui_ComponentInfo();
		try {
			var xml = Xml.parse(data).firstElement();
			haxe_ui_parsers_ui_XMLParser.parseComponent(component,xml,resourceResolver);
		} catch( _g ) {
			var _g1 = haxe_Exception.caught(_g);
			if(((_g1) instanceof haxe_ui_parsers_ui_ComponentParserException)) {
				var e = _g1;
				throw new haxe_ui_parsers_ui_ComponentParserException("while parsing \"" + e.fileName + "\": " + e.original.get_message(),e.fileName,e.original,e);
			} else {
				var e = _g1;
				throw new haxe_ui_parsers_ui_ComponentParserException("while parsing \"" + fileName + "\": " + e.get_message(),fileName,e,e);
			}
		}
		return component;
	}
	,__class__: haxe_ui_parsers_ui_XMLParser
});
var haxe_ui_parsers_ui_resolvers_ResourceResolver = function(params) {
	this._params = params;
};
$hxClasses["haxe.ui.parsers.ui.resolvers.ResourceResolver"] = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_ResourceResolver.__name__ = "haxe.ui.parsers.ui.resolvers.ResourceResolver";
haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype = {
	_params: null
	,getResourceData: function(r) {
		return null;
	}
	,extension: function(path) {
		if(path.indexOf(".") == -1) {
			return null;
		}
		var arr = path.split(".");
		var extension = arr[arr.length - 1];
		return extension;
	}
	,__class__: haxe_ui_parsers_ui_resolvers_ResourceResolver
};
var haxe_ui_parsers_ui_resolvers_AssetResourceResolver = function(rootFile,params) {
	haxe_ui_parsers_ui_resolvers_ResourceResolver.call(this,params);
	this._rootFile = rootFile;
	var arr = this._rootFile.split("/");
	arr.pop();
	this._rootDir = arr.join("/");
	if(arr.length > 1) {
		this._rootDir += "/";
	}
};
$hxClasses["haxe.ui.parsers.ui.resolvers.AssetResourceResolver"] = haxe_ui_parsers_ui_resolvers_AssetResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__name__ = "haxe.ui.parsers.ui.resolvers.AssetResourceResolver";
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.__super__ = haxe_ui_parsers_ui_resolvers_ResourceResolver;
haxe_ui_parsers_ui_resolvers_AssetResourceResolver.prototype = $extend(haxe_ui_parsers_ui_resolvers_ResourceResolver.prototype,{
	_rootFile: null
	,_rootDir: null
	,getResourceData: function(r) {
		var f = haxe_io_Path.normalize(this._rootDir + r);
		return haxe_ui_ToolkitAssets.get_instance().getText(f);
	}
	,__class__: haxe_ui_parsers_ui_resolvers_AssetResourceResolver
});
var haxe_ui_styles_Dimension = $hxEnums["haxe.ui.styles.Dimension"] = { __ename__:true,__constructs__:null
	,PERCENT: ($_=function(value) { return {_hx_index:0,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PERCENT",$_.__params__ = ["value"],$_)
	,PX: ($_=function(value) { return {_hx_index:1,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="PX",$_.__params__ = ["value"],$_)
	,VW: ($_=function(value) { return {_hx_index:2,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VW",$_.__params__ = ["value"],$_)
	,VH: ($_=function(value) { return {_hx_index:3,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="VH",$_.__params__ = ["value"],$_)
	,REM: ($_=function(value) { return {_hx_index:4,value:value,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="REM",$_.__params__ = ["value"],$_)
	,CALC: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.styles.Dimension",toString:$estr}; },$_._hx_name="CALC",$_.__params__ = ["s"],$_)
};
haxe_ui_styles_Dimension.__constructs__ = [haxe_ui_styles_Dimension.PERCENT,haxe_ui_styles_Dimension.PX,haxe_ui_styles_Dimension.VW,haxe_ui_styles_Dimension.VH,haxe_ui_styles_Dimension.REM,haxe_ui_styles_Dimension.CALC];
var haxe_ui_styles_EasingFunction = $hxEnums["haxe.ui.styles.EasingFunction"] = { __ename__:true,__constructs__:null
	,LINEAR: {_hx_name:"LINEAR",_hx_index:0,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE: {_hx_name:"EASE",_hx_index:1,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN: {_hx_name:"EASE_IN",_hx_index:2,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_OUT: {_hx_name:"EASE_OUT",_hx_index:3,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
	,EASE_IN_OUT: {_hx_name:"EASE_IN_OUT",_hx_index:4,__enum__:"haxe.ui.styles.EasingFunction",toString:$estr}
};
haxe_ui_styles_EasingFunction.__constructs__ = [haxe_ui_styles_EasingFunction.LINEAR,haxe_ui_styles_EasingFunction.EASE,haxe_ui_styles_EasingFunction.EASE_IN,haxe_ui_styles_EasingFunction.EASE_OUT,haxe_ui_styles_EasingFunction.EASE_IN_OUT];
var haxe_ui_styles_Parser = function() {
};
$hxClasses["haxe.ui.styles.Parser"] = haxe_ui_styles_Parser;
haxe_ui_styles_Parser.__name__ = "haxe.ui.styles.Parser";
haxe_ui_styles_Parser.prototype = {
	parse: function(source) {
		var _gthis = this;
		source = source.replace(haxe_ui_styles_Parser.cssCommentsRegex.r,"");
		if(source.indexOf("$") != -1) {
			var n1 = source.indexOf("$");
			while(n1 != -1) {
				var n2 = n1;
				while(n2 <= source.length - 1) {
					var c = source.charAt(n2);
					if(c == " " || c == ";" || c == "\n" || c == ",") {
						break;
					}
					++n2;
				}
				if(n2 != source.length - 1) {
					var key = source.substring(n1 + 1,n2);
					var value = haxe_ui_themes_ThemeManager.get_instance().currentThemeVars.h[key];
					if(value != null) {
						var before = source.substring(0,n1);
						var after = source.substring(n2);
						source = before + value + after;
						n2 = n1 + value.length;
					} else {
						haxe_Log.trace("WARNING: css variable '" + key + "' not defined",{ fileName : "haxe/ui/styles/Parser.hx", lineNumber : 50, className : "haxe.ui.styles.Parser", methodName : "parse"});
					}
				}
				n1 = source.indexOf("$",n2);
			}
		}
		var styleSheet = new haxe_ui_styles_StyleSheet();
		source = haxe_ui_styles_Parser.cssImportStatementRegex.map(source,function(e) {
			var i = e.matched(0);
			i = HxOverrides.substr(i,7,null);
			var _this_r = new RegExp("\"|'|;","g".split("u").join(""));
			i = i.replace(_this_r,"");
			i = StringTools.trim(i);
			styleSheet.addImport(new haxe_ui_styles_elements_ImportElement(i));
			return "";
		});
		source = haxe_ui_styles_Parser.cssKeyframesRegex.map(source,function(e) {
			var id = e.matched(1);
			var data = e.matched(2);
			var keyframes = [];
			haxe_ui_styles_Parser.cssKeyframeSelectorRegex.map(data,function(e) {
				var selector = e.matched(1);
				var directives = e.matched(2);
				if(selector == "from") {
					selector = "0%";
				} else if(selector == "to") {
					selector = "100%";
				}
				var keyframe = new haxe_ui_styles_elements_AnimationKeyFrame();
				keyframe.time = haxe_ui_styles_ValueTools.parse(selector);
				keyframe.directives = _gthis.parseDirectives(directives);
				keyframes.push(keyframe);
				return null;
			});
			var animation = new haxe_ui_styles_elements_AnimationKeyFrames(id,keyframes);
			styleSheet.addAnimation(animation);
			return "";
		});
		haxe_ui_styles_Parser.combinedCSSMediaRegex.map(source,function(e) {
			var selector = "";
			if(e.matched(2) == null) {
				selector = StringTools.trim(e.matched(5).split("\r\n").join("\n"));
			} else {
				selector = StringTools.trim(e.matched(2).split("\r\n").join("\n"));
			}
			selector = selector.replace(haxe_ui_styles_Parser.newlineRegex.r,"\n");
			if(selector.indexOf("@media") != -1) {
				var n1 = selector.indexOf("(");
				var n2 = selector.lastIndexOf(")");
				var mediaQuery = selector.substring(n1 + 1,n2);
				var mediaStyleSheet = new haxe_ui_styles_Parser().parse(e.matched(3) + "\n}");
				var mq = new haxe_ui_styles_elements_MediaQuery(_gthis.parseDirectives(mediaQuery),mediaStyleSheet);
				styleSheet.addMediaQuery(mq);
			} else {
				var directives = _gthis.parseDirectives(e.matched(6));
				var selectors = selector.split(",");
				var _g = 0;
				while(_g < selectors.length) {
					var s = selectors[_g];
					++_g;
					s = StringTools.trim(s);
					if(s.length > 0) {
						styleSheet.addRule(new haxe_ui_styles_elements_RuleElement(s,directives));
					}
				}
			}
			return null;
		});
		return styleSheet;
	}
	,parseDirectives: function(rulesString) {
		rulesString = rulesString.split("\r\n").join("\n");
		var ret = [];
		var rules = rulesString.split(";");
		var _g = 0;
		while(_g < rules.length) {
			var line = rules[_g];
			++_g;
			var d = this.parseDirective(line);
			if(d != null) {
				ret.push(d);
			}
		}
		return ret;
	}
	,parseDirective: function(line) {
		var d = null;
		line = StringTools.trim(line);
		if(line.length == 0) {
			return null;
		}
		if(line.indexOf(":") != -1) {
			var parts = line.split(":");
			var cssDirective = StringTools.trim(parts[0]);
			var cssValue = StringTools.trim(parts.slice(1).join(":"));
			if(cssDirective.length < 1 || cssValue.length < 1) {
				return null;
			}
			d = new haxe_ui_styles_elements_Directive(cssDirective,haxe_ui_styles_ValueTools.parse(cssValue));
		} else {
			d = new haxe_ui_styles_elements_Directive("",haxe_ui_styles_ValueTools.parse(line),true);
		}
		return d;
	}
	,__class__: haxe_ui_styles_Parser
};
var haxe_ui_styles_StyleBorderType = $hxEnums["haxe.ui.styles.StyleBorderType"] = { __ename__:true,__constructs__:null
	,None: {_hx_name:"None",_hx_index:0,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Full: {_hx_name:"Full",_hx_index:1,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
	,Compound: {_hx_name:"Compound",_hx_index:2,__enum__:"haxe.ui.styles.StyleBorderType",toString:$estr}
};
haxe_ui_styles_StyleBorderType.__constructs__ = [haxe_ui_styles_StyleBorderType.None,haxe_ui_styles_StyleBorderType.Full,haxe_ui_styles_StyleBorderType.Compound];
var haxe_ui_styles_Style = function(left,top,autoWidth,width,percentWidth,initialWidth,initialPercentWidth,minWidth,minPercentWidth,maxWidth,maxPercentWidth,autoHeight,height,percentHeight,initialHeight,initialPercentHeight,minHeight,minPercentHeight,maxHeight,maxPercentHeight,padding,paddingTop,paddingLeft,paddingRight,paddingBottom,marginTop,marginLeft,marginRight,marginBottom,horizontalSpacing,verticalSpacing,color,backgroundColor,backgroundColorEnd,backgroundGradientStyle,backgroundOpacity,backgroundImage,backgroundImageRepeat,backgroundImageClipTop,backgroundImageClipLeft,backgroundImageClipBottom,backgroundImageClipRight,backgroundImageSliceTop,backgroundImageSliceLeft,backgroundImageSliceBottom,backgroundImageSliceRight,borderColor,borderTopColor,borderLeftColor,borderBottomColor,borderRightColor,borderSize,borderTopSize,borderLeftSize,borderBottomSize,borderRightSize,borderRadius,borderRadiusTopLeft,borderRadiusTopRight,borderRadiusBottomLeft,borderRadiusBottomRight,borderOpacity,borderStyle,icon,iconPosition,horizontalAlign,verticalAlign,textAlign,opacity,clip,native,fontName,fontSize,fontBold,fontUnderline,fontItalic,cursor,hidden,filter,backdropFilter,resource,animationName,animationOptions,mode,pointerEvents,contentType,direction,contentWidth,contentWidthPercent,contentHeight,contentHeightPercent,wordWrap,imageRendering,layout,borderType,hasBorder,fullBorderSize) {
	this.left = left;
	this.top = top;
	this.autoWidth = autoWidth;
	this.width = width;
	this.percentWidth = percentWidth;
	this.initialWidth = initialWidth;
	this.initialPercentWidth = initialPercentWidth;
	this.minWidth = minWidth;
	this.minPercentWidth = minPercentWidth;
	this.maxWidth = maxWidth;
	this.maxPercentWidth = maxPercentWidth;
	this.autoHeight = autoHeight;
	this.height = height;
	this.percentHeight = percentHeight;
	this.initialHeight = initialHeight;
	this.initialPercentHeight = initialPercentHeight;
	this.minHeight = minHeight;
	this.minPercentHeight = minPercentHeight;
	this.maxHeight = maxHeight;
	this.maxPercentHeight = maxPercentHeight;
	this.padding = padding;
	this.paddingTop = paddingTop;
	this.paddingLeft = paddingLeft;
	this.paddingRight = paddingRight;
	this.paddingBottom = paddingBottom;
	this.marginTop = marginTop;
	this.marginLeft = marginLeft;
	this.marginRight = marginRight;
	this.marginBottom = marginBottom;
	this.horizontalSpacing = horizontalSpacing;
	this.verticalSpacing = verticalSpacing;
	this.color = color;
	this.backgroundColor = backgroundColor;
	this.backgroundColorEnd = backgroundColorEnd;
	this.backgroundGradientStyle = backgroundGradientStyle;
	this.backgroundOpacity = backgroundOpacity;
	this.backgroundImage = backgroundImage;
	this.backgroundImageRepeat = backgroundImageRepeat;
	this.backgroundImageClipTop = backgroundImageClipTop;
	this.backgroundImageClipLeft = backgroundImageClipLeft;
	this.backgroundImageClipBottom = backgroundImageClipBottom;
	this.backgroundImageClipRight = backgroundImageClipRight;
	this.backgroundImageSliceTop = backgroundImageSliceTop;
	this.backgroundImageSliceLeft = backgroundImageSliceLeft;
	this.backgroundImageSliceBottom = backgroundImageSliceBottom;
	this.backgroundImageSliceRight = backgroundImageSliceRight;
	this.borderColor = borderColor;
	this.borderTopColor = borderTopColor;
	this.borderLeftColor = borderLeftColor;
	this.borderBottomColor = borderBottomColor;
	this.borderRightColor = borderRightColor;
	this.borderSize = borderSize;
	this.borderTopSize = borderTopSize;
	this.borderLeftSize = borderLeftSize;
	this.borderBottomSize = borderBottomSize;
	this.borderRightSize = borderRightSize;
	this.borderRadius = borderRadius;
	this.borderRadiusTopLeft = borderRadiusTopLeft;
	this.borderRadiusTopRight = borderRadiusTopRight;
	this.borderRadiusBottomLeft = borderRadiusBottomLeft;
	this.borderRadiusBottomRight = borderRadiusBottomRight;
	this.borderOpacity = borderOpacity;
	this.borderStyle = borderStyle;
	this.icon = icon;
	this.iconPosition = iconPosition;
	this.horizontalAlign = horizontalAlign;
	this.verticalAlign = verticalAlign;
	this.textAlign = textAlign;
	this.opacity = opacity;
	this.clip = clip;
	this.native = native;
	this.fontName = fontName;
	this.fontSize = fontSize;
	this.fontBold = fontBold;
	this.fontUnderline = fontUnderline;
	this.fontItalic = fontItalic;
	this.cursor = cursor;
	this.hidden = hidden;
	this.filter = filter;
	this.backdropFilter = backdropFilter;
	this.resource = resource;
	this.animationName = animationName;
	this.animationOptions = animationOptions;
	this.mode = mode;
	this.pointerEvents = pointerEvents;
	this.contentType = contentType;
	this.direction = direction;
	this.contentWidth = contentWidth;
	this.contentWidthPercent = contentWidthPercent;
	this.contentHeight = contentHeight;
	this.contentHeightPercent = contentHeightPercent;
	this.wordWrap = wordWrap;
	this.imageRendering = imageRendering;
	this.layout = layout;
	this.borderType = borderType;
	this.hasBorder = hasBorder;
	this.fullBorderSize = fullBorderSize;
};
$hxClasses["haxe.ui.styles.Style"] = haxe_ui_styles_Style;
haxe_ui_styles_Style.__name__ = "haxe.ui.styles.Style";
haxe_ui_styles_Style.prototype = {
	left: null
	,top: null
	,autoWidth: null
	,width: null
	,percentWidth: null
	,initialWidth: null
	,initialPercentWidth: null
	,minWidth: null
	,minPercentWidth: null
	,maxWidth: null
	,maxPercentWidth: null
	,autoHeight: null
	,height: null
	,percentHeight: null
	,initialHeight: null
	,initialPercentHeight: null
	,minHeight: null
	,minPercentHeight: null
	,maxHeight: null
	,maxPercentHeight: null
	,padding: null
	,set_padding: function(value) {
		this.paddingTop = value;
		this.paddingLeft = value;
		this.paddingRight = value;
		this.paddingBottom = value;
		return value;
	}
	,paddingTop: null
	,paddingLeft: null
	,paddingRight: null
	,paddingBottom: null
	,marginTop: null
	,marginLeft: null
	,marginRight: null
	,marginBottom: null
	,horizontalSpacing: null
	,verticalSpacing: null
	,color: null
	,backgroundColor: null
	,backgroundColorEnd: null
	,backgroundGradientStyle: null
	,backgroundOpacity: null
	,backgroundImage: null
	,backgroundImageRepeat: null
	,backgroundImageClipTop: null
	,backgroundImageClipLeft: null
	,backgroundImageClipBottom: null
	,backgroundImageClipRight: null
	,backgroundImageSliceTop: null
	,backgroundImageSliceLeft: null
	,backgroundImageSliceBottom: null
	,backgroundImageSliceRight: null
	,borderColor: null
	,borderTopColor: null
	,borderLeftColor: null
	,borderBottomColor: null
	,borderRightColor: null
	,borderSize: null
	,borderTopSize: null
	,borderLeftSize: null
	,borderBottomSize: null
	,borderRightSize: null
	,borderRadius: null
	,borderRadiusTopLeft: null
	,borderRadiusTopRight: null
	,borderRadiusBottomLeft: null
	,borderRadiusBottomRight: null
	,borderOpacity: null
	,borderStyle: null
	,icon: null
	,iconPosition: null
	,horizontalAlign: null
	,verticalAlign: null
	,textAlign: null
	,opacity: null
	,clip: null
	,native: null
	,fontName: null
	,fontSize: null
	,fontBold: null
	,fontUnderline: null
	,fontItalic: null
	,cursor: null
	,hidden: null
	,filter: null
	,backdropFilter: null
	,resource: null
	,animationName: null
	,animationOptions: null
	,mode: null
	,pointerEvents: null
	,contentType: null
	,direction: null
	,contentWidth: null
	,contentWidthPercent: null
	,contentHeight: null
	,contentHeightPercent: null
	,wordWrap: null
	,imageRendering: null
	,layout: null
	,borderType: null
	,get_borderType: function() {
		var t = haxe_ui_styles_StyleBorderType.Compound;
		if(this.borderLeftSize != null && this.borderLeftSize > 0 && this.borderLeftSize == this.borderRightSize && this.borderLeftSize == this.borderBottomSize && this.borderLeftSize == this.borderTopSize) {
			t = haxe_ui_styles_StyleBorderType.Full;
		} else if((this.borderLeftSize == null || this.borderLeftSize <= 0) && (this.borderRightSize == null || this.borderRightSize <= 0) && (this.borderBottomSize == null || this.borderRightSize <= 0) && (this.borderTopSize == null || this.borderTopSize <= 0)) {
			t = haxe_ui_styles_StyleBorderType.None;
		}
		return t;
	}
	,hasBorder: null
	,get_hasBorder: function() {
		return this.get_borderType() != haxe_ui_styles_StyleBorderType.None;
	}
	,fullBorderSize: null
	,get_fullBorderSize: function() {
		if(this.get_borderType() == haxe_ui_styles_StyleBorderType.Full) {
			return this.borderLeftSize;
		}
		return 0;
	}
	,mergeDirectives: function(map) {
		var h = map.h;
		var key_h = h;
		var key_keys = Object.keys(h);
		var key_length = key_keys.length;
		var key_current = 0;
		while(key_current < key_length) {
			var key = key_keys[key_current++];
			var v = map.h[key];
			switch(key) {
			case "animation-delay":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.delay = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-direction":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-duration":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.duration = haxe_ui_styles_ValueTools.time(v.value);
				break;
			case "animation-fill-mode":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.fillMode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-iteration-count":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				var _g = v.value;
				var tmp;
				if(_g._hx_index == 6) {
					var val = _g.v;
					tmp = val == "infinite" ? -1 : 0;
				} else {
					tmp = haxe_ui_styles_ValueTools.int(v.value);
				}
				this.animationOptions.iterationCount = tmp;
				break;
			case "animation-name":
				this.animationName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "animation-timing-function":
				if(this.animationOptions == null) {
					this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
				}
				this.animationOptions.easingFunction = haxe_ui_styles_ValueTools.calcEasing(v.value);
				break;
			case "backdrop-filter":
				var _g1 = v.value;
				switch(_g1._hx_index) {
				case 5:
					var f = _g1.f;
					var vl = _g1.vl;
					var arr = haxe_ui_styles_ValueTools.array(vl);
					arr.splice(0,0,f);
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter(arr)];
					break;
				case 6:
					var f1 = _g1.v;
					this.backdropFilter = [haxe_ui_filters_FilterParser.parseFilter([f1])];
					break;
				case 9:
					this.backdropFilter = null;
					break;
				default:
				}
				break;
			case "background-color":
				var _g2 = v.value;
				this.backgroundColor = haxe_ui_styles_ValueTools.int(v.value);
				if(Object.prototype.hasOwnProperty.call(map.h,"background-color-end")) {
					this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(map.h["background-color-end"].value);
				} else {
					this.backgroundColorEnd = null;
				}
				break;
			case "background-color-end":
				this.backgroundColorEnd = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "background-gradient-style":
				this.backgroundGradientStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image":
				this.backgroundImage = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-clip-bottom":
				this.backgroundImageClipBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-left":
				this.backgroundImageClipLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-right":
				this.backgroundImageClipRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-clip-top":
				this.backgroundImageClipTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-repeat":
				this.backgroundImageRepeat = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "background-image-slice-bottom":
				this.backgroundImageSliceBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-left":
				this.backgroundImageSliceLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-right":
				this.backgroundImageSliceRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-image-slice-top":
				this.backgroundImageSliceTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "background-opacity":
				this.backgroundOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-bottom-color":
				this.borderBottomColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-bottom-left-radius":
				this.borderRadiusBottomLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-right-radius":
				this.borderRadiusBottomRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-bottom-size":case "border-bottom-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderBottomSize = 0;
				} else {
					this.borderBottomSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-color":
				this.borderColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-color":
				this.borderLeftColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-left-size":case "border-left-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderLeftSize = 0;
				} else {
					this.borderLeftSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-opacity":
				this.borderOpacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "border-radius":
				this.borderRadius = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-right-color":
				this.borderRightColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-right-size":case "border-right-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderRightSize = 0;
				} else {
					this.borderRightSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "border-style":
				this.borderStyle = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "border-top-color":
				this.borderTopColor = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "border-top-left-radius":
				this.borderRadiusTopLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-right-radius":
				this.borderRadiusTopRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "border-top-size":case "border-top-width":
				if(v.value == haxe_ui_styles_Value.VNone) {
					this.borderTopSize = 0;
				} else {
					this.borderTopSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				}
				break;
			case "clip":
				this.clip = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "color":
				this.color = haxe_ui_styles_ValueTools.int(v.value);
				break;
			case "content-height":
				this.contentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentHeightPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "content-type":
				this.contentType = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "content-width":
				this.contentWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.contentWidthPercent = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "cursor":
				this.cursor = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "direction":
				this.direction = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "display":
				this.hidden = haxe_ui_styles_ValueTools.none(v.value);
				break;
			case "filter":
				var _g3 = v.value;
				switch(_g3._hx_index) {
				case 5:
					var f2 = _g3.f;
					var vl1 = _g3.vl;
					var arr1 = haxe_ui_styles_ValueTools.array(vl1);
					arr1.splice(0,0,f2);
					this.filter = [haxe_ui_filters_FilterParser.parseFilter(arr1)];
					break;
				case 6:
					var f3 = _g3.v;
					this.filter = [haxe_ui_filters_FilterParser.parseFilter([f3])];
					break;
				case 9:
					this.filter = null;
					break;
				default:
				}
				break;
			case "font-bold":
				this.fontBold = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-family":case "font-name":
				this.fontName = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "font-italic":
				this.fontItalic = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "font-size":
				this.fontSize = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "font-underline":
				this.fontUnderline = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "height":
				this.autoHeight = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.height = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "hidden":
				this.hidden = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "horizontal-align":
				this.horizontalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "horizontal-spacing":
				this.horizontalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "icon":
				if(v.value._hx_index == 9) {
					this.icon = null;
				} else {
					this.icon = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "icon-position":
				this.iconPosition = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "image-rendering":
				if(v.value._hx_index == 9) {
					this.imageRendering = null;
				} else {
					this.imageRendering = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "initial-height":
				this.initialHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "initial-width":
				this.initialWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.initialPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "layout":
				if(v.value._hx_index == 9) {
					this.layout = null;
				} else {
					this.layout = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "left":
				this.left = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-bottom":
				this.marginBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-left":
				this.marginLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-right":
				this.marginRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "margin-top":
				this.marginTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "max-height":
				this.maxHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "max-width":
				this.maxWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.maxPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-height":
				this.minHeight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentHeight = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "min-width":
				this.minWidth = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.minPercentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "mode":
				this.mode = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "native":
				this.native = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			case "opacity":
				this.opacity = haxe_ui_styles_ValueTools.float(v.value);
				break;
			case "padding-bottom":
				this.paddingBottom = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-left":
				this.paddingLeft = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-right":
				this.paddingRight = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "padding-top":
				this.paddingTop = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "pointer-events":
				if(v.value._hx_index == 9) {
					this.pointerEvents = "none";
				} else {
					this.pointerEvents = haxe_ui_styles_ValueTools.string(v.value);
				}
				break;
			case "resource":
				this.resource = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "text-align":
				this.textAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "top":
				this.top = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "vertical-align":
				this.verticalAlign = haxe_ui_styles_ValueTools.string(v.value);
				break;
			case "vertical-spacing":
				this.verticalSpacing = haxe_ui_styles_ValueTools.calcDimension(v.value);
				break;
			case "width":
				this.autoWidth = haxe_ui_styles_ValueTools.constant(v.value,"auto");
				this.width = haxe_ui_styles_ValueTools.calcDimension(v.value);
				this.percentWidth = haxe_ui_styles_ValueTools.percent(v.value);
				break;
			case "word-wrap":
				this.wordWrap = haxe_ui_styles_ValueTools.bool(v.value);
				break;
			}
		}
	}
	,apply: function(s) {
		if(s.cursor != null) {
			this.cursor = s.cursor;
		}
		if(s.hidden != null) {
			this.hidden = s.hidden;
		}
		if(s.left != null) {
			this.left = s.left;
		}
		if(s.top != null) {
			this.top = s.top;
		}
		if(s.autoWidth != null) {
			this.autoWidth = s.autoWidth;
		}
		if(s.autoHeight != null) {
			this.autoHeight = s.autoHeight;
		}
		if(s.verticalSpacing != null) {
			this.verticalSpacing = s.verticalSpacing;
		}
		if(s.horizontalSpacing != null) {
			this.horizontalSpacing = s.horizontalSpacing;
		}
		if(s.width != null) {
			this.width = s.width;
			this.autoWidth = false;
		}
		if(s.initialWidth != null) {
			this.initialWidth = s.initialWidth;
		}
		if(s.initialPercentWidth != null) {
			this.initialPercentWidth = s.initialPercentWidth;
		}
		if(s.minWidth != null) {
			this.minWidth = s.minWidth;
		}
		if(s.minPercentWidth != null) {
			this.minPercentWidth = s.minPercentWidth;
		}
		if(s.maxWidth != null) {
			this.maxWidth = s.maxWidth;
		}
		if(s.maxPercentWidth != null) {
			this.maxPercentWidth = s.maxPercentWidth;
		}
		if(s.height != null) {
			this.height = s.height;
			this.autoHeight = false;
		}
		if(s.initialHeight != null) {
			this.initialHeight = s.initialHeight;
		}
		if(s.initialPercentHeight != null) {
			this.initialPercentHeight = s.initialPercentHeight;
		}
		if(s.minHeight != null) {
			this.minHeight = s.minHeight;
		}
		if(s.minPercentHeight != null) {
			this.minPercentHeight = s.minPercentHeight;
		}
		if(s.maxHeight != null) {
			this.maxHeight = s.maxHeight;
		}
		if(s.maxPercentHeight != null) {
			this.maxPercentHeight = s.maxPercentHeight;
		}
		if(s.percentWidth != null) {
			this.percentWidth = s.percentWidth;
			this.autoWidth = false;
		}
		if(s.percentHeight != null) {
			this.percentHeight = s.percentHeight;
			this.autoHeight = false;
		}
		if(s.paddingTop != null) {
			this.paddingTop = s.paddingTop;
		}
		if(s.paddingLeft != null) {
			this.paddingLeft = s.paddingLeft;
		}
		if(s.paddingRight != null) {
			this.paddingRight = s.paddingRight;
		}
		if(s.paddingBottom != null) {
			this.paddingBottom = s.paddingBottom;
		}
		if(s.marginTop != null) {
			this.marginTop = s.marginTop;
		}
		if(s.marginLeft != null) {
			this.marginLeft = s.marginLeft;
		}
		if(s.marginRight != null) {
			this.marginRight = s.marginRight;
		}
		if(s.marginBottom != null) {
			this.marginBottom = s.marginBottom;
		}
		if(s.color != null) {
			this.color = s.color;
		}
		if(s.backgroundColor != null) {
			this.backgroundColor = s.backgroundColor;
			this.backgroundColorEnd = null;
		}
		if(s.backgroundColorEnd != null) {
			this.backgroundColorEnd = s.backgroundColorEnd;
		}
		if(s.backgroundGradientStyle != null) {
			this.backgroundGradientStyle = s.backgroundGradientStyle;
		}
		if(s.backgroundOpacity != null) {
			this.backgroundOpacity = s.backgroundOpacity;
		}
		if(s.backgroundImage != null) {
			this.backgroundImage = s.backgroundImage;
		}
		if(s.backgroundImageRepeat != null) {
			this.backgroundImageRepeat = s.backgroundImageRepeat;
		}
		if(s.backgroundImageClipTop != null) {
			this.backgroundImageClipTop = s.backgroundImageClipTop;
		}
		if(s.backgroundImageClipLeft != null) {
			this.backgroundImageClipLeft = s.backgroundImageClipLeft;
		}
		if(s.backgroundImageClipBottom != null) {
			this.backgroundImageClipBottom = s.backgroundImageClipBottom;
		}
		if(s.backgroundImageClipRight != null) {
			this.backgroundImageClipRight = s.backgroundImageClipRight;
		}
		if(s.backgroundImageSliceTop != null) {
			this.backgroundImageSliceTop = s.backgroundImageSliceTop;
		}
		if(s.backgroundImageSliceLeft != null) {
			this.backgroundImageSliceLeft = s.backgroundImageSliceLeft;
		}
		if(s.backgroundImageSliceBottom != null) {
			this.backgroundImageSliceBottom = s.backgroundImageSliceBottom;
		}
		if(s.backgroundImageSliceRight != null) {
			this.backgroundImageSliceRight = s.backgroundImageSliceRight;
		}
		if(s.borderColor != null) {
			this.borderColor = s.borderColor;
		}
		if(s.borderTopColor != null) {
			this.borderTopColor = s.borderTopColor;
		}
		if(s.borderLeftColor != null) {
			this.borderLeftColor = s.borderLeftColor;
		}
		if(s.borderBottomColor != null) {
			this.borderBottomColor = s.borderBottomColor;
		}
		if(s.borderRightColor != null) {
			this.borderRightColor = s.borderRightColor;
		}
		if(s.borderSize != null) {
			this.borderSize = s.borderSize;
		}
		if(s.borderTopSize != null) {
			this.borderTopSize = s.borderTopSize;
		}
		if(s.borderLeftSize != null) {
			this.borderLeftSize = s.borderLeftSize;
		}
		if(s.borderBottomSize != null) {
			this.borderBottomSize = s.borderBottomSize;
		}
		if(s.borderRightSize != null) {
			this.borderRightSize = s.borderRightSize;
		}
		if(s.borderRadius != null) {
			this.borderRadius = s.borderRadius;
		}
		if(s.borderRadiusTopLeft != null) {
			this.borderRadiusTopLeft = s.borderRadiusTopLeft;
		}
		if(s.borderRadiusTopRight != null) {
			this.borderRadiusTopRight = s.borderRadiusTopRight;
		}
		if(s.borderRadiusBottomLeft != null) {
			this.borderRadiusBottomLeft = s.borderRadiusBottomLeft;
		}
		if(s.borderRadiusBottomRight != null) {
			this.borderRadiusBottomRight = s.borderRadiusBottomRight;
		}
		if(s.borderOpacity != null) {
			this.borderOpacity = s.borderOpacity;
		}
		if(s.borderStyle != null) {
			this.borderStyle = s.borderStyle;
		}
		if(s.filter != null) {
			this.filter = s.filter.slice();
		}
		if(s.backdropFilter != null) {
			this.backdropFilter = s.backdropFilter.slice();
		}
		if(s.resource != null) {
			this.resource = s.resource;
		}
		if(s.icon != null) {
			this.icon = s.icon;
		}
		if(s.iconPosition != null) {
			this.iconPosition = s.iconPosition;
		}
		if(s.horizontalAlign != null) {
			this.horizontalAlign = s.horizontalAlign;
		}
		if(s.verticalAlign != null) {
			this.verticalAlign = s.verticalAlign;
		}
		if(s.textAlign != null) {
			this.textAlign = s.textAlign;
		}
		if(s.opacity != null) {
			this.opacity = s.opacity;
		}
		if(s.clip != null) {
			this.clip = s.clip;
		}
		if(s.native != null) {
			this.native = s.native;
		}
		if(s.fontName != null) {
			this.fontName = s.fontName;
		}
		if(s.fontSize != null) {
			this.fontSize = s.fontSize;
		}
		if(s.fontBold != null) {
			this.fontBold = s.fontBold;
		}
		if(s.fontUnderline != null) {
			this.fontUnderline = s.fontUnderline;
		}
		if(s.fontItalic != null) {
			this.fontItalic = s.fontItalic;
		}
		if(s.animationName != null) {
			this.animationName = s.animationName;
		}
		if(s.animationOptions != null) {
			if(this.animationOptions == null) {
				this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
			}
			if(s.animationOptions.duration != null) {
				this.animationOptions.duration = s.animationOptions.duration;
			}
			if(s.animationOptions.delay != null) {
				this.animationOptions.delay = s.animationOptions.delay;
			}
			if(s.animationOptions.iterationCount != null) {
				this.animationOptions.iterationCount = s.animationOptions.iterationCount;
			}
			if(s.animationOptions.easingFunction != null) {
				this.animationOptions.easingFunction = s.animationOptions.easingFunction;
			}
			if(s.animationOptions.direction != null) {
				this.animationOptions.direction = s.animationOptions.direction;
			}
			if(s.animationOptions.fillMode != null) {
				this.animationOptions.fillMode = s.animationOptions.fillMode;
			}
		}
		if(s.mode != null) {
			this.mode = s.mode;
		}
		if(s.pointerEvents != null) {
			this.pointerEvents = s.pointerEvents;
		}
		if(s.contentType != null) {
			this.contentType = s.contentType;
		}
		if(s.direction != null) {
			this.direction = s.direction;
		}
		if(s.contentWidth != null) {
			this.contentWidth = s.contentWidth;
		}
		if(s.contentWidthPercent != null) {
			this.contentWidthPercent = s.contentWidthPercent;
		}
		if(s.contentHeight != null) {
			this.contentHeight = s.contentHeight;
		}
		if(s.contentHeightPercent != null) {
			this.contentHeightPercent = s.contentHeightPercent;
		}
		if(s.wordWrap != null) {
			this.wordWrap = s.wordWrap;
		}
		if(s.imageRendering != null) {
			this.imageRendering = s.imageRendering;
		}
		if(s.layout != null) {
			this.layout = s.layout;
		}
	}
	,equalTo: function(s) {
		if(s.backgroundColor != this.backgroundColor) {
			return false;
		}
		if(s.backgroundColorEnd != this.backgroundColorEnd) {
			return false;
		}
		if(s.backgroundGradientStyle != this.backgroundGradientStyle) {
			return false;
		}
		if(s.backgroundOpacity != this.backgroundOpacity) {
			return false;
		}
		if(s.borderColor != this.borderColor) {
			return false;
		}
		if(s.borderTopColor != this.borderTopColor) {
			return false;
		}
		if(s.borderLeftColor != this.borderLeftColor) {
			return false;
		}
		if(s.borderBottomColor != this.borderBottomColor) {
			return false;
		}
		if(s.borderRightColor != this.borderRightColor) {
			return false;
		}
		if(s.borderSize != this.borderSize) {
			return false;
		}
		if(s.borderTopSize != this.borderTopSize) {
			return false;
		}
		if(s.borderLeftSize != this.borderLeftSize) {
			return false;
		}
		if(s.borderBottomSize != this.borderBottomSize) {
			return false;
		}
		if(s.borderRightSize != this.borderRightSize) {
			return false;
		}
		if(s.borderRadius != this.borderRadius) {
			return false;
		}
		if(s.borderRadiusTopLeft != this.borderRadiusTopLeft) {
			return false;
		}
		if(s.borderRadiusTopRight != this.borderRadiusTopRight) {
			return false;
		}
		if(s.borderRadiusBottomLeft != this.borderRadiusBottomLeft) {
			return false;
		}
		if(s.borderRadiusBottomRight != this.borderRadiusBottomRight) {
			return false;
		}
		if(s.borderOpacity != this.borderOpacity) {
			return false;
		}
		if(s.borderStyle != this.borderStyle) {
			return false;
		}
		if(s.color != this.color) {
			return false;
		}
		if(s.cursor != this.cursor) {
			return false;
		}
		if(s.hidden != this.hidden) {
			return false;
		}
		if(s.left != this.left) {
			return false;
		}
		if(s.top != this.top) {
			return false;
		}
		if(s.autoWidth != this.autoWidth) {
			return false;
		}
		if(s.autoHeight != this.autoHeight) {
			return false;
		}
		if(s.verticalSpacing != this.verticalSpacing) {
			return false;
		}
		if(s.horizontalSpacing != this.horizontalSpacing) {
			return false;
		}
		if(s.width != this.width) {
			return false;
		}
		if(s.initialWidth != this.initialWidth) {
			return false;
		}
		if(s.initialPercentWidth != this.initialPercentWidth) {
			return false;
		}
		if(s.minWidth != this.minWidth) {
			return false;
		}
		if(s.minPercentWidth != this.minPercentWidth) {
			return false;
		}
		if(s.maxWidth != this.maxWidth) {
			return false;
		}
		if(s.maxPercentWidth != this.maxPercentWidth) {
			return false;
		}
		if(s.height != this.height) {
			return false;
		}
		if(s.initialHeight != this.initialHeight) {
			return false;
		}
		if(s.initialPercentHeight != this.initialPercentHeight) {
			return false;
		}
		if(s.minHeight != this.minHeight) {
			return false;
		}
		if(s.minPercentHeight != this.minPercentHeight) {
			return false;
		}
		if(s.maxHeight != this.maxHeight) {
			return false;
		}
		if(s.maxPercentHeight != this.maxPercentHeight) {
			return false;
		}
		if(s.percentWidth != this.percentWidth) {
			return false;
		}
		if(s.percentHeight != this.percentHeight) {
			return false;
		}
		if(s.paddingTop != this.paddingTop) {
			return false;
		}
		if(s.paddingLeft != this.paddingLeft) {
			return false;
		}
		if(s.paddingRight != this.paddingRight) {
			return false;
		}
		if(s.paddingBottom != this.paddingBottom) {
			return false;
		}
		if(s.marginTop != this.marginTop) {
			return false;
		}
		if(s.marginLeft != this.marginLeft) {
			return false;
		}
		if(s.marginRight != this.marginRight) {
			return false;
		}
		if(s.marginBottom != this.marginBottom) {
			return false;
		}
		if(s.backgroundImage != this.backgroundImage) {
			return false;
		}
		if(s.backgroundImageRepeat != this.backgroundImageRepeat) {
			return false;
		}
		if(s.backgroundImageClipTop != this.backgroundImageClipTop) {
			return false;
		}
		if(s.backgroundImageClipLeft != this.backgroundImageClipLeft) {
			return false;
		}
		if(s.backgroundImageClipBottom != this.backgroundImageClipBottom) {
			return false;
		}
		if(s.backgroundImageClipRight != this.backgroundImageClipRight) {
			return false;
		}
		if(s.backgroundImageSliceTop != this.backgroundImageSliceTop) {
			return false;
		}
		if(s.backgroundImageSliceLeft != this.backgroundImageSliceLeft) {
			return false;
		}
		if(s.backgroundImageSliceBottom != this.backgroundImageSliceBottom) {
			return false;
		}
		if(s.backgroundImageSliceRight != this.backgroundImageSliceRight) {
			return false;
		}
		if(s.filter != this.filter) {
			return false;
		}
		if(s.backdropFilter != this.backdropFilter) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.icon != this.icon) {
			return false;
		}
		if(s.iconPosition != this.iconPosition) {
			return false;
		}
		if(s.horizontalAlign != this.horizontalAlign) {
			return false;
		}
		if(s.verticalAlign != this.verticalAlign) {
			return false;
		}
		if(s.textAlign != this.textAlign) {
			return false;
		}
		if(s.opacity != this.opacity) {
			return false;
		}
		if(s.clip != this.clip) {
			return false;
		}
		if(s.native != this.native) {
			return false;
		}
		if(s.fontName != this.fontName) {
			return false;
		}
		if(s.fontSize != this.fontSize) {
			return false;
		}
		if(s.fontBold != this.fontBold) {
			return false;
		}
		if(s.fontUnderline != this.fontUnderline) {
			return false;
		}
		if(s.fontItalic != this.fontItalic) {
			return false;
		}
		if(s.resource != this.resource) {
			return false;
		}
		if(s.animationName != this.animationName) {
			return false;
		}
		if(this.animationOptions != null && this.animationOptions.compareTo(s.animationOptions) == false) {
			return false;
		}
		if(s.mode != this.mode) {
			return false;
		}
		if(s.pointerEvents != this.pointerEvents) {
			return false;
		}
		if(s.contentType != this.contentType) {
			return false;
		}
		if(s.direction != this.direction) {
			return false;
		}
		if(s.contentWidth != this.contentWidth) {
			return false;
		}
		if(s.contentWidthPercent != this.contentWidthPercent) {
			return false;
		}
		if(s.contentHeight != this.contentHeight) {
			return false;
		}
		if(s.contentHeightPercent != this.contentHeightPercent) {
			return false;
		}
		if(s.wordWrap != this.wordWrap) {
			return false;
		}
		if(s.imageRendering != this.imageRendering) {
			return false;
		}
		if(s.layout != this.layout) {
			return false;
		}
		return true;
	}
	,createAnimationOptions: function() {
		if(this.animationOptions == null) {
			this.animationOptions = new haxe_ui_styles_animation_AnimationOptions(null,null,null,null,null,null);
		}
	}
	,clone: function() {
		var c = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		c.apply(this);
		return c;
	}
	,__class__: haxe_ui_styles_Style
	,__properties__: {get_fullBorderSize:"get_fullBorderSize",get_hasBorder:"get_hasBorder",get_borderType:"get_borderType",set_padding:"set_padding"}
};
var haxe_ui_styles_StyleSheet = function() {
	this._animations = new haxe_ds_StringMap();
	this._mediaQueries = [];
	this._rules = [];
	this._imports = [];
};
$hxClasses["haxe.ui.styles.StyleSheet"] = haxe_ui_styles_StyleSheet;
haxe_ui_styles_StyleSheet.__name__ = "haxe.ui.styles.StyleSheet";
haxe_ui_styles_StyleSheet.prototype = {
	name: null
	,_imports: null
	,_rules: null
	,_mediaQueries: null
	,_animations: null
	,get_animations: function() {
		return this._animations;
	}
	,addImport: function(el) {
		this._imports.push(el);
	}
	,imports: null
	,get_imports: function() {
		return this._imports;
	}
	,rules: null
	,get_rules: function() {
		var r = this._rules.slice();
		var _g = 0;
		var _g1 = this._mediaQueries;
		while(_g < _g1.length) {
			var mq = _g1[_g];
			++_g;
			if(mq.get_relevant()) {
				r = r.concat(mq.get_styleSheet().get_rules());
			}
		}
		return r;
	}
	,hasMediaQueries: null
	,get_hasMediaQueries: function() {
		return this._mediaQueries.length > 0;
	}
	,findRule: function(selector) {
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				return r;
			}
		}
		return null;
	}
	,findMatchingRules: function(selector) {
		var m = [];
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(r.selector.toString() == selector) {
				m.push(r);
			}
		}
		return m;
	}
	,removeRule: function(selector) {
		var r = this.findRule(selector);
		if(r != null) {
			HxOverrides.remove(this._rules,r);
		}
	}
	,removeAllRules: function() {
		this._rules = [];
	}
	,clear: function() {
		this.removeAllRules();
		this._imports = [];
		this._mediaQueries = [];
		this._animations = new haxe_ds_StringMap();
	}
	,addRule: function(el) {
		this._rules.push(el);
	}
	,addMediaQuery: function(el) {
		this._mediaQueries.push(el);
	}
	,addAnimation: function(el) {
		this._animations.h[el.id] = el;
	}
	,parse: function(css) {
		var parser = new haxe_ui_styles_Parser();
		var ss = parser.parse(css);
		var f = new haxe_ui_styles_StyleSheet();
		var _g = 0;
		var _g1 = ss.get_imports();
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var importCss = haxe_ui_ToolkitAssets.get_instance().getText(i.url);
			var importStyleSheet = new haxe_ui_styles_Parser().parse(importCss);
			f.merge(importStyleSheet);
		}
		f.merge(ss);
		this.merge(f);
	}
	,merge: function(styleSheet) {
		this._imports = this._imports.concat(styleSheet._imports);
		this._rules = this._rules.concat(styleSheet._rules);
		this._mediaQueries = this._mediaQueries.concat(styleSheet._mediaQueries);
		var h = styleSheet._animations.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this._animations.h[k] = styleSheet._animations.h[k];
		}
	}
	,buildStyleFor: function(c,style) {
		if(style == null) {
			style = new haxe_ui_styles_Style(null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null);
		}
		var _g = 0;
		var _g1 = this.get_rules();
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(!r.match(c)) {
				continue;
			}
			style.mergeDirectives(r.directives);
		}
		return style;
	}
	,__class__: haxe_ui_styles_StyleSheet
	,__properties__: {get_hasMediaQueries:"get_hasMediaQueries",get_rules:"get_rules",get_imports:"get_imports",get_animations:"get_animations"}
};
var haxe_ui_styles_Value = $hxEnums["haxe.ui.styles.Value"] = { __ename__:true,__constructs__:null
	,VString: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VString",$_.__params__ = ["v"],$_)
	,VNumber: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VNumber",$_.__params__ = ["v"],$_)
	,VBool: ($_=function(v) { return {_hx_index:2,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VBool",$_.__params__ = ["v"],$_)
	,VDimension: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VDimension",$_.__params__ = ["v"],$_)
	,VColor: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VColor",$_.__params__ = ["v"],$_)
	,VCall: ($_=function(f,vl) { return {_hx_index:5,f:f,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VCall",$_.__params__ = ["f","vl"],$_)
	,VConstant: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VConstant",$_.__params__ = ["v"],$_)
	,VComposite: ($_=function(vl) { return {_hx_index:7,vl:vl,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VComposite",$_.__params__ = ["vl"],$_)
	,VTime: ($_=function(v,unit) { return {_hx_index:8,v:v,unit:unit,__enum__:"haxe.ui.styles.Value",toString:$estr}; },$_._hx_name="VTime",$_.__params__ = ["v","unit"],$_)
	,VNone: {_hx_name:"VNone",_hx_index:9,__enum__:"haxe.ui.styles.Value",toString:$estr}
};
haxe_ui_styles_Value.__constructs__ = [haxe_ui_styles_Value.VString,haxe_ui_styles_Value.VNumber,haxe_ui_styles_Value.VBool,haxe_ui_styles_Value.VDimension,haxe_ui_styles_Value.VColor,haxe_ui_styles_Value.VCall,haxe_ui_styles_Value.VConstant,haxe_ui_styles_Value.VComposite,haxe_ui_styles_Value.VTime,haxe_ui_styles_Value.VNone];
var haxe_ui_styles_ValueTools = function() { };
$hxClasses["haxe.ui.styles.ValueTools"] = haxe_ui_styles_ValueTools;
haxe_ui_styles_ValueTools.__name__ = "haxe.ui.styles.ValueTools";
haxe_ui_styles_ValueTools.parse = function(s) {
	var v = null;
	var hasSpace = s.indexOf(" ") != -1;
	if(StringTools.endsWith(s,"%") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PERCENT(parseFloat(s)));
	} else if(StringTools.endsWith(s,"px") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.PX(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vw") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VW(parseFloat(s)));
	} else if(StringTools.endsWith(s,"vh") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.VH(parseFloat(s)));
	} else if(StringTools.endsWith(s,"rem") == true && hasSpace == false) {
		v = haxe_ui_styles_Value.VDimension(haxe_ui_styles_Dimension.REM(parseFloat(s)));
	} else if(haxe_ui_styles_ValueTools.validColor(s)) {
		v = haxe_ui_styles_ValueTools.parseColor(s);
	} else if(s == "none") {
		v = haxe_ui_styles_Value.VNone;
	} else if(s.indexOf("(") != -1 && StringTools.endsWith(s,")")) {
		var n = s.indexOf("(");
		var f = HxOverrides.substr(s,0,n);
		var params = HxOverrides.substr(s,n + 1,s.length - n - 2);
		if(f == "calc") {
			params = "'" + params + "'";
		}
		var vl = [];
		var _g = 0;
		var _g1 = params.split(",");
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			p = StringTools.trim(p);
			vl.push(haxe_ui_styles_ValueTools.parse(p));
		}
		v = haxe_ui_styles_Value.VCall(f,vl);
	} else if(StringTools.startsWith(s,"\"") && StringTools.endsWith(s,"\"")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(StringTools.startsWith(s,"'") && StringTools.endsWith(s,"'")) {
		v = haxe_ui_styles_Value.VString(HxOverrides.substr(s,1,s.length - 2));
	} else if(haxe_ui_styles_ValueTools.isNum(s) == true) {
		v = haxe_ui_styles_Value.VNumber(parseFloat(s));
	} else if(s == "true" || s == "false") {
		v = haxe_ui_styles_Value.VBool(s == "true");
	} else if(haxe_ui_styles_ValueTools.timeEReg.match(s)) {
		v = haxe_ui_styles_Value.VTime(parseFloat(haxe_ui_styles_ValueTools.timeEReg.matched(1)),haxe_ui_styles_ValueTools.timeEReg.matched(2));
	} else {
		var arr = s.split(" ");
		if(arr.length == 1) {
			v = haxe_ui_styles_Value.VConstant(s);
		} else {
			var vl = [];
			var _g = 0;
			while(_g < arr.length) {
				var a = arr[_g];
				++_g;
				a = StringTools.trim(a);
				vl.push(haxe_ui_styles_ValueTools.parse(a));
			}
			v = haxe_ui_styles_Value.VComposite(vl);
		}
	}
	return v;
};
haxe_ui_styles_ValueTools.compositeParts = function(value) {
	if(value == null) {
		return 0;
	}
	if(value._hx_index == 7) {
		var vl = value.vl;
		return vl.length;
	} else {
		return 0;
	}
};
haxe_ui_styles_ValueTools.composite = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var _g = value.v;
		return [value];
	case 3:
		var _g = value.v;
		return [value];
	case 7:
		var vl = value.vl;
		return vl;
	case 9:
		return [];
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.isNum = function(s) {
	var b = true;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var c = HxOverrides.cca(s,i);
		if(!(c >= 48 && c <= 57 || c == 46 || c == 45)) {
			b = false;
			break;
		}
	}
	return b;
};
haxe_ui_styles_ValueTools.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1);
		if(s.length == 6) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s));
		} else if(s.length == 3) {
			return haxe_ui_styles_Value.VColor(Std.parseInt("0x" + s.charAt(0) + s.charAt(0) + s.charAt(1) + s.charAt(1) + s.charAt(2) + s.charAt(2)));
		}
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return haxe_ui_styles_Value.VColor(haxe_ui_styles_ValueTools.colors.h[s]);
	}
	return null;
};
haxe_ui_styles_ValueTools.validColor = function(s) {
	if(StringTools.startsWith(s,"#") && (s.length == 7 || s.length == 4)) {
		return true;
	} else if(Object.prototype.hasOwnProperty.call(haxe_ui_styles_ValueTools.colors.h,s)) {
		return true;
	}
	return false;
};
haxe_ui_styles_ValueTools.time = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 8) {
		var v = value.v;
		var unit = value.unit;
		switch(unit) {
		case "ms":
			return v / 1000;
		case "s":
			return v;
		default:
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.string = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		return v;
	case 2:
		var v = value.v;
		if(v == null) {
			return "null";
		} else {
			return "" + v;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 6:
		var v = value.v;
		return v;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.bool = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 2) {
		var v = value.v;
		return v;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.none = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 9) {
		return true;
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.int = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v | 0;
	case 4:
		var v = value.v;
		return v;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.float = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 4:
		var v = value.v;
		return v;
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.any = function(v) {
	if(v == null) {
		return null;
	}
	switch(v._hx_index) {
	case 1:
		var v1 = v.v;
		return v1;
	case 2:
		var v1 = v.v;
		return v1;
	case 3:
		var _g = v.v;
		if(_g._hx_index == 1) {
			var v1 = _g.value;
			return v1;
		} else {
			return null;
		}
		break;
	case 4:
		var v1 = v.v;
		return v1;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.array = function(vl) {
	var arr = [];
	var _g = 0;
	while(_g < vl.length) {
		var v = vl[_g];
		++_g;
		var a = haxe_ui_styles_ValueTools.any(v);
		if(a != null) {
			arr.push(a);
		}
	}
	return arr;
};
haxe_ui_styles_ValueTools.percent = function(value) {
	if(value == null) {
		return null;
	}
	if(value._hx_index == 3) {
		var v = value.v;
		if(v._hx_index == 0) {
			var d = v.value;
			return d;
		} else {
			return null;
		}
	} else {
		return null;
	}
};
haxe_ui_styles_ValueTools.constant = function(value,required) {
	if(value == null) {
		return false;
	}
	if(value._hx_index == 6) {
		var v = value.v;
		return v == required;
	} else {
		return false;
	}
};
haxe_ui_styles_ValueTools.calcDimension = function(value) {
	if(value == null) {
		return null;
	}
	switch(value._hx_index) {
	case 1:
		var v = value.v;
		return v;
	case 3:
		var v = value.v;
		switch(v._hx_index) {
		case 1:
			var d = v.value;
			return d;
		case 2:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_width();
		case 3:
			var d = v.value;
			return d / 100 * haxe_ui_core_Screen.get_instance().get_height();
		case 4:
			var d = v.value;
			return d * haxe_ui_Toolkit.pixelsPerRem;
		default:
			return null;
		}
		break;
	case 5:
		var f = value.f;
		var vl = value.vl;
		return haxe_ui_styles_ValueTools.call(f,vl);
	case 9:
		return null;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.calcEasing = function(value) {
	switch(value._hx_index) {
	case 0:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	case 6:
		var v = value.v;
		switch(v) {
		case "ease":
			return haxe_ui_styles_EasingFunction.EASE;
		case "ease-in":
			return haxe_ui_styles_EasingFunction.EASE_IN;
		case "ease-in-out":
			return haxe_ui_styles_EasingFunction.EASE_IN_OUT;
		case "ease-out":
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case "linear":
			return haxe_ui_styles_EasingFunction.LINEAR;
		default:
			return null;
		}
		break;
	default:
		return null;
	}
};
haxe_ui_styles_ValueTools.call = function(f,vl) {
	switch(f) {
	case "calc":
		return null;
	case "platform-color":
		return haxe_ui_core_Platform.get_instance().getColor(haxe_ui_styles_ValueTools.string(vl[0]));
	case "rgb":
		return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents(haxe_ui_styles_ValueTools.int(vl[0]),haxe_ui_styles_ValueTools.int(vl[1]),haxe_ui_styles_ValueTools.int(vl[2]),0));
	case "theme-icon":case "theme-image":
		return haxe_ui_themes_ThemeManager.get_instance().image(haxe_ui_styles_ValueTools.string(vl[0]));
	default:
		return null;
	}
};
var haxe_ui_styles_animation_AnimationOptions = function(duration,delay,iterationCount,easingFunction,direction,fillMode) {
	this.duration = duration;
	this.delay = delay;
	this.iterationCount = iterationCount;
	this.easingFunction = easingFunction;
	this.direction = direction;
	this.fillMode = fillMode;
};
$hxClasses["haxe.ui.styles.animation.AnimationOptions"] = haxe_ui_styles_animation_AnimationOptions;
haxe_ui_styles_animation_AnimationOptions.__name__ = "haxe.ui.styles.animation.AnimationOptions";
haxe_ui_styles_animation_AnimationOptions.prototype = {
	duration: null
	,delay: null
	,iterationCount: null
	,easingFunction: null
	,direction: null
	,fillMode: null
	,compareTo: function(op) {
		if(op != null && op.duration == this.duration && op.delay == this.delay && op.iterationCount == this.iterationCount && op.easingFunction == this.easingFunction && op.direction == this.direction) {
			return op.fillMode == this.fillMode;
		} else {
			return false;
		}
	}
	,compareToAnimation: function(anim) {
		if((this.duration == null && anim.duration == 0 || this.duration != null && anim.duration == this.duration) && (this.delay == null && anim.delay == 0 || this.delay != null && anim.delay == this.delay) && (this.iterationCount == null && anim.iterationCount == 1 || this.iterationCount != null && anim.iterationCount == this.iterationCount) && (this.easingFunction == null && anim.easingFunction == haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION || this.easingFunction != null && anim.easingFunction == this.easingFunction) && (this.direction == null && anim.direction == "normal" || this.direction != null && anim.direction == this.direction)) {
			if(!(this.fillMode == null && anim.fillMode == "forwards")) {
				if(this.fillMode != null) {
					return anim.fillMode == this.fillMode;
				} else {
					return false;
				}
			} else {
				return true;
			}
		} else {
			return false;
		}
	}
	,__class__: haxe_ui_styles_animation_AnimationOptions
};
var haxe_ui_styles_animation_Animation = function(target,options) {
	this._initialized = false;
	this._currentIterationCount = -1;
	this._currentKeyFrameIndex = -1;
	this.iterationCount = 1;
	this.fillMode = "forwards";
	this.easingFunction = haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION;
	this.duration = 0;
	this.direction = "normal";
	this.delay = 0;
	this.target = target;
	if(options != null) {
		if(options.duration != null) {
			this.duration = options.duration;
		}
		if(options.easingFunction != null) {
			this.easingFunction = options.easingFunction;
		}
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.iterationCount != null) {
			this.iterationCount = options.iterationCount;
		}
		if(options.direction != null) {
			this.direction = options.direction;
		}
		if(options.fillMode != null) {
			this.fillMode = options.fillMode;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.Animation"] = haxe_ui_styles_animation_Animation;
haxe_ui_styles_animation_Animation.__name__ = "haxe.ui.styles.animation.Animation";
haxe_ui_styles_animation_Animation.createWithKeyFrames = function(animationKeyFrames,target,options) {
	var animation = new haxe_ui_styles_animation_Animation(target,options);
	animation.name = animationKeyFrames.id;
	if(animation._keyframes == null) {
		animation._keyframes = [];
	}
	var _g = 0;
	var _g1 = animationKeyFrames.get_keyFrames();
	while(_g < _g1.length) {
		var keyFrame = _g1[_g];
		++_g;
		var kf = new haxe_ui_styles_animation_KeyFrame();
		var _g2 = keyFrame.time;
		if(_g2._hx_index == 3) {
			var v = _g2.v;
			if(v._hx_index == 0) {
				var p = v.value;
				kf.time = p / 100;
				kf.easingFunction = animation.easingFunction;
				kf.directives = keyFrame.directives;
				animation._keyframes.push(kf);
			}
		}
	}
	return animation;
};
haxe_ui_styles_animation_Animation.prototype = {
	delay: null
	,direction: null
	,duration: null
	,easingFunction: null
	,fillMode: null
	,iterationCount: null
	,name: null
	,running: null
	,target: null
	,run: function(onFinish) {
		if(this.get_keyframeCount() == 0 || this.running) {
			return;
		}
		if(!this._initialized) {
			this._initialize();
		}
		this._currentKeyFrameIndex = -1;
		this._currentIterationCount = 0;
		this.running = true;
		this._saveState();
		this._runNextKeyframe(onFinish);
	}
	,stop: function() {
		if(this.running == false) {
			return;
		}
		this.running = false;
		var currentKF = this.get_currentKeyFrame();
		if(currentKF != null) {
			currentKF.stop();
			this._currentKeyFrameIndex = -1;
		}
		this._keyframes = null;
		this._restoreState();
	}
	,_currentKeyFrameIndex: null
	,_currentIterationCount: null
	,_initialState: null
	,_initialized: null
	,_keyframes: null
	,get_keyframeCount: function() {
		if(this._keyframes == null) {
			return 0;
		} else {
			return this._keyframes.length;
		}
	}
	,get_currentKeyFrame: function() {
		if(this._currentKeyFrameIndex >= 0) {
			return this._keyframes[this._currentKeyFrameIndex];
		} else {
			return null;
		}
	}
	,_initialize: function() {
		switch(this.direction) {
		case "alternate":
			this._addAlternateKeyframes();
			break;
		case "alternate-reverse":
			this._reverseCurrentKeyframes();
			this._addAlternateKeyframes();
			break;
		case "normal":
			break;
		case "reverse":
			this._reverseCurrentKeyframes();
			break;
		}
		var currentTime = 0;
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			switch(this.direction) {
			case "alternate-reverse":case "reverse":
				keyframe.time = 1 - keyframe.time;
				break;
			case "alternate":case "normal":
				break;
			}
			keyframe.time = this.duration * keyframe.time - currentTime;
			currentTime += keyframe.time;
		}
		if(this.delay > 0) {
			var keyframe = new haxe_ui_styles_animation_KeyFrame();
			keyframe.time = this.delay;
			keyframe.easingFunction = this.easingFunction;
			this._keyframes.unshift(keyframe);
		} else if(this.delay < 0) {
			currentTime = 0;
			var lastKeyframe = null;
			while(this._keyframes.length > 0) {
				var keyframe = this._keyframes[0];
				currentTime -= keyframe.time;
				if(currentTime >= this.delay) {
					lastKeyframe = keyframe;
					this._keyframes.splice(0,1);
				} else {
					keyframe.delay = -(currentTime - this.delay + keyframe.time);
					if(lastKeyframe != null) {
						lastKeyframe.time = 0;
						this._keyframes.unshift(lastKeyframe);
					}
					break;
				}
			}
		}
		this._initialized = true;
	}
	,_runNextKeyframe: function(onFinish) {
		if(this.running == false) {
			return;
		}
		if(++this._currentKeyFrameIndex >= this._keyframes.length) {
			this._currentKeyFrameIndex = -1;
			this._restoreState();
			if(this.iterationCount == -1 || ++this._currentIterationCount < this.iterationCount) {
				this._saveState();
				this._runNextKeyframe(onFinish);
			} else {
				this.running = false;
				if(onFinish != null) {
					onFinish();
				}
			}
			return;
		} else {
			var _g = $bind(this,this._runNextKeyframe);
			var onFinish1 = onFinish;
			var tmp = function() {
				_g(onFinish1);
			};
			this.get_currentKeyFrame().run(this.target,tmp);
		}
	}
	,_addAlternateKeyframes: function() {
		var i = this._keyframes.length;
		while(--i >= 0) {
			var keyframe = this._keyframes[i];
			var newKeyframe = new haxe_ui_styles_animation_KeyFrame();
			newKeyframe.time = 1 - keyframe.time;
			newKeyframe.easingFunction = this._getReverseEasingFunction(keyframe.easingFunction);
			newKeyframe.directives = keyframe.directives;
			this._keyframes.push(newKeyframe);
		}
	}
	,_reverseCurrentKeyframes: function() {
		this._keyframes.reverse();
		var func = this._getReverseEasingFunction(this.easingFunction);
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			keyframe.easingFunction = func;
		}
	}
	,_getReverseEasingFunction: function(easingFunction) {
		switch(easingFunction._hx_index) {
		case 2:
			return haxe_ui_styles_EasingFunction.EASE_OUT;
		case 3:
			return haxe_ui_styles_EasingFunction.EASE_IN;
		default:
			return easingFunction;
		}
	}
	,_saveState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState == null) {
			this._initialState = new haxe_ds_StringMap();
		}
		var _g = 0;
		var _g1 = this._keyframes;
		while(_g < _g1.length) {
			var keyframe = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g3 = keyframe.directives;
			while(_g2 < _g3.length) {
				var directive = _g3[_g2];
				++_g2;
				var property = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(directive.directive);
				if(!Object.prototype.hasOwnProperty.call(this._initialState.h,property)) {
					var this1 = this._initialState;
					var value = Reflect.getProperty(this.target,property);
					this1.h[property] = value;
				}
			}
		}
	}
	,_restoreState: function() {
		if(!this._shouldRestoreState()) {
			return;
		}
		if(this._initialState != null) {
			var h = this._initialState.h;
			var property_h = h;
			var property_keys = Object.keys(h);
			var property_length = property_keys.length;
			var property_current = 0;
			while(property_current < property_length) {
				var property = property_keys[property_current++];
				Reflect.setProperty(this.target,property,this._initialState.h[property]);
			}
			this._initialState = null;
		}
	}
	,_shouldRestoreState: function() {
		if(!(this.fillMode == "none" || this.fillMode == "forwards" && this.direction != "normal" && this.direction != "alternate")) {
			if(this.fillMode == "backwards" && this.direction != "reverse") {
				return this.direction != "alternate-reverse";
			} else {
				return false;
			}
		} else {
			return true;
		}
	}
	,__class__: haxe_ui_styles_animation_Animation
	,__properties__: {get_keyframeCount:"get_keyframeCount",get_currentKeyFrame:"get_currentKeyFrame"}
};
var haxe_ui_styles_animation_KeyFrame = function() {
	this.delay = 0;
	this.time = 0;
	this.directives = [];
};
$hxClasses["haxe.ui.styles.animation.KeyFrame"] = haxe_ui_styles_animation_KeyFrame;
haxe_ui_styles_animation_KeyFrame.__name__ = "haxe.ui.styles.animation.KeyFrame";
haxe_ui_styles_animation_KeyFrame.prototype = {
	directives: null
	,time: null
	,delay: null
	,easingFunction: null
	,_actuator: null
	,stop: function() {
		if(this._actuator != null) {
			this._actuator.stop();
			this._actuator = null;
		}
	}
	,run: function(target,cb) {
		var _gthis = this;
		if(this._actuator != null) {
			return;
		}
		var properties = { };
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			properties[d.directive] = d.value;
		}
		this._actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,this.time,new haxe_ui_styles_animation_util_ActuatorOptions(this.delay,this.easingFunction,function() {
			_gthis._actuator = null;
			cb();
		},null));
		this._actuator.run();
	}
	,__class__: haxe_ui_styles_animation_KeyFrame
};
var haxe_ui_styles_animation_util_ActuatorOptions = function(delay,easingFunction,onComplete,onUpdate) {
	this.delay = delay;
	this.easingFunction = easingFunction;
	this.onComplete = onComplete;
	this.onUpdate = onUpdate;
};
$hxClasses["haxe.ui.styles.animation.util.ActuatorOptions"] = haxe_ui_styles_animation_util_ActuatorOptions;
haxe_ui_styles_animation_util_ActuatorOptions.__name__ = "haxe.ui.styles.animation.util.ActuatorOptions";
haxe_ui_styles_animation_util_ActuatorOptions.prototype = {
	delay: null
	,easingFunction: null
	,onComplete: null
	,onUpdate: null
	,__class__: haxe_ui_styles_animation_util_ActuatorOptions
};
var haxe_ui_styles_animation_util_Actuator = function(target,properties,duration,options) {
	this.delay = 0;
	this.duration = 0;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	if(options != null) {
		this._easeFunc = haxe_ui_styles_animation_util__$Actuator_Ease.get(options.easingFunction != null ? options.easingFunction : haxe_ui_styles_EasingFunction.EASE);
		if(options.delay != null) {
			this.delay = options.delay;
		}
		if(options.onComplete != null) {
			this._onComplete = options.onComplete;
		}
		if(options.onUpdate != null) {
			this._onUpdate = options.onUpdate;
		}
	}
};
$hxClasses["haxe.ui.styles.animation.util.Actuator"] = haxe_ui_styles_animation_util_Actuator;
haxe_ui_styles_animation_util_Actuator.__name__ = "haxe.ui.styles.animation.util.Actuator";
haxe_ui_styles_animation_util_Actuator.tween = function(target,properties,duration,options) {
	var actuator = new haxe_ui_styles_animation_util_Actuator(target,properties,duration,options);
	actuator.run();
	return actuator;
};
haxe_ui_styles_animation_util_Actuator.prototype = {
	target: null
	,properties: null
	,duration: null
	,delay: null
	,stop: function() {
		this._stopped = true;
		this.target = null;
	}
	,run: function() {
		this._initialize();
		this._stopped = false;
		if(this.duration == 0) {
			this._apply(1);
			this._finish();
		} else {
			this._currentTime = HxOverrides.now() / 1000;
			if(this.delay > 0) {
				haxe_ui_util_Timer.delay($bind(this,this._nextFrame),this.delay * 1000 | 0);
			} else {
				new haxe_ui_CallLater($bind(this,this._nextFrame));
			}
		}
	}
	,_currentTime: null
	,_easeFunc: null
	,_onComplete: null
	,_onUpdate: null
	,_stopped: null
	,_propertyDetails: null
	,_colorPropertyDetails: null
	,_stringPropertyDetails: null
	,_initialize: function() {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		this._propertyDetails = [];
		this._colorPropertyDetails = [];
		this._stringPropertyDetails = [];
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			var componentProperty = haxe_ui_util_StyleUtil.styleProperty2ComponentProperty(p);
			var end = Reflect.getProperty(this.properties,p);
			if(end._hx_index == 3) {
				var _g2 = end.v;
				if(_g2._hx_index == 0) {
					var v = _g2.value;
					componentProperty = "percent" + haxe_ui_util_StringUtil.capitalizeFirstLetter(componentProperty);
				}
			}
			var start = Reflect.getProperty(this.target,componentProperty);
			if(start == null) {
				switch(end._hx_index) {
				case 0:
					var v1 = end.v;
					start = v1;
					break;
				case 1:
					var v2 = end.v;
					start = 0;
					break;
				case 3:
					var _g3 = end.v;
					if(_g3._hx_index == 0) {
						var v3 = _g3.value;
						start = 0;
					}
					break;
				default:
				}
			}
			var isVariant = false;
			if(start != null) {
				try {
					if(start._hx_index == 2) {
						var v4 = start.s;
						start = v4;
						isVariant = true;
					}
				} catch( _g4 ) {
				}
			}
			if(end != null) {
				try {
					if(end._hx_index == 2) {
						var v5 = end.s;
						end = v5;
						isVariant = true;
					}
				} catch( _g5 ) {
				}
			}
			if(start == null || end == null) {
				continue;
			}
			switch(end._hx_index) {
			case 0:
				var v6 = end.v;
				var startVal = start;
				var endVal = haxe_ui_styles_ValueTools.string(end);
				if(endVal.indexOf("[[") != -1) {
					var n1 = endVal.indexOf("[[");
					var n2 = endVal.indexOf("]]") + 2;
					var before = HxOverrides.substr(endVal,0,n1);
					var after = HxOverrides.substr(endVal,n2,null);
					var s = StringTools.replace(startVal,before,"");
					s = StringTools.replace(s,after,"");
					var startInt = Std.parseInt(s);
					var s1 = StringTools.replace(endVal,before + "[[","");
					s1 = StringTools.replace(s1,"]]" + after,"");
					var endInt = Std.parseInt(s1);
					var details = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					details.pattern = before + "[[n]]" + after;
					details.startInt = startInt;
					details.changeInt = endInt - startInt;
					var c = js_Boot.getClass(this.target);
					var typeInfo = haxe_ui_core_TypeMap.getTypeInfo(c.__name__,componentProperty);
					if(typeInfo != null && isVariant == false && typeInfo == "Variant") {
						isVariant = true;
					}
					details.isVariant = isVariant;
					this._stringPropertyDetails.push(details);
				} else {
					var details1 = new haxe_ui_styles_animation_util_StringPropertyDetails(this.target,componentProperty,startVal,endVal);
					this._stringPropertyDetails.push(details1);
				}
				break;
			case 3:
				var _g6 = end.v;
				if(_g6._hx_index == 0) {
					var v7 = _g6.value;
					var val = v7;
					if(val != null) {
						var details2 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val - start);
						this._propertyDetails.push(details2);
					}
				} else {
					var val1 = haxe_ui_styles_ValueTools.calcDimension(end);
					if(val1 != null) {
						var details3 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val1 - start);
						this._propertyDetails.push(details3);
					} else {
						var details4 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
						this._propertyDetails.push(details4);
					}
				}
				break;
			case 4:
				var v8 = end.v;
				var startColor = js_Boot.__cast(start , Int);
				var endColor = v8;
				var details5 = new haxe_ui_styles_animation_util_ColorPropertyDetails(this.target,componentProperty,startColor,(endColor >> 16 & 255) - (startColor >> 16 & 255),(endColor >> 8 & 255) - (startColor >> 8 & 255),(endColor & 255) - (startColor & 255),(endColor >> 24 & 255) - (startColor >> 24 & 255));
				if(this._colorPropertyDetails == null) {
					this._colorPropertyDetails = [];
				}
				this._colorPropertyDetails.push(details5);
				break;
			default:
				var val2 = haxe_ui_styles_ValueTools.calcDimension(end);
				if(val2 != null) {
					var details6 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,val2 - start);
					this._propertyDetails.push(details6);
				} else {
					var details7 = new haxe_ui_styles_animation_util_PropertyDetails(this.target,componentProperty,start,end - start);
					this._propertyDetails.push(details7);
				}
			}
		}
	}
	,_nextFrame: function() {
		if(this._stopped == true) {
			return;
		}
		var currentTime = HxOverrides.now() / 1000;
		var delta = currentTime - this._currentTime;
		if(this.delay < 0) {
			delta += -this.delay;
		}
		var tweenPosition = delta / this.duration;
		if(tweenPosition > 1) {
			tweenPosition = 1;
		}
		this._apply(tweenPosition);
		if(this._onUpdate != null) {
			this._onUpdate(currentTime);
		}
		if(delta >= this.duration) {
			this._finish();
		} else {
			new haxe_ui_CallLater($bind(this,this._nextFrame));
		}
	}
	,_isValid: function() {
		if(this.target == null) {
			return false;
		}
		if(((this.target) instanceof haxe_ui_core_Component)) {
			var c = this.target;
			if(c._isDisposed == true) {
				return false;
			}
		}
		return true;
	}
	,_apply: function(position) {
		if(this._isValid() == false) {
			this.stop();
			return;
		}
		position = this._easeFunc(position);
		var _g = 0;
		var _g1 = this._propertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			Reflect.setProperty(this.target,details.propertyName,details.start + details.change * position);
		}
		var _g = 0;
		var _g1 = this._stringPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			if(details.pattern != null) {
				var newInt = details.startInt + position * details.changeInt | 0;
				var newString = StringTools.replace(details.pattern,"[[n]]","" + newInt);
				if(details.isVariant) {
					var v = haxe_ui_util_Variant.fromString(newString);
					Reflect.setProperty(this.target,details.propertyName,v);
				} else {
					Reflect.setProperty(this.target,details.propertyName,newString);
				}
			} else if(position != 1) {
				Reflect.setProperty(this.target,details.propertyName,details.start);
			} else {
				Reflect.setProperty(this.target,details.propertyName,details.end);
			}
		}
		var _g = 0;
		var _g1 = this._colorPropertyDetails;
		while(_g < _g1.length) {
			var details = _g1[_g];
			++_g;
			var currentColor = haxe_ui_util_Color.fromComponents((details.start >> 16 & 255) + details.changeR * position | 0,(details.start >> 8 & 255) + details.changeG * position | 0,(details.start & 255) + details.changeB * position | 0,(details.start >> 24 & 255) + details.changeA * position | 0);
			Reflect.setProperty(details.target,details.propertyName,currentColor);
		}
	}
	,_finish: function() {
		this._stopped = true;
		this.target = null;
		if(this._onComplete != null) {
			this._onComplete();
		}
	}
	,__class__: haxe_ui_styles_animation_util_Actuator
};
var haxe_ui_styles_animation_util__$Actuator_Ease = function() { };
$hxClasses["haxe.ui.styles.animation.util._Actuator.Ease"] = haxe_ui_styles_animation_util__$Actuator_Ease;
haxe_ui_styles_animation_util__$Actuator_Ease.__name__ = "haxe.ui.styles.animation.util._Actuator.Ease";
haxe_ui_styles_animation_util__$Actuator_Ease.get = function(easingFunction) {
	switch(easingFunction._hx_index) {
	case 0:
		return haxe_ui_styles_animation_util__$Actuator_Ease.linear;
	case 2:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeIn;
	case 3:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeOut;
	case 1:case 4:
		return haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut;
	}
};
haxe_ui_styles_animation_util__$Actuator_Ease.linear = function(k) {
	return k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeIn = function(k) {
	return k * k * k;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeOut = function(k) {
	return --k * k * k + 1;
};
haxe_ui_styles_animation_util__$Actuator_Ease.easeInOut = function(k) {
	if((k /= 0.5) < 1) {
		return 0.5 * k * k * k;
	} else {
		return 0.5 * ((k -= 2) * k * k + 2);
	}
};
var haxe_ui_styles_animation_util_ColorPropertyDetails = function(target,propertyName,start,changeR,changeG,changeB,changeA) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.changeR = changeR;
	this.changeG = changeG;
	this.changeB = changeB;
	this.changeA = changeA;
};
$hxClasses["haxe.ui.styles.animation.util.ColorPropertyDetails"] = haxe_ui_styles_animation_util_ColorPropertyDetails;
haxe_ui_styles_animation_util_ColorPropertyDetails.__name__ = "haxe.ui.styles.animation.util.ColorPropertyDetails";
haxe_ui_styles_animation_util_ColorPropertyDetails.prototype = {
	changeR: null
	,changeG: null
	,changeB: null
	,changeA: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_ColorPropertyDetails
};
var haxe_ui_styles_animation_util_PropertyDetails = function(target,propertyName,start,change) {
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
};
$hxClasses["haxe.ui.styles.animation.util.PropertyDetails"] = haxe_ui_styles_animation_util_PropertyDetails;
haxe_ui_styles_animation_util_PropertyDetails.__name__ = "haxe.ui.styles.animation.util.PropertyDetails";
haxe_ui_styles_animation_util_PropertyDetails.prototype = {
	change: null
	,propertyName: null
	,start: null
	,target: null
	,__class__: haxe_ui_styles_animation_util_PropertyDetails
};
var haxe_ui_styles_animation_util_StringPropertyDetails = function(target,propertyName,start,end) {
	this.isVariant = false;
	this.pattern = null;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.end = end;
};
$hxClasses["haxe.ui.styles.animation.util.StringPropertyDetails"] = haxe_ui_styles_animation_util_StringPropertyDetails;
haxe_ui_styles_animation_util_StringPropertyDetails.__name__ = "haxe.ui.styles.animation.util.StringPropertyDetails";
haxe_ui_styles_animation_util_StringPropertyDetails.prototype = {
	propertyName: null
	,start: null
	,end: null
	,target: null
	,startInt: null
	,changeInt: null
	,pattern: null
	,isVariant: null
	,__class__: haxe_ui_styles_animation_util_StringPropertyDetails
};
var haxe_ui_styles_elements_AnimationKeyFrame = function() {
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrame"] = haxe_ui_styles_elements_AnimationKeyFrame;
haxe_ui_styles_elements_AnimationKeyFrame.__name__ = "haxe.ui.styles.elements.AnimationKeyFrame";
haxe_ui_styles_elements_AnimationKeyFrame.prototype = {
	time: null
	,directives: null
	,set: function(directive) {
		var found = false;
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == directive.directive) {
				d.value = directive.value;
				found = true;
			}
		}
		if(found == false) {
			this.directives.push(directive);
		}
	}
	,find: function(id) {
		var _g = 0;
		var _g1 = this.directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			if(d.directive == id) {
				return d;
			}
		}
		return null;
	}
	,clear: function() {
		this.directives = [];
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrame
};
var haxe_ui_styles_elements_AnimationKeyFrames = function(id,keyframes) {
	this._keyframes = [];
	this.id = id;
	this._keyframes = keyframes;
};
$hxClasses["haxe.ui.styles.elements.AnimationKeyFrames"] = haxe_ui_styles_elements_AnimationKeyFrames;
haxe_ui_styles_elements_AnimationKeyFrames.__name__ = "haxe.ui.styles.elements.AnimationKeyFrames";
haxe_ui_styles_elements_AnimationKeyFrames.prototype = {
	id: null
	,_keyframes: null
	,keyFrames: null
	,get_keyFrames: function() {
		return this._keyframes;
	}
	,__class__: haxe_ui_styles_elements_AnimationKeyFrames
	,__properties__: {get_keyFrames:"get_keyFrames"}
};
var haxe_ui_styles_elements_Directive = function(directive,value,defective) {
	if(defective == null) {
		defective = false;
	}
	this.defective = false;
	this.value = null;
	this.directive = null;
	this.directive = directive;
	this.value = value;
	this.defective = defective;
};
$hxClasses["haxe.ui.styles.elements.Directive"] = haxe_ui_styles_elements_Directive;
haxe_ui_styles_elements_Directive.__name__ = "haxe.ui.styles.elements.Directive";
haxe_ui_styles_elements_Directive.prototype = {
	directive: null
	,value: null
	,defective: null
	,__class__: haxe_ui_styles_elements_Directive
};
var haxe_ui_styles_elements_ImportElement = function(url) {
	this.url = url;
};
$hxClasses["haxe.ui.styles.elements.ImportElement"] = haxe_ui_styles_elements_ImportElement;
haxe_ui_styles_elements_ImportElement.__name__ = "haxe.ui.styles.elements.ImportElement";
haxe_ui_styles_elements_ImportElement.prototype = {
	url: null
	,__class__: haxe_ui_styles_elements_ImportElement
};
var haxe_ui_styles_elements_MediaQuery = function(directives,styleSheet) {
	this._directives = [];
	this._directives = directives;
	this._styleSheet = styleSheet;
};
$hxClasses["haxe.ui.styles.elements.MediaQuery"] = haxe_ui_styles_elements_MediaQuery;
haxe_ui_styles_elements_MediaQuery.__name__ = "haxe.ui.styles.elements.MediaQuery";
haxe_ui_styles_elements_MediaQuery.prototype = {
	_directives: null
	,_styleSheet: null
	,addDirective: function(el) {
		this._directives.push(el);
	}
	,relevant: null
	,get_relevant: function() {
		var b = true;
		var _g = 0;
		var _g1 = this._directives;
		while(_g < _g1.length) {
			var d = _g1[_g];
			++_g;
			switch(d.directive) {
			case "backend":
				b = b && haxe_ui_Backend.get_id() == haxe_ui_styles_ValueTools.string(d.value);
				break;
			case "max-aspect-ratio":
				var sr = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr < this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "max-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "max-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() < haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-aspect-ratio":
				var sr1 = haxe_ui_core_Screen.get_instance().get_width() / haxe_ui_core_Screen.get_instance().get_height();
				b = b && sr1 > this.buildRatio(haxe_ui_styles_ValueTools.string(d.value));
				break;
			case "min-height":
				b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "min-width":
				b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_styles_ValueTools.calcDimension(d.value);
				break;
			case "orientation":
				var v = haxe_ui_styles_ValueTools.string(d.value);
				if(v == "landscape") {
					b = b && haxe_ui_core_Screen.get_instance().get_width() > haxe_ui_core_Screen.get_instance().get_height();
				} else if(v == "portrait") {
					b = b && haxe_ui_core_Screen.get_instance().get_height() > haxe_ui_core_Screen.get_instance().get_width();
				}
				break;
			default:
			}
		}
		return b;
	}
	,buildRatio: function(s) {
		var p = s.split("/");
		var w = Std.parseInt(StringTools.trim(p[0]));
		var h = Std.parseInt(StringTools.trim(p[1]));
		return w / h;
	}
	,styleSheet: null
	,get_styleSheet: function() {
		return this._styleSheet;
	}
	,__class__: haxe_ui_styles_elements_MediaQuery
	,__properties__: {get_styleSheet:"get_styleSheet",get_relevant:"get_relevant"}
};
var haxe_ui_styles_elements_RuleElement = function(selector,directives) {
	this.directives = new haxe_ds_StringMap();
	this.selector = new haxe_ui_styles_elements_Selector(selector);
	var _g = 0;
	while(_g < directives.length) {
		var d = directives[_g];
		++_g;
		this.processDirective(d);
	}
};
$hxClasses["haxe.ui.styles.elements.RuleElement"] = haxe_ui_styles_elements_RuleElement;
haxe_ui_styles_elements_RuleElement.__name__ = "haxe.ui.styles.elements.RuleElement";
haxe_ui_styles_elements_RuleElement.ruleMatch = function(c,d) {
	if(c.nodeName == "*") {
		return true;
	}
	if(c.pseudoClass != null) {
		var pc = ":" + c.pseudoClass;
		if(d.classes.indexOf(pc) != -1 == false) {
			return false;
		}
	}
	if(c.className != null) {
		var _g = 0;
		var _g1 = c.get_classNameParts();
		while(_g < _g1.length) {
			var p = _g1[_g];
			++_g;
			if(d.classes.indexOf(p) != -1 == false) {
				return false;
			}
		}
	}
	if(c.id != null && c.id != d.get_id()) {
		return false;
	}
	if(c.parent != null) {
		if(c.direct == true) {
			var p = d.parentComponent;
			if(p == null) {
				return false;
			}
			if(!haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
				return false;
			}
		} else {
			var p = d.parentComponent;
			while(p != null) {
				if(haxe_ui_styles_elements_RuleElement.ruleMatch(c.parent,p)) {
					break;
				}
				p = p.parentComponent;
			}
			if(p == null) {
				return false;
			}
		}
	}
	return true;
};
haxe_ui_styles_elements_RuleElement.prototype = {
	selector: null
	,directives: null
	,addDirective: function(directive,value) {
		var d = new haxe_ui_styles_elements_Directive(directive,value);
		this.processDirective(d);
	}
	,match: function(d) {
		return haxe_ui_styles_elements_RuleElement.ruleMatch(this.selector.parts[this.selector.parts.length - 1],d);
	}
	,processDirective: function(d) {
		switch(d.directive) {
		case "animation":
			this.processComposite(d,["animation-name","animation-duration","animation-timing-function","animation-delay","animation-iteration-count","animation-direction","animation-fill-mode"]);
			break;
		case "background":
			this.processComposite(d,["background-color","background-color-end","background-gradient-style"]);
			break;
		case "background-image-clip":
			this.processComposite(d,["background-image-clip-top","background-image-clip-left","background-image-clip-bottom","background-image-clip-right"]);
			break;
		case "background-image-slice":
			this.processComposite(d,["background-image-slice-top","background-image-slice-left","background-image-slice-bottom","background-image-slice-right"]);
			break;
		case "border":
			this.processComposite(d,["border-size","border-style","border-color"]);
			break;
		case "border-bottom":
			this.processComposite(d,["border-bottom-size","border-style","border-bottom-color"]);
			break;
		case "border-color":
			this.processComposite(d,["border-top-color","border-left-color","border-right-color","border-bottom-color"],true);
			break;
		case "border-left":
			this.processComposite(d,["border-left-size","border-style","border-left-color"]);
			break;
		case "border-right":
			this.processComposite(d,["border-right-size","border-style","border-right-color"]);
			break;
		case "border-size":
			this.processComposite(d,["border-top-size","border-left-size","border-right-size","border-bottom-size"]);
			break;
		case "border-top":
			this.processComposite(d,["border-top-size","border-style","border-top-color"]);
			break;
		case "font-style":
			var v1 = haxe_ui_styles_ValueTools.composite(d.value);
			if(v1 == null) {
				v1 = [d.value];
			}
			var _g = 0;
			while(_g < v1.length) {
				var v = v1[_g];
				++_g;
				var s = haxe_ui_styles_ValueTools.string(v).toLowerCase();
				if(s == "bold") {
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive("font-bold",haxe_ui_styles_Value.VBool(true));
					this1.h["font-bold"] = value;
				} else if(s == "italic") {
					var this2 = this.directives;
					var value1 = new haxe_ui_styles_elements_Directive("font-italic",haxe_ui_styles_Value.VBool(true));
					this2.h["font-italic"] = value1;
				} else if(s == "underline") {
					var this3 = this.directives;
					var value2 = new haxe_ui_styles_elements_Directive("font-underline",haxe_ui_styles_Value.VBool(true));
					this3.h["font-underline"] = value2;
				}
			}
			break;
		case "margin":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["margin-top","margin-left","margin-right","margin-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["margin-top","margin-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["margin-left","margin-right"]);
			}
			break;
		case "padding":
			var vl = haxe_ui_styles_ValueTools.composite(d.value);
			if(vl.length == 4 || vl.length == 1) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			} else if(vl.length == 2) {
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[0]),["padding-top","padding-bottom"]);
				this.processComposite(new haxe_ui_styles_elements_Directive("",vl[1]),["padding-left","padding-right"]);
			} else if(vl.length == 0) {
				this.processComposite(d,["padding-top","padding-left","padding-right","padding-bottom"]);
			}
			break;
		case "spacing":
			this.processComposite(d,["horizontal-spacing","vertical-spacing"]);
			break;
		default:
			this.directives.h[d.directive] = d;
		}
	}
	,processComposite: function(d,parts,duplicate) {
		if(duplicate == null) {
			duplicate = false;
		}
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			var _this = this.directives;
			if(Object.prototype.hasOwnProperty.call(_this.h,p)) {
				delete(_this.h[p]);
			}
		}
		var _g = d.value;
		switch(_g._hx_index) {
		case 1:
			var _g1 = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,d.value);
				this1.h[p] = value;
			}
			break;
		case 3:
			var v = _g.v;
			var _g1 = 0;
			while(_g1 < parts.length) {
				var p = parts[_g1];
				++_g1;
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(p,haxe_ui_styles_Value.VDimension(v));
				this1.h[p] = value;
			}
			break;
		case 4:
			var _g1 = _g.v;
			if(duplicate == false) {
				var this1 = this.directives;
				var value = new haxe_ui_styles_elements_Directive(parts[0],d.value);
				this1.h[parts[0]] = value;
			} else {
				var _g1 = 0;
				while(_g1 < parts.length) {
					var p = parts[_g1];
					++_g1;
					var this1 = this.directives;
					var value = new haxe_ui_styles_elements_Directive(p,d.value);
					this1.h[p] = value;
				}
			}
			break;
		case 6:
			var _g1 = _g.v;
			break;
		case 7:
			var vl = _g.vl;
			var n = 0;
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				if(vl[n] != null) {
					var nd = new haxe_ui_styles_elements_Directive(p,vl[n]);
					this.processDirective(nd);
					this.directives.h[p] = nd;
				}
				++n;
			}
			break;
		case 9:
			var _g = 0;
			while(_g < parts.length) {
				var p = parts[_g];
				++_g;
				var nd = new haxe_ui_styles_elements_Directive(p,d.value);
				this.processDirective(nd);
				this.directives.h[p] = nd;
			}
			break;
		default:
		}
	}
	,__class__: haxe_ui_styles_elements_RuleElement
};
var haxe_ui_styles_elements_Selector = function(s) {
	this.parts = [];
	s = StringTools.replace(s,">"," > ");
	var p = s.split(" ");
	var parent = null;
	var nextDirect = false;
	var _g = 0;
	while(_g < p.length) {
		var i = p[_g];
		++_g;
		i = StringTools.trim(i);
		if(i.length == 0) {
			continue;
		}
		if(i == ">") {
			nextDirect = true;
			continue;
		}
		var current = new haxe_ui_styles_elements_SelectorPart();
		if(nextDirect == true) {
			current.direct = true;
			nextDirect = false;
		}
		current.parent = parent;
		var p1 = i.split(":");
		current.pseudoClass = p1[1];
		var main = p1[0];
		if(main.charAt(0) == ".") {
			current.className = main.substring(1);
		} else {
			var p2 = main.split(".");
			if(p2[0].charAt(0) == "#") {
				current.id = p2[0].substring(1);
			} else {
				current.nodeName = p2[0].toLowerCase();
			}
			current.className = p2[1];
		}
		this.parts.push(current);
		parent = current;
	}
};
$hxClasses["haxe.ui.styles.elements.Selector"] = haxe_ui_styles_elements_Selector;
haxe_ui_styles_elements_Selector.__name__ = "haxe.ui.styles.elements.Selector";
haxe_ui_styles_elements_Selector.prototype = {
	parts: null
	,toString: function() {
		return this.parts.join(" ");
	}
	,__class__: haxe_ui_styles_elements_Selector
};
var haxe_ui_styles_elements_SelectorPart = function() {
	this._parts = null;
	this.direct = false;
	this.nodeName = null;
	this.id = null;
	this.className = null;
	this.pseudoClass = null;
	this.parent = null;
};
$hxClasses["haxe.ui.styles.elements.SelectorPart"] = haxe_ui_styles_elements_SelectorPart;
haxe_ui_styles_elements_SelectorPart.__name__ = "haxe.ui.styles.elements.SelectorPart";
haxe_ui_styles_elements_SelectorPart.prototype = {
	parent: null
	,pseudoClass: null
	,className: null
	,id: null
	,nodeName: null
	,direct: null
	,_parts: null
	,classNameParts: null
	,get_classNameParts: function() {
		if(this.className == null) {
			return null;
		}
		if(this._parts == null) {
			this._parts = this.className.split(".");
		}
		return this._parts;
	}
	,toString: function() {
		var sb_b = "";
		if(this.id != null) {
			sb_b += Std.string("#" + this.id);
		}
		if(this.nodeName != null) {
			sb_b += Std.string(this.nodeName);
		}
		if(this.className != null) {
			sb_b += Std.string("." + this.className);
		}
		if(this.pseudoClass != null) {
			sb_b += Std.string(":" + this.pseudoClass);
		}
		return sb_b;
	}
	,__class__: haxe_ui_styles_elements_SelectorPart
	,__properties__: {get_classNameParts:"get_classNameParts"}
};
var haxe_ui_themes_Theme = function() {
	this.styles = [];
	this.images = [];
	this.vars = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.Theme"] = haxe_ui_themes_Theme;
haxe_ui_themes_Theme.__name__ = "haxe.ui.themes.Theme";
haxe_ui_themes_Theme.prototype = {
	parent: null
	,styles: null
	,images: null
	,vars: null
	,__class__: haxe_ui_themes_Theme
};
var haxe_ui_themes_ThemeManager = function() {
	this.currentThemeVars = new haxe_ds_StringMap();
	this._eventMap = null;
	this._themes = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.themes.ThemeManager"] = haxe_ui_themes_ThemeManager;
haxe_ui_themes_ThemeManager.__name__ = "haxe.ui.themes.ThemeManager";
haxe_ui_themes_ThemeManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_themes_ThemeManager.get_instance = function() {
	if(haxe_ui_themes_ThemeManager._instance == null) {
		haxe_ui_themes_ThemeManager._instance = new haxe_ui_themes_ThemeManager();
	}
	return haxe_ui_themes_ThemeManager._instance;
};
haxe_ui_themes_ThemeManager.prototype = {
	_themes: null
	,_themeImages: null
	,_eventMap: null
	,registerEvent: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(this._eventMap == null) {
			this._eventMap = new haxe_ui_util_EventMap();
		}
		this._eventMap.add(type,listener);
	}
	,unregisterEvent: function(type,listener) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.remove(type,listener);
	}
	,dispatch: function(event) {
		if(this._eventMap == null) {
			return;
		}
		this._eventMap.invoke(event.type,new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,getTheme: function(themeName) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			theme = new haxe_ui_themes_Theme();
			this._themes.h[themeName] = theme;
		}
		return theme;
	}
	,addStyleResource: function(themeName,resourceId,priority,styleData) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).styles.push({ resourceId : resourceId, priority : priority, styleData : styleData});
	}
	,setThemeVar: function(themeName,varName,varValue) {
		var theme = this.getTheme(themeName);
		if(theme == null) {
			return;
		}
		theme.vars.h[varName] = varValue;
	}
	,setCurrentThemeVar: function(varName,varValue) {
		this.setThemeVar(haxe_ui_Toolkit.get_theme(),varName,varValue);
	}
	,addImageResource: function(themeName,id,resourceId,priority) {
		if(priority == null) {
			priority = 0;
		}
		this.getTheme(themeName).images.push({ id : id, resourceId : resourceId, priority : priority});
	}
	,currentThemeVars: null
	,applyTheme: function(themeName) {
		haxe_ui_Toolkit.styleSheet.clear("default");
		var finalVars = new haxe_ds_StringMap();
		this.buildThemeVars("global",finalVars);
		this.buildThemeVars(themeName,finalVars);
		this.currentThemeVars = new haxe_ds_StringMap();
		var h = finalVars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			this.currentThemeVars.h[k] = finalVars.h[k];
		}
		var entries = [];
		this.buildThemeEntries("global",entries);
		this.buildThemeEntries(themeName,entries);
		haxe_ds_ArraySort.sort(entries,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < entries.length) {
			var e = entries[_g];
			++_g;
			this.applyResource(e.resourceId,e.styleData);
		}
		var images = [];
		this.buildThemeImages("global",images);
		this.buildThemeImages(themeName,images);
		haxe_ds_ArraySort.sort(images,function(a,b) {
			if(a.priority < b.priority) {
				return -1;
			} else if(a.priority > b.priority) {
				return 1;
			}
			return 0;
		});
		var _g = 0;
		while(_g < images.length) {
			var i = images[_g];
			++_g;
			if(this._themeImages == null) {
				this._themeImages = new haxe_ds_StringMap();
			}
			this._themeImages.h[i.id] = i;
		}
		this.dispatch(new haxe_ui_events_ThemeEvent(haxe_ui_events_ThemeEvent.THEME_CHANGED));
	}
	,applyResource: function(resourceId,styleData) {
		var style = haxe_ui_Toolkit.get_assets().getText(resourceId);
		if(styleData != null) {
			style += "\n" + styleData;
		}
		if(style != null) {
			this.addStyleString(style);
		}
	}
	,addStyleString: function(style) {
		haxe_ui_Toolkit.styleSheet.parse(style);
	}
	,buildThemeVars: function(themeName,vars) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeVars(theme.parent,vars);
		}
		var h = theme.vars.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			var v = theme.vars.h[k];
			vars.h[k] = v;
		}
	}
	,buildThemeEntries: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeEntries(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.styles;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,buildThemeImages: function(themeName,arr) {
		var theme = this._themes.h[themeName];
		if(theme == null) {
			return;
		}
		if(theme.parent != null) {
			this.buildThemeImages(theme.parent,arr);
		}
		var _g = 0;
		var _g1 = theme.images;
		while(_g < _g1.length) {
			var s = _g1[_g];
			++_g;
			arr.push(s);
		}
	}
	,image: function(id) {
		var image = this._themeImages.h[id];
		if(image == null) {
			return null;
		}
		return image.resourceId;
	}
	,icon: function(id) {
		return this.image(id);
	}
	,__class__: haxe_ui_themes_ThemeManager
};
var haxe_ui_tooltips_ToolTip = function() {
	haxe_ui_containers_Box.call(this);
};
$hxClasses["haxe.ui.tooltips.ToolTip"] = haxe_ui_tooltips_ToolTip;
haxe_ui_tooltips_ToolTip.__name__ = "haxe.ui.tooltips.ToolTip";
haxe_ui_tooltips_ToolTip.__super__ = haxe_ui_containers_Box;
haxe_ui_tooltips_ToolTip.prototype = $extend(haxe_ui_containers_Box.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_Box.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_Box.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new haxe_ui_tooltips_ToolTip();
	}
	,__class__: haxe_ui_tooltips_ToolTip
});
var haxe_ui_tooltips_ToolTipManager = function() {
	this._toolTipContents = null;
	this._toolTip = null;
	this._timer = null;
	this._currentComponent = null;
	this._lastMouseEvent = null;
	this._toolTipOptions = new haxe_ds_ObjectMap();
};
$hxClasses["haxe.ui.tooltips.ToolTipManager"] = haxe_ui_tooltips_ToolTipManager;
haxe_ui_tooltips_ToolTipManager.__name__ = "haxe.ui.tooltips.ToolTipManager";
haxe_ui_tooltips_ToolTipManager.__properties__ = {get_instance:"get_instance"};
haxe_ui_tooltips_ToolTipManager.get_instance = function() {
	if(haxe_ui_tooltips_ToolTipManager._instance == null) {
		haxe_ui_tooltips_ToolTipManager._instance = new haxe_ui_tooltips_ToolTipManager();
	}
	return haxe_ui_tooltips_ToolTipManager._instance;
};
haxe_ui_tooltips_ToolTipManager.prototype = {
	_lastMouseEvent: null
	,_toolTipOptions: null
	,registerTooltip: function(target,options) {
		if(this._toolTipOptions.h.__keys__[target.__id__] != null) {
			return;
		}
		if(options == null) {
			options = { };
		}
		if(options.tipData == null) {
			options.tipData = { text : target.get_tooltip()};
		}
		this._toolTipOptions.set(target,options);
		target.registerEvent("mouseover",$bind(this,this.onTargetMouseOver));
	}
	,unregisterTooltip: function(target) {
		target.unregisterEvent("mouseover",$bind(this,this.onTargetMouseOver));
		target.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
		target.unregisterEvent("mousemove",$bind(this,this.onTargetMouseMove));
		this._toolTipOptions.remove(target);
	}
	,getTooltipOptions: function(target) {
		return this._toolTipOptions.h[target.__id__];
	}
	,updateTooltipRenderer: function(target,renderer) {
		if(this._toolTipOptions.h.__keys__[target.__id__] == null) {
			return;
		}
		var options = this._toolTipOptions.h[target.__id__];
		options.renderer = renderer;
	}
	,_currentComponent: null
	,_timer: null
	,onTargetMouseOver: function(event) {
		this.stopCurrent();
		this._lastMouseEvent = event;
		this._currentComponent = event.target;
		event.target.registerEvent("mouseout",$bind(this,this.onTargetMouseOut));
		event.target.registerEvent("mousemove",$bind(this,this.onTargetMouseMove));
		haxe_ui_core_Screen.get_instance().registerEvent("mousemove",$bind(this,this.onScreenMouseMove));
		this.startTimer();
	}
	,onTargetMouseMove: function(event) {
		if(this._toolTip != null && this._toolTip.get_hidden() == false) {
			return;
		}
		this.stopTimer();
		this.startTimer();
	}
	,onTargetMouseOut: function(event) {
		this.stopCurrent();
		this.hideToolTip();
	}
	,onDelayTimer: function() {
		this._timer.stop();
		this._timer = null;
		this.showToolTip();
	}
	,onScreenMouseMove: function(event) {
		this._lastMouseEvent = event;
	}
	,onScreenMouseDown: function(event) {
		this.hideToolTip();
	}
	,startTimer: function() {
		this._timer = new haxe_ui_util_Timer(haxe_ui_tooltips_ToolTipManager.defaultDelay,$bind(this,this.onDelayTimer));
	}
	,stopTimer: function() {
		if(this._timer != null) {
			this._timer.stop();
			this._timer = null;
		}
	}
	,stopCurrent: function() {
		if(this._currentComponent != null) {
			this._currentComponent.unregisterEvent("mouseout",$bind(this,this.onTargetMouseOut));
			this._currentComponent = null;
		}
		this.stopTimer();
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousemove",$bind(this,this.onScreenMouseMove));
	}
	,_toolTip: null
	,_toolTipContents: null
	,createToolTip: function() {
		if(this._toolTip != null) {
			return;
		}
		this._toolTip = new haxe_ui_tooltips_ToolTip();
	}
	,showToolTip: function() {
		var _gthis = this;
		if(this._currentComponent == null) {
			return;
		}
		if(this._currentComponent.get_disabled() == true || this._currentComponent.get_hidden() == true) {
			this.stopCurrent();
			return;
		}
		this.createToolTip();
		this._toolTip.hide();
		var options = this._toolTipOptions.h[this._currentComponent.__id__];
		var renderer = this.createToolTipRenderer(options);
		var _this = this._toolTip;
		if((_this._children == null ? [] : _this._children)[0] != renderer) {
			var _this = this._toolTip;
			if((_this._children == null ? [] : _this._children).length > 0) {
				this._toolTip.removeComponentAt(0,false);
			}
			this._toolTip.addComponent(renderer);
		}
		renderer.set_data(options.tipData);
		haxe_ui_core_Screen.get_instance().addComponent(this._toolTip);
		haxe_ui_core_Screen.get_instance().setComponentIndex(this._toolTip,haxe_ui_core_Screen.get_instance().rootComponents.length - 1);
		this._toolTip.validateNow();
		this.positionToolTip();
		haxe_ui_Toolkit.callLater(function() {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				_gthis._toolTip.fadeIn();
			} else {
				_gthis._toolTip.show();
			}
		});
		haxe_ui_core_Screen.get_instance().registerEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,positionToolTip: function() {
		var x = this._lastMouseEvent.screenX + this._toolTip.get_marginLeft();
		var y = this._lastMouseEvent.screenY + this._toolTip.get_marginTop();
		var w = this._toolTip.get_width();
		var h = this._toolTip.get_height();
		var maxX = haxe_ui_core_Screen.get_instance().get_width();
		var maxY = haxe_ui_core_Screen.get_instance().get_height();
		if(x + w > maxX) {
			x -= w;
		}
		if(y + h > maxY) {
			y = this._lastMouseEvent.screenY - h - this._toolTip.get_marginTop() / 2;
		}
		this._toolTip.set_left(x);
		this._toolTip.set_top(y);
	}
	,hideToolTip: function() {
		if(this._toolTip != null) {
			if(haxe_ui_tooltips_ToolTipManager.fade == true) {
				this._toolTip.fadeOut();
			} else {
				this._toolTip.hide();
			}
		}
		haxe_ui_core_Screen.get_instance().unregisterEvent("mousedown",$bind(this,this.onScreenMouseDown));
	}
	,createToolTipRenderer: function(options) {
		if(options.renderer != null) {
			return options.renderer;
		}
		if(haxe_ui_tooltips_ToolTipManager.defaultRenderer != null) {
			return haxe_ui_tooltips_ToolTipManager.defaultRenderer;
		}
		if(this._toolTipContents != null) {
			return this._toolTipContents;
		}
		this._toolTipContents = new haxe_ui_core_ItemRenderer();
		var label = new haxe_ui_components_Label();
		label.set_id("text");
		this._toolTipContents.addComponent(label);
		return this._toolTipContents;
	}
	,__class__: haxe_ui_tooltips_ToolTipManager
};
var haxe_ui_util_CallbackMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.CallbackMap"] = haxe_ui_util_CallbackMap;
haxe_ui_util_CallbackMap.__name__ = "haxe.ui.util.CallbackMap";
haxe_ui_util_CallbackMap.prototype = {
	_map: null
	,add: function(key,callback,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(callback == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[key];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(callback,priority);
			this._map.h[key] = arr;
			b = true;
		} else if(arr.contains(callback) == false) {
			arr.push(callback,priority);
		}
		return b;
	}
	,remove: function(key,callback) {
		var b = false;
		var arr = this._map.h[key];
		if(arr != null) {
			arr.remove(callback);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
					delete(_this.h[key]);
				}
				b = true;
			}
		}
		return b;
	}
	,removeAll: function(key) {
		var arr = this._map.h[key];
		if(arr != null) {
			while(arr.get_length() > 0) arr.remove(arr.get(0));
			var _this = this._map;
			if(Object.prototype.hasOwnProperty.call(_this.h,key)) {
				delete(_this.h[key]);
			}
		}
	}
	,invoke: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,invokeAndRemove: function(key,param) {
		var arr = this._map.h[key];
		if(arr != null) {
			arr = arr.copy();
			this.removeAll(key);
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				listener1.callback(param);
			}
		}
	}
	,count: function(key) {
		var n = 0;
		var arr = this._map.h[key];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,__class__: haxe_ui_util_CallbackMap
};
var haxe_ui_util_Color = {};
haxe_ui_util_Color.__properties__ = {set_a:"set_a",get_a:"get_a",set_b:"set_b",get_b:"get_b",set_g:"set_g",get_g:"get_g",set_r:"set_r",get_r:"get_r"};
haxe_ui_util_Color.fromString = function(s) {
	if(StringTools.startsWith(s,"0x") || StringTools.startsWith(s,"#")) {
		return Std.parseInt("0x" + s.substring(s.length - 6));
	}
	switch(s) {
	case "aliceblue":
		return 15792383;
	case "antiquewhite":
		return 16444375;
	case "aqua":
		return 65535;
	case "aquamarine":
		return 8388564;
	case "azure":
		return 15794175;
	case "beige":
		return 16119260;
	case "bisque":
		return 16770244;
	case "black":
		return 0;
	case "blanchedalmond":
		return 16772045;
	case "blue":
		return 255;
	case "blueviolet":
		return 9055202;
	case "brown":
		return 10824234;
	case "burlywood":
		return 14596231;
	case "cadetblue":
		return 6266528;
	case "chartreuse":
		return 8388352;
	case "chocolate":
		return 13789470;
	case "coral":
		return 16744272;
	case "cornflowerblue":
		return 6591981;
	case "cornsilk":
		return 16775388;
	case "crimson":
		return 14423100;
	case "cyan":
		return 65535;
	case "darkblue":
		return 139;
	case "darkcyan":
		return 35723;
	case "darkgoldenrod":
		return 12092939;
	case "darkgray":
		return 11119017;
	case "darkgreen":
		return 25600;
	case "darkkhaki":
		return 12433259;
	case "darkmagenta":
		return 9109643;
	case "darkolivegreen":
		return 5597999;
	case "darkorange":
		return 16747520;
	case "darkorchid":
		return 10040012;
	case "darkred":
		return 9109504;
	case "darksalmon":
		return 15308410;
	case "darkseagreen":
		return 9419919;
	case "darkslateblue":
		return 4734347;
	case "darkslategray":
		return 3100495;
	case "darkturquoise":
		return 52945;
	case "darkviolet":
		return 9699539;
	case "deeppink":
		return 16716947;
	case "deepskyblue":
		return 49151;
	case "dimgray":
		return 6908265;
	case "dodgerblue":
		return 2003199;
	case "firebrick":
		return 11674146;
	case "floralwhite":
		return 16775920;
	case "forestgreen":
		return 2263842;
	case "fuchsia":
		return 16711935;
	case "gainsboro":
		return 14474460;
	case "ghostwhite":
		return 16316671;
	case "gold":
		return 16766720;
	case "goldenrod":
		return 14329120;
	case "green":
		return 32768;
	case "greenyellow":
		return 11403055;
	case "gray":case "grey":
		return 8421504;
	case "honeydew":
		return 15794160;
	case "hotpink":
		return 16738740;
	case "indianred":
		return 13458524;
	case "indigo":
		return 4915330;
	case "ivory":
		return 16777200;
	case "khaki":
		return 15787660;
	case "lavender":
		return 15132410;
	case "lavenderblush":
		return 16773365;
	case "lawngreen":
		return 8190976;
	case "lemonchiffon":
		return 16775885;
	case "lightblue":
		return 11393254;
	case "lightcoral":
		return 15761536;
	case "lightcyan":
		return 14745599;
	case "lightgoldenrodyellow":
		return 16448210;
	case "lightgray":
		return 13882323;
	case "lightgreen":
		return 9498256;
	case "lightpink":
		return 16758465;
	case "lightsalmon":
		return 16752762;
	case "lightseagreen":
		return 2142890;
	case "lightskyblue":
		return 8900346;
	case "lightslategray":
		return 7833753;
	case "lightsteelblue":
		return 11584734;
	case "lightyellow":
		return 16777184;
	case "lime":
		return 65280;
	case "limegreen":
		return 3329330;
	case "linen":
		return 16445670;
	case "magenta":
		return 16711935;
	case "maroon":
		return 8388608;
	case "mediumaquamarine":
		return 6737322;
	case "mediumblue":
		return 205;
	case "mediumorchid":
		return 12211667;
	case "mediumpurple":
		return 9662683;
	case "mediumseagreen":
		return 3978097;
	case "mediumslateblue":
		return 8087790;
	case "mediumspringgreen":
		return 64154;
	case "mediumturquoise":
		return 4772300;
	case "mediumvioletred":
		return 13047173;
	case "midnightblue":
		return 1644912;
	case "mintcream":
		return 16121850;
	case "mistyrose":
		return 16770273;
	case "moccasin":
		return 16770229;
	case "navajowhite":
		return 16768685;
	case "navy":
		return 128;
	case "oldlace":
		return 16643558;
	case "olive":
		return 8421376;
	case "olivedrab":
		return 7048739;
	case "orange":
		return 16753920;
	case "orangered":
		return 16729344;
	case "orchid":
		return 14315734;
	case "palegoldenrod":
		return 15657130;
	case "palegreen":
		return 10025880;
	case "paleturquoise":
		return 11529966;
	case "palevioletred":
		return 14381203;
	case "papayawhip":
		return 16773077;
	case "peachpuff":
		return 16767673;
	case "peru":
		return 13468991;
	case "pink":
		return 16761035;
	case "plum":
		return 14524637;
	case "powderblue":
		return 11591910;
	case "purple":
		return 8388736;
	case "red":
		return 16711680;
	case "rosybrown":
		return 12357519;
	case "royalblue":
		return 4286945;
	case "saddlebrown":
		return 9127187;
	case "salmon":
		return 16416882;
	case "sandybrown":
		return 16032864;
	case "seagreen":
		return 3050327;
	case "seashell":
		return 16774638;
	case "sienna":
		return 10506797;
	case "silver":
		return 12632256;
	case "skyblue":
		return 8900331;
	case "slateblue":
		return 6970061;
	case "slategray":
		return 7372944;
	case "snow":
		return 16775930;
	case "springgreen":
		return 65407;
	case "steelblue":
		return 4620980;
	case "tan":
		return 13808780;
	case "teal":
		return 32896;
	case "thistle":
		return 14204888;
	case "tomato":
		return 16737095;
	case "turquoise":
		return 4251856;
	case "violet":
		return 15631086;
	case "wheat":
		return 16113331;
	case "white":
		return 16777215;
	case "whitesmoke":
		return 16119285;
	case "yellow":
		return 16776960;
	case "yellowgreen":
		return 10145074;
	default:
		return 0;
	}
};
haxe_ui_util_Color.fromComponents = function(r,g,b,a) {
	var result = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return result;
};
haxe_ui_util_Color.get_r = function(this1) {
	return this1 >> 16 & 255;
};
haxe_ui_util_Color.set_r = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (value & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_g = function(this1) {
	return this1 >> 8 & 255;
};
haxe_ui_util_Color.set_g = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (value & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.get_b = function(this1) {
	return this1 & 255;
};
haxe_ui_util_Color.set_b = function(this1,value) {
	this1 = (this1 >> 24 & 255 & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | value & 255;
	return this1;
};
haxe_ui_util_Color.get_a = function(this1) {
	return this1 >> 24 & 255;
};
haxe_ui_util_Color.set_a = function(this1,value) {
	this1 = (value & 255) << 24 | (this1 >> 16 & 255 & 255) << 16 | (this1 >> 8 & 255 & 255) << 8 | this1 & 255 & 255;
	return this1;
};
haxe_ui_util_Color.set = function(this1,r,g,b,a) {
	this1 = (a & 255) << 24 | (r & 255) << 16 | (g & 255) << 8 | b & 255;
	return this1;
};
haxe_ui_util_Color.toInt = function(this1) {
	return this1;
};
haxe_ui_util_Color.or = function(a,b) {
	return haxe_ui_util_Color.toInt(a) | haxe_ui_util_Color.toInt(b);
};
haxe_ui_util_Color.sumColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) + (b >> 16 & 255),(a >> 8 & 255) + (b >> 8 & 255),(a & 255) + (b & 255),(a >> 24 & 255) + (b >> 24 & 255)));
};
haxe_ui_util_Color.restColor = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - (b >> 16 & 255),(a >> 8 & 255) - (b >> 8 & 255),(a & 255) - (b & 255),(a >> 24 & 255) - (b >> 24 & 255)));
};
haxe_ui_util_Color.sumFloat = function(a,b) {
	var bInt = b | 0;
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) - bInt,(a >> 8 & 255) - bInt,(a & 255) - bInt,(a >> 24 & 255) - bInt));
};
haxe_ui_util_Color.mulFloat = function(a,b) {
	return haxe_ui_util_Color.toInt(haxe_ui_util_Color.fromComponents((a >> 16 & 255) * b | 0,(a >> 8 & 255) * b | 0,(a & 255) * b | 0,(a >> 24 & 255) * b | 0));
};
var haxe_ui_util_ColorUtil = function() { };
$hxClasses["haxe.ui.util.ColorUtil"] = haxe_ui_util_ColorUtil;
haxe_ui_util_ColorUtil.__name__ = "haxe.ui.util.ColorUtil";
haxe_ui_util_ColorUtil.buildColorArray = function(startColor,endColor,size) {
	var array = [];
	var r1 = startColor >> 16 & 255;
	var g1 = startColor >> 8 & 255;
	var b1 = startColor & 255;
	var r2 = endColor >> 16 & 255;
	var g2 = endColor >> 8 & 255;
	var b2 = endColor & 255;
	var rd = r2 - r1;
	var gd = g2 - g1;
	var bd = b2 - b1;
	var ri = rd / (size - 1);
	var gi = gd / (size - 1);
	var bi = bd / (size - 1);
	var r = r1;
	var g = g1;
	var b = b1;
	var c;
	var _g = 0;
	var _g1 = size;
	while(_g < _g1) {
		var n = _g++;
		c = 0 | (Math.round(r) & 255) << 16 | (Math.round(g) & 255) << 8 | Math.round(b) & 255;
		array.push(haxe_ui_util_Color.toInt(c));
		r += ri;
		g += gi;
		b += bi;
	}
	return array;
};
haxe_ui_util_ColorUtil.parseColor = function(s) {
	if(StringTools.startsWith(s,"#")) {
		s = s.substring(1,s.length);
	} else if(StringTools.startsWith(s,"0x")) {
		s = s.substring(2,s.length);
	}
	return Std.parseInt("0x" + s);
};
var haxe_ui_util_ComponentUtil = function() { };
$hxClasses["haxe.ui.util.ComponentUtil"] = haxe_ui_util_ComponentUtil;
haxe_ui_util_ComponentUtil.__name__ = "haxe.ui.util.ComponentUtil";
haxe_ui_util_ComponentUtil.getDepth = function(target) {
	var count = 0;
	while(target.parentComponent != null) {
		target = target.parentComponent;
		++count;
	}
	return count;
};
haxe_ui_util_ComponentUtil.dumpComponentTree = function(from,verbose) {
	if(verbose == null) {
		verbose = false;
	}
	haxe_ui_util_ComponentUtil.recurseTreeGrouped(from,verbose);
};
haxe_ui_util_ComponentUtil.walkComponentTree = function(from,cb) {
	haxe_ui_util_ComponentUtil.recurseTree(0,from,cb);
};
haxe_ui_util_ComponentUtil.recurseTree = function(depth,c,cb) {
	cb(depth,c);
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTree(depth + 1,child,cb);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeTrace = function(c,level,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	var space = StringTools.lpad(""," ",level * 4);
	display = space + display;
	haxe_Log.trace(display,{ fileName : "haxe/ui/util/ComponentUtil.hx", lineNumber : 42, className : "haxe.ui.util.ComponentUtil", methodName : "recurseTreeTrace"});
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeTrace(child,level + 1,verbose);
	}
};
haxe_ui_util_ComponentUtil.recurseTreeGrouped = function(c,verbose) {
	var display = c.get_className();
	if(c.get_id() != null) {
		display += "#" + c.get_id();
	}
	$global.console.groupCollapsed(display);
	if(verbose == true) {
		$global.console.groupCollapsed("Component Details");
		$global.console.log(c.element);
		$global.console.groupEnd();
	}
	var _g = 0;
	var _g1 = c._children == null ? [] : c._children;
	while(_g < _g1.length) {
		var child = _g1[_g];
		++_g;
		haxe_ui_util_ComponentUtil.recurseTreeGrouped(child,verbose);
	}
	$global.console.groupEnd();
};
var haxe_ui_util_Defines = function() { };
$hxClasses["haxe.ui.util.Defines"] = haxe_ui_util_Defines;
haxe_ui_util_Defines.__name__ = "haxe.ui.util.Defines";
haxe_ui_util_Defines.getAll = function() {
	haxe_ui_util_Defines.popuplate();
	return haxe_ui_util_Defines._map;
};
haxe_ui_util_Defines.set = function(name,value,overwrite) {
	if(overwrite == null) {
		overwrite = false;
	}
	haxe_ui_util_Defines.popuplate();
	if(overwrite == false && Object.prototype.hasOwnProperty.call(haxe_ui_util_Defines._map.h,name)) {
		return;
	}
	haxe_ui_util_Defines._map.h[name] = value;
};
haxe_ui_util_Defines.popuplate = function() {
	if(haxe_ui_util_Defines._map != null) {
		return;
	}
	haxe_ui_util_Defines._map = new haxe_ds_StringMap();
	if(haxe_ui_core_Platform.get_instance().get_isWindows()) {
		haxe_ui_util_Defines.set("windows","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isLinux()) {
		haxe_ui_util_Defines.set("linux","1");
	} else if(haxe_ui_core_Platform.get_instance().get_isMac()) {
		haxe_ui_util_Defines.set("mac","1");
	}
};
haxe_ui_util_Defines.toObject = function() {
	haxe_ui_util_Defines.popuplate();
	var o = { };
	var h = haxe_ui_util_Defines._map.h;
	var k_h = h;
	var k_keys = Object.keys(h);
	var k_length = k_keys.length;
	var k_current = 0;
	while(k_current < k_length) {
		var k = k_keys[k_current++];
		var v = haxe_ui_util_Defines._map.h[k];
		o[k] = v;
	}
	return o;
};
var haxe_ui_util_EventMap = function() {
	this._map = new haxe_ds_StringMap();
};
$hxClasses["haxe.ui.util.EventMap"] = haxe_ui_util_EventMap;
haxe_ui_util_EventMap.__name__ = "haxe.ui.util.EventMap";
haxe_ui_util_EventMap.prototype = {
	_map: null
	,keys: function() {
		return new haxe_ds__$StringMap_StringMapKeyIterator(this._map.h);
	}
	,add: function(type,listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr == null) {
			arr = new haxe_ui_util_FunctionArray();
			arr.push(listener,priority);
			this._map.h[type] = arr;
			b = true;
		} else if(arr.contains(listener) == false) {
			arr.push(listener,priority);
		}
		return b;
	}
	,remove: function(type,listener) {
		if(listener == null) {
			return false;
		}
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			arr.remove(listener);
			if(arr.get_length() == 0) {
				var _this = this._map;
				if(Object.prototype.hasOwnProperty.call(_this.h,type)) {
					delete(_this.h[type]);
				}
				b = true;
			}
		}
		return b;
	}
	,contains: function(type,listener) {
		var b = false;
		var arr = this._map.h[type];
		if(arr != null) {
			b = listener != null ? arr.contains(listener) : true;
		}
		return b;
	}
	,invoke: function(type,event,target) {
		if(event.bubble && event.target == null) {
			event.target = target;
		}
		var arr = this._map.h[type];
		if(arr != null && arr.get_length() > 0) {
			arr = arr.copy();
			var listener = arr.iterator();
			while(listener.hasNext()) {
				var listener1 = listener.next();
				if(event.canceled) {
					break;
				}
				var c = event.clone();
				if(c.target == null) {
					c.target = target;
				}
				listener1.callback(c);
				event.copyFrom(c);
				event.canceled = c.canceled;
			}
		}
	}
	,listenerCount: function(type) {
		var n = 0;
		var arr = this._map.h[type];
		if(arr != null) {
			n = arr.get_length();
		}
		return n;
	}
	,listeners: function(type) {
		var arr = this._map.h[type];
		if(arr == null) {
			return null;
		}
		return arr;
	}
	,__class__: haxe_ui_util_EventMap
};
var haxe_ui_util_ExpressionUtil = function() { };
$hxClasses["haxe.ui.util.ExpressionUtil"] = haxe_ui_util_ExpressionUtil;
haxe_ui_util_ExpressionUtil.__name__ = "haxe.ui.util.ExpressionUtil";
haxe_ui_util_ExpressionUtil.stringToLanguageExpression = function(s,localeManager) {
	if(localeManager == null) {
		localeManager = "haxe.ui.locale.LocaleManager";
	}
	var fixedParts = [];
	var beforePos = 0;
	var n1 = s.indexOf("{{");
	while(n1 != -1) {
		var before = s.substring(beforePos,n1);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
		var n2 = s.indexOf("}}",n1);
		var code = s.substring(n1 + 2,n2);
		var parts = code.split(",");
		var stringId = parts.shift();
		var callString = localeManager + ".instance.lookupString('";
		callString += stringId;
		callString += "'";
		if(parts.length > 0) {
			callString += ", ";
			callString += parts.join(", ");
		}
		callString += ")";
		fixedParts.push(callString);
		n1 = s.indexOf("{{",n2);
		beforePos = n2 + 2;
	}
	if(beforePos < s.length) {
		var before = s.substring(beforePos,s.length);
		if(before.length > 0) {
			fixedParts.push("'" + before + "'");
		}
	}
	var fixedCode = fixedParts.join(" + ");
	return fixedCode;
};
var haxe_ui_util_FunctionArray = function() {
	this._array = [];
};
$hxClasses["haxe.ui.util.FunctionArray"] = haxe_ui_util_FunctionArray;
haxe_ui_util_FunctionArray.__name__ = "haxe.ui.util.FunctionArray";
haxe_ui_util_FunctionArray.prototype = {
	_array: null
	,get: function(index) {
		return this._array[index].callback;
	}
	,length: null
	,get_length: function() {
		return this._array.length;
	}
	,push: function(x,priority) {
		if(priority == null) {
			priority = 0;
		}
		var this1 = new haxe_ui_util__$Listener_ListenerInternal(x,priority);
		var listener = this1;
		var _g = 0;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].priority < priority) {
				this._array.splice(i,0,listener);
				return i;
			}
		}
		return this._array.push(listener);
	}
	,pop: function() {
		return this._array.pop().callback;
	}
	,indexOf: function(x,fromIndex) {
		if(fromIndex == null) {
			fromIndex = 0;
		}
		var _g = fromIndex;
		var _g1 = this._array.length;
		while(_g < _g1) {
			var i = _g++;
			if(this._array[i].callback == x) {
				return i;
			}
		}
		return -1;
	}
	,remove: function(x) {
		var index = this.indexOf(x);
		if(index != -1) {
			this._array.splice(index,1);
		}
		return index != -1;
	}
	,contains: function(x) {
		return this.indexOf(x) != -1;
	}
	,iterator: function() {
		return new haxe_iterators_ArrayIterator(this._array);
	}
	,copy: function() {
		var fa = new haxe_ui_util_FunctionArray();
		fa._array = this._array.slice();
		return fa;
	}
	,toString: function() {
		var s = "[";
		var iter = this.iterator();
		while(iter.hasNext()) {
			s += Std.string(iter.next());
			if(iter.hasNext()) {
				s += ", ";
			}
		}
		s += "]";
		return s;
	}
	,__class__: haxe_ui_util_FunctionArray
	,__properties__: {get_length:"get_length"}
};
var haxe_ui_util_GUID = function() { };
$hxClasses["haxe.ui.util.GUID"] = haxe_ui_util_GUID;
haxe_ui_util_GUID.__name__ = "haxe.ui.util.GUID";
haxe_ui_util_GUID.randomIntegerWithinRange = function(min,max) {
	return Math.floor(Math.random() * (1 + max - min) + min);
};
haxe_ui_util_GUID.createRandomIdentifier = function(length,radix) {
	if(radix == null) {
		radix = 61;
	}
	var characters = ["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"];
	var id = [];
	if(radix > 61) {
		radix = 61;
	}
	while(length-- > 0) id.push(characters[Math.floor(Math.random() * (1 + radix))]);
	return id.join("");
};
haxe_ui_util_GUID.uuid = function() {
	var specialChars = ["8","9","A","B"];
	return haxe_ui_util_GUID.createRandomIdentifier(8,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(4,15) + "-4" + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + specialChars[Math.floor(Math.random() * 4)] + haxe_ui_util_GUID.createRandomIdentifier(3,15) + "-" + haxe_ui_util_GUID.createRandomIdentifier(12,15);
};
var haxe_ui_util_ImageLoader = function(resource) {
	this._resource = resource;
};
$hxClasses["haxe.ui.util.ImageLoader"] = haxe_ui_util_ImageLoader;
haxe_ui_util_ImageLoader.__name__ = "haxe.ui.util.ImageLoader";
haxe_ui_util_ImageLoader.prototype = {
	_resource: null
	,load: function(callback) {
		if(haxe_ui_util_Variant.get_isString(this._resource)) {
			var stringResource = haxe_ui_util_Variant.toString(this._resource);
			stringResource = StringTools.trim(stringResource);
			if(StringTools.startsWith(stringResource,"http://") || StringTools.startsWith(stringResource,"https://")) {
				this.loadFromHttp(stringResource,callback);
			} else if(StringTools.startsWith(stringResource,"file://")) {
				var tmp = HxOverrides.substr(stringResource,7,null);
				haxe_ui_Toolkit.get_assets().imageFromFile(tmp,callback);
			} else {
				haxe_ui_Toolkit.get_assets().getImage(stringResource,callback);
			}
		} else if(haxe_ui_util_Variant.get_isImageData(this._resource)) {
			var imageData = haxe_ui_util_Variant.toImageData(this._resource);
			if(callback != null) {
				callback(haxe_ui_ToolkitAssets.get_instance().imageInfoFromImageData(imageData));
			}
		}
	}
	,loadFromHttp: function(url,callback) {
		var request = new XMLHttpRequest();
		request.open("GET",url);
		request.responseType = "arraybuffer";
		request.onreadystatechange = function(_) {
			if(request.readyState != 4) {
				return;
			}
			var s;
			try {
				s = request.status;
			} catch( _g ) {
				s = null;
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null && s >= 200 && s < 400) {
				haxe_ui_Toolkit.get_assets().imageFromBytes(haxe_io_Bytes.ofData(request.response),callback);
			} else if(s == null) {
				callback(null);
			} else {
				if(s == 0) {
					haxe_ui_Toolkit.get_assets().getImage(url,callback);
					return;
				}
				callback(null);
			}
		};
		request.onerror = function(x) {
		};
		request.send();
	}
	,__class__: haxe_ui_util_ImageLoader
};
var haxe_ui_util_Listener = {};
haxe_ui_util_Listener._new = function(callback,priority) {
	var this1 = new haxe_ui_util__$Listener_ListenerInternal(callback,priority);
	return this1;
};
haxe_ui_util_Listener.compareListener = function(a,b) {
	return a.callback == b.callback;
};
haxe_ui_util_Listener.compareFunction = function(a,b) {
	return a.callback == b;
};
haxe_ui_util_Listener.toFunc = function(this1) {
	return this1.callback;
};
var haxe_ui_util__$Listener_ListenerInternal = function(callback,priority) {
	this.callback = callback;
	this.priority = priority;
};
$hxClasses["haxe.ui.util._Listener.ListenerInternal"] = haxe_ui_util__$Listener_ListenerInternal;
haxe_ui_util__$Listener_ListenerInternal.__name__ = "haxe.ui.util._Listener.ListenerInternal";
haxe_ui_util__$Listener_ListenerInternal.prototype = {
	callback: null
	,priority: null
	,__class__: haxe_ui_util__$Listener_ListenerInternal
};
var haxe_ui_util_MathUtil = function() { };
$hxClasses["haxe.ui.util.MathUtil"] = haxe_ui_util_MathUtil;
haxe_ui_util_MathUtil.__name__ = "haxe.ui.util.MathUtil";
haxe_ui_util_MathUtil.distance = function(x1,y1,x2,y2) {
	return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
};
haxe_ui_util_MathUtil.round = function(v,precision) {
	if(precision == null) {
		precision = 0;
	}
	return Math.round(v * Math.pow(10,precision)) / Math.pow(10,precision);
};
haxe_ui_util_MathUtil.roundToNearest = function(v,n) {
	var r = v % n;
	if(r <= n / 2) {
		return Math.round(v - r);
	}
	return Math.round(v + n - r);
};
haxe_ui_util_MathUtil.clamp = function(v,min,max) {
	if(v == null || isNaN(v)) {
		return min;
	}
	if(min != null && v < min) {
		v = min;
	} else if(max != null && v > max) {
		v = max;
	}
	return v;
};
var haxe_ui_util_RTTI = function() { };
$hxClasses["haxe.ui.util.RTTI"] = haxe_ui_util_RTTI;
haxe_ui_util_RTTI.__name__ = "haxe.ui.util.RTTI";
haxe_ui_util_RTTI.addClassProperty = function(className,propertyName,propertyType) {
	className = className.toLowerCase();
	propertyName = propertyName.toLowerCase();
	propertyType = propertyType.toLowerCase();
	if(propertyType == "null<bool>") {
		propertyType = "bool";
	}
	if(propertyType == "null<int>") {
		propertyType = "int";
	}
	if(propertyType == "null<float>") {
		propertyType = "float";
	}
	if(haxe_ui_util_RTTI.classInfo == null) {
		haxe_ui_util_RTTI.classInfo = new haxe_ds_StringMap();
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null) {
		entry = { };
		haxe_ui_util_RTTI.classInfo.h[className] = entry;
	}
	if(entry.properties == null) {
		entry.properties = new haxe_ds_StringMap();
	}
	entry.properties.h[propertyName] = { propertyName : propertyName, propertyType : propertyType};
};
haxe_ui_util_RTTI.hasClassProperty = function(className,propertyName) {
	if(haxe_ui_util_RTTI.classInfo == null) {
		return false;
	}
	if(Object.prototype.hasOwnProperty.call(haxe_ui_util_RTTI.classInfo.h,className)) {
		return false;
	}
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	if(entry == null || entry.properties == null) {
		return false;
	}
	return Object.prototype.hasOwnProperty.call(entry.properties.h,propertyName);
};
haxe_ui_util_RTTI.load = function() {
	if(haxe_ui_util_RTTI.classInfo != null) {
		return;
	}
	var s = haxe_Resource.getString("haxeui_rtti");
	if(s == null) {
		return;
	}
	var unserializer = new haxe_Unserializer(s);
	haxe_ui_util_RTTI.classInfo = unserializer.unserialize();
};
haxe_ui_util_RTTI.getClassInfo = function(className) {
	haxe_ui_util_RTTI.load();
	className = className.toLowerCase();
	var entry = haxe_ui_util_RTTI.classInfo.h[className];
	return entry;
};
haxe_ui_util_RTTI.save = function() {
};
var haxe_ui_util_SimpleExpressionEvaluatorOperation = $hxEnums["haxe.ui.util.SimpleExpressionEvaluatorOperation"] = { __ename__:true,__constructs__:null
	,Add: {_hx_name:"Add",_hx_index:0,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Subtract: {_hx_name:"Subtract",_hx_index:1,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Multiply: {_hx_name:"Multiply",_hx_index:2,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Divide: {_hx_name:"Divide",_hx_index:3,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,Equals: {_hx_name:"Equals",_hx_index:4,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,NotEquals: {_hx_name:"NotEquals",_hx_index:5,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThan: {_hx_name:"GreaterThan",_hx_index:6,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,GreaterThanOrEquals: {_hx_name:"GreaterThanOrEquals",_hx_index:7,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThan: {_hx_name:"LessThan",_hx_index:8,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LessThanOrEquals: {_hx_name:"LessThanOrEquals",_hx_index:9,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalAnd: {_hx_name:"LogicalAnd",_hx_index:10,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
	,LogicalOr: {_hx_name:"LogicalOr",_hx_index:11,__enum__:"haxe.ui.util.SimpleExpressionEvaluatorOperation",toString:$estr}
};
haxe_ui_util_SimpleExpressionEvaluatorOperation.__constructs__ = [haxe_ui_util_SimpleExpressionEvaluatorOperation.Add,haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract,haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply,haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide,haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals,haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan,haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd,haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr];
var haxe_ui_util_SimpleExpressionEvaluator = function() { };
$hxClasses["haxe.ui.util.SimpleExpressionEvaluator"] = haxe_ui_util_SimpleExpressionEvaluator;
haxe_ui_util_SimpleExpressionEvaluator.__name__ = "haxe.ui.util.SimpleExpressionEvaluator";
haxe_ui_util_SimpleExpressionEvaluator.evalCondition = function(condition) {
	return haxe_ui_util_SimpleExpressionEvaluator.eval(condition,{ Backend : haxe_ui_Backend, backend : haxe_ui_Backend.get_id(), defined : haxe_ui_util_SimpleExpressionEvaluator.defined});
};
haxe_ui_util_SimpleExpressionEvaluator.defined = function(key) {
	var this1 = haxe_ui_util_Defines.getAll();
	return Object.prototype.hasOwnProperty.call(this1.h,key);
};
haxe_ui_util_SimpleExpressionEvaluator.eval = function(s,context) {
	var r = null;
	if(s.indexOf("||") != -1) {
		var parts = s.split("||");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r || haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else if(s.indexOf("&&") != -1) {
		var parts = s.split("&&");
		var _g = 0;
		while(_g < parts.length) {
			var p = parts[_g];
			++_g;
			if(r == null) {
				r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			} else {
				r = r && haxe_ui_util_SimpleExpressionEvaluator.evalSingle(StringTools.trim(p),context);
			}
		}
	} else {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	return r;
};
haxe_ui_util_SimpleExpressionEvaluator.evalSingle = function(s,context) {
	var result = null;
	var operation = null;
	var token = "";
	var inString = false;
	var _g = 0;
	var _g1 = s.length;
	while(_g < _g1) {
		var i = _g++;
		var ch = s.charAt(i);
		var next = s.charAt(i + 1);
		if(ch == "'" || ch == "\"") {
			inString = !inString;
		}
		if(inString == false) {
			if(ch == "+") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Add;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "-") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Subtract;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "*") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Multiply;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "/") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Divide;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == ">" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "<" && next != "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThan;
				s = HxOverrides.substr(s,i + 1,null);
				break;
			} else if(ch == "=" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.Equals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "!" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.NotEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == ">" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.GreaterThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "<" && next == "=") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LessThanOrEquals;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "&" && next == "&") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalAnd;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			} else if(ch == "|" && next == "|") {
				operation = haxe_ui_util_SimpleExpressionEvaluatorOperation.LogicalOr;
				s = HxOverrides.substr(s,i + 2,null);
				break;
			}
		}
		token += ch;
		if(i == s.length - 1) {
			s = "";
			break;
		}
	}
	var r = null;
	if(s.length > 0) {
		r = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(s,context);
	}
	var trimmedToken = StringTools.trim(token);
	var v = parseFloat(trimmedToken);
	if(!isNaN(v) && isFinite(v)) {
		result = parseFloat(trimmedToken);
	} else {
		var value = trimmedToken;
		value = value.toLowerCase();
		if(value == "true" || value == "false") {
			result = trimmedToken.toLowerCase() == "true";
		} else if(StringTools.startsWith(trimmedToken,"'") && StringTools.endsWith(trimmedToken,"'") ? true : StringTools.startsWith(trimmedToken,"\"") && StringTools.endsWith(trimmedToken,"\"")) {
			result = HxOverrides.substr(trimmedToken,1,trimmedToken.length - 2);
		} else {
			var token = "";
			var bracketsOpen = 0;
			var call = null;
			var callParams = null;
			var _g = 0;
			var _g1 = trimmedToken.length;
			while(_g < _g1) {
				var i = _g++;
				var ch = trimmedToken.charAt(i);
				if(ch == "(") {
					++bracketsOpen;
					if(bracketsOpen == 1) {
						call = token;
						token = "";
					} else {
						token += ch;
					}
				} else if(ch == ")") {
					--bracketsOpen;
					if(bracketsOpen == 0) {
						callParams = token;
					} else {
						token += ")";
					}
				} else {
					token += ch;
				}
			}
			var prop = null;
			if(call == null) {
				prop = token;
			}
			var parsedCallParams = [];
			if(callParams != null) {
				bracketsOpen = 0;
				token = "";
				var _g = 0;
				var _g1 = callParams.length;
				while(_g < _g1) {
					var i = _g++;
					var ch = callParams.charAt(i);
					if(ch == "(") {
						++bracketsOpen;
					} else if(ch == ")") {
						--bracketsOpen;
					}
					if(ch == ",") {
						if(bracketsOpen == 0) {
							parsedCallParams.push(token);
							token = "";
						} else {
							token += ch;
						}
					} else {
						token += ch;
					}
				}
				if(token.length != 0) {
					parsedCallParams.push(token);
				}
			}
			if(call != null) {
				var trimmedCall = StringTools.trim(call);
				if(trimmedCall.length > 0) {
					var callParts = trimmedCall.split(".");
					var ref = context;
					var prevRef = null;
					var _g = 0;
					while(_g < callParts.length) {
						var callPart = callParts[_g];
						++_g;
						prevRef = ref;
						if(Object.prototype.hasOwnProperty.call(ref,callPart)) {
							ref = Reflect.field(ref,callPart);
						} else {
							ref = Reflect.getProperty(ref,callPart);
						}
						if(ref == null) {
							throw haxe_Exception.thrown(callPart + " not found");
						}
					}
					if(ref != null && Reflect.isFunction(ref)) {
						var paramValues = [];
						var _g = 0;
						while(_g < parsedCallParams.length) {
							var param = parsedCallParams[_g];
							++_g;
							var paramResult = haxe_ui_util_SimpleExpressionEvaluator.evalSingle(param,context);
							paramValues.push(paramResult);
						}
						result = ref.apply(prevRef,paramValues);
					}
				}
			} else if(prop != null) {
				var trimmedProp = StringTools.trim(prop);
				if(trimmedProp.length > 0) {
					var propParts = trimmedProp.split(".");
					var propName = propParts.pop();
					var ref = context;
					var _g = 0;
					while(_g < propParts.length) {
						var propPart = propParts[_g];
						++_g;
						ref = Reflect.field(ref,propPart);
					}
					if(Object.prototype.hasOwnProperty.call(ref,propName)) {
						result = Reflect.field(ref,propName);
					} else {
						result = Reflect.getProperty(ref,propName);
					}
				}
			}
		}
	}
	if(r != null) {
		switch(operation._hx_index) {
		case 0:
			result += r;
			break;
		case 1:
			result -= r;
			break;
		case 2:
			result *= r;
			break;
		case 3:
			result /= r;
			break;
		case 4:
			result = result == r;
			break;
		case 5:
			result = result != r;
			break;
		case 6:
			result = result > r;
			break;
		case 7:
			result = result >= r;
			break;
		case 8:
			result = result < r;
			break;
		case 9:
			result = result <= r;
			break;
		case 10:
			result = result && r;
			break;
		case 11:
			result = result || r;
			break;
		}
	}
	return result;
};
haxe_ui_util_SimpleExpressionEvaluator.isNum = function(value) {
	var v = parseFloat(value);
	if(!isNaN(v)) {
		return isFinite(v);
	} else {
		return false;
	}
};
haxe_ui_util_SimpleExpressionEvaluator.isString = function(value) {
	if(StringTools.startsWith(value,"'") && StringTools.endsWith(value,"'")) {
		return true;
	}
	if(StringTools.startsWith(value,"\"") && StringTools.endsWith(value,"\"")) {
		return true;
	}
	return false;
};
haxe_ui_util_SimpleExpressionEvaluator.isBool = function(value) {
	value = value.toLowerCase();
	if(value != "true") {
		return value == "false";
	} else {
		return true;
	}
};
var haxe_ui_util_StringUtil = function() { };
$hxClasses["haxe.ui.util.StringUtil"] = haxe_ui_util_StringUtil;
haxe_ui_util_StringUtil.__name__ = "haxe.ui.util.StringUtil";
haxe_ui_util_StringUtil.uncapitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toLowerCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeFirstLetter = function(s) {
	s = HxOverrides.substr(s,0,1).toUpperCase() + HxOverrides.substr(s,1,s.length);
	return s;
};
haxe_ui_util_StringUtil.capitalizeHyphens = function(s) {
	return haxe_ui_util_StringUtil.capitalizeDelim(s,"-");
};
haxe_ui_util_StringUtil.capitalizeDelim = function(s,d) {
	var r = s;
	var n = r.indexOf(d);
	while(n != -1) {
		var before = HxOverrides.substr(r,0,n);
		var after = HxOverrides.substr(r,n + 1,r.length);
		r = before + haxe_ui_util_StringUtil.capitalizeFirstLetter(after);
		n = r.indexOf(d,n + 1);
	}
	return r;
};
haxe_ui_util_StringUtil.toDashes = function(s,toLower) {
	if(toLower == null) {
		toLower = true;
	}
	var s1 = new EReg("([a-zA-Z])(?=[A-Z])","g").map(s,function(re) {
		return "" + re.matched(1) + "-";
	});
	if(toLower == true) {
		s1 = s1.toLowerCase();
	}
	return s1;
};
haxe_ui_util_StringUtil.replaceVars = function(s,params) {
	if(params != null) {
		var h = params.h;
		var k_h = h;
		var k_keys = Object.keys(h);
		var k_length = k_keys.length;
		var k_current = 0;
		while(k_current < k_length) {
			var k = k_keys[k_current++];
			s = StringTools.replace(s,"${" + k + "}",params.h[k]);
		}
	}
	return s;
};
haxe_ui_util_StringUtil.rpad = function(s,count,c) {
	if(c == null) {
		c = " ";
	}
	var _g = 0;
	var _g1 = count;
	while(_g < _g1) {
		var i = _g++;
		s += c;
	}
	return s;
};
haxe_ui_util_StringUtil.padDecimal = function(v,precision) {
	var s = v == null ? "null" : "" + v;
	if(precision == null || precision <= 0) {
		return s;
	}
	var n = s.indexOf(".");
	if(n == -1) {
		n = s.length;
		s += ".";
	}
	var delta = precision - (s.length - n - 1);
	return haxe_ui_util_StringUtil.rpad(s,delta,"0");
};
haxe_ui_util_StringUtil.countTokens = function(s,token) {
	if(s == null || s == "") {
		return 0;
	}
	return s.split(token).length - 1;
};
var haxe_ui_util_StyleUtil = function() { };
$hxClasses["haxe.ui.util.StyleUtil"] = haxe_ui_util_StyleUtil;
haxe_ui_util_StyleUtil.__name__ = "haxe.ui.util.StyleUtil";
haxe_ui_util_StyleUtil.styleProperty2ComponentProperty = function(property) {
	return haxe_ui_util_StyleUtil.style2ComponentEReg.map(property,function(re) {
		return re.matched(1).toUpperCase();
	});
};
haxe_ui_util_StyleUtil.componentProperty2StyleProperty = function(property) {
	return haxe_ui_util_StyleUtil.component2StyleEReg.map(property,function(re) {
		return "-" + re.matched(1).toLowerCase();
	});
};
var haxe_ui_util_Timer = function(delay,callback) {
	haxe_ui_backend_TimerImpl.call(this,delay,callback);
};
$hxClasses["haxe.ui.util.Timer"] = haxe_ui_util_Timer;
haxe_ui_util_Timer.__name__ = "haxe.ui.util.Timer";
haxe_ui_util_Timer.delay = function(f,timeMs) {
	var t = null;
	t = new haxe_ui_util_Timer(timeMs,function() {
		t.stop();
		f();
	});
	return t;
};
haxe_ui_util_Timer.__super__ = haxe_ui_backend_TimerImpl;
haxe_ui_util_Timer.prototype = $extend(haxe_ui_backend_TimerImpl.prototype,{
	stop: function() {
		haxe_ui_backend_TimerImpl.prototype.stop.call(this);
	}
	,__class__: haxe_ui_util_Timer
});
var haxe_ui_util_TypeConverter = function() { };
$hxClasses["haxe.ui.util.TypeConverter"] = haxe_ui_util_TypeConverter;
haxe_ui_util_TypeConverter.__name__ = "haxe.ui.util.TypeConverter";
haxe_ui_util_TypeConverter.convertFrom = function(input) {
	var output = input;
	var _g = Type.typeof(input);
	if(_g._hx_index == 6) {
		if(_g.c == String) {
			var s = Std.string(input);
			if(s == "true" || s == "false") {
				output = s == "true";
			} else if(new EReg("^-?[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = Std.parseInt(s);
			} else if(new EReg("^-?[0-9]*\\.[0-9]*$","i").match(s == null ? "null" : "" + s)) {
				output = parseFloat(s);
			}
		}
	}
	return output;
};
haxe_ui_util_TypeConverter.convertTo = function(input,type) {
	if(type == null) {
		return input;
	}
	switch(type.toLowerCase()) {
	case "bool":
		return Std.string(input) == "true";
	case "string":
		return Std.string(input);
	}
	return input;
};
var haxe_ui_util_VariantType = $hxEnums["haxe.ui.util.VariantType"] = { __ename__:true,__constructs__:null
	,VT_Int: ($_=function(s) { return {_hx_index:0,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Int",$_.__params__ = ["s"],$_)
	,VT_Float: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Float",$_.__params__ = ["s"],$_)
	,VT_String: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_String",$_.__params__ = ["s"],$_)
	,VT_Bool: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Bool",$_.__params__ = ["s"],$_)
	,VT_Array: ($_=function(s) { return {_hx_index:4,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Array",$_.__params__ = ["s"],$_)
	,VT_DataSource: ($_=function(s) { return {_hx_index:5,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_DataSource",$_.__params__ = ["s"],$_)
	,VT_Component: ($_=function(s) { return {_hx_index:6,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Component",$_.__params__ = ["s"],$_)
	,VT_Date: ($_=function(s) { return {_hx_index:7,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_Date",$_.__params__ = ["s"],$_)
	,VT_ImageData: ($_=function(s) { return {_hx_index:8,s:s,__enum__:"haxe.ui.util.VariantType",toString:$estr}; },$_._hx_name="VT_ImageData",$_.__params__ = ["s"],$_)
};
haxe_ui_util_VariantType.__constructs__ = [haxe_ui_util_VariantType.VT_Int,haxe_ui_util_VariantType.VT_Float,haxe_ui_util_VariantType.VT_String,haxe_ui_util_VariantType.VT_Bool,haxe_ui_util_VariantType.VT_Array,haxe_ui_util_VariantType.VT_DataSource,haxe_ui_util_VariantType.VT_Component,haxe_ui_util_VariantType.VT_Date,haxe_ui_util_VariantType.VT_ImageData];
var haxe_ui_util_Variant = {};
haxe_ui_util_Variant.__properties__ = {get_isNull:"get_isNull",get_isDataSource:"get_isDataSource",get_isImageData:"get_isImageData",get_isComponent:"get_isComponent",get_isDate:"get_isDate",get_isArray:"get_isArray",get_isBool:"get_isBool",get_isNumber:"get_isNumber",get_isInt:"get_isInt",get_isFloat:"get_isFloat",get_isString:"get_isString"};
haxe_ui_util_Variant.fromString = function(s) {
	return haxe_ui_util_VariantType.VT_String(s);
};
haxe_ui_util_Variant.toString = function(this1) {
	if(this1 == null) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 1:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 2:
		var s = this1.s;
		return s;
	case 3:
		var s = this1.s;
		if(s == null) {
			return "null";
		} else {
			return "" + s;
		}
		break;
	case 4:
		var s = this1.s;
		return Std.string(s);
	case 5:
		var _g = this1.s;
		return "";
	case 6:
		var s = this1.s;
		return Std.string(s);
	case 7:
		var s = this1.s;
		return Std.string(s);
	case 8:
		var s = this1.s;
		return "";
	}
};
haxe_ui_util_Variant.get_isString = function(this1) {
	if(this1._hx_index == 2) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromFloat = function(s) {
	return haxe_ui_util_VariantType.VT_Float(s);
};
haxe_ui_util_Variant.toFloat = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isFloat = function(this1) {
	if(this1._hx_index == 1) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.fromInt = function(s) {
	return haxe_ui_util_VariantType.VT_Int(s);
};
haxe_ui_util_Variant.toInt = function(this1) {
	if(haxe_ui_util_Variant.get_isNull(this1)) {
		return null;
	}
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s | 0;
	default:
		throw haxe_Exception.thrown("Variant Type Error " + Std.string(this1));
	}
};
haxe_ui_util_Variant.get_isInt = function(this1) {
	if(this1._hx_index == 0) {
		var _g = this1.s;
		return true;
	} else {
		return false;
	}
};
haxe_ui_util_Variant.get_isNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		return true;
	case 1:
		var _g = this1.s;
		return true;
	default:
		return false;
	}
};
haxe_ui_util_Variant.toNumber = function(this1) {
	switch(this1._hx_index) {
	case 0:
		var s = this1.s;
		return s;
	case 1:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.fromBool = function(s) {
	return haxe_ui_util_VariantType.VT_Bool(s);
};
haxe_ui_util_Variant.toBool = function(this1) {
	if(this1 == null) {
		return false;
	}
	switch(this1._hx_index) {
	case 2:
		var s = this1.s;
		return s == "true";
	case 3:
		var s = this1.s;
		return s;
	default:
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isBool = function(this1) {
	if(this1._hx_index == 3) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromArray = function(s) {
	if(s == null) {
		return null;
	} else {
		return haxe_ui_util_VariantType.VT_Array(s);
	}
};
haxe_ui_util_Variant.toArray = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 4) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isArray = function(this1) {
	if(this1._hx_index == 4) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDate = function(s) {
	return haxe_ui_util_VariantType.VT_Date(s);
};
haxe_ui_util_Variant.toDate = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 7) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDate = function(this1) {
	if(this1._hx_index == 7) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromComponent = function(s) {
	return haxe_ui_util_VariantType.VT_Component(s);
};
haxe_ui_util_Variant.toComponent = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 6) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isComponent = function(this1) {
	if(this1._hx_index == 6) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromImageData = function(s) {
	return haxe_ui_util_VariantType.VT_ImageData(s);
};
haxe_ui_util_Variant.toImageData = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 8) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isImageData = function(this1) {
	if(this1._hx_index == 8) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.fromDataSource = function(s) {
	return haxe_ui_util_VariantType.VT_DataSource(s);
};
haxe_ui_util_Variant.toDataSource = function(this1) {
	if(this1 == null) {
		return null;
	}
	if(this1._hx_index == 5) {
		var s = this1.s;
		return s;
	} else {
		throw haxe_Exception.thrown("Variant Type Error");
	}
};
haxe_ui_util_Variant.get_isDataSource = function(this1) {
	if(this1._hx_index == 5) {
		var _g = this1.s;
		return true;
	}
	return false;
};
haxe_ui_util_Variant.addFloat = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.addInt = function(lhs,rhs) {
	return lhs + haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.subtractFloat = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toNumber(rhs);
};
haxe_ui_util_Variant.subtractInt = function(lhs,rhs) {
	return lhs - haxe_ui_util_Variant.toInt(rhs);
};
haxe_ui_util_Variant.add = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) + haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(haxe_ui_util_Variant.toString(this1) + haxe_ui_util_Variant.toString(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preInc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) + 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.subtract = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) - haxe_ui_util_Variant.toNumber(rhs));
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.fromString(StringTools.replace(haxe_ui_util_Variant.toString(this1),haxe_ui_util_Variant.toString(rhs),""));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.postDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		var old = this1;
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return old;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.preDeinc = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		this1 = haxe_ui_util_VariantType.VT_Float(haxe_ui_util_Variant.toNumber(this1) - 1);
		return this1;
	} else {
		throw haxe_Exception.thrown("Variant operation error");
	}
};
haxe_ui_util_Variant.multiply = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) * haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.divide = function(this1,rhs) {
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(haxe_ui_util_Variant.toNumber(this1) / haxe_ui_util_Variant.toNumber(rhs));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) > haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) > haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.gte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) >= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) >= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lt = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) < haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) < haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.lte = function(this1,rhs) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) <= haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1)) {
		return haxe_ui_util_Variant.toString(this1) <= haxe_ui_util_Variant.toString(rhs);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.negate = function(this1) {
	var tmp;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp = true;
		break;
	case 1:
		var _g = this1.s;
		tmp = true;
		break;
	default:
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.fromFloat(-haxe_ui_util_Variant.toNumber(this1));
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.invert = function(this1) {
	if(haxe_ui_util_Variant.get_isBool(this1)) {
		var v = haxe_ui_util_Variant.toBool(this1);
		v = !v;
		return haxe_ui_util_Variant.fromBool(v);
	}
	throw haxe_Exception.thrown("Variant operation error");
};
haxe_ui_util_Variant.eq = function(this1,rhs) {
	if(haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return true;
	}
	if(haxe_ui_util_Variant.get_isNull(this1) && !haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	if(!haxe_ui_util_Variant.get_isNull(this1) && haxe_ui_util_Variant.get_isNull(rhs)) {
		return false;
	}
	var tmp;
	var tmp1;
	switch(this1._hx_index) {
	case 0:
		var _g = this1.s;
		tmp1 = true;
		break;
	case 1:
		var _g = this1.s;
		tmp1 = true;
		break;
	default:
		tmp1 = false;
	}
	if(tmp1) {
		switch(rhs._hx_index) {
		case 0:
			var _g = rhs.s;
			tmp = true;
			break;
		case 1:
			var _g = rhs.s;
			tmp = true;
			break;
		default:
			tmp = false;
		}
	} else {
		tmp = false;
	}
	if(tmp) {
		return haxe_ui_util_Variant.toNumber(this1) == haxe_ui_util_Variant.toNumber(rhs);
	} else if(haxe_ui_util_Variant.get_isBool(this1) && haxe_ui_util_Variant.get_isBool(rhs)) {
		return haxe_ui_util_Variant.toBool(this1) == haxe_ui_util_Variant.toBool(rhs);
	} else if(haxe_ui_util_Variant.get_isString(this1) && haxe_ui_util_Variant.get_isString(rhs)) {
		return haxe_ui_util_Variant.toString(this1) == haxe_ui_util_Variant.toString(rhs);
	}
	return false;
};
haxe_ui_util_Variant.neq = function(this1,rhs) {
	return !haxe_ui_util_Variant.eq(this1,rhs);
};
haxe_ui_util_Variant.get_isNull = function(this1) {
	if(this1 != null) {
		return haxe_ui_util_Variant.toString(this1) == null;
	} else {
		return true;
	}
};
haxe_ui_util_Variant.fromDynamic = function(r) {
	var v = null;
	if(r != null) {
		var tmp;
		if(haxe_ui_util_Variant.containsOnlyDigits(r)) {
			var f = parseFloat(("" + Std.string(r)));
			tmp = isNaN(f) == false;
		} else {
			tmp = false;
		}
		if(tmp) {
			if(Std.string(r).indexOf(".") != -1) {
				v = haxe_ui_util_Variant.fromFloat(parseFloat(("" + Std.string(r))));
			} else {
				v = haxe_ui_util_Variant.fromInt(Std.parseInt("" + Std.string(r)));
			}
		} else if("" + Std.string(r) == "true" || Std.string(r) + "" == "false") {
			v = haxe_ui_util_Variant.fromBool("" + Std.string(r) == "true");
		} else if(typeof(r) == "string") {
			v = haxe_ui_util_Variant.fromString(js_Boot.__cast(r , String));
		} else if(((r) instanceof haxe_ui_core_Component)) {
			v = haxe_ui_util_Variant.fromComponent(js_Boot.__cast(r , haxe_ui_core_Component));
		} else if(((r) instanceof haxe_ui_data_DataSource)) {
			v = r;
		} else if(((r) instanceof Array)) {
			v = r;
		} else if(((r) instanceof Date)) {
			v = haxe_ui_util_Variant.fromDate(js_Boot.__cast(r , Date));
		} else if(((r) instanceof HTMLImageElement)) {
			v = haxe_ui_util_Variant.fromImageData(js_Boot.__cast(r , HTMLImageElement));
		} else {
			v = r;
		}
	}
	return v;
};
haxe_ui_util_Variant.containsOnlyDigits = function(s) {
	if(typeof(s) == "number" && ((s | 0) === s) || typeof(s) == "number") {
		return true;
	}
	var t = Std.string(s);
	var _g = 0;
	var _g1 = t.length;
	while(_g < _g1) {
		var i = _g++;
		var c = t.charAt(i);
		if(c != "0" && c != "1" && c != "2" && c != "3" && c != "4" && c != "5" && c != "6" && c != "7" && c != "8" && c != "9" && c != "." && c != "-") {
			return false;
		}
	}
	return true;
};
haxe_ui_util_Variant.toDynamic = function(v) {
	var d = v;
	if(v != null) {
		switch(v._hx_index) {
		case 0:
			var y = v.s;
			d = y;
			break;
		case 1:
			var y = v.s;
			d = y;
			break;
		case 2:
			var y = v.s;
			d = y;
			break;
		case 3:
			var y = v.s;
			d = y;
			break;
		case 4:
			var y = v.s;
			d = y;
			break;
		case 5:
			var y = v.s;
			d = y;
			break;
		case 6:
			var y = v.s;
			d = y;
			break;
		case 7:
			var y = v.s;
			d = y;
			break;
		case 8:
			var y = v.s;
			d = y;
			break;
		}
	}
	return d;
};
var haxe_xml_XmlParserException = function(message,xml,position) {
	this.xml = xml;
	this.message = message;
	this.position = position;
	this.lineNumber = 1;
	this.positionAtLine = 0;
	var _g = 0;
	var _g1 = position;
	while(_g < _g1) {
		var i = _g++;
		var c = xml.charCodeAt(i);
		if(c == 10) {
			this.lineNumber++;
			this.positionAtLine = 0;
		} else if(c != 13) {
			this.positionAtLine++;
		}
	}
};
$hxClasses["haxe.xml.XmlParserException"] = haxe_xml_XmlParserException;
haxe_xml_XmlParserException.__name__ = "haxe.xml.XmlParserException";
haxe_xml_XmlParserException.prototype = {
	message: null
	,lineNumber: null
	,positionAtLine: null
	,position: null
	,xml: null
	,toString: function() {
		var c = js_Boot.getClass(this);
		return c.__name__ + ": " + this.message + " at line " + this.lineNumber + " char " + this.positionAtLine;
	}
	,__class__: haxe_xml_XmlParserException
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = "haxe.xml.Parser";
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) {
		strict = false;
	}
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) {
		p = 0;
	}
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(p < str.length) {
		var c = str.charCodeAt(p);
		switch(state) {
		case 0:
			switch(c) {
			case 9:case 10:case 13:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			if(c == 60) {
				state = 0;
				next = 2;
			} else {
				start = p;
				state = 13;
				continue;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <![CDATA[",str,p));
					}
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!DOCTYPE",str,p));
					}
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected <!--",str,p));
				} else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 47:
				if(parent == null) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				start = p + 1;
				state = 0;
				next = 10;
				break;
			case 63:
				state = 14;
				start = p;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				++nsubs;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected attribute name",str,p));
				}
				var tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Duplicate attribute [" + aname + "]",str,p));
				}
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			if(c == 61) {
				state = 0;
				next = 7;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected =",str,p));
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected \"",str,p));
			}
			break;
		case 8:
			switch(c) {
			case 38:
				var len = p - start;
				buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 60:case 62:
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid unescaped " + String.fromCodePoint(c) + " in attribute value",str,p));
				} else if(c == attrValQuote) {
					var len1 = p - start;
					buf.b += len1 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len1);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					var len2 = p - start;
					buf.b += len2 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len2);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected node name",str,p));
				}
				var v = HxOverrides.substr(str,start,p - start);
				if(parent == null || parent.nodeType != 0) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected </" + v + ">, tag is not open",str,p));
				}
				if(parent.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
				}
				if(v != parent.nodeName) {
					if(parent.nodeType != Xml.Element) {
						throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
					}
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected </" + parent.nodeName + ">",str,p));
				}
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 11:
			if(c == 62) {
				state = 1;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 12:
			if(c == 62) {
				if(nsubs == 0) {
					parent.addChild(Xml.createPCData(""));
				}
				return p;
			} else {
				throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Expected >",str,p));
			}
			break;
		case 13:
			if(c == 60) {
				var len3 = p - start;
				buf.b += len3 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len3);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				++nsubs;
				state = 0;
				next = 2;
			} else if(c == 38) {
				var len4 = p - start;
				buf.b += len4 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len4);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				++p;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				parent.addChild(Xml.createProcessingInstruction(str1));
				++nsubs;
				state = 1;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				parent.addChild(Xml.createComment(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) {
				++nbrackets;
			} else if(c == 93) {
				--nbrackets;
			} else if(c == 62 && nbrackets == 0) {
				parent.addChild(Xml.createDocType(HxOverrides.substr(str,start,p - start)));
				++nsubs;
				state = 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				++nsubs;
				p += 2;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1 = s.charCodeAt(1) == 120 ? Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)) : Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCodePoint(c1);
				} else if(!Object.prototype.hasOwnProperty.call(haxe_xml_Parser.escapes.h,s)) {
					if(strict) {
						throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Undefined entity: " + s,str,p));
					}
					buf.b += Std.string("&" + s + ";");
				} else {
					buf.b += Std.string(haxe_xml_Parser.escapes.h[s]);
				}
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) {
					throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Invalid character in entity: " + String.fromCodePoint(c),str,p));
				}
				buf.b += String.fromCodePoint(38);
				var len5 = p - start;
				buf.b += len5 == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len5);
				--p;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		++p;
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(parent.nodeType == 0) {
			if(parent.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (parent.nodeType == null ? "null" : XmlType.toString(parent.nodeType)));
			}
			throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unclosed node <" + parent.nodeName + ">",str,p));
		}
		if(p != start || nsubs == 0) {
			var len = p - start;
			buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
			parent.addChild(Xml.createPCData(buf.b));
			++nsubs;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += String.fromCodePoint(38);
		var len = p - start;
		buf.b += len == null ? HxOverrides.substr(str,start,null) : HxOverrides.substr(str,start,len);
		parent.addChild(Xml.createPCData(buf.b));
		++nsubs;
		return p;
	}
	throw haxe_Exception.thrown(new haxe_xml_XmlParserException("Unexpected end",str,p));
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = "haxe.xml.Printer";
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) {
		pretty = false;
	}
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	output: null
	,pretty: null
	,writeNode: function(value,tabs) {
		switch(value.nodeType) {
		case 0:
			this.output.b += Std.string(tabs + "<");
			if(value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeName);
			var attribute = value.attributes();
			while(attribute.hasNext()) {
				var attribute1 = attribute.next();
				this.output.b += Std.string(" " + attribute1 + "=\"");
				var input = StringTools.htmlEscape(value.get(attribute1),true);
				this.output.b += Std.string(input);
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				var _g_current = 0;
				var _g_array = value.children;
				while(_g_current < _g_array.length) {
					var child = _g_array[_g_current++];
					this.writeNode(child,this.pretty ? tabs + "\t" : tabs);
				}
				this.output.b += Std.string(tabs + "</");
				if(value.nodeType != Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, expected Element but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
				}
				this.output.b += Std.string(value.nodeName);
				this.output.b += ">";
				if(this.pretty) {
					this.output.b += "\n";
				}
			} else {
				this.output.b += "/>";
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 1:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				var input = tabs + StringTools.htmlEscape(nodeValue);
				this.output.b += Std.string(input);
				if(this.pretty) {
					this.output.b += "\n";
				}
			}
			break;
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string(value.nodeValue);
			this.output.b += "]]>";
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 3:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var commentContent = value.nodeValue;
			var _this_r = new RegExp("[\n\r\t]+","g".split("u").join(""));
			commentContent = commentContent.replace(_this_r,"");
			commentContent = "<!--" + commentContent + "-->";
			this.output.b += tabs == null ? "null" : "" + tabs;
			var input = StringTools.trim(commentContent);
			this.output.b += Std.string(input);
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 4:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<!DOCTYPE " + value.nodeValue + ">");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 5:
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, unexpected " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			this.output.b += Std.string("<?" + value.nodeValue + "?>");
			if(this.pretty) {
				this.output.b += "\n";
			}
			break;
		case 6:
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
				throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
			}
			var _g_current = 0;
			var _g_array = value.children;
			while(_g_current < _g_array.length) {
				var child = _g_array[_g_current++];
				this.writeNode(child,tabs);
			}
			break;
		}
	}
	,hasChildren: function(value) {
		if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) {
			throw haxe_Exception.thrown("Bad node type, expected Element or Document but found " + (value.nodeType == null ? "null" : XmlType.toString(value.nodeType)));
		}
		var _g_current = 0;
		var _g_array = value.children;
		while(_g_current < _g_array.length) {
			var child = _g_array[_g_current++];
			switch(child.nodeType) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) {
					throw haxe_Exception.thrown("Bad node type, unexpected " + (child.nodeType == null ? "null" : XmlType.toString(child.nodeType)));
				}
				if(StringTools.ltrim(child.nodeValue).length != 0) {
					return true;
				}
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = "js.Boot";
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var con = e.__constructs__[o._hx_index];
			var n = con._hx_name;
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(cl.__isInterface__) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw haxe_Exception.thrown("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var panels_LayoutDetailsPanel = function() {
	var _gthis = this;
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_Grid();
	var c1 = new haxe_ui_components_Label();
	c1.set_text("Name");
	c1.set_verticalAlign("center");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_TextField();
	c2.set_id("layoutNameField");
	c2.set_text("");
	c2.set_placeholder("Layout name");
	c0.addComponent(c2);
	this.addComponent(c0);
	var c3 = new haxe_ui_components_TextArea();
	c3.set_id("layoutDataField");
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	this.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_id("updateButton");
	c4.set_text("Update");
	c4.set_horizontalAlign("right");
	this.addComponent(c4);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.updateButton = c4;
	this.layoutNameField = c2;
	this.layoutDataField = c3;
	this.findComponent("updateButton",haxe_ui_components_Button).set_onClick(function(_) {
		_gthis.onUpdate();
	});
};
$hxClasses["panels.LayoutDetailsPanel"] = panels_LayoutDetailsPanel;
panels_LayoutDetailsPanel.__name__ = "panels.LayoutDetailsPanel";
panels_LayoutDetailsPanel.__super__ = haxe_ui_containers_VBox;
panels_LayoutDetailsPanel.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	layoutDetails: null
	,onReady: function() {
		haxe_ui_containers_VBox.prototype.onReady.call(this);
		this.layoutNameField.set_text(this.layoutDetails.get_name());
		this.layoutDataField.set_text(this.layoutDetails.get_layoutData());
	}
	,_working: null
	,onUpdate: function() {
		var _gthis = this;
		this.layoutDetails.set_name(this.layoutNameField.get_text());
		this.layoutDetails.set_layoutData(this.layoutDataField.get_text());
		this._working = new components_WorkingIndicator();
		this._working.showWorking();
		core_data_InternalDB.layouts.updateObject(this.layoutDetails).then(function(r) {
			views_OrganizationsView.instance.populateOrgs();
			_gthis._working.workComplete();
		});
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new panels_LayoutDetailsPanel();
	}
	,updateButton: null
	,layoutNameField: null
	,layoutDataField: null
	,__class__: panels_LayoutDetailsPanel
});
var panels_OrganizationDetailsPanel = function() {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_components_Button();
	c0.set_text("Org details");
	this.addComponent(c0);
	this.bindingRoot = true;
};
$hxClasses["panels.OrganizationDetailsPanel"] = panels_OrganizationDetailsPanel;
panels_OrganizationDetailsPanel.__name__ = "panels.OrganizationDetailsPanel";
panels_OrganizationDetailsPanel.__super__ = haxe_ui_containers_VBox;
panels_OrganizationDetailsPanel.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new panels_OrganizationDetailsPanel();
	}
	,__class__: panels_OrganizationDetailsPanel
});
var panels_UserDetailsPanel = function() {
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_components_Button();
	c0.set_text("User details");
	this.addComponent(c0);
	this.bindingRoot = true;
};
$hxClasses["panels.UserDetailsPanel"] = panels_UserDetailsPanel;
panels_UserDetailsPanel.__name__ = "panels.UserDetailsPanel";
panels_UserDetailsPanel.__super__ = haxe_ui_containers_VBox;
panels_UserDetailsPanel.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new panels_UserDetailsPanel();
	}
	,__class__: panels_UserDetailsPanel
});
var sidebars_DataObjectSidebar = function() {
	this._create = false;
	haxe_ui_containers_SideBar.call(this);
};
$hxClasses["sidebars.DataObjectSidebar"] = sidebars_DataObjectSidebar;
sidebars_DataObjectSidebar.__name__ = "sidebars.DataObjectSidebar";
sidebars_DataObjectSidebar.__super__ = haxe_ui_containers_SideBar;
sidebars_DataObjectSidebar.prototype = $extend(haxe_ui_containers_SideBar.prototype,{
	onReady: function() {
		haxe_ui_containers_SideBar.prototype.onReady.call(this);
		var cancelButton = this.findComponent("cancelButton",haxe_ui_components_Button);
		if(cancelButton != null) {
			cancelButton.set_onClick($bind(this,this.onCancel));
		}
		var createButton = this.findComponent("createButton",haxe_ui_components_Button);
		if(createButton != null) {
			createButton.set_onClick($bind(this,this.onCreate));
		}
	}
	,_create: null
	,onCancel: function(e) {
		this._create = false;
		this.hide();
	}
	,_working: null
	,onCreate: function(e) {
		this._create = true;
		this.hide();
	}
	,onHideAnimationEnd: function() {
		haxe_ui_containers_SideBar.prototype.onHideAnimationEnd.call(this);
		if(this._create == true) {
			this._working = new components_WorkingIndicator();
			this._working.showWorking();
			this.createObject();
		}
	}
	,createComplete: function() {
		this._working.workComplete();
	}
	,createObject: function() {
	}
	,registerBehaviours: function() {
		haxe_ui_containers_SideBar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_SideBar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_DataObjectSidebar();
	}
	,__class__: sidebars_DataObjectSidebar
});
var sidebars_CreateDashboardSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("New Dashboard");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Dashboard Group");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_OptionBox();
	c6.set_id("createNewGroupOption");
	c6.set_width(175.);
	c6.set_text("Create new group");
	c6.set_verticalAlign("top");
	c6.set_selected(true);
	c6.set_componentGroup("groupOption");
	c5.addComponent(c6);
	var c7 = new haxe_ui_containers_VBox();
	c7.set_percentWidth(100.);
	var c8 = new haxe_ui_components_TextField();
	c8.set_id("newGroupName");
	c8.set_percentWidth(100.);
	c8.set_placeholder("Group name");
	c7.addComponent(c8);
	var c9 = new core_components_IconSelector();
	c9.set_id("newGroupIcon");
	c9.set_percentWidth(100.);
	c7.addComponent(c9);
	c5.addComponent(c7);
	var c10 = new haxe_ui_components_OptionBox();
	c10.set_id("addToExistingGroupOption");
	c10.set_width(175.);
	c10.set_text("Add to existing group");
	c10.set_verticalAlign("center");
	c10.set_hidden(true);
	c10.set_componentGroup("groupOption");
	c5.addComponent(c10);
	var c11 = new core_components_DashboardGroupSelector();
	c11.set_id("existingGroupSelector");
	c11.set_percentWidth(100.);
	c11.set_hidden(true);
	c11.set_disabled(true);
	c5.addComponent(c11);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c12 = new haxe_ui_containers_Frame();
	c12.set_percentWidth(100.);
	c12.set_text("Dashboard Details");
	var c13 = new haxe_ui_containers_Grid();
	c13.set_percentWidth(100.);
	c13.set_columns(2);
	var c14 = new haxe_ui_components_Label();
	c14.set_text("Name");
	c14.set_verticalAlign("center");
	c13.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("dashboardNameField");
	c15.set_percentWidth(100.);
	c15.set_placeholder("Enter name");
	c13.addComponent(c15);
	var c16 = new haxe_ui_components_Label();
	c16.set_text("Icon");
	c16.set_verticalAlign("center");
	c13.addComponent(c16);
	var c17 = new core_components_IconSelector();
	c17.set_id("dashboardIconField");
	c17.set_percentWidth(100.);
	c13.addComponent(c17);
	var c18 = new haxe_ui_components_Label();
	c18.set_text("Template");
	c18.set_verticalAlign("center");
	c13.addComponent(c18);
	var c19 = new haxe_ui_components_DropDown();
	c19.set_id("dashboardTemplateField");
	c19.set_percentWidth(100.);
	var ds19 = new haxe_ui_data_ArrayDataSource();
	ds19.add({ text : "Blank", id : "item", file : "data/blank-dashboard.xml"});
	ds19.add({ text : "Test1 (bar graphs)", id : "item", file : "data/test-dashboads-bars.xml"});
	ds19.add({ text : "Test2 (scatter graphs)", id : "item", file : "data/test-dashboads-scatter.xml"});
	c19.set_dataSource(ds19);
	c13.addComponent(c19);
	c12.addComponent(c13);
	c3.addComponent(c12);
	var c20 = new haxe_ui_components_Spacer();
	c20.set_percentHeight(100.);
	c3.addComponent(c20);
	var c21 = new haxe_ui_containers_HBox();
	c21.set_horizontalAlign("right");
	var c22 = new haxe_ui_components_Button();
	c22.set_id("cancelButton");
	c22.set_text("Cancel");
	c21.addComponent(c22);
	var c23 = new haxe_ui_components_Button();
	c23.set_id("createButton");
	c23.set_text("Create");
	c21.addComponent(c23);
	c3.addComponent(c21);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.newGroupName = c8;
	this.newGroupIcon = c9;
	this.existingGroupSelector = c11;
	this.dashboardTemplateField = c19;
	this.dashboardNameField = c15;
	this.dashboardIconField = c17;
	this.createNewGroupOption = c6;
	this.createButton = c23;
	this.cancelButton = c22;
	this.addToExistingGroupOption = c10;
	var c = this.createNewGroupOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateOrExistingChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewGroupOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.CreateDashboardSidebar", methodName : "new"});
	}
	var c = this.addToExistingGroupOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateOrExistingChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingGroupOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.CreateDashboardSidebar", methodName : "new"});
	}
	var c = this.createNewGroupOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateOrExistingChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewGroupOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.CreateDashboardSidebar", methodName : "new"});
	}
	var c = this.addToExistingGroupOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateOrExistingChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingGroupOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.CreateDashboardSidebar", methodName : "new"});
	}
};
$hxClasses["sidebars.CreateDashboardSidebar"] = sidebars_CreateDashboardSidebar;
sidebars_CreateDashboardSidebar.__name__ = "sidebars.CreateDashboardSidebar";
sidebars_CreateDashboardSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateDashboardSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		if(core_data_InternalDB.dashboardGroups.data.length > 0) {
			this.addToExistingGroupOption.show();
			this.existingGroupSelector.show();
		}
		this.get_value();
	}
	,onCreateOrExistingChanged: function(e) {
		if(this.createNewGroupOption.get_selected() == true) {
			this.newGroupName.set_disabled(false);
			this.newGroupIcon.set_disabled(false);
			this.existingGroupSelector.set_disabled(true);
		} else if(this.addToExistingGroupOption.get_selected() == true) {
			this.newGroupName.set_disabled(true);
			this.newGroupIcon.set_disabled(true);
			this.existingGroupSelector.set_disabled(false);
		}
	}
	,createObject: function() {
		var _gthis = this;
		var dashboard = core_data_InternalDB.dashboards.createObject();
		var promises = [];
		if(this.createNewGroupOption.get_selected() == true) {
			var iconData = this.newGroupIcon.get_selectedItem().iconData;
			var group = core_data_InternalDB.dashboardGroups.createObject();
			group.set_name(this.newGroupName.get_text());
			group.set_order(0);
			group.set_iconId(iconData.get_iconId());
			dashboard.set_group(group);
			dashboard.set_dashboardGroupId(group.get_dashboardGroupId());
			promises.push(core_data_InternalDB.dashboardGroups.addObject(group));
		} else if(this.addToExistingGroupOption.get_selected() == true) {
			var group = this.existingGroupSelector.get_selectedItem().groupData;
			dashboard.set_dashboardGroupId(group.get_dashboardGroupId());
		}
		var iconData = this.dashboardIconField.get_selectedItem().iconData;
		dashboard.set_name(this.dashboardNameField.get_text());
		dashboard.set_order(0);
		var dashboardTemplate = this.dashboardTemplateField.get_selectedItem().file;
		var dashboardLayoutData = haxe_ui_ToolkitAssets.get_instance().getText(dashboardTemplate);
		dashboard.set_layoutData(dashboardLayoutData);
		dashboard.set_iconId(iconData.get_iconId());
		promises.push(core_data_InternalDB.dashboards.addObject(dashboard));
		core_data_utils_PromiseUtils.runSequentially(promises,function() {
			_gthis.createComplete();
			views_DashboardsView.instance.refreshDashboardSelector(dashboard.get_dashboardId());
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateDashboardSidebar();
	}
	,newGroupName: null
	,newGroupIcon: null
	,existingGroupSelector: null
	,dashboardTemplateField: null
	,dashboardNameField: null
	,dashboardIconField: null
	,createNewGroupOption: null
	,createButton: null
	,cancelButton: null
	,addToExistingGroupOption: null
	,__class__: sidebars_CreateDashboardSidebar
});
var sidebars_CreateLayoutSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New Layout");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Layout Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("layoutNameField");
	c7.set_percentWidth(100.);
	c7.set_text("");
	c7.set_placeholder("Enter layout name");
	c5.addComponent(c7);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_percentHeight(100.);
	c3.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_horizontalAlign("right");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("cancelButton");
	c10.set_text("Cancel");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("createButton");
	c11.set_text("Create");
	c9.addComponent(c11);
	c3.addComponent(c9);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.layoutNameField = c7;
	this.createButton = c11;
	this.cancelButton = c10;
};
$hxClasses["sidebars.CreateLayoutSidebar"] = sidebars_CreateLayoutSidebar;
sidebars_CreateLayoutSidebar.__name__ = "sidebars.CreateLayoutSidebar";
sidebars_CreateLayoutSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateLayoutSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	organization: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New Layout - " + this.organization.get_name());
	}
	,createObject: function() {
		var _gthis = this;
		var layout = core_data_InternalDB.layouts.createObject();
		layout.set_name(this.layoutNameField.get_text());
		layout.set_organizationId(this.organization.get_organizationId());
		layout.set_layoutData("<layout />");
		core_data_InternalDB.layouts.addObject(layout).then(function(r) {
			views_OrganizationsView.instance.populateOrgs();
			_gthis.createComplete();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateLayoutSidebar();
	}
	,title: null
	,layoutNameField: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateLayoutSidebar
});
var sidebars_CreateOrganizationSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("New Organization");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Organization Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("orgNameField");
	c7.set_percentWidth(100.);
	c7.set_placeholder("Enter name");
	c5.addComponent(c7);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_percentHeight(100.);
	c3.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_horizontalAlign("right");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("cancelButton");
	c10.set_text("Cancel");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("createButton");
	c11.set_text("Create");
	c9.addComponent(c11);
	c3.addComponent(c9);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.orgNameField = c7;
	this.createButton = c11;
	this.cancelButton = c10;
};
$hxClasses["sidebars.CreateOrganizationSidebar"] = sidebars_CreateOrganizationSidebar;
sidebars_CreateOrganizationSidebar.__name__ = "sidebars.CreateOrganizationSidebar";
sidebars_CreateOrganizationSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateOrganizationSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	createObject: function() {
		var _gthis = this;
		var org = core_data_InternalDB.organizations.createObject();
		org.set_name(this.orgNameField.get_text());
		core_data_InternalDB.organizations.addObject(org).then(function(r) {
			_gthis.createComplete();
			views_OrganizationsView.instance.populateOrgs();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateOrganizationSidebar();
	}
	,orgNameField: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateOrganizationSidebar
});
var sidebars_CreatePermissionSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New Permission");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Permission Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Resource Type");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_DropDown();
	c7.set_id("resourceTypeSelector");
	c7.set_percentWidth(100.);
	var ds7 = new haxe_ui_data_ArrayDataSource();
	ds7.add({ text : "Organization", resourceType : "1", id : "item"});
	ds7.add({ text : "User", resourceType : "2", id : "item"});
	ds7.add({ text : "User Group", resourceType : "3", id : "item"});
	ds7.add({ text : "Role", resourceType : "4", id : "item"});
	ds7.add({ text : "Site", resourceType : "5", id : "item"});
	ds7.add({ text : "Dashboard", resourceType : "6", id : "item"});
	ds7.add({ text : "Dashboard Group", resourceType : "7", id : "item"});
	ds7.add({ text : "Data Source", resourceType : "8", id : "item"});
	c7.set_dataSource(ds7);
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_text("Action");
	c8.set_verticalAlign("center");
	c5.addComponent(c8);
	var c9 = new haxe_ui_components_DropDown();
	c9.set_id("actionSelector");
	c9.set_percentWidth(100.);
	var ds9 = new haxe_ui_data_ArrayDataSource();
	ds9.add({ text : "View", actionType : "1", id : "item"});
	ds9.add({ text : "Update", actionType : "2", id : "item"});
	ds9.add({ text : "Add", actionType : "3", id : "item"});
	ds9.add({ text : "Delete", actionType : "4", id : "item"});
	c9.set_dataSource(ds9);
	c5.addComponent(c9);
	var c10 = new haxe_ui_components_Label();
	c10.set_text("Resource");
	c10.set_verticalAlign("center");
	c5.addComponent(c10);
	var c11 = new haxe_ui_components_DropDown();
	c11.set_id("resourceSelector");
	c11.set_percentWidth(100.);
	c5.addComponent(c11);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c12 = new haxe_ui_components_Spacer();
	c12.set_percentHeight(100.);
	c3.addComponent(c12);
	var c13 = new haxe_ui_containers_HBox();
	c13.set_horizontalAlign("right");
	var c14 = new haxe_ui_components_Button();
	c14.set_id("cancelButton");
	c14.set_text("Cancel");
	c13.addComponent(c14);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("createButton");
	c15.set_text("Create");
	c13.addComponent(c15);
	c3.addComponent(c13);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.resourceTypeSelector = c7;
	this.resourceSelector = c11;
	this.createButton = c15;
	this.cancelButton = c14;
	this.actionSelector = c9;
	var c = this.resourceTypeSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onResourceTypeSelectorChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "resourceTypeSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.CreatePermissionSidebar", methodName : "new"});
	}
};
$hxClasses["sidebars.CreatePermissionSidebar"] = sidebars_CreatePermissionSidebar;
sidebars_CreatePermissionSidebar.__name__ = "sidebars.CreatePermissionSidebar";
sidebars_CreatePermissionSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreatePermissionSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	role: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New Permission - " + this.role.get_name());
		this.get_value();
	}
	,onResourceTypeSelectorChange: function(_) {
		var resourceType = Std.parseInt(this.resourceTypeSelector.get_selectedItem().resourceType);
		var text = this.resourceTypeSelector.get_selectedItem().text;
		var ds = new haxe_ui_data_ArrayDataSource();
		ds.add({ text : "Any " + text, resourceId : -1});
		switch(resourceType) {
		case 1:
			var _g = 0;
			var _g1 = core_data_InternalDB.organizations.data;
			while(_g < _g1.length) {
				var org = _g1[_g];
				++_g;
				ds.add({ text : org.get_name(), resourceId : org.get_organizationId()});
			}
			break;
		case 2:
			var _g = 0;
			var _g1 = core_data_InternalDB.users.data;
			while(_g < _g1.length) {
				var user = _g1[_g];
				++_g;
				ds.add({ text : user.get_username(), resourceId : user.get_userId()});
			}
			break;
		case 3:
			var _g = 0;
			var _g1 = core_data_InternalDB.userGroups.data;
			while(_g < _g1.length) {
				var userGroup = _g1[_g];
				++_g;
				ds.add({ text : userGroup.get_name(), resourceId : userGroup.get_userGroupId()});
			}
			break;
		case 4:
			var _g = 0;
			var _g1 = core_data_InternalDB.roles.data;
			while(_g < _g1.length) {
				var role = _g1[_g];
				++_g;
				ds.add({ text : role.get_name(), resourceId : role.get_roleId()});
			}
			break;
		case 5:
			break;
		case 6:
			var _g = 0;
			var _g1 = core_data_InternalDB.dashboards.data;
			while(_g < _g1.length) {
				var dashboard = _g1[_g];
				++_g;
				ds.add({ text : dashboard.get_name(), resourceId : dashboard.get_dashboardId()});
			}
			break;
		case 7:
			var _g = 0;
			var _g1 = core_data_InternalDB.dashboardGroups.data;
			while(_g < _g1.length) {
				var dashboardGroup = _g1[_g];
				++_g;
				ds.add({ text : dashboardGroup.get_name(), resourceId : dashboardGroup.get_dashboardGroupId()});
			}
			break;
		}
		this.resourceSelector.set_selectedIndex(-1);
		this.resourceSelector.set_selectedIndex(0);
		this.resourceSelector.set_dataSource(ds);
	}
	,createObject: function() {
		var _gthis = this;
		var permission = core_data_InternalDB.permissions.createObject();
		permission.set_roleId(this.role.get_roleId());
		permission.set_resourceId(this.resourceSelector.get_selectedItem().resourceId);
		permission.set_resourceType(Std.parseInt(this.resourceTypeSelector.get_selectedItem().resourceType));
		permission.set_permissionAction(Std.parseInt(this.actionSelector.get_selectedItem().actionType));
		core_data_InternalDB.permissions.addObject(permission).then(function(r) {
			_gthis.createComplete();
			views_OrganizationsView.instance.populateOrgs();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreatePermissionSidebar();
	}
	,title: null
	,resourceTypeSelector: null
	,resourceSelector: null
	,createButton: null
	,cancelButton: null
	,actionSelector: null
	,__class__: sidebars_CreatePermissionSidebar
});
var sidebars_CreateRoleSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New Role");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Role Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("roleNameField");
	c7.set_percentWidth(100.);
	c7.set_placeholder("Enter name");
	c5.addComponent(c7);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_percentHeight(100.);
	c3.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_horizontalAlign("right");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("cancelButton");
	c10.set_text("Cancel");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("createButton");
	c11.set_text("Create");
	c9.addComponent(c11);
	c3.addComponent(c9);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.roleNameField = c7;
	this.createButton = c11;
	this.cancelButton = c10;
};
$hxClasses["sidebars.CreateRoleSidebar"] = sidebars_CreateRoleSidebar;
sidebars_CreateRoleSidebar.__name__ = "sidebars.CreateRoleSidebar";
sidebars_CreateRoleSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateRoleSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	organization: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New Role - " + this.organization.get_name());
		this.get_value();
	}
	,createObject: function() {
		var _gthis = this;
		var role = core_data_InternalDB.roles.createObject();
		role.set_name(this.roleNameField.get_text());
		role.set_organizationId(this.organization.get_organizationId());
		core_data_InternalDB.roles.addObject(role).then(function(r) {
			_gthis.createComplete();
			views_OrganizationsView.instance.populateOrgs();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateRoleSidebar();
	}
	,title: null
	,roleNameField: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateRoleSidebar
});
var sidebars_CreateSitePageSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New Site Page");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Page Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("pageNameField");
	c7.set_percentWidth(100.);
	c7.set_text("");
	c7.set_placeholder("Enter page name");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_text("Icon");
	c8.set_verticalAlign("center");
	c5.addComponent(c8);
	var c9 = new core_components_IconSelector();
	c9.set_id("pageIconSelector");
	c9.set_percentWidth(100.);
	c5.addComponent(c9);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c10 = new haxe_ui_components_Spacer();
	c10.set_percentHeight(100.);
	c3.addComponent(c10);
	var c11 = new haxe_ui_containers_HBox();
	c11.set_horizontalAlign("right");
	var c12 = new haxe_ui_components_Button();
	c12.set_id("cancelButton");
	c12.set_text("Cancel");
	c11.addComponent(c12);
	var c13 = new haxe_ui_components_Button();
	c13.set_id("createButton");
	c13.set_text("Create");
	c11.addComponent(c13);
	c3.addComponent(c11);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.pageNameField = c7;
	this.pageIconSelector = c9;
	this.createButton = c13;
	this.cancelButton = c12;
};
$hxClasses["sidebars.CreateSitePageSidebar"] = sidebars_CreateSitePageSidebar;
sidebars_CreateSitePageSidebar.__name__ = "sidebars.CreateSitePageSidebar";
sidebars_CreateSitePageSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateSitePageSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	site: null
	,parentPage: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		if(this.parentPage != null) {
			this.title.set_text("New Site Page - " + this.parentPage.get_name());
		}
	}
	,createObject: function() {
		var _gthis = this;
		var page = core_data_InternalDB.pages.createObject();
		page.set_name(this.pageNameField.get_text());
		page.set_siteId(this.site.get_siteId());
		if(this.parentPage != null) {
			page.set_parentPageId(this.parentPage.get_pageId());
		} else {
			page.set_parentPageId(-1);
		}
		var iconData = this.pageIconSelector.get_selectedItem().iconData;
		page.set_iconId(iconData.get_iconId());
		page.set_layoutId(0);
		core_data_InternalDB.pages.addObject(page).then(function(r) {
			views_OrganizationsView.instance.populateOrgs();
			_gthis.createComplete();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateSitePageSidebar();
	}
	,title: null
	,pageNameField: null
	,pageIconSelector: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateSitePageSidebar
});
var sidebars_CreateSiteSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New Site");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Site Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("siteNameField");
	c7.set_percentWidth(100.);
	c7.set_text("");
	c7.set_placeholder("Enter site name");
	c5.addComponent(c7);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_percentHeight(100.);
	c3.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_horizontalAlign("right");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("cancelButton");
	c10.set_text("Cancel");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("createButton");
	c11.set_text("Create");
	c9.addComponent(c11);
	c3.addComponent(c9);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.siteNameField = c7;
	this.createButton = c11;
	this.cancelButton = c10;
};
$hxClasses["sidebars.CreateSiteSidebar"] = sidebars_CreateSiteSidebar;
sidebars_CreateSiteSidebar.__name__ = "sidebars.CreateSiteSidebar";
sidebars_CreateSiteSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateSiteSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	organization: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New Site - " + this.organization.get_name());
	}
	,createObject: function() {
		var _gthis = this;
		var site = core_data_InternalDB.sites.createObject();
		site.set_name(this.siteNameField.get_text());
		site.set_organizationId(this.organization.get_organizationId());
		core_data_InternalDB.sites.addObject(site).then(function(r) {
			views_OrganizationsView.instance.populateOrgs();
			_gthis.createComplete();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateSiteSidebar();
	}
	,title: null
	,siteNameField: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateSiteSidebar
});
var sidebars_CreateUserGroupSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New User Group");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Group Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Name");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("groupNameField");
	c7.set_percentWidth(100.);
	c7.set_placeholder("Enter name");
	c5.addComponent(c7);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c8 = new haxe_ui_components_Spacer();
	c8.set_percentHeight(100.);
	c3.addComponent(c8);
	var c9 = new haxe_ui_containers_HBox();
	c9.set_horizontalAlign("right");
	var c10 = new haxe_ui_components_Button();
	c10.set_id("cancelButton");
	c10.set_text("Cancel");
	c9.addComponent(c10);
	var c11 = new haxe_ui_components_Button();
	c11.set_id("createButton");
	c11.set_text("Create");
	c9.addComponent(c11);
	c3.addComponent(c9);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.title = c1;
	this.groupNameField = c7;
	this.createButton = c11;
	this.cancelButton = c10;
};
$hxClasses["sidebars.CreateUserGroupSidebar"] = sidebars_CreateUserGroupSidebar;
sidebars_CreateUserGroupSidebar.__name__ = "sidebars.CreateUserGroupSidebar";
sidebars_CreateUserGroupSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateUserGroupSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	organization: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New User Group - " + this.organization.get_name());
		this.get_value();
	}
	,createObject: function() {
		var _gthis = this;
		var userGroup = core_data_InternalDB.userGroups.createObject();
		userGroup.set_name(this.groupNameField.get_text());
		userGroup.set_organizationId(this.organization.get_organizationId());
		core_data_InternalDB.userGroups.addObject(userGroup).then(function(r) {
			_gthis.createComplete();
			views_OrganizationsView.instance.populateOrgs();
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateUserGroupSidebar();
	}
	,title: null
	,groupNameField: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateUserGroupSidebar
});
var sidebars_CreateUserSidebar = function() {
	sidebars_DataObjectSidebar.call(this);
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_id("title");
	c1.set_text("New User");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("User Details");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_Label();
	c6.set_text("Username");
	c6.set_verticalAlign("center");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("userUsernameField");
	c7.set_percentWidth(100.);
	c7.set_text("uname");
	c7.set_placeholder("Enter name");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_text("Password");
	c8.set_verticalAlign("center");
	c5.addComponent(c8);
	var c9 = new haxe_ui_components_TextField();
	c9.set_id("userPasswordField");
	c9.set_percentWidth(100.);
	c9.set_text("bob");
	c9.set_placeholder("Enter password");
	c5.addComponent(c9);
	var c10 = new haxe_ui_components_Label();
	c10.set_text("First Name");
	c10.set_verticalAlign("center");
	c5.addComponent(c10);
	var c11 = new haxe_ui_components_TextField();
	c11.set_id("userFirstNameField");
	c11.set_percentWidth(100.);
	c11.set_text("tim");
	c11.set_placeholder("Enter first name");
	c5.addComponent(c11);
	var c12 = new haxe_ui_components_Label();
	c12.set_text("Last Name");
	c12.set_verticalAlign("center");
	c5.addComponent(c12);
	var c13 = new haxe_ui_components_TextField();
	c13.set_id("userLastNameField");
	c13.set_percentWidth(100.);
	c13.set_text("jim");
	c13.set_placeholder("Enter last name");
	c5.addComponent(c13);
	var c14 = new haxe_ui_components_Label();
	c14.set_text("Email");
	c14.set_verticalAlign("center");
	c5.addComponent(c14);
	var c15 = new haxe_ui_components_TextField();
	c15.set_id("userEmailField");
	c15.set_percentWidth(100.);
	c15.set_text("email");
	c15.set_placeholder("Enter email address");
	c5.addComponent(c15);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c16 = new haxe_ui_components_Spacer();
	c16.set_percentHeight(100.);
	c3.addComponent(c16);
	var c17 = new haxe_ui_containers_HBox();
	c17.set_horizontalAlign("right");
	var c18 = new haxe_ui_components_Button();
	c18.set_id("cancelButton");
	c18.set_text("Cancel");
	c17.addComponent(c18);
	var c19 = new haxe_ui_components_Button();
	c19.set_id("createButton");
	c19.set_text("Create");
	c17.addComponent(c19);
	c3.addComponent(c17);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.userUsernameField = c7;
	this.userPasswordField = c9;
	this.userLastNameField = c13;
	this.userFirstNameField = c11;
	this.userEmailField = c15;
	this.title = c1;
	this.createButton = c19;
	this.cancelButton = c18;
};
$hxClasses["sidebars.CreateUserSidebar"] = sidebars_CreateUserSidebar;
sidebars_CreateUserSidebar.__name__ = "sidebars.CreateUserSidebar";
sidebars_CreateUserSidebar.__super__ = sidebars_DataObjectSidebar;
sidebars_CreateUserSidebar.prototype = $extend(sidebars_DataObjectSidebar.prototype,{
	organization: null
	,onReady: function() {
		sidebars_DataObjectSidebar.prototype.onReady.call(this);
		this.title.set_text("New User - " + this.organization.get_name());
	}
	,createObject: function() {
		var _gthis = this;
		var user = core_data_InternalDB.users.createObject();
		user.set_username(this.userUsernameField.get_text());
		user.set_password(this.userPasswordField.get_text());
		user.set_firstName(this.userFirstNameField.get_text());
		user.set_lastName(this.userLastNameField.get_text());
		user.set_emailAddress(this.userEmailField.get_text());
		user.set_isAdmin(false);
		var userLink = core_data_InternalDB.userOrganizationLinks.createObject();
		userLink.set_userId(user.get_userId());
		userLink.set_organizationId(this.organization.get_organizationId());
		core_data_InternalDB.userOrganizationLinks.addObject(userLink).then(function(r) {
			core_data_InternalDB.users.addObject(user).then(function(r) {
				_gthis.createComplete();
				views_OrganizationsView.instance.populateOrgs();
			});
		});
	}
	,registerBehaviours: function() {
		sidebars_DataObjectSidebar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = sidebars_DataObjectSidebar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_CreateUserSidebar();
	}
	,userUsernameField: null
	,userPasswordField: null
	,userLastNameField: null
	,userFirstNameField: null
	,userEmailField: null
	,title: null
	,createButton: null
	,cancelButton: null
	,__class__: sidebars_CreateUserSidebar
});
var sidebars_ImportDataSourceSidebar = function() {
	this._create = false;
	this._databases = [];
	haxe_ui_containers_SideBar.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n                        #importTableFields .textfield {\n                            border: none;\n                            filter: none;\n                            background-color: none;\n                        }\n                    ","user");
	var c0 = new haxe_ui_containers_VBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_components_Label();
	c1.set_text("Import Data");
	c1.set_styleString("font-size: 22px;color:#888888;");
	c1.set_horizontalAlign("right");
	c0.addComponent(c1);
	var c2 = new haxe_ui_components_HorizontalRule();
	c0.addComponent(c2);
	var c3 = new haxe_ui_containers_VBox();
	c3.set_percentWidth(100.);
	c3.set_percentHeight(100.);
	c3.set_styleString("padding: 10px;spacing: 10px;");
	var c4 = new haxe_ui_containers_Frame();
	c4.set_percentWidth(100.);
	c4.set_text("Core");
	var c5 = new haxe_ui_containers_Grid();
	c5.set_percentWidth(100.);
	c5.set_columns(2);
	var c6 = new haxe_ui_components_OptionBox();
	c6.set_id("createNewCoreOption");
	c6.set_width(175.);
	c6.set_text("Create new data core");
	c6.set_verticalAlign("center");
	c6.set_selected(true);
	c6.set_componentGroup("coreOption");
	c5.addComponent(c6);
	var c7 = new haxe_ui_components_TextField();
	c7.set_id("newCoreName");
	c7.set_percentWidth(100.);
	c7.set_placeholder("Data core name");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_OptionBox();
	c8.set_id("addToExistingCoreOption");
	c8.set_width(175.);
	c8.set_text("Add to existing data core");
	c8.set_verticalAlign("center");
	c8.set_hidden(true);
	c8.set_componentGroup("coreOption");
	c5.addComponent(c8);
	var c9 = new haxe_ui_components_DropDown();
	c9.set_id("existingCoreSelector");
	c9.set_percentWidth(100.);
	c9.set_hidden(true);
	c9.set_disabled(true);
	c5.addComponent(c9);
	c4.addComponent(c5);
	c3.addComponent(c4);
	var c10 = new haxe_ui_containers_Frame();
	c10.set_percentWidth(100.);
	c10.set_percentHeight(100.);
	c10.set_text("Table");
	var c11 = new haxe_ui_containers_VBox();
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	var c12 = new haxe_ui_containers_Grid();
	c12.set_percentWidth(100.);
	c12.set_columns(2);
	var c13 = new haxe_ui_components_Label();
	c13.set_text("Import type");
	c13.set_verticalAlign("center");
	c12.addComponent(c13);
	var c14 = new haxe_ui_components_DropDown();
	c14.set_id("importTypeSelector");
	c14.set_percentWidth(100.);
	var ds14 = new haxe_ui_data_ArrayDataSource();
	ds14.add({ text : "Comma Seperated File (CSV)", id : "item"});
	c14.set_dataSource(ds14);
	c12.addComponent(c14);
	var c15 = new haxe_ui_components_Spacer();
	c12.addComponent(c15);
	var c16 = new haxe_ui_containers_Box();
	c16.set_percentWidth(100.);
	var c17 = new components_FileSelector();
	c17.set_id("importFileSelector");
	c17.set_text("Select File");
	c17.set_horizontalAlign("right");
	c16.addComponent(c17);
	c12.addComponent(c16);
	var c18 = new haxe_ui_components_OptionBox();
	c18.set_id("createNewTableOption");
	c18.set_width(175.);
	c18.set_text("Create new table");
	c18.set_verticalAlign("center");
	c18.set_selected(true);
	c18.set_componentGroup("tableOption");
	c12.addComponent(c18);
	var c19 = new haxe_ui_components_TextField();
	c19.set_id("newTableName");
	c19.set_percentWidth(100.);
	c19.set_placeholder("Table name");
	c12.addComponent(c19);
	var c20 = new haxe_ui_components_OptionBox();
	c20.set_id("addToExistingTableOption");
	c20.set_width(175.);
	c20.set_text("Add to existing table");
	c20.set_verticalAlign("center");
	c20.set_hidden(true);
	c20.set_componentGroup("tableOption");
	c12.addComponent(c20);
	var c21 = new haxe_ui_components_DropDown();
	c21.set_id("existingTableSelector");
	c21.set_percentWidth(100.);
	c21.set_hidden(true);
	c21.set_disabled(true);
	c12.addComponent(c21);
	c11.addComponent(c12);
	var c22 = new haxe_ui_containers_TableView();
	c22.set_id("importTableFields");
	c22.set_percentWidth(100.);
	c22.set_percentHeight(100.);
	var c23 = new haxe_ui_containers_Header();
	c23.set_percentWidth(100.);
	var c24 = new haxe_ui_components_Column();
	c24.set_id("fieldEnabled");
	c24.set_width(32.);
	c24.set_text(" ");
	c23.addComponent(c24);
	var c25 = new haxe_ui_components_Column();
	c25.set_id("fieldName");
	c25.set_percentWidth(100.);
	c25.set_text("Field Name");
	c23.addComponent(c25);
	var c26 = new haxe_ui_components_Column();
	c26.set_id("fieldType");
	c26.set_width(100.);
	c26.set_text("Data Type");
	c23.addComponent(c26);
	c22.addComponent(c23);
	var c27 = new haxe_ui_core_ItemRenderer();
	c27.set_percentHeight(100.);
	var c28 = new haxe_ui_components_CheckBox();
	c28.set_id("fieldEnabled");
	c28.set_verticalAlign("center");
	c28.set_horizontalAlign("center");
	c27.addComponent(c28);
	c22.addComponent(c27);
	var c29 = new haxe_ui_core_ItemRenderer();
	var c30 = new haxe_ui_components_TextField();
	c30.set_id("fieldName");
	c30.set_percentWidth(100.);
	c30.set_verticalAlign("center");
	c29.addComponent(c30);
	c22.addComponent(c29);
	var c31 = new haxe_ui_core_ItemRenderer();
	var c32 = new haxe_ui_components_DropDown();
	c32.set_id("fieldType");
	c32.set_percentWidth(100.);
	c32.set_text("Text");
	var ds32 = new haxe_ui_data_ArrayDataSource();
	ds32.add({ text : "Text", id : "item", value : "string"});
	ds32.add({ text : "Number", id : "item", value : "number"});
	ds32.add({ text : "Yes/No", id : "item", value : "boolean"});
	c32.set_dataSource(ds32);
	c31.addComponent(c32);
	c22.addComponent(c31);
	c11.addComponent(c22);
	var c33 = new haxe_ui_components_Label();
	c33.set_id("importTableRowCount");
	c33.set_horizontalAlign("right");
	c33.set_hidden(true);
	c11.addComponent(c33);
	c10.addComponent(c11);
	c3.addComponent(c10);
	var c34 = new haxe_ui_containers_HBox();
	c34.set_horizontalAlign("right");
	var c35 = new haxe_ui_components_Button();
	c35.set_id("cancelButton");
	c35.set_text("Cancel");
	c34.addComponent(c35);
	var c36 = new haxe_ui_components_Button();
	c36.set_id("createButton");
	c36.set_text("Create");
	c34.addComponent(c36);
	c3.addComponent(c34);
	c0.addComponent(c3);
	this.addComponent(c0);
	this.set_width(450.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.newTableName = c19;
	this.newCoreName = c7;
	this.importTypeSelector = c14;
	this.importTableRowCount = c33;
	this.importTableFields = c22;
	this.importFileSelector = c17;
	this.fieldType = c26;
	this.fieldName = c25;
	this.fieldEnabled = c24;
	this.existingTableSelector = c21;
	this.existingCoreSelector = c9;
	this.createNewTableOption = c18;
	this.createNewCoreOption = c6;
	this.createButton = c36;
	this.cancelButton = c35;
	this.addToExistingTableOption = c20;
	this.addToExistingCoreOption = c8;
	var c = this.existingCoreSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onExistingCoreSelectorChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "existingCoreSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.createNewCoreOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateCoreChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewCoreOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.addToExistingCoreOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateCoreChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingCoreOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.createNewCoreOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateCoreChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewCoreOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.addToExistingCoreOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateCoreChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingCoreOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.createNewTableOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateTableChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewTableOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.addToExistingTableOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateTableChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingTableOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.createNewTableOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateTableChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createNewTableOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.addToExistingTableOption;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onCreateTableChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addToExistingTableOption" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.importFileSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onImportFileSelectorChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "importFileSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.cancelButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCancel));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "cancelButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
	var c = this.createButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onCreate));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "createButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "sidebars.ImportDataSourceSidebar", methodName : "new"});
	}
};
$hxClasses["sidebars.ImportDataSourceSidebar"] = sidebars_ImportDataSourceSidebar;
sidebars_ImportDataSourceSidebar.__name__ = "sidebars.ImportDataSourceSidebar";
sidebars_ImportDataSourceSidebar.__super__ = haxe_ui_containers_SideBar;
sidebars_ImportDataSourceSidebar.prototype = $extend(haxe_ui_containers_SideBar.prototype,{
	_parser: null
	,_databases: null
	,databases: null
	,set_databases: function(value) {
		this._databases = value;
		this.populateDatabases();
		return value;
	}
	,populateDatabases: function() {
		var ds = new haxe_ui_data_ArrayDataSource();
		var _g = 0;
		var _g1 = this._databases;
		while(_g < _g1.length) {
			var db = _g1[_g];
			++_g;
			if(StringTools.startsWith(db.name,"__")) {
				continue;
			}
			ds.add({ text : db.name, db : db});
		}
		this.existingCoreSelector.set_dataSource(ds);
		if(ds.get_size() == 0) {
			this.addToExistingCoreOption.hide();
			this.existingCoreSelector.hide();
		} else {
			this.existingCoreSelector.set_selectedIndex(0);
			this.addToExistingCoreOption.show();
			this.existingCoreSelector.show();
		}
	}
	,onExistingCoreSelectorChanged: function(e) {
		var selectedItem = this.existingCoreSelector.get_selectedItem();
		if(selectedItem == null) {
			return;
		}
		var db = selectedItem.db;
		this.populateTables(db);
	}
	,populateTables: function(database) {
		var _gthis = this;
		database.listTables().then(function(tables) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var _g = 0;
			while(_g < tables.length) {
				var table = tables[_g];
				++_g;
				ds.add({ text : table.name + " (" + table.get_recordCount() + " records)", table : table});
			}
			_gthis.existingTableSelector.set_dataSource(ds);
			if(ds.get_size() == 0) {
				_gthis.addToExistingTableOption.hide();
				_gthis.existingTableSelector.hide();
			} else {
				_gthis.existingTableSelector.set_selectedIndex(-1);
				_gthis.existingTableSelector.set_selectedIndex(0);
				if(_gthis.addToExistingCoreOption.get_selected() == true) {
					_gthis.addToExistingTableOption.show();
					_gthis.existingTableSelector.show();
				}
			}
		});
	}
	,onCreateCoreChanged: function(e) {
		if(this.createNewCoreOption.get_selected() == true) {
			this.newCoreName.set_disabled(false);
			this.existingCoreSelector.set_disabled(true);
			this.addToExistingTableOption.hide();
			this.existingTableSelector.hide();
		} else if(this.addToExistingCoreOption.get_selected() == true) {
			this.newCoreName.set_disabled(true);
			this.existingCoreSelector.set_disabled(false);
			this.addToExistingTableOption.show();
			this.existingTableSelector.show();
		}
	}
	,onCreateTableChanged: function(e) {
		if(this.createNewTableOption.get_selected() == true) {
			this.newTableName.set_disabled(false);
			this.existingTableSelector.set_disabled(true);
		} else if(this.addToExistingTableOption.get_selected() == true) {
			this.newTableName.set_disabled(true);
			this.existingTableSelector.set_disabled(false);
		}
	}
	,onImportFileSelectorChanged: function(e) {
		var _gthis = this;
		if(this.createNewTableOption.get_selected() == true && (this.newTableName.get_text() == "" || this.newTableName.get_text() == null)) {
			var parts = this.importFileSelector.get_text().split(".");
			parts.pop();
			this.newTableName.set_text(parts.join("."));
		}
		this.importFileSelector.readContents().then(function(contents) {
			_gthis._parser = new core_data_parsers_CSVDataParser();
			_gthis._parser.parse(contents);
			var fields = _gthis._parser.getFieldDefinitions();
			var ds = new haxe_ui_data_ArrayDataSource();
			var _g = 0;
			while(_g < fields.length) {
				var f = fields[_g];
				++_g;
				ds.add({ fieldEnabled : true, fieldName : f.fieldName, fieldType : core_data_internal_FieldType.toString(f.fieldType)});
			}
			_gthis.importTableFields.set_dataSource(ds);
			_gthis.importTableRowCount.set_text("File contains " + _gthis._parser.getData().length + " row(s)");
			_gthis.importTableRowCount.show();
		});
	}
	,_create: null
	,onCancel: function(e) {
		this._create = false;
		this.hide();
	}
	,_working: null
	,onCreate: function(e) {
		this._create = true;
		this.hide();
	}
	,createData: function() {
		var _gthis = this;
		if(this._create == false) {
			return;
		}
		var dbName = null;
		var db = null;
		if(this.createNewCoreOption.get_selected() == true) {
			dbName = this.newCoreName.get_text();
			db = new core_data_dao_Database();
			db.name = dbName;
			core_data_DatabaseManager.get_instance().addBatchOperation(core_data_DatabaseBatchOperationType.CreateDatabase,db);
		} else {
			dbName = this.existingCoreSelector.get_selectedItem().db.name;
			db = new core_data_dao_Database();
			db.name = dbName;
		}
		var tableName = null;
		var table = null;
		if(this.createNewTableOption.get_selected() == true) {
			tableName = this.newTableName.get_text();
			table = new core_data_GenericTable();
			table.name = tableName;
			table.db = db;
			var _g = 0;
			var _g1 = this.importTableFields.get_dataSource().get_size();
			while(_g < _g1) {
				var i = _g++;
				var item = this.importTableFields.get_dataSource().get(i);
				if(item.fieldEnabled == false) {
					continue;
				}
				var fieldName = item.fieldName;
				var fieldTypeString = item.fieldType.value;
				if(fieldTypeString == null) {
					fieldTypeString = item.fieldType;
				}
				var fieldType = core_data_internal_FieldType.fromString(fieldTypeString);
				table.defineField(fieldName,fieldType);
			}
			core_data_DatabaseManager.get_instance().addBatchOperation(core_data_DatabaseBatchOperationType.CreateTable,table);
		} else {
			tableName = this.existingTableSelector.get_selectedItem().table.name;
			table = new core_data_GenericTable();
			table.name = tableName;
			table.db = db;
		}
		table.addDatas(this._parser.getData());
		core_data_DatabaseManager.get_instance().addBatchOperation(core_data_DatabaseBatchOperationType.AddTableData,table);
		this._working = new components_WorkingIndicator();
		this._working.showWorking();
		core_data_DatabaseManager.get_instance().performBatchOperations(function(operation,current,max) {
			haxe_Log.trace(operation.type,{ fileName : "haxe/sidebars/ImportDataSourceSidebar.hx", lineNumber : 220, className : "sidebars.ImportDataSourceSidebar", methodName : "createData", customParams : [current,max]});
			switch(operation.type._hx_index) {
			case 0:
				_gthis._working.set_message("Creating Core");
				break;
			case 1:
				_gthis._working.set_message("Creating Table");
				break;
			case 2:
				_gthis._working.set_message("Adding Data");
				break;
			}
		}).then(function(result) {
			_gthis._working.workComplete();
			views_DataView.instance.refresh(dbName,tableName);
		});
	}
	,onHideAnimationEnd: function() {
		haxe_ui_containers_SideBar.prototype.onHideAnimationEnd.call(this);
		this.createData();
	}
	,registerBehaviours: function() {
		haxe_ui_containers_SideBar.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_SideBar.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new sidebars_ImportDataSourceSidebar();
	}
	,newTableName: null
	,newCoreName: null
	,importTypeSelector: null
	,importTableRowCount: null
	,importTableFields: null
	,importFileSelector: null
	,fieldType: null
	,fieldName: null
	,fieldEnabled: null
	,existingTableSelector: null
	,existingCoreSelector: null
	,createNewTableOption: null
	,createNewCoreOption: null
	,createButton: null
	,cancelButton: null
	,addToExistingTableOption: null
	,addToExistingCoreOption: null
	,__class__: sidebars_ImportDataSourceSidebar
	,__properties__: $extend(haxe_ui_containers_SideBar.prototype.__properties__,{set_databases:"set_databases"})
});
var views_DashboardsView = function() {
	this._firstLoad = true;
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n            #layoutDataField {\n                border: none;\n                filter: none;\n            }\n\n            #dashboardTree {\n                border: none;\n                background-color: $solid-background-color;\n                border-radius: 0;\n            }\n        ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_width(230.);
	c1.set_percentHeight(100.);
	c1.set_styleString("spacing:0;border-right: 1px solid $normal-border-color;padding-right: 1px;");
	var c2 = new haxe_ui_containers_VBox();
	c2.set_percentWidth(100.);
	c2.set_styleString("padding:7px;background-color: $solid-background-color;border-bottom:1px solid $normal-border-color;");
	var c3 = new haxe_ui_components_TextField();
	c3.set_percentWidth(100.);
	c3.set_placeholder("Filter dashboards");
	c2.addComponent(c3);
	c1.addComponent(c2);
	var c4 = new haxe_ui_containers_TreeView();
	c4.set_id("dashboardTree");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c1.addComponent(c4);
	var c5 = new haxe_ui_containers_HBox();
	c5.set_id("bottomButtons");
	c5.set_height(67.);
	c5.set_percentWidth(100.);
	c5.set_styleNames("bottom-buttons");
	c5.set_styleString("padding:0px;spacing:0px;border-top: 1px solid $normal-border-color;padding-top: 1px;border-bottom:1px solid $normal-border-color;padding-bottom:1px;");
	var c6 = new haxe_ui_components_Button();
	c6.set_id("addDashboardButton");
	c6.set_percentWidth(33.);
	c6.set_percentHeight(100.);
	c6.set_text("Add");
	c6.set_iconPosition("top");
	c6.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-plus-+-32.png"));
	c5.addComponent(c6);
	var c7 = new haxe_ui_core_Component();
	c7.set_width(1.);
	c7.set_percentHeight(100.);
	c7.set_styleString("background-color: $normal-border-color");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_percentWidth(34.);
	c8.set_percentHeight(100.);
	c8.set_text("Update");
	c8.set_iconPosition("top");
	c8.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-edit-32(1).png"));
	c5.addComponent(c8);
	var c9 = new haxe_ui_core_Component();
	c9.set_width(1.);
	c9.set_percentHeight(100.);
	c9.set_styleString("background-color: $normal-border-color");
	c5.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("removeDashboardButton");
	c10.set_percentWidth(33.);
	c10.set_percentHeight(100.);
	c10.set_text("Delete");
	c10.set_iconPosition("top");
	c10.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-delete-32.png"));
	c5.addComponent(c10);
	c1.addComponent(c5);
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_VBox();
	c11.set_id("detailsContainer");
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	c11.set_styleString("padding: 10px;");
	var c12 = new haxe_ui_containers_TabView();
	c12.set_id("dashboardDetailsTabs");
	c12.set_percentWidth(100.);
	c12.set_percentHeight(100.);
	c12.set_tabPosition("bottom");
	var c13 = new haxe_ui_containers_VBox();
	c13.set_percentWidth(100.);
	c13.set_percentHeight(100.);
	c13.set_text("Details");
	var c14 = new haxe_ui_containers_VBox();
	c14.set_percentWidth(100.);
	c14.set_percentHeight(100.);
	c14.set_styleString("padding: 10px;");
	c14.set_horizontalAlign("right");
	var c15 = new haxe_ui_containers_Box();
	c15.set_percentWidth(100.);
	c15.set_percentHeight(100.);
	var c16 = new haxe_ui_containers_Box();
	c16.set_id("dashboardGroupDetails");
	c16.set_percentWidth(100.);
	c16.set_percentHeight(100.);
	var c17 = new haxe_ui_containers_VBox();
	c17.set_percentWidth(100.);
	var c18 = new haxe_ui_components_Label();
	c18.set_id("dashboardGroupNameLabel");
	c18.set_text("Group Details");
	c18.set_styleString("font-size: 22px;color:#888888;");
	c18.set_horizontalAlign("right");
	c17.addComponent(c18);
	var c19 = new haxe_ui_components_HorizontalRule();
	c17.addComponent(c19);
	var c20 = new haxe_ui_containers_Grid();
	c20.set_percentWidth(100.);
	var c21 = new haxe_ui_components_Label();
	c21.set_text("Id");
	c20.addComponent(c21);
	var c22 = new haxe_ui_components_Label();
	c22.set_id("dashboardGroupIdField");
	c22.set_text("-");
	c20.addComponent(c22);
	var c23 = new haxe_ui_components_Label();
	c23.set_text("Name");
	c23.set_verticalAlign("center");
	c20.addComponent(c23);
	var c24 = new haxe_ui_components_TextField();
	c24.set_id("dashboardGroupNameField");
	c24.set_width(200.);
	c20.addComponent(c24);
	var c25 = new haxe_ui_components_Label();
	c25.set_text("Icon");
	c25.set_verticalAlign("center");
	c20.addComponent(c25);
	var c26 = new core_components_IconSelector();
	c26.set_id("dashboardGroupIconField");
	c26.set_width(200.);
	c20.addComponent(c26);
	c17.addComponent(c20);
	c16.addComponent(c17);
	c15.addComponent(c16);
	var c27 = new haxe_ui_containers_Box();
	c27.set_id("dashboardDetails");
	c27.set_percentWidth(100.);
	c27.set_percentHeight(100.);
	var c28 = new haxe_ui_containers_VBox();
	c28.set_percentWidth(100.);
	c28.set_percentHeight(100.);
	var c29 = new haxe_ui_components_Label();
	c29.set_id("dashboardNameLabel");
	c29.set_text("Dashboard Details");
	c29.set_styleString("font-size: 22px;color:#888888;");
	c29.set_horizontalAlign("right");
	c28.addComponent(c29);
	var c30 = new haxe_ui_components_HorizontalRule();
	c28.addComponent(c30);
	var c31 = new haxe_ui_containers_Grid();
	c31.set_percentWidth(100.);
	var c32 = new haxe_ui_components_Label();
	c32.set_text("Id");
	c31.addComponent(c32);
	var c33 = new haxe_ui_components_Label();
	c33.set_id("dashboardIdField");
	c33.set_text("-");
	c31.addComponent(c33);
	var c34 = new haxe_ui_components_Label();
	c34.set_text("Name");
	c34.set_verticalAlign("center");
	c31.addComponent(c34);
	var c35 = new haxe_ui_components_TextField();
	c35.set_id("dashboardNameField");
	c35.set_width(200.);
	c31.addComponent(c35);
	var c36 = new haxe_ui_components_Label();
	c36.set_text("Group");
	c36.set_verticalAlign("center");
	c31.addComponent(c36);
	var c37 = new core_components_DashboardGroupSelector();
	c37.set_id("dashboardGroupField");
	c37.set_width(200.);
	c31.addComponent(c37);
	var c38 = new haxe_ui_components_Label();
	c38.set_text("Icon");
	c38.set_verticalAlign("center");
	c31.addComponent(c38);
	var c39 = new core_components_IconSelector();
	c39.set_id("dashboardIconField");
	c39.set_width(200.);
	c31.addComponent(c39);
	c28.addComponent(c31);
	var c40 = new haxe_ui_components_TextArea();
	c40.set_id("dashboardDataField");
	c40.set_percentWidth(100.);
	c40.set_percentHeight(100.);
	c28.addComponent(c40);
	c27.addComponent(c28);
	c15.addComponent(c27);
	c14.addComponent(c15);
	var c41 = new haxe_ui_components_Button();
	c41.set_id("updateDetailsButton");
	c41.set_text("Update");
	c41.set_horizontalAlign("right");
	c14.addComponent(c41);
	c13.addComponent(c14);
	c12.addComponent(c13);
	var c42 = new haxe_ui_containers_VBox();
	c42.set_id("previewTab");
	c42.set_percentWidth(100.);
	c42.set_percentHeight(100.);
	c42.set_text("Preview");
	var c43 = new core_dashboards_DashboardInstance();
	c43.set_id("dashboardPreviewInstance");
	c43.set_percentWidth(100.);
	c43.set_percentHeight(100.);
	c43.set_styleString("padding: 15px;");
	c42.addComponent(c43);
	c12.addComponent(c42);
	c11.addComponent(c12);
	c0.addComponent(c11);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.updateDetailsButton = c41;
	this.removeDashboardButton = c10;
	this.previewTab = c42;
	this.detailsContainer = c11;
	this.dashboardTree = c4;
	this.dashboardPreviewInstance = c43;
	this.dashboardNameLabel = c29;
	this.dashboardNameField = c35;
	this.dashboardIdField = c33;
	this.dashboardIconField = c39;
	this.dashboardGroupNameLabel = c18;
	this.dashboardGroupNameField = c24;
	this.dashboardGroupIdField = c22;
	this.dashboardGroupIconField = c26;
	this.dashboardGroupField = c37;
	this.dashboardGroupDetails = c16;
	this.dashboardDetailsTabs = c12;
	this.dashboardDetails = c27;
	this.dashboardDataField = c40;
	this.bottomButtons = c5;
	this.addDashboardButton = c6;
	views_DashboardsView.instance = this;
	this.dashboardDetails.hide();
	this.refreshDashboardSelector();
	var c = this.addDashboardButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAddDataButton));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addDashboardButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DashboardsView", methodName : "new"});
	}
	var c = this.updateDetailsButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onUpdateDetailsButton));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "updateDetailsButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DashboardsView", methodName : "new"});
	}
	var c = this.dashboardTree;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onDashboardTreeSelectionChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "dashboardTree" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DashboardsView", methodName : "new"});
	}
	var c = this.dashboardDetailsTabs;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onDashboardDetailsTabsChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "dashboardDetailsTabs" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DashboardsView", methodName : "new"});
	}
};
$hxClasses["views.DashboardsView"] = views_DashboardsView;
views_DashboardsView.__name__ = "views.DashboardsView";
views_DashboardsView.__super__ = haxe_ui_containers_VBox;
views_DashboardsView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	refreshDashboardSelector: function(groupId,dashboardId) {
		var _gthis = this;
		var map = core_data_InternalDB.dashboards.utils.get_byGroup();
		this.dashboardTree.clearNodes();
		var firstNode = null;
		var nodeToSelect = null;
		var group = map.keys();
		while(group.hasNext()) {
			var group1 = group.next();
			var groupNode = this.dashboardTree.addNode({ text : group1.get_name(), icon : "themes/optex/" + group1.get_icon().get_path(), groupData : group1});
			if(firstNode == null) {
				firstNode = groupNode;
			}
			if(groupId != null && group1.get_dashboardGroupId() == groupId) {
				nodeToSelect = groupNode;
			}
			groupNode.set_expanded(true);
			var dashboards = map.h[group1.__id__];
			var _g = 0;
			while(_g < dashboards.length) {
				var dashboard = dashboards[_g];
				++_g;
				var dashboardNode = groupNode.addNode({ text : dashboard.get_name(), icon : "themes/optex/" + dashboard.get_icon().get_path(), dashboardData : dashboard});
				if(dashboardId != null && dashboard.get_dashboardId() == dashboardId) {
					nodeToSelect = dashboardNode;
				}
			}
		}
		if(nodeToSelect == null) {
			nodeToSelect = firstNode;
		}
		if(nodeToSelect != null) {
			haxe_ui_Toolkit.callLater(function() {
				_gthis.dashboardTree.set_selectedNode(nodeToSelect);
			});
		}
	}
	,onAddDataButton: function(e) {
		var sidebar = new sidebars_CreateDashboardSidebar();
		sidebar.set_position("right");
		sidebar.modal = true;
		sidebar.show();
	}
	,onUpdateDetailsButton: function(e) {
		var _gthis = this;
		var selectedItem = this.dashboardTree.get_selectedNode();
		if(selectedItem == null) {
			return;
		}
		if(selectedItem.get_data().groupData != null) {
			var groupData = selectedItem.get_data().groupData;
			var iconData = this.dashboardGroupIconField.get_selectedItem().iconData;
			groupData.set_name(this.dashboardGroupNameField.get_text());
			groupData.set_iconId(iconData.get_iconId());
			var working = new components_WorkingIndicator();
			working.showWorking();
			core_data_InternalDB.dashboardGroups.updateObject(groupData).then(function(r) {
				core_data_InternalDB.dashboards.fillCache().then(function(r) {
					working.workComplete();
					_gthis.refreshDashboardSelector(groupData.get_dashboardGroupId(),null);
				});
			});
		} else if(selectedItem.get_data().dashboardData != null) {
			var dashboardData = selectedItem.get_data().dashboardData;
			var iconData = this.dashboardIconField.get_selectedItem().iconData;
			dashboardData.set_name(this.dashboardNameField.get_text());
			dashboardData.set_layoutData(this.dashboardDataField.get_text());
			dashboardData.set_iconId(iconData.get_iconId());
			var working1 = new components_WorkingIndicator();
			working1.showWorking();
			core_data_InternalDB.dashboards.updateObject(dashboardData).then(function(r) {
				working1.workComplete();
				_gthis.refreshDashboardSelector(null,dashboardData.get_dashboardId());
			});
		}
	}
	,_firstLoad: null
	,onDashboardTreeSelectionChange: function(e) {
		var selectedItem = this.dashboardTree.get_selectedNode();
		if(selectedItem == null || selectedItem.get_data() == null) {
			return;
		}
		if(selectedItem.get_data().groupData != null) {
			var groupData = selectedItem.get_data().groupData;
			this.dashboardGroupNameLabel.set_text(groupData.get_name() + " Details");
			this.dashboardGroupIdField.set_text("" + groupData.get_dashboardGroupId());
			this.dashboardGroupNameField.set_text(groupData.get_name());
			this.dashboardGroupIconField.set_selectedItem(groupData.get_icon().get_name());
			this.dashboardGroupDetails.show();
			this.dashboardDetails.hide();
		} else if(selectedItem.get_data().dashboardData != null) {
			var dashboardData = selectedItem.get_data().dashboardData;
			this.dashboardNameLabel.set_text(dashboardData.get_name() + " Details");
			this.dashboardIdField.set_text("" + dashboardData.get_dashboardId());
			this.dashboardNameField.set_text(dashboardData.get_name());
			this.dashboardIconField.set_selectedItem(dashboardData.get_icon().get_name());
			this.dashboardGroupField.set_selectedItem(dashboardData.get_group().get_name());
			this.dashboardDataField.set_text(dashboardData.get_layoutData());
			this.dashboardGroupDetails.hide();
			this.dashboardDetails.show();
		}
	}
	,onDashboardDetailsTabsChange: function(e) {
		var selectedItem = this.dashboardTree.get_selectedNode();
		if(selectedItem == null || selectedItem.get_data() == null) {
			return;
		}
		if(selectedItem.get_data().dashboardData != null) {
			var dashboardData = selectedItem.get_data().dashboardData;
			this.dashboardPreviewInstance.buildDashboard(dashboardData);
		} else {
			this.dashboardPreviewInstance.clearDashboard();
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new views_DashboardsView();
	}
	,updateDetailsButton: null
	,removeDashboardButton: null
	,previewTab: null
	,detailsContainer: null
	,dashboardTree: null
	,dashboardPreviewInstance: null
	,dashboardNameLabel: null
	,dashboardNameField: null
	,dashboardIdField: null
	,dashboardIconField: null
	,dashboardGroupNameLabel: null
	,dashboardGroupNameField: null
	,dashboardGroupIdField: null
	,dashboardGroupIconField: null
	,dashboardGroupField: null
	,dashboardGroupDetails: null
	,dashboardDetailsTabs: null
	,dashboardDetails: null
	,dashboardDataField: null
	,bottomButtons: null
	,addDashboardButton: null
	,__class__: views_DashboardsView
});
var views_DataView = function() {
	this._showInternalDatabases = true;
	this._tableToSelect = null;
	this._databaseToSelect = null;
	haxe_ui_containers_VBox.call(this);
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_width(230.);
	c1.set_percentHeight(100.);
	c1.set_styleString("spacing:0;border-right: 1px solid $normal-border-color;");
	var c2 = new haxe_ui_containers_VBox();
	c2.set_percentWidth(100.);
	c2.set_styleString("padding:7px;background-color: $solid-background-color;__padding-right: 1px;border-bottom:1px solid $normal-border-color;border-right:1px solid $normal-border-color");
	var c3 = new haxe_ui_components_DropDown();
	c3.set_id("databaseSelector");
	c3.set_percentWidth(100.);
	c2.addComponent(c3);
	var c4 = new haxe_ui_components_TextField();
	c4.set_percentWidth(100.);
	c4.set_placeholder("Filter data sources");
	c2.addComponent(c4);
	c1.addComponent(c2);
	var c5 = new haxe_ui_containers_ListView();
	c5.set_id("tableSelector");
	c5.set_percentWidth(100.);
	c5.set_percentHeight(100.);
	c5.set_styleNames("left-menu");
	c5.set_selectedIndex(0);
	c5.set_native(false);
	var c6 = new haxe_ui_core_ItemRenderer();
	c6.set_percentWidth(100.);
	c6.set_layoutName("horizontal");
	var c7 = new haxe_ui_components_Image();
	c7.set_id("icon");
	c7.set_verticalAlign("center");
	c6.addComponent(c7);
	var c8 = new haxe_ui_components_Label();
	c8.set_id("name");
	c8.set_percentWidth(100.);
	c8.set_verticalAlign("center");
	c6.addComponent(c8);
	var c9 = new haxe_ui_components_Label();
	c9.set_id("rows");
	c9.set_styleString("color: #888888;background-color:#dfdfdf;border-radius: 6px;padding: 2px 4px;");
	c9.set_verticalAlign("center");
	c6.addComponent(c9);
	c5.addComponent(c6);
	c1.addComponent(c5);
	var c10 = new haxe_ui_containers_HBox();
	c10.set_height(67.);
	c10.set_percentWidth(100.);
	c10.set_styleNames("bottom-buttons");
	c10.set_styleString("padding:0px;spacing:0px;border-right: 1px solid $normal-border-color;border-top: 1px solid $normal-border-color;padding-right:1px;padding-top: 1px;border-bottom:1px solid $normal-border-color;padding-bottom:1px;");
	var c11 = new haxe_ui_components_Button();
	c11.set_id("addDataButton");
	c11.set_percentWidth(33.);
	c11.set_percentHeight(100.);
	c11.set_text("Add");
	c11.set_iconPosition("top");
	c11.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-plus-+-32.png"));
	c10.addComponent(c11);
	var c12 = new haxe_ui_core_Component();
	c12.set_width(1.);
	c12.set_percentHeight(100.);
	c12.set_styleString("background-color: $normal-border-color");
	c10.addComponent(c12);
	var c13 = new haxe_ui_components_Button();
	c13.set_percentWidth(34.);
	c13.set_percentHeight(100.);
	c13.set_text("Update");
	c13.set_iconPosition("top");
	c13.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-edit-32(1).png"));
	c10.addComponent(c13);
	var c14 = new haxe_ui_core_Component();
	c14.set_width(1.);
	c14.set_percentHeight(100.);
	c14.set_styleString("background-color: $normal-border-color");
	c10.addComponent(c14);
	var c15 = new haxe_ui_components_Button();
	c15.set_id("removeDataButton");
	c15.set_percentWidth(33.);
	c15.set_percentHeight(100.);
	c15.set_text("Delete");
	c15.set_iconPosition("top");
	c15.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-delete-32.png"));
	c10.addComponent(c15);
	c1.addComponent(c10);
	c0.addComponent(c1);
	var c16 = new haxe_ui_containers_VBox();
	c16.set_id("detailsContainer");
	c16.set_percentWidth(100.);
	c16.set_percentHeight(100.);
	c16.set_styleString("padding: 10px;");
	var c17 = new haxe_ui_containers_TableView();
	c17.set_id("dataSourceDataTable");
	c17.set_percentWidth(100.);
	c17.set_percentHeight(100.);
	c17.set_styleString("border:none;");
	c17.set_virtual(false);
	c16.addComponent(c17);
	c0.addComponent(c16);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.tableSelector = c5;
	this.removeDataButton = c15;
	this.detailsContainer = c16;
	this.databaseSelector = c3;
	this.dataSourceDataTable = c17;
	this.addDataButton = c11;
	views_DataView.instance = this;
	this.refresh();
	var c = this.databaseSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onDatabaseSelectorChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "databaseSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DataView", methodName : "new"});
	}
	var c = this.tableSelector;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onTableSelectorChange));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "tableSelector" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DataView", methodName : "new"});
	}
	var c = this.addDataButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAddDataButton));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addDataButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DataView", methodName : "new"});
	}
	var c = this.removeDataButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onRemoveDataButton));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "removeDataButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.DataView", methodName : "new"});
	}
};
$hxClasses["views.DataView"] = views_DataView;
views_DataView.__name__ = "views.DataView";
views_DataView.__super__ = haxe_ui_containers_VBox;
views_DataView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	_database: null
	,_table: null
	,_databaseToSelect: null
	,_tableToSelect: null
	,_showInternalDatabases: null
	,refresh: function(selectedDatabase,selectedTable) {
		var _gthis = this;
		this._databaseToSelect = selectedDatabase;
		this._tableToSelect = selectedTable;
		this._database = null;
		this._table = null;
		core_data_DatabaseManager.get_instance().listDatabases(false).then(function(dbs) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var indexToSelect = 0;
			var n = 0;
			var _g = 0;
			while(_g < dbs.length) {
				var db = dbs[_g];
				++_g;
				if(StringTools.startsWith(db.name,"__")) {
					continue;
				}
				ds.add({ text : db.name, db : db});
				if(selectedDatabase != null && db.name == selectedDatabase) {
					indexToSelect = n;
				}
				++n;
			}
			ds.sort("text");
			if(_gthis._showInternalDatabases) {
				var _g = 0;
				while(_g < dbs.length) {
					var db = dbs[_g];
					++_g;
					if(!StringTools.startsWith(db.name,"__")) {
						continue;
					}
					ds.add({ text : db.name, db : db});
					if(selectedDatabase != null && db.name == selectedDatabase) {
						indexToSelect = n;
					}
					++n;
				}
			}
			_gthis.databaseSelector.set_dataSource(ds);
			_gthis.databaseSelector.set_selectedIndex(-1);
			_gthis.databaseSelector.set_selectedIndex(indexToSelect);
			_gthis._databaseToSelect = null;
		});
	}
	,removeCurrentDatabase: function() {
		var _gthis = this;
		var selectedItem = this.databaseSelector.get_selectedItem();
		if(selectedItem == null) {
			return;
		}
		var working = new components_WorkingIndicator();
		working.showWorking();
		this._database.remove().then(function(r) {
			working.workComplete();
			_gthis.refresh();
		});
	}
	,onDatabaseSelectorChanged: function(e) {
		var _gthis = this;
		var selectedItem = this.databaseSelector.get_selectedItem();
		if(selectedItem == null) {
			return;
		}
		this._database = selectedItem.db;
		this._table = null;
		this._database.listTables().then(function(tables) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var indexToSelect = 0;
			var n = 0;
			var _g = 0;
			while(_g < tables.length) {
				var table = tables[_g];
				++_g;
				ds.add({ name : table.name, type : "static", rows : table.get_recordCount(), table : table});
				if(_gthis._tableToSelect != null && _gthis._tableToSelect == table.name) {
					indexToSelect = n;
				}
				++n;
			}
			ds.sort("name");
			_gthis.tableSelector.set_dataSource(ds);
			_gthis.tableSelector.set_selectedIndex(-1);
			_gthis.tableSelector.set_selectedIndex(indexToSelect);
			_gthis._tableToSelect = null;
		});
	}
	,onTableSelectorChange: function(e) {
		if(this.tableSelector.get_selectedItem() == null) {
			return;
		}
		var selectedItem = this.tableSelector.get_selectedItem();
		this._table = selectedItem.table;
		this.refreshTableData(selectedItem.table);
	}
	,refreshTableData: function(table) {
		var _gthis = this;
		this.dataSourceDataTable.clearContents(true);
		var colWidths = new haxe_ds_ObjectMap();
		var cols_h = Object.create(null);
		var fieldDefs = table.info.fieldDefinitions;
		var maxCols = 9;
		var n = 0;
		var _g = 0;
		while(_g < fieldDefs.length) {
			var fd = fieldDefs[_g];
			++_g;
			var column = this.dataSourceDataTable.addColumn(StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_"));
			column.set_width(column.get_text().length * 10 + 20);
			var value = column.get_width();
			colWidths.set(column,value);
			var key = column.get_id();
			cols_h[key] = column;
			if(n > maxCols) {
				break;
			}
			n += 1;
		}
		var recordCount = 0;
		n = 0;
		table.fetch().then(function(data) {
			var ds = new haxe_ui_data_ArrayDataSource();
			var _g = 0;
			while(_g < data.length) {
				var d = data[_g];
				++_g;
				var item = { };
				n = 0;
				var _g1 = 0;
				while(_g1 < fieldDefs.length) {
					var fd = fieldDefs[_g1];
					++_g1;
					var v = d.getFieldValue(fd.fieldName);
					var tmp = typeof(v) == "string";
					item[StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_")] = Std.string(v);
					var key = StringTools.replace(StringTools.replace(fd.fieldName,"\"","")," ","_");
					var column = cols_h[key];
					var columnWidth = colWidths.h[column.__id__];
					var cx = 9;
					if(cx == null) {
						cx = 10;
					}
					var newWidth = Std.string(v).length * cx + 20;
					if(newWidth > columnWidth) {
						colWidths.set(column,newWidth);
					}
					if(n > maxCols) {
						break;
					}
					n += 1;
				}
				ds.add(item);
				recordCount += 1;
				if(recordCount > 100) {
					break;
				}
			}
			var column = colWidths.keys();
			while(column.hasNext()) {
				var column1 = column.next();
				var cx = colWidths.h[column1.__id__];
				column1.set_width(cx);
			}
			_gthis.dataSourceDataTable.set_dataSource(ds);
		});
	}
	,guessStringWidth: function(s,cx) {
		if(cx == null) {
			cx = 10;
		}
		return s.length * cx + 20;
	}
	,safeId: function(fieldName) {
		return StringTools.replace(StringTools.replace(fieldName,"\"","")," ","_");
	}
	,onAddDataButton: function(e) {
		core_data_DatabaseManager.get_instance().listDatabases().then(function(dbs) {
			var sidebar = new sidebars_ImportDataSourceSidebar();
			sidebar.set_databases(dbs);
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
		});
	}
	,onRemoveDataButton: function(e) {
		var _gthis = this;
		if(this.tableSelector.get_selectedItem() == null) {
			return;
		}
		var message = "Are you sure you wisth to remove the '" + Std.string(this.tableSelector.get_selectedItem().table.name) + "' table?\n\nThis cannot be undone.\n\n";
		haxe_ui_containers_dialogs_Dialogs.messageBox(message,"Confirm Removal","question",null,function(button) {
			var larr = haxe_ui_containers_dialogs_DialogButton.toString(button).split("|");
			if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("{{dialog.yes}}")) != -1) {
				var working = new components_WorkingIndicator();
				working.showWorking();
				_gthis._table.remove().then(function(r) {
					working.workComplete();
					_gthis.refresh(_gthis._database.name);
				});
			}
		});
	}
	,num: function(i) {
		return Number(i);
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new views_DataView();
	}
	,tableSelector: null
	,removeDataButton: null
	,detailsContainer: null
	,databaseSelector: null
	,dataSourceDataTable: null
	,addDataButton: null
	,__class__: views_DataView
});
var views_HomeView = function() {
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n        .big-button {\n            padding: 40px;\n            font-size: 18px;\n            font-name: \"fonts/Roboto-Bold.ttf\";\n        }\n    ","user");
	var c0 = new haxe_ui_containers_Box();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_HBox();
	c1.set_styleString("spacing: 20px");
	c1.set_verticalAlign("center");
	c1.set_horizontalAlign("center");
	var c2 = new haxe_ui_components_Button();
	c2.set_text("Data");
	c2.set_styleNames("big-button");
	c2.set_iconPosition("top");
	c2.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-data-protection-96.png"));
	c1.addComponent(c2);
	var c3 = new haxe_ui_components_Button();
	c3.set_text("Dashboards");
	c3.set_styleNames("big-button");
	c3.set_iconPosition("top");
	c3.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-dashboard-layout-96.png"));
	c1.addComponent(c3);
	var c4 = new haxe_ui_components_Button();
	c4.set_text("Settings");
	c4.set_styleNames("big-button");
	c4.set_iconPosition("top");
	c4.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-services-96.png"));
	c1.addComponent(c4);
	c0.addComponent(c1);
	this.addComponent(c0);
	c2.registerEvent("click",function(event) {
		var __this__ = c2;
		AdminView.instance.changeView("dataView");
	});
	c3.registerEvent("click",function(event) {
		var __this__ = c3;
		AdminView.instance.changeView("dashboardsView");
	});
	c4.registerEvent("click",function(event) {
		var __this__ = c4;
		AdminView.instance.changeView("settingsView");
	});
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
};
$hxClasses["views.HomeView"] = views_HomeView;
views_HomeView.__name__ = "views.HomeView";
views_HomeView.__super__ = haxe_ui_containers_VBox;
views_HomeView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new views_HomeView();
	}
	,__class__: views_HomeView
});
var views_OrganizationsView = function() {
	views_OrganizationsView.instance = this;
	haxe_ui_containers_VBox.call(this);
	haxe_ui_Toolkit.styleSheet.parse("\n            #orgsTree {\n                border: none;\n                background-color: $solid-background-color;\n                border-radius: 0;\n            }\n        ","user");
	var c0 = new haxe_ui_containers_HBox();
	c0.set_percentWidth(100.);
	c0.set_percentHeight(100.);
	var c1 = new haxe_ui_containers_VBox();
	c1.set_width(300.);
	c1.set_percentHeight(100.);
	c1.set_styleString("spacing:0;border-right: 1px solid $normal-border-color;padding-right: 1px;");
	var c2 = new haxe_ui_containers_VBox();
	c2.set_percentWidth(100.);
	c2.set_styleString("padding:7px;background-color: $solid-background-color;border-bottom:1px solid $normal-border-color;");
	var c3 = new haxe_ui_components_TextField();
	c3.set_percentWidth(100.);
	c3.set_placeholder("Filter organizations");
	c2.addComponent(c3);
	c1.addComponent(c2);
	var c4 = new haxe_ui_containers_TreeView();
	c4.set_id("orgsTree");
	c4.set_percentWidth(100.);
	c4.set_percentHeight(100.);
	c1.addComponent(c4);
	var c5 = new haxe_ui_containers_HBox();
	c5.set_id("bottomButtons");
	c5.set_height(67.);
	c5.set_percentWidth(100.);
	c5.set_styleNames("bottom-buttons");
	c5.set_styleString("padding:0px;spacing:0px;border-top: 1px solid $normal-border-color;padding-top: 1px;border-bottom:1px solid $normal-border-color;padding-bottom:1px;");
	var c6 = new haxe_ui_components_Button();
	c6.set_id("addButton");
	c6.set_percentWidth(33.);
	c6.set_percentHeight(100.);
	c6.set_text("Add");
	c6.set_iconPosition("top");
	c6.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-plus-+-32.png"));
	c5.addComponent(c6);
	var c7 = new haxe_ui_core_Component();
	c7.set_width(1.);
	c7.set_percentHeight(100.);
	c7.set_styleString("background-color: $normal-border-color");
	c5.addComponent(c7);
	var c8 = new haxe_ui_components_Button();
	c8.set_percentWidth(34.);
	c8.set_percentHeight(100.);
	c8.set_text("Update");
	c8.set_iconPosition("top");
	c8.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-edit-32(1).png"));
	c5.addComponent(c8);
	var c9 = new haxe_ui_core_Component();
	c9.set_width(1.);
	c9.set_percentHeight(100.);
	c9.set_styleString("background-color: $normal-border-color");
	c5.addComponent(c9);
	var c10 = new haxe_ui_components_Button();
	c10.set_id("removeButton");
	c10.set_percentWidth(33.);
	c10.set_percentHeight(100.);
	c10.set_text("Delete");
	c10.set_iconPosition("top");
	c10.set_icon(haxe_ui_util_Variant.fromString("icons/icons8-delete-32.png"));
	c5.addComponent(c10);
	c1.addComponent(c5);
	c0.addComponent(c1);
	var c11 = new haxe_ui_containers_VBox();
	c11.set_id("detailsContainer");
	c11.set_percentWidth(100.);
	c11.set_percentHeight(100.);
	c11.set_styleString("padding: 10px;");
	c0.addComponent(c11);
	this.addComponent(c0);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
	this.removeButton = c10;
	this.orgsTree = c4;
	this.detailsContainer = c11;
	this.bottomButtons = c5;
	this.addButton = c6;
	var c = this.orgsTree;
	if(c != null) {
		c.registerEvent("change",$bind(this,this.onOrgsTreeSelectionChanged));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "orgsTree" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.OrganizationsView", methodName : "new"});
	}
	var c = this.addButton;
	if(c != null) {
		c.registerEvent("click",$bind(this,this.onAddButton));
	} else {
		haxe_Log.trace("WARNING: could not find component to regsiter event (" + "addButton" + ")",{ fileName : "haxe/ui/macros/Macros.hx", lineNumber : 303, className : "views.OrganizationsView", methodName : "new"});
	}
};
$hxClasses["views.OrganizationsView"] = views_OrganizationsView;
views_OrganizationsView.__name__ = "views.OrganizationsView";
views_OrganizationsView.__super__ = haxe_ui_containers_VBox;
views_OrganizationsView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	onReady: function() {
		haxe_ui_containers_VBox.prototype.onReady.call(this);
		if(!this.canCreateOrgs()) {
			this.bottomButtons.hide();
		}
		this.populateOrgs();
	}
	,onOrgsTreeSelectionChanged: function(e) {
		var selectedNode = this.orgsTree.get_selectedNode();
		if(selectedNode == null) {
			return;
		}
		haxe_Log.trace("selection changed - " + Std.string(selectedNode.userData),{ fileName : "haxe/views/OrganizationsView.hx", lineNumber : 63, className : "views.OrganizationsView", methodName : "onOrgsTreeSelectionChanged"});
		this.detailsContainer.removeAllComponents();
		if(selectedNode.userData == "layout") {
			var layout = selectedNode.get_data().layout;
			var panel = new panels_LayoutDetailsPanel();
			panel.layoutDetails = layout;
			this.detailsContainer.addComponent(panel);
		}
	}
	,canCreateOrgs: function() {
		if(AdminView.instance.currentUser.get_isAdmin()) {
			return true;
		}
		return false;
	}
	,refreshOrgs: function(orgIdToSelect) {
		var nodeToSelect = null;
		this._orgsNode.clearNodes();
		var _g = 0;
		var _g1 = core_data_InternalDB.organizations.data;
		while(_g < _g1.length) {
			var org = _g1[_g];
			++_g;
			var orgNode = this._orgsNode.addNode({ text : org.get_name(), icon : "themes/optex/sitemap-solid.png", org : org});
			orgNode.set_expanded(false);
			var sitesNode = orgNode.addNode({ text : "Sites", icon : "themes/optex/folder-solid.png", org : org});
			sitesNode.userData = "sites";
			sitesNode.set_expanded(true);
			this.refreshSites(sitesNode,orgNode);
			var layoutsNode = orgNode.addNode({ text : "Layouts", icon : "themes/optex/folder-solid.png", org : org});
			layoutsNode.userData = "layouts";
			layoutsNode.set_expanded(true);
			this.refreshLayouts(layoutsNode,orgNode);
			var usersNode = orgNode.addNode({ text : "Users", icon : "themes/optex/folder-solid.png", org : org});
			usersNode.userData = "users";
			usersNode.set_expanded(true);
			this.refreshUsers(usersNode,orgNode);
			var userGroupsNode = orgNode.addNode({ text : "User Groups", icon : "themes/optex/folder-solid.png", org : org});
			userGroupsNode.userData = "userGroups";
			userGroupsNode.set_expanded(true);
			this.refreshUserGroups(userGroupsNode,orgNode);
			var rolesNode = orgNode.addNode({ text : "Roles", icon : "themes/optex/folder-solid.png", org : org});
			rolesNode.userData = "roles";
			rolesNode.set_expanded(true);
			this.refreshOrganizationRoles(rolesNode,orgNode);
		}
		return nodeToSelect;
	}
	,refreshSites: function(sitesNode,orgNode) {
		var org = orgNode.get_data().org;
		var _g = 0;
		var _g1 = core_data_InternalDB.sites.data;
		while(_g < _g1.length) {
			var site = _g1[_g];
			++_g;
			if(site.get_organizationId() == org.get_organizationId()) {
				var siteLabel = site.get_name();
				var siteNode = sitesNode.addNode({ text : siteLabel, icon : "themes/optex/diagram-project-solid.png", org : org, site : site});
				siteNode.userData = "site";
				this.refreshSitePages(siteNode,orgNode);
			}
		}
	}
	,refreshLayouts: function(layoutsNode,orgNode) {
		var org = orgNode.get_data().org;
		var _g = 0;
		var _g1 = core_data_InternalDB.layouts.data;
		while(_g < _g1.length) {
			var layout = _g1[_g];
			++_g;
			if(layout.get_organizationId() == org.get_organizationId()) {
				var layoutLabel = layout.get_name();
				var layoutNode = layoutsNode.addNode({ text : layoutLabel, icon : "themes/optex/dot.png", org : org, layout : layout});
				layoutNode.userData = "layout";
			}
		}
	}
	,refreshSitePages: function(siteNode,orgNode) {
		var site = siteNode.get_data().site;
		var _g = 0;
		var _g1 = core_data_InternalDB.pages.data;
		while(_g < _g1.length) {
			var page = _g1[_g];
			++_g;
			if(page.get_siteId() == site.get_siteId() && page.get_parentPageId() == -1) {
				var pageLabel = page.get_name();
				var pageIcon = "themes/optex/" + core_data_InternalDB.icons.utils.icon(page.get_iconId()).get_path();
				var pageNode = siteNode.addNode({ text : pageLabel, icon : pageIcon, site : site, page : page});
				pageNode.userData = "page";
				this.refreshSubPages(pageNode,orgNode);
			}
		}
	}
	,refreshSubPages: function(pageNode,orgNode) {
		var site = pageNode.get_data().site;
		var parentPage = pageNode.get_data().page;
		var _g = 0;
		var _g1 = core_data_InternalDB.pages.data;
		while(_g < _g1.length) {
			var page = _g1[_g];
			++_g;
			if(page.get_siteId() == site.get_siteId() && page.get_parentPageId() == parentPage.get_pageId()) {
				var pageLabel = page.get_name();
				var pageIcon = "themes/optex/" + core_data_InternalDB.icons.utils.icon(page.get_iconId()).get_path();
				var pageNode1 = pageNode.addNode({ text : pageLabel, icon : pageIcon, site : site, page : page});
				pageNode1.userData = "page";
				this.refreshSubPages(pageNode1,orgNode);
			}
		}
	}
	,refreshUsers: function(usersNode,orgNode) {
		var org = orgNode.get_data().org;
		var _g = 0;
		var _g1 = core_data_InternalDB.userOrganizationLinks.data;
		while(_g < _g1.length) {
			var userLink = _g1[_g];
			++_g;
			if(userLink.get_organizationId() == org.get_organizationId()) {
				var _g2 = 0;
				var _g3 = core_data_InternalDB.users.data;
				while(_g2 < _g3.length) {
					var user = _g3[_g2];
					++_g2;
					if(user.get_userId() == userLink.get_userId()) {
						var userLabel = user.get_username() + " (" + user.get_firstName() + " " + user.get_lastName() + ")";
						var userNode = usersNode.addNode({ text : userLabel, icon : "themes/optex/user-solid.png", org : org, user : user});
						var groupsNode = userNode.addNode({ text : "Groups", icon : "themes/optex/folder-solid.png", org : org, user : user});
						this.refreshUsersGroups(groupsNode,orgNode);
						var rolesNode = userNode.addNode({ text : "Roles", icon : "themes/optex/folder-solid.png", org : org, user : user});
					}
				}
			}
		}
	}
	,refreshUserGroups: function(userGroupsNode,orgNode) {
		var org = orgNode.get_data().org;
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroups.data;
		while(_g < _g1.length) {
			var userGroup = _g1[_g];
			++_g;
			if(userGroup.get_organizationId() == org.get_organizationId()) {
				var groupLabel = userGroup.get_name();
				var userGroupNode = userGroupsNode.addNode({ text : groupLabel, icon : "themes/optex/user-group-solid.png", org : org, userGroup : userGroup});
				userGroupNode.userData = "userGroup";
				var rolesNode = userGroupNode.addNode({ text : "Roles", icon : "themes/optex/folder-solid.png", org : org, userGroup : userGroup});
				this.refreshUserGroupRoles(rolesNode,orgNode);
				rolesNode.userData = "userGroupRoles";
				this.refreshUserGroupUsers(userGroupNode,orgNode);
			}
		}
	}
	,refreshUserGroupRoles: function(rolesNode,orgNode) {
		var org = orgNode.get_data().org;
		var userGroup = rolesNode.get_data().userGroup;
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroups.utils.roles(userGroup.get_userGroupId());
		while(_g < _g1.length) {
			var role = _g1[_g];
			++_g;
			var roleLabel = role.get_name();
			var roleNode = rolesNode.addNode({ text : roleLabel, icon : "themes/optex/person-solid.png", org : org, role : role, userGroup : userGroup});
		}
	}
	,refreshUserGroupUsers: function(userGroupNode,orgNode) {
		var org = orgNode.get_data().org;
		var userGroup = userGroupNode.get_data().userGroup;
		var _g = 0;
		var _g1 = core_data_InternalDB.userGroups.utils.users(userGroup.get_userGroupId());
		while(_g < _g1.length) {
			var user = _g1[_g];
			++_g;
			var userLabel = user.get_username() + " (" + user.get_firstName() + " " + user.get_lastName() + ")";
			var userNode = userGroupNode.addNode({ text : userLabel, icon : "themes/optex/user-solid.png", org : org, user : user, userGroup : userGroup});
		}
	}
	,refreshUsersGroups: function(usersGroupsNode,orgNode) {
		var org = orgNode.get_data().org;
		var user = usersGroupsNode.get_data().user;
		var _g = 0;
		var _g1 = core_data_InternalDB.users.utils.groups(user.get_userId());
		while(_g < _g1.length) {
			var userGroup = _g1[_g];
			++_g;
			var groupLabel = userGroup.get_name();
			var userGroupNode = usersGroupsNode.addNode({ text : groupLabel, icon : "themes/optex/user-group-solid.png", org : org, userGroup : userGroup});
		}
	}
	,refreshOrganizationRoles: function(rolesNode,orgNode) {
		var org = orgNode.get_data().org;
		var _g = 0;
		var _g1 = core_data_InternalDB.roles.data;
		while(_g < _g1.length) {
			var role = _g1[_g];
			++_g;
			if(role.get_organizationId() == org.get_organizationId()) {
				var roleLabel = role.get_name();
				var roleNode = rolesNode.addNode({ text : roleLabel, icon : "themes/optex/person-solid.png", org : org, role : role});
				roleNode.userData = "rolePermission";
				this.refreshRolePermissions(roleNode,orgNode);
			}
		}
	}
	,refreshRolePermissions: function(roleNode,orgNode) {
		var org = orgNode.get_data().org;
		var role = roleNode.get_data().role;
		var _g = 0;
		var _g1 = core_data_InternalDB.roles.utils.permissions(role.get_roleId());
		while(_g < _g1.length) {
			var permission = _g1[_g];
			++_g;
			var permissionLabel = core_data_ActionType.toString(permission.get_permissionAction());
			var permissionResource = "";
			if(permission.get_resourceId() == -1) {
				permissionResource = "Any";
			}
			permissionLabel += " " + permissionResource;
			permissionLabel += " " + core_data_ResourceType.toString(permission.get_resourceType());
			var permissionNode = roleNode.addNode({ text : permissionLabel, icon : "themes/optex/dot.png", org : org, role : role, permission : permission});
		}
	}
	,_orgsNode: null
	,populateOrgs: function() {
		var _gthis = this;
		this.orgsTree.clearNodes();
		var nodeToSelect = null;
		if(this.canCreateOrgs()) {
			this._orgsNode = this.orgsTree.addNode({ text : "Organizations", icon : "themes/optex/folder-solid.png"});
			this._orgsNode.userData = "orgs";
			this._orgsNode.set_expanded(true);
			nodeToSelect = this._orgsNode;
			var node = this.refreshOrgs();
			if(node != null) {
				nodeToSelect = node;
			}
		} else {
			this._orgsNode = this.orgsTree.addNode({ text : "My Organizations", icon : "themes/optex/folder-solid.png"});
			this._orgsNode.set_expanded(true);
			nodeToSelect = this._orgsNode;
		}
		if(nodeToSelect != null) {
			haxe_ui_Toolkit.callLater(function() {
				_gthis.orgsTree.set_selectedNode(nodeToSelect);
			});
		}
	}
	,onAddButton: function(e) {
		var _gthis = this;
		var selectedNode = this.orgsTree.get_selectedNode();
		if(selectedNode == null) {
			return;
		}
		haxe_Log.trace(selectedNode.userData,{ fileName : "haxe/views/OrganizationsView.hx", lineNumber : 321, className : "views.OrganizationsView", methodName : "onAddButton"});
		switch(selectedNode.userData) {
		case "layouts":
			var org = selectedNode.get_data().org;
			var sidebar = new sidebars_CreateLayoutSidebar();
			sidebar.organization = org;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "orgs":
			var sidebar = new sidebars_CreateOrganizationSidebar();
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "page":
			var site = selectedNode.get_data().site;
			var page = selectedNode.get_data().page;
			var sidebar = new sidebars_CreateSitePageSidebar();
			sidebar.site = site;
			sidebar.parentPage = page;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "rolePermission":
			var org = selectedNode.get_data().org;
			var role = selectedNode.get_data().role;
			var sidebar = new sidebars_CreatePermissionSidebar();
			sidebar.role = role;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "roles":
			var org = selectedNode.get_data().org;
			var sidebar = new sidebars_CreateRoleSidebar();
			sidebar.organization = org;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "site":
			var site = selectedNode.get_data().site;
			var sidebar = new sidebars_CreateSitePageSidebar();
			sidebar.site = site;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "sites":
			var org = selectedNode.get_data().org;
			var sidebar = new sidebars_CreateSiteSidebar();
			sidebar.organization = org;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "userGroup":
			var org = selectedNode.get_data().org;
			var userGroup = selectedNode.get_data().userGroup;
			var dialog = new dialogs_SelectUserDialog();
			dialog.modal = false;
			dialog.set_title("Select user to add to " + userGroup.get_name());
			dialog.set_onDialogClosed(function(e) {
				var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
				if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Select")) != -1) {
					if(dialog.selectedUser != null) {
						var working = new components_WorkingIndicator();
						working.showWorking();
						var link = core_data_InternalDB.userGroupLinks.createObject();
						link.set_userId(dialog.selectedUser.get_userId());
						link.set_userGroupId(userGroup.get_userGroupId());
						core_data_InternalDB.userGroupLinks.addObject(link).then(function(r) {
							working.workComplete();
							_gthis.populateOrgs();
						});
					}
				}
			});
			dialog.show();
			break;
		case "userGroupRoles":
			var org = selectedNode.get_data().org;
			var userGroup1 = selectedNode.get_data().userGroup;
			var dialog1 = new dialogs_SelectRoleDialog();
			dialog1.set_onDialogClosed(function(e) {
				var larr = haxe_ui_containers_dialogs_DialogButton.toString(e.button).split("|");
				if(larr.indexOf(haxe_ui_containers_dialogs_DialogButton.toString("Select")) != -1) {
					if(dialog1.selectedRole != null) {
						var working = new components_WorkingIndicator();
						working.showWorking();
						var link = core_data_InternalDB.userGroupRoleLinks.createObject();
						link.set_userGroupId(userGroup1.get_userGroupId());
						link.set_roleId(dialog1.selectedRole.get_roleId());
						core_data_InternalDB.userGroupRoleLinks.addObject(link).then(function(r) {
							working.workComplete();
							_gthis.populateOrgs();
						});
					}
				}
			});
			dialog1.show();
			break;
		case "userGroups":
			var org = selectedNode.get_data().org;
			var sidebar = new sidebars_CreateUserGroupSidebar();
			sidebar.organization = org;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		case "users":
			var org = selectedNode.get_data().org;
			var sidebar = new sidebars_CreateUserSidebar();
			sidebar.organization = org;
			sidebar.set_position("right");
			sidebar.modal = true;
			sidebar.show();
			break;
		}
	}
	,registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new views_OrganizationsView();
	}
	,removeButton: null
	,orgsTree: null
	,detailsContainer: null
	,bottomButtons: null
	,addButton: null
	,__class__: views_OrganizationsView
});
var views_SettingsView = function() {
	haxe_ui_containers_VBox.call(this);
	this.set_percentWidth(100.);
	this.set_percentHeight(100.);
	this.bindingRoot = true;
};
$hxClasses["views.SettingsView"] = views_SettingsView;
views_SettingsView.__name__ = "views.SettingsView";
views_SettingsView.__super__ = haxe_ui_containers_VBox;
views_SettingsView.prototype = $extend(haxe_ui_containers_VBox.prototype,{
	registerBehaviours: function() {
		haxe_ui_containers_VBox.prototype.registerBehaviours.call(this);
	}
	,cloneComponent: function() {
		var c = haxe_ui_containers_VBox.prototype.cloneComponent.call(this);
		if((this._children == null ? [] : this._children).length != (c._children == null ? [] : c._children).length) {
			var _g = 0;
			var _g1 = this._children == null ? [] : this._children;
			while(_g < _g1.length) {
				var child = _g1[_g];
				++_g;
				c.addComponent(child.cloneComponent());
			}
		}
		return c;
	}
	,self: function() {
		return new views_SettingsView();
	}
	,__class__: views_SettingsView
});
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
$hxClasses["Math"] = Math;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = $hxClasses["String"] = String;
String.__name__ = "String";
$hxClasses["Array"] = Array;
Array.__name__ = "Array";
Date.prototype.__class__ = $hxClasses["Date"] = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_Resource.content = [{ name : "haxeui-core/styles/shared/left-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMBwfMYEJjiLgYGBCc5iYGBg3LJlCwMMMFlmFCA4DAwMcD7UAAgfAK7lDFY1UPqoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEHnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja1VZbkuw2CP3XKrIEAUJIy9GzKjvI8nMk2337WTM3mXzEahs1RoA4gOzGX39O9wcuMmIX1FLMMXpcIYfMBZPkj6vsJ/mwn8dlJ6VHvtt/1sVgCagcf1M85S8+3RQcpGCmd4pSO1/Uxxf5NMDpSdFpSJZHjEk/FeVTkfDxgk4F5diWjznZ/RbqOOi5/ghDWlvDo15cPYWf/gdD9LrCjjAPIfF4soTDAVk3Oyl7UvCaliBokSCCpwqfniAg7+Lk77xyL6hcsydUMr8HReIh4cB4DGa80bd80vfBdzvEd5alnTN+5Md+RewxyOuesyc35zh2V0JESOO5qWuLewbBipDLXhYxDLdibntkjOSQvQ2Qd998xWiUiQHLpECdCk0amzZqcDHwYANlbkBl8ZIYZ27iHVAKa9BkkyxdEpBrgFfA5ZsvtO3mba5RguFOkGSCMjrg558ZHxXNuVKeaAUz844V/OKVBHBjIbeekAIgNK880h3gazxfC1cBgrrDnLDB4uuhoiqdubXySDbQAkEFPWqNrJ8KECLYVjiD3A/kI4lSJG/MRoQ4JuBToCihaLgCAlLlDi8ZBRIBTuJlG2uMtiwrH2z0LAChEsUATZYCrAIaG/LHQkIOFRUNqhrVNGnWEiWGqDFGi6v5FRMLphbNLFm2kiSFpCkmS8mlnErmLGiOmmO2nHLOpcBogeaC1QUCpVSuUkPVGqvVVHMtDenTQtMWm7XkWm6lc5eOPtFjt5567mXQQCqNMHTEYSONPMpEqk2ZYeqM02aaeZYbauQOWF/G91GjCzXeSC1Bu6GGpWaXClrtRBdmQIwDAXFbCCCheWHmE4XAbkG3MEPWoSqU4aUucDotxIBgGMQ66YbdL+QecHMh/Cvc+ELOLeh+Ajm3oPuA3Ctub1Dr67RpXtxGaJXhCqoXlJ8WToXrSGn6tqaprOPtC+q+K/i/URTHmLGImavIhsWxeHJuDCTIhmxaMV1nueL3kbqvBN7QpBWfBPgo6D3iE8OWcXK19pLrkpC6Ob8Yx1K0tg0jlrTaR145MmYYJTzYcL/nzCeKhBw1TFSCKcIStumcvG4R/0LH4UsayOGp8AllpcGyjOpQZ7N0f8dS9gM1dNvR96jbk0wV9SpsK3ocVpVtk7842+ewmbe1D66793u40ZCkeOyl4ARHU/rslvvwgqiO0YXz6NNizjfl7UNuum8k8eENWtbwDUcbPkKgsHcU9Lo9deSIOfNFva3vwfoKLhM+czrHsSFDVGpNyLSEt1yt9xJVUsXXSQZqX/n8TeruGVkNDU657ByR8VygYn2snhln7UiXB9PuZ5rIi6J/7tN/19i2TwswHMRPMApyayo/toSLuq8qSSZOiozM/RuoEB6Ee3ucrwAAAYNpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVfU6WiFQcziDhkqE4tiIo4ShWLYKG0FVp1MLn0C5oYkhQXR8G14ODHYtXBxVlXB1dBEPwAcXRyUnSREv+XFFrEeHDcj3f3HnfvAKFRZZrVNQ5oum2mE3Epl1+RQq8Q0IcwRERlZhnJzEIWvuPrHgG+3sV4lv+5P0e/WrAYEJCIZ5lh2sTrxNObtsF5n1hkZVklPieOmnRB4keuKx6/cS65LPBM0cym54hFYqnUwUoHs7KpEU8RR1RNp3wh57HKeYuzVq2x1j35C8MFfTnDdZojSGARSaQgQUENFVRhI0arToqFNO3HffzDrj9FLoVcFTByzGMDGmTXD/4Hv7u1ipMTXlI4DnS/OM7HKBDaBZp1x/k+dpzmCRB8Bq70tn+jAcx8kl5va5EjYGAbuLhua8oecLkDDD0Zsim7UpCmUCwC72f0TXlg8BboXfV6a+3j9AHIUldLN8DBITBWouw1n3f3dPb275lWfz9tXXKl4mmg1AAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6Yjk3ZjI0MDgtNjFiYi00MDJkLWEyYzctM2M2NjAzOTJlZWZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ1OTBhZjNmLWY0N2EtNDY2NC04MjM1LWJmYjJiNTI3OWUwYSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjUwOWE1NTk1LTIyNDItNDg3NS1hN2Y1LWE0MmZjMTVhOWUwNSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NjEyMjM0MTE1MDA0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YWRlZmY5MDctMjQ2NC00YTg2LTljMTMtMTliMTg2NzZkZWY4IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTExVDIxOjQzOjU0Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Ps+fDsgAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgsUKzYD7eUCAAAAKUlEQVQI12MM7TrynwEHYGRgYGDApmB1mQ0jI4yDrGB1mQ0jhjHoJgAAJK4NSNCarJ8AAAAASUVORK5CYII"},{ name : "styles/default/main.css", data : "LmJ1dHRvbiwgLmxhYmVsLCAudGV4dGFyZWEsIC50ZXh0ZmllbGQgewogICAgZm9udC1uYW1lOiAiQXJpYWwiOwogICAgZm9udC1zaXplOiAxM3B4Owp9CgouY29tcG9uZW50OmRpc2FibGVkIHsKICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7Cn0"},{ name : "themes/optex/tableviews.css", data : "LmhlYWRlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLmhlYWRlciAuY29sdW1uIHsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KICAgIGljb24tcG9zaXRpb246IGZhci1yaWdodDsNCiAgICBib3JkZXItbGVmdC13aWR0aDogMDsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzNTI7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzI0MjQzQTsNCn0NCg0KLnRhYmxldmlldyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQzQTsNCiAgICBib3JkZXI6IDJweCBzb2xpZCAjMjQyNDNBOw0KICAgIHBhZGRpbmc6IDBweDsNCn0NCg0KLnRhYmxldmlldyAuZXZlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQzQTsNCn0NCg0KLnRhYmxldmlldyAuZXZlbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmM0NTsNCn0NCg0KLnRhYmxldmlldyAub2RkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNBOw0KfQ0KDQoudGFibGV2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJjNDU7DQp9DQoNCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzUyOw0KICAgIGNvbG9yOiAjY2FjYWQxOw0KfQ0KDQoudGFibGV2aWV3IC5jb21wb3VuZGl0ZW1yZW5kZXJlcjpzZWxlY3RlZCAubGFiZWwgew0KICAgIGNvbG9yOiAjY2FjYWQxOw0KfQ0K"},{ name : "themes/optex/listviews.css", data : "Lmxpc3R2aWV3IHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNBOw0KICAgIGJvcmRlcjogMnB4IHNvbGlkICMyYzJjNDU7DQp9DQoNCi5saXN0dmlldyAuZXZlbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLmxpc3R2aWV3IC5ldmVuOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyYzQ1Ow0KfQ0KDQoubGlzdHZpZXcgLm9kZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCn0NCg0KLmxpc3R2aWV3IC5vZGQ6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJjNDU7DQp9DQoNCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgcGFkZGluZzogNXB4Ow0KfQ0KDQoubGlzdHZpZXcgLml0ZW1yZW5kZXJlcjpzZWxlY3RlZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCiAgICBjb2xvcjogI2NhY2FkMTsNCn0NCg0KLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogI2NhY2FkMTsNCn0NCg"},{ name : "haxeui-core/styles/global.css", data : ""},{ name : "haxeui-core/styles/shared/sortable-arrows-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAA2WwUSXgyq8MAAAAASUVORK5CYII"},{ name : "fonts/Roboto-Bold.ttf", data : ""},{ name : "haxeui-core/styles/default/buttons.css", data : ""},{ name : "haxeui-core/styles/default/tabs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBUQUJCQVIgKFRPUCkKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnRhYmJhciB7CiAgICBwYWRkaW5nLWxlZnQ6IDBweDsKICAgIHBhZGRpbmctcmlnaHQ6IDBweDsKICAgIGhlaWdodDogYXV0bzsKICAgIHdpZHRoOiBhdXRvOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItdG9wLXdpZHRoOiAwcHg7CiAgICBjbGlwOiB0cnVlOwp9CgoudGFiYmFyID4gLnRhYmJhci1jb250ZW50cyB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHNwYWNpbmc6IDA7Cn0KCi50YWJiYXItYnV0dG9uIHsKICAgIGJvcmRlci1yYWRpdXM6IDBweDsKICAgIGJhY2tncm91bmQ6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWRvd24gJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93biB2ZXJ0aWNhbDsKICAgIHBhZGRpbmc6IDdweCA4cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsKfQoKLnRhYmJhci1idXR0b24uZmlyc3QgewogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDFweDsKfQoKLnRhYmJhci1idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZDogJHNvbGlkLWJhY2tncm91bmQtY29sb3IgJHNvbGlkLWJhY2tncm91bmQtY29sb3IgdmVydGljYWw7CiAgICBib3JkZXItY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoudGFiYmFyLWJ1dHRvbjpkb3duIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZCB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7CgogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDBweDsKICAgIAogICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0IHsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7Cn0KCi50YWJiYXItYnV0dG9uOmFjdGl2ZSB7CiAgICBib3JkZXItdG9wOiAycHggc29saWQgJGFjY2VudC1jb2xvcjsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWxlZnQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDphY3RpdmUgewogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoudGFiYmFyLXNjcm9sbC1sZWZ0IHsKICAgIGljb246ICRhcnJvdy1sZWZ0OwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIHBhZGRpbmc6IDVweDsKfQoKLnRhYmJhci1zY3JvbGwtcmlnaHQgewogICAgaWNvbjogJGFycm93LXJpZ2h0OwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIHBhZGRpbmc6IDVweDsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmxhYmVsIHsKfQoKLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmljb24gewp9CgoudGFiYmFyLWJ1dHRvbiAudGFiLWNsb3NlLWJ1dHRvbiB7CiAgICByZXNvdXJjZTogJGNsb3NlOwogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOwogICAgY3Vyc29yOiAicG9pbnRlciI7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKICAgIHBhZGRpbmc6IDNweDsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKfQoKLnRhYmJhci1idXR0b24gLnRhYi1jbG9zZS1idXR0b246aG92ZXIgewogICAgcmVzb3VyY2U6ICRjbG9zZS1ob3ZlcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKfQoKLnRhYmJhciAudGFiYmFyLWJ1dHRvbi1zZWxlY3RlZDpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogVEFCQkFSIChCT1RUT00pCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50YWJiYXI6Ym90dG9tIHsKICAgIHBhZGRpbmctbGVmdDogMHB4OwogICAgcGFkZGluZy1yaWdodDogMHB4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgd2lkdGg6IGF1dG87CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAwcHg7CiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7CiAgICBib3JkZXItdG9wLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGNsaXA6IHRydWU7Cn0KCi50YWJiYXI6Ym90dG9tIC50YWJiYXItY29udGVudHMgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4OwogICAgYm9yZGVyLXRvcC13aWR0aDogMXB4OwogICAgYm9yZGVyLXRvcC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBzcGFjaW5nOiAwOwp9CgoudGFiYmFyLWJ1dHRvbjpib3R0b20gewogICAgdmVydGljYWwtYWxpZ246IHRvcDsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAwcHg7Cn0KCi50YWJiYXItYnV0dG9uLmZpcnN0IHsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmJvdHRvbSB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7CgogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7CiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItbGVmdC13aWR0aDogMHB4OwogICAgCiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnRhYmJhcjpib3R0b20gLnRhYmJhci1idXR0b246YWN0aXZlIHsKICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkYWNjZW50LWNvbG9yOwogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItbGVmdC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmFjdGl2ZSB7CiAgICBib3JkZXItdG9wLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCi50YWJiYXItYnV0dG9uLXNlbGVjdGVkLmZpcnN0IHsKICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7Cn0KCi50YWJiYXI6Ym90dG9tIC50YWJiYXItYnV0dG9uLXNlbGVjdGVkOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci10b3AtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBUQUJWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50YWJ2aWV3IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgoudGFidmlldyA+IC50YWJ2aWV3LXRhYnMgewogICAgbWFyZ2luLXRvcDogMXB4Owp9CgoudGFidmlldzpib3R0b20gPiAudGFidmlldy10YWJzIHsKICAgIG1hcmdpbi10b3A6IDBweDsKfQoKLnRhYnZpZXcgPiAudGFidmlldy1jb250ZW50IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZzogOHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoudGFidmlldy1jb250ZW50OmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRBQlZJRVcgQUxUIFNUWUxFUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY29sbGFwc2libGUtbGFiZWxzIC50YWJiYXItYnV0dG9uIC5sYWJlbCB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5jb2xsYXBzaWJsZS1sYWJlbHMgLnRhYmJhci1idXR0b24tc2VsZWN0ZWQgLmxhYmVsIHsKICAgIGhpZGRlbjogZmFsc2U7Cn0K"},{ name : "icons/database.png", data : "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAABYgAAAWIBXyfQUwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAXSSURBVHic7Zvva1vXGcc/z7n36uqHEztOlBGa0dTOWry4pSRkMNiWMFgL/Tv2amy0Y29GGfT19qbQwrq/om9LxyAL6zZGiGnnMEeOie3Ynu3UsqJY0r1X955z9kIOWy0llVNJ19b0gQvSo3Ol7/3qB+d8dR6x1tIrPlnCzybMGsWsWE4hjAPjVhjHMK6EcUur9j+HAqpAFaGK3b+9f18sVQNVESpKWPCzfPH98wS90izPa8Df18mFAa9Zw2URrli4DMwCXq/EPQWNsGAtc0q4rS1zbsLn179L7Xme7FAG/OkeM8ryM+AaMAO4z/OifcAAi8BnKD768UXmuj2xGwPkxj3espa3gZ98A5GD5K9i+UA2+fj6dZJnDXyqAX/8JwXH56ci/By42A+VA2Bd4PdexB9+8CqVTgM6GvDnRc4Yy6cIl/sucTAsJZY33niF5YMPqE6jh+ziAS66wl8+WcI/+ECbATfucmXILv4JL2Q1bx4sthmwGzE9GD2D53HE+YO1NgPKAbkg5u5gJA2O2LD1MCB/sN5mgIBs7HF2mExoalZXq8S2w7zlaROZyX/X8LMON4sFLmQcXuyzxr4QGzZ36pQaCa9jmUDaxzx1JmcthSDh2oMq1lXcOpPDGfOPx49jo8n8lwG1WHMVOPessd1MZSUxXN2qAw3uT2RYH8tyznd4SY7QVDgyrNQjNioBRQuvdnvi4S7AMvUoYupRBECghFLGoZzPIHmXou8yLQNYDAUJy2HMdkOTRDGnjGUamNo/DsU3eQdzxnIpTCBMYLdVi5Sw4DmUFWjXwYogjuA4guspMo4iq4S8EgqO4gSgtGHPWGra0tCW0GiaiSU2Fq0tNtGIAScxTGjDNK2peU+m573+CPvGMhM9WX48cxnyFU7vHwOn41T4/4mRAWkLSJuRAWkLSJuRAWkLSJs2A1Z2aaQhZBBsVnl8sNZmwFKFXDUcnqXwE6KYrbsPu8gDlEFur3F2mEyox6z+7QGxlW7zAGFybh1/Is/Nl4tcKHjHMw8IYzYXdyjt1HkdDpsHQKHS4No/VrFZl1sXz+CcHTseecBunfnFMrVGs0d5QJhw9c4WKOH+CydZ/9ZJzp3I8JJ0+EilgQVTb7Ly5R4bD6oUtelTHmAsU2tVptaqAASOojTmU57MIafzFE/4TIv0Nw+woGsRy+UG25WApBZxKtYp5QHacKkaQDWA5VYgELnCQjZD2XPQnsJ6DuIpHN/B9TwyniKbUeRdh4LncEJAxYa92FCLNY1mQhgbmk1N3EzQsWnlAU2NEyZMJPqI5wGJZaYWHfq8UR6QFiMD0haQNiMD0haQNiMD0haQNm0GrNWHNw/YaXSRB2xVyNWaw7MUfkJTs7Wy20UegCClbc4OkwlhzOr85iH2B1hhsvQQf8zn5osTXMge0zwg0myuVSg9ivbzgA48Mw/Yi7h2ZxvrOdw6P45zOn888oDHAfMPqtTCpEd5QKy5urwLq7vcL46xPpnnXD5ztPYHNGJWKgEb23sUje1XHgBT2zWmtlvbkgNHKGU9yidzyHiWYsHr//4ACzposlyN2H4ckjRiThnDtE0lD7Bcqjeh3oTNVkgSKcWC71B2FdpVWFe18gDXwfUcMq4i6yryrmrtDxBQiWVPa2qJodG0hImmmWjixKATjU0MEhucSDNhjvz+AMNMYA593igPSIuRAWkLSJuRAWkLSJuRAWkLSJtOBswPXMWAUIZ/tdUOFpZ+zW2k+7azY8QGY3x6sNjxK+C4vDlkJiy5CT+89wva/rPqaEDpV+wUHH5khXeApb7L6x/rAu/G8L27v2nvGIMuGicFZOq3vKUMb1s5Ro2TwgfnQz6+8d5zNk524uXfMWPM0WydFVi08JkYPrr3bm9bZzvy7ffJ5UJe04rLwBWxA2yehgVgDsttq5jLhXx+570BNE9/Hd/5EN/WmcUya/lv+7zab5Xv0Dr/1fb5Dofst9MbqCiHhdDji7Vf9q59/j8aWXLVRq5cAQAAAABJRU5ErkJggg"},{ name : "themes/optex/map-marker-alt-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVETP46e/pAAABjElEQVQ4y4WSv0sjQRTHP28NRBtjKVwhaCeCkuZs7Q+sbgt/XKIg07grsRDsAjZeo7A2kuK4FBG1s7j/IRZ3CFqooFa2Qb3juHPdPAtdM2Y3OjAw7zvv+3kzb0ZoG0EQZKHXiOiUqowAiOhJs0lN5HfF9/3/dr7YwcZG9UMmww/QUVKGCEdhKJ+WlwvXCcBT5dxhJ7MNUb0bj0/itLZ6TZv5RoSKCBXgNhZVGYPcQhxbAKZfm5285xWN5xVNFDXzNgR0Og0wbFXZ9bwvV3FcKs1firBn5Y6kAaIX0Xmlx1BbCxMAET21kt3NzW+DrQZ/HwI+W4CzeJGxTNvAx+ewr6vL+RUE1f3nXRfItXJlO3GCbPa+BpxYVXKgC0+zZQaOu7v/7SQAxpgwinQWuH/jG4SqzBljwrQmUirNHQFrb3yj8tJS8aetJLrdaAysA/UUd72/v+dru5gAlMsTD8AM8MeS/zqOFFzXjd4FAPh+8QJk1XqhlcXFwnnqpTrdVlVla6t6AOB5hUkR0bS8RwOlhbeHW+KdAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/down-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBgYt2zZgkWtZUYBmpBlRgEThEIWQpgL4cClGbG6AQAStwro4kB3hAAAAABJRU5ErkJggg"},{ name : "themes/optex/tachometer-alt-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVFSL2NQofAAABxklEQVQ4y7WTMWhTURSGv3PztORhAi0Bm8VJEIuOHYoKTnZRxIKBTjZ26dQhoFkDuhQCknYxYJUqVFDo0LhUFxcRHXVRtGgnJ18gwcQH8f0OfSaPGAQRz3I5//nPf8895x74n1atbuaq1c3cnzg2DKyt3Z+VoiXgHODHcMeMHYnby8sLT0cKrKysZ9Jp9wDsYiL+zgxJHE+kbHW7vYVyebHdF6jX634Yjj0HppPqUnTKOZeTuAZ6AVaOQ697Pf9sqVToegBhOFYDpiWeOKevkl0BMHPrEk6y687JoohnQGjGec/7dgtYstXVu1Pg3gApMxUktwd6lSiklcnocLttdyS2nZMkewT8MNMJD9w8kNov2R6CekN9bcTnBTPmJDsY+ynJ5j3gdIKc+iU26IM9brVs1kzZEVM844DJ2PkMhENTfp/NRjtmupwAw5gLkHdAE+gEgX8MuNlPNW0EwaepYrH4HSwcVMSNmNsBC5zELuCPj3fvAVeT865UKtG+WNQYCLMYc31g12q1jUtm2hrxvpdmvI1vPQnMDBMkm/OazSONiYm9j8DRofiM9HtSwj7k8+nt/k/sdA5M/s2iSYe+lEqF7j9v7E8ewq/e+KLa1QAAAABJRU5ErkJggg"},{ name : "themes/optex/textinputs.css", data : "LnRleHRmaWVsZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQzQTsNCiAgICBib3JkZXI6IDJweCBzb2xpZCAjMmMyYzQ1Ow0KICAgIGNvbG9yOiAjY2FjYWQxOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMSwgNDUsICMwMDAwMDAsIDAuMiwgMiwgMiwgMSwgMywgdHJ1ZSk7DQogICAgcGFkZGluZzogOHB4IDEycHg7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KfQ0KDQoudGV4dGZpZWxkOmVtcHR5IHsNCiAgICBjb2xvcjogIzU1NTk2OTsNCn0NCg"},{ name : "icons/icons8-services-96.png", data : "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABmJLR0QA/wD/AP+gvaeTAAALJklEQVR4nO2de3BU5RXAf2d3A0QRrYqYhYiV0WgZK7VVmJY69DFT2iKwgVAHa7KxMxWUglo62KlOcXzUqSMgWDViDUFwRqJZBNGxj7HaWq2OVjujCL6oIZvA+OZhINl7+sdubMDcvd997ONKfn/mO985X865373f63wLgwwyyCCDHKlIqRtQbHQNm4AfAxED8S2SZFoh2xMrpPJyQ//IMcCFLqqcXqi29GHyFHxxiFHlssbJBWlHP46sAIjrAIzQtRxdkLbkOLICkHEdALAK2wuOrAB4eaVEPATNlfojCfevINDC9oBQD0O1mSkIN6O8S5TlUs+/BpRrooIhXIxwPXCKSzPPISySBp4fUPdSIpzKNJSrEc5EuEAa2G6qPLQB0CaOYihbOdShz6As479slKVYANrMVIQm3Dv+EHMID9HLlfIz0p/ZH0I9wlXAGf0kn5BGppoqDm8AmlmK8Fub4rcQVqCMAxYR3P/5EcJvUKqAecCJAzeO6dLIZhOFoQyA3kc1EV4Hjip1W2x4i08YLws54CQYzo9whGWUr/MBxnEsV5oIhq4H6FomY/E05d/2vWSo6ftm2BGqHqAbiKLcQfk7H2A4UX7nJBSqALCfn6OcE4CmT4F1KHMQaogwnAjDEWqAnwDrge4A7Fyia5mYTyAMTxIAei/HE2MbdiMPY0W0UMG18lN25hW7j2qi3IRyiS978DwNTBJBByoMTw+o4Bf4c34PcJk0knRyPoBcSrs0UI8wL1fXK+ezlkl2heEJgMUL4Dysy8MCSXKP20rSQBPKQh92d5OxD3hoAiCNPIYyCdjqurLS4sX5/WzfDazzUPXPRJkgl9JuJxCaAABIIy+jnAusdFGtG+U6/8a5huzH24RelOvZwVS5hM78akOKNlOLsBo43kF0nSR9f0izNltYjzLXQWw7MFeSvGiiM1Q9oD/SSBsxgyGpsilAs066dhLhXFPnQ4gDAGAymgFeDtDkvx3Kh0s9+9woDHUAjIjmXwpwRaWjrmPcqvwiBMDKWzoswO/cweD99UUIwCd5S/cFuKebcdye3ONWZagDkDsysjevkPC1wAxanOsgsVfXMcKNytAGQNfwdSxeAsY4iE4PzKg46hpDL6/pGnOboZsHqCKsZSHK74EhBlW6iVAj9bzry+69jM0tBg41rPIowjxpoCOfUKh6gN5PFS08gbICM+cDDEO50bfxCm7G3PkA01D+o80kVe0f9ND0gNwT+DxwkicF2aexyZPtFi5H+YMnuwDKg9LIRQMVhacHVBDHq/MBlFXazDzX1dYwH+V2z3YBhMl2ReEJQD3PwcCHowypQLhL13C/3ke1k7Cu5RRtYT1wJ36P8QtL7YtChK5lIhbP4r/d3QhtwCZ6eZmK3JJGhmpgQm60kwCG+bQD8BI7OK/voNjhhCoAALqGFqC+1O0wRIEpkuRpO4GiBaBjBtUiZu9wtdg7ehPbBixbzSgq2A7uJjwlQXhAGrg4v0gR6KplkqX8HTfvUuWy+MaBd7G0hSUotwTVvgKxnwhnOc0/ivIRVuXbuP2QCRfYllWyHMxPIJeIm00mf8UZBanzqGOAOqPsimQOB1EW56n9HnAjwhXAR65t50N4hezZoU3Yr8S+g3Kbibri9ABxfzTc6XshjWxGeeKwP29Hmc8BxkqS66SBO8kwHuVBGPhcjgsOoizjYyZKkg2SZAbCWcDdwP5DJJXF0mh2sKso34B0ghfBcSXxcHbFU/mXf7WFM1CeQtmGsIwdPGo33NNmzkNYCfZndOwNcTvKbXanG/QBTuQg88gu/D0lSX5lqrpYAdgNjHRZLVMVY6i0kgmqHdrCbJRWl9U+kCQnBNWGwyn4K+idJMPwdqIt2uV84sEdQpeHWnmPlfjFUwDSF5qfzY99wBi89rQevmwitruOkztmsiA9izPzClqenFleAehIsJkYe9IJ2jpq+ZadXHsdlZ0JFkdj/Mlr41R4Mp1gRXsdowdsywyqO2tZ1dvL2yKswuJv78zkOFuFBzw500uvMcZVADprmS0wLVcvIco/OhI821nLbK0j2ifXleC70R5eV7gVNXuKbTgKWBTt5Y30TBZpriftmsm4dILVEuFNVRYAlTn5UUPzLXxdxn6c9pA/V6mwPcD41dBeR2W0l63AWBuRt1VZLnBqLnMw8O+LwF81+0q4CPuJXa9EmFD1MK8OVKhr2Eb/rEZnrpYky1021Rjj2WkkwxLsnQ9wmgir/DfJHoXvGYjFLIuV2Mu2Aosx293aifKkafu8YNQDOmZQLeWdlTgQs+Ip2krdCCeMXhMSYQXhcj7ACjejtVLhGICuBN8FaovQlqCplqj5jLRU5H0F6RRinV/iJeDsIrUnaD4V5StVG9lR6obYkbcHdB7HFQTr/E+BdQJzLKiJ7GN4ZB/DLagRDTQ7sY9KFW4NUF/g2PaAzjpGai/bIc/Exh0tlnDtmLb8R8pzO2c3IcEkVQBY8M0xKZ4NSl+Q2A5DtYcfIIE4vwdlgd3u1uGMfoR2oD5dyzMoq4AKvw2IRMp3+9L2FdTTwxb8HQPJ4sL5/Ym30QS+shMh+8qbH3/4c/sGZYNtAMZu4cOqkUwGbsHpDL49LV6c30c85Tk7EeAVsfhGTkfZkvcjLPfQE0/xaxG+D0bpQP3pVst/dmIm5io7EbI7Xyv3dTOx6hFe82u/0BhNxKraeDKTTYh7yIXuh3Lvc19Ut9KBkjIU70SZGk+x6PTHfSV1Fw3jBbPqVj6Ip6hTZYmJvDhnFBqjETNdGqE+vtH78ncpcL1iKRHeMJHrjQSXnajqmJ0IgKiPw7slwnUA1DLbJqzYE1x24pCYmS61PtsXCA3ue4CY1YkcG9yGvxwI3xlWU9wHQM2ubjlgBZedeCBqpksk0GWMouBl12qXiVAsE1x2ohieKdKIWdvKCVcBaK+jEmG2iaw6ZxQaI4aZjmKxemcikCvNiobxu7VzFuOxeEDhq4ZVuolRE2/1l52YrmUs6iI7UdgnkKxqczVnKRmOPUBB0gmuUosXXTgfYBg9AWQnWi6zE5WjVdmQruUGXVr+KVh5e0BXgpMspRnhRz5szPe6HtNZy+XqLzvxsWEVzD2+lY896ygwtgHYNYvTMtl8LL+Tmx5godsgdM5kvmYP0/r9nZtX9nUzsVyXJmy7aK/F+fh3PmTX8+9KJ7i/Y4ZznkC6jlPSM1mvEkB2YpZzRgx1vM6gZNj2gPY6KqMZXvV5su1wulHaNJLNTox2Z1dYrWOoVosJudFOUNmJfWyJpwr7U1R+yPsNSCeoBR4uUlsKwUELzh6TKt90pryjhHiKtgGyUMLEsnJ2PphMxLLnPP3cHFsquoZ2O1+eXWocAxBPsdXXRRWlY/EJj7s8CV0CjGbC7/+QEQeG8ToU9iedAkP4Z1Ubk8V/Yl7BMZopnvA4n2gQt88WB0vgyjA4H1wsxsUn0Iz9MRVL4VEVJgvMAd4PpHWHskNgilpMR/lLHrnVVW28UAD7BcHVRkfXDCZakUNuK9mv0BxTlo/ayFt9cu9OJx6LsgKYhf9EjYwqTRUVLDmp9f8X9OWuP/gl2XlDX3bOh/RyRnwz7/m0WTRc7zSlE1wDzEXZYAl3jUnZP+2dsxivFjeQdZIXmoDb4yn7G9N3zeI0S7lKle+ocMPoNh70aKskFHyrb9dMxmWENz1U/TCeCjhNtQwp+HJtxGK3x6pe64WKggdg5Cb2cPhdCmaEbnvRC8XasPDyNA/2gABx7Uwd7AHBIeLemZHBHhAc6uG+BS91wkgQO06ORDLcYUWoAYabyAt09MZCvQ8xyCCDDBIG/gfdiyob060ehAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/check-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZRktsgDIbfOUWPYEkIieNgMDO9QY/fH7DdTXZ3Zjvdl87EJEAU+AX6BEk4fv3s4QceyhZDVPOUU9rwxBwzF3R8W0+ZNW1x1uupZ0uP9nB/wTAJWlkfPZ3jLzvdAqsp6OkbIT+FaH/8IsdT35+ETkcyVsTotFMon0LC6ws6Bcra1pay29st7Mdqz/krDD62hqpfMbHVPH+Ohug1hR9hPoRkQ80S1wJkvDlIQSfOmnmaZt9Qk9C5EgTkozhtb1YV3lG5evSJ/QmKpGUPMDwGM93th3bSj4MfZojfeJZ6e36wm9wuHoI8Y9ybh96PtbsSE0Kazk1dW5k9DNwRcpnTEorhrejbLBnFA7K3AnlDYu4olTIxsHSK1KhQp2O2lSqWGPlgQ8tcWabNxThzlS2ATRyFOptkaeLgVoFXYOV7LTT95umuksNxI4xkghgt/Pw95VOh3kfKE21+xwrr4nEosIxBbtQYBSDUrzzSGeCrPD+Dq4CgzjA7Nli2fUnsSmdujTySCVowUNGus0bWTgGECL4Vi0GmR9oSiVKizZiNCHF08CkQchwa3oGAVLlhlRxFEuA4D9+YYzTHsvIy484CCJWEg+QAVMBqXGzIH4uOHCoqGlU1qalr1pIkxaQpJUvj8ismFk0tmZlbtuLi0dWTm3vw7CVzFlyOmlO27DnnUuC0QLlgdsGAUnbeZY+77mm33fe8l4r0qbFqTdWqh5pradyk4Z5oqVnzlls56EAqHfHQIx12+JGP0pFqXXrs2lO37j33clOjsLC+K1+nRhc1nqTGQLupYarZJUHjOtHBDMQ4EojbIICE5sFsc4qRw0A3mG2ZcSqUsUodcBoNYiAYD2LtdLP7Q+6BW4jxn7jxRS4MdN9BLgx0n5B7z+0Daq3MH00Jk9A4hiOom+D4YVBhxwu/SV9vw99OeAm9hF5CL6GX0EvoJfTfCEnHn4eMP+m/Abqro1P5gvhwAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV/TlopUHMwg4pChOlkQFXGUKhbBQmkrtOpgcukXNDEkKS6OgmvBwY/FqoOLs64OroIg+AHi6OSk6CIl/i8ptIjx4Lgf7+497t4BQrPGNCs0Dmi6bWaSCSlfWJEirwhBgIgwYjKzjFR2IQff8XWPAF/v4jzL/9yfo08tWgwISMSzzDBt4nXi6U3b4LxPLLKKrBKfE4+ZdEHiR64rHr9xLrss8EzRzGXmiEViqdzFSheziqkRTxHHVE2nfCHvscp5i7NWq7P2PfkLo0V9Oct1msNIYhEppCFBQR1V1GAjTqtOioUM7Sd8/EOuP00uhVxVMHLMYwMaZNcP/ge/u7VKkxNeUjQBhF8c52MEiOwCrYbjfB87TusECD4DV3rHv9EEZj5Jb3S02BHQvw1cXHc0ZQ+43AEGnwzZlF0pSFMolYD3M/qmAjBwC/Suer2193H6AOSoq6Ub4OAQGC1T9prPu3u6e/v3TLu/HzZ7co91pPc1AAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDplNzljMjQ3Zi00OWY1LTRhZDktODI0ZS02ODI5NDY4ZWVmMDYiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MDIyZmM3MTctMWE3Yi00YWYyLWI0ZDMtZDUwMDRjZjU0YmU5IgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZjVlZTBmMGQtODAxZC00NTVmLWI2ZTYtNzllMTZiZGJhZTBmIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDg5MzAwMzIyNzQxNDkiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpjN2RiNzZkOS1mNDJiLTQ3MmItYWI1YS0xOTVjZGU2MTk1MzUiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDQtMDJUMjI6MDc6MTIiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+zJcIJwAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YEAhQHDA6Y7TQAAAClSURBVCjPjdExToJBEIbhIQj5o4lHoKCgsJZCK09BbbgHtS0lgYLSA1hyCgq10Ct4AELgoWASkITsfs1mZ993MpONqAgGeEX3pgK+j4hVRPSisvvMMRs8lOAX7FOYlOBb/CS8RrckTBPe4vH8YYg/LNHO2hN2Kbxddho5ZYEGX3n/RnMptDA/kz7z3OH52rxtvPufaWnJDj4S/sVdzSc1GKN/jTkAigfW4fXHmp4AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/main.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBHRU5FUkFMCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jb21wb25lbnQgewp9CgouY3VzdG9tLWNvbXBvbmVudCB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKfQoKLm1vZGFsLWJhY2tncm91bmQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJG1vZGFsLWJhY2tncm91bmQtY29sb3I7CiAgICBvcGFjaXR5OiAwLjc1Owp9CgoubW9kYWwtY29tcG9uZW50IHsKICAgIGZpbHRlcjogYmx1cigxKTsKfQoKLnBvcHVwIHsKICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMiwgNDUsICMwMDAwMDAsIDAuMTUsIDYsIDEsIDMwLCAzNSwgZmFsc2UpOwp9CgpAa2V5ZnJhbWVzIGFuaW1hdGlvbkZhZGVJbiB7CiAgICAwJSB7CiAgICAgICAgb3BhY2l0eTogMDsKICAgIH0KICAgIDEwMCUgewogICAgICAgIG9wYWNpdHk6IDE7CiAgICB9Cn0KCi5mYWRlLWluIHsKICAgIGFuaW1hdGlvbjogYW5pbWF0aW9uRmFkZUluIDAuMXMgbGluZWFyIDBzIDE7Cn0KCi5mYWRlLW91dCB7CiAgICBhbmltYXRpb246IGFuaW1hdGlvbkZhZGVJbiAwLjFzIGxpbmVhciAwcyAxIHJldmVyc2U7Cn0KCi5kZWZhdWx0LWJhY2tncm91bmQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmRlZmF1bHQtYmFja2dyb3VuZC1zb2xpZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDT05UQUlORVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ib3gsIC52Ym94LCAuaGJveCwgLmFic29sdXRlLCAuY29udGludW91c2hib3gsIC5oZ3JpZCwgLnZncmlkLCAuZ3JpZCB7CiAgICBzcGFjaW5nOiA1cHggNXB4Owp9CgouYm94LCAudmJveCwgLmhib3gsIC5jb250aW51b3VzaGJveCwgLmhncmlkLCAudmdyaWQsIC5ncmlkIHsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIExBQkVMCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5sYWJlbCB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIGNvbnRlbnQtdHlwZTogYXV0bzsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7Cn0KICAgIAoubGFiZWw6ZGlzYWJsZWQgewogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIExJTksKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmxpbmsgewogICAgY29sb3I6ICRhY2NlbnQtY29sb3ItZGFya2VyOwogICAgZm9udC11bmRlcmxpbmU6IHRydWU7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKfQoKLmxpbms6aG92ZXIgewogICAgY29sb3I6ICRhY2NlbnQtY29sb3I7Cn0KCi5saW5rOmRvd24gewogICAgY29sb3I6ICRhY2NlbnQtY29sb3ItZGFya2VyOwp9CiAgICAKLmxpbms6ZGlzYWJsZWQgewogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIElNQUdFCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5pbWFnZSB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIG9wYWNpdHk6IDE7Cn0KCi5pbWFnZTpkaXNhYmxlZCB7CiAgICBmaWx0ZXI6IGdyYXlzY2FsZTsKICAgIG9wYWNpdHk6IC4zOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIERSQUcgJiBEUk9QCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5kcmFnZ2FibGUgewogICAgY3Vyc29yOiBtb3ZlOwp9CgouZHJhZ2dpbmcgewp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIElURU0gUkVOREVSRVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5iYXNpY2l0ZW1yZW5kZXJlciB7CiAgICB3aWR0aDogMTAwJTsKfQoKLmJhc2ljLXJlbmRlcmVyLWNvbnRhaW5lciB7CiAgICB3aWR0aDogMTAwJTsKfQoKLmJhc2ljLXJlbmRlcmVyLWxhYmVsIHsKICAgIHdpZHRoOiAxMDAlOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFNFQ1RJT04gSEVBREVSUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouc2VjdGlvbi1oZWFkZXIgewogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4OwogICAgcGFkZGluZy10b3A6IDE1cHg7Cn0KCi5zZWN0aW9uLWhlYWRlciAubGFiZWwgewogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKfQoKLnNlY3Rpb24taGVhZGVyIC5saW5lIHsKICAgIGhlaWdodDogMXB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNlY3Rpb24taGVhZGVyLmZpcnN0IHsKICAgIHBhZGRpbmctdG9wOiAwcHg7CiAgIAp9"},{ name : "icons/Double Ring-1.6s-100px.gif", data : "},{ name : "icons/icons8-folder-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAACzUlEQVRoge2YTUgUYRjHf+/M7E5+rKZ26iDbBxEVXSMv2dWgY3SKoIKgQ0hQkJdu0akg6FJ0iEgJKYIOHQq8Kl0skuogUhimq+t+uc7OzrwdVlwnnXVnnZ1VnB/M4Z3nfZ/9/5nnnfeZhZCQ3Y2QH/o7sdU3KMpxhFRqyiKxseU3MM6LvsdpnzVWRAN1FF0/7EOuMxj2uJQcFALpQ76q0NCihxx3jDyYBWqSUDTjDF+9Cc8e+SNvc4T8NFCWms/BUnarOQ1s+5S4+Hx8q4mqwVnzxrIfOXUU9ZV83d/kR7LNcBqQfpWuPAaZ93Lo2hGfErriLKFkAmzL79/IEGvXiUQjnlcWzRzp1CVx4elbtym1vTa9ESO/FEUiEIrXqxXkoBy8HndLrgVgAIomJOdAUQBR/bpSNeioZg8wtdGUYAysCrJrWyeE7hYKooTqSmig0ex4A5tv4qY2iOwJQEoFIvplOfKgZ3WsSoNM6onouz9R+SDrPgkt+4KUWj3ZWcnCrwH3J9DatV68tMAy66ysGiQUcwItes/dgN7sHC/NQ/YvtfXZdUJTo+6bWKwJWeb2E79CdSexZQAShArNnZCbK8f0Noi2lsd2EXKz/qqsgLdW4sBZiPfC+AuY/wlKBE7fAkV1zvvyEhLffZTpjjcDfz6DkYbFlb7KNmFiGJo6ynOsAiQnfZRYGW8Glhdhesx5b/arj3K8swtO4rUoGrR3g/ivp5c2pH6XNnDAeDMQ7y1dGzE1ApMffZDkDW8GpkdL+2DdV5WExA/fRHnBmwEjU3oTbSN2/CYODTSa0ECjCQ00mjr9Ox0cCoXl0ld80Sz1NKuRHfBwpEQhkxojmYDUgjOoxxojyguWnVZAuY1tGY5ASwe0dJXH27W0isYdASCHrpxAFTdQtaPEuvaztzuOstIzSwnZmTxGNvhe2Q1bzmBbd8W5h+8aLSUkpNH8AwIK4qwQXvELAAAAAElFTkSuQmCC"},{ name : "icons/icons8-laptop-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAECElEQVRoge2Zy28bRRzHP7O73jivmoDy4lVRCTUoh0ZtIv4FBEIciqCCGxCVS3kcuYA5cSwcygEkCgeQ+AOIuCOEeBalKaSNKgK4ebS2Q+y1ve/hMElju47rbWKvC/lIPszMevb73d9vfjsewwEH/L8RjTqzjpzQAp5G475OCwLYKAdHHV+ObbcFIqcZfHj0XmOu/tpbDOTL8hSCT4GeNutsSMWTrGz6tw4IGDTFBxMjiTfqune4IeWgbpMBDrVVZRMKdsgNK2g4pmnIoVRi/MiAWL/ZV32BbjNFjOIBDK1hVgMQhojADp+t7qsxgCDVHlmto+vNx0PBSHVb2+3CuDB2D0BDus4AIpoDo00yWkJKyBchDFW7JwF9vTLSHLEaWNuA737faQsBT0xHmyPWFBq9B048ComthSslBGG0OWI1IASsb4AXwHbiOH60FIrVwPwyZLJQccGqgK5BwF1iYDEDV1fA8SFnwWYFpo6AH3SZgSCAjVJt3/I6/PanSp1csUqMDrbXRVUoDOGbS6pUDiThkXEwDbhwVS3WG0UIt/QGvk0mk2XkwdFI92hbBKSEH68o8Y4HhQpc/AN+XlJRuV5V/wFyl+f4/Nx7eK4T6T5ti8DCMlzLQdmFvKW2vQNJSPVBwVYmqgm9CmHgE/g+CbP1nfy+GAgC+GkJyrZqS+CfErj+Tv5LwN0WHS3Nm7JnA1LCD1dgNa/yWgKaUJ+cpcbbyZ4NzC8r8WUH8ltPe6gf+nvaLx72uIiXVnZqeX2p7BR3bGA1DxeXwd+q5R142A25oxTKF+H7RVUGq2v5NhVX7XPq+z0fbE9FbL+IbKBkqy1wKCFbbLx7tD31qWf7O/tJpBRyffj2knoxZYuqHTe3jUCpVOLdt97GsqxO6Nn/n5TJZJLpx2cobBaoOBBI9UZtFT+UeAGELdTUoeFRkr19rU9OCwZ0Xee5F09FmtTxJZYTYjkSv34l7zM1BsKQxFrRp+JKTEPQmxAkDUHCEBiaQG8Q3SBUT9n1JbYvqXgSL+Kefi/UGNgohxMVV93c9ZWozapxIWrPIiWdeds2ozYCgqbZLWV8L6zd6L6DrYgY73/8xai0nHGAbGZ1mP7BuDU1JZsvDp89e34KQNf7r4kzr70jRcTa2y1IGaJpmtb4MP4uQGhaYDx0+IGvf/3lwlO7/NsUAYmUrRyrCYTY+9ITwLHpY3PG4MNDs32Xe/8ubBZuczLfXRxKpYLU8MisdvrkydXjM9NvmqYZt6aWMU2TEzPHX5994Zn1m3nz0fkvX1qYXzh3fW09wk6n84yMjdmTk5Ovnn7l+c+gLvHT6bR2/+HHXi4VrScd1xlrPEU89Jg9a30D/V+t/rX4STqdjniGfcAB/13+Bc6RpPyHXnPZAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/close-button-white.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAC7npUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZZbrtwgDIbfWUWXENsYm+UQLlJ30OX3h1w6cy7SqXpeKk2YAeKQH+PPMBP6r58j/MBF2WKIap5yShuumGPmgo5vx1VWTVtc9aNt3j/Zw/2AYRK0ctx6OsdfdroFjqagpw9CXs8H+/ODHE99fyN0TiTTI0annUL5FBI+HtApUE5PU3Z7XMLej/Z8/wiDz6WhGldM7Gje3kdD9JpiHmHuQrKhZomHAzK/HKSszqwdA1GjL6tmodMTBOSjOG0PXoV3VK4efWJ/A0XSYQ8wPAcz3e2HdtKPgx9WiB9mlnrP/GQ3uad4CvKK8WgexujH6kpMCGk6F3UtZfUwcEfIZb2WUAxfRd9WySg+E7ICedvqtqNUysTAMihSo0KD+morVbgYubOhZa4gMW0uxpmrbAEw4yw02CRLAy+WCrwCK9++0Jo3r+kqOSZuhJFMEKMDP39P+VRojJnyRJvfsYJfPDcF3JjkZo1RAELjyiNdAb7K22tyFRDUFWbHAsu2HxK70plbM49kgRYMVLTHXiNrpwBChLkVzpCAwJZIlBJtxmxEiKODT4GQY9PwDgSkyg1echRJgIMdg7nxjtEay8qHGWcWQKgkMaDJUsBqHmzIH4uOHCoqGlU1qalr1pIkxaQpJUvz8CsmFk0tmZlbtuLi0dWTm3vw7CVzFhyOmlO27DnnUjBpgXLB2wUDStl5lz3uuqfddt/zXirSp8aqNVWrHmqupXGThnOipWbNW26lU0cq9di1p27de+5lINWGjDh0pGHDRx7lpkbhwPqufJ0aXdR4kZoD7aaGV80uCZrHiU5mIMaRQNwmASQ0T2abU4wcJrrJbMuMXaEML3XCaTSJgWDsxDroZveH3BO3EOM/ceOLXJjovoNcmOg+Ifee2wfU2vy1qZuERWhuwxnUTbD9MKiw44PfpK+34W9feAm9hF5CL6GX0EvoJfTfCMnAn4eMP+m/ATTxo1xUMRnCAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOmJiYWE0YTllLTQxNGYtNGFkZC04NmI4LTk2MDQ2OTNiZDI3YyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo1ZDhlMjY0Ny0wY2MxLTRhYmYtOTY4ZS1hNGJkMTA1YWI1OWEiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpjODRmYTUxNi05MWQ0LTRjOGItYTUxMy0zZTQ2OTFiNzRhMDMiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDMwNTkwMjY2MDk5MiIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjliMzYzNTNjLWI3Y2MtNDcwZC05ZjY2LWJkYjdlNGNlNjI3MiIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQwODozODoyMiIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6Ep5GeAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5gIIByYWgfgJQAAAAIhJREFUGNNtkLsRwkAMRB9uwQZmMCEBZR9OSGjB5tMEVEAbj0SG83GaUSDtamdXqHt1UDuKUteB9agn9a1ec3KQboEl1FYdY/FQt2qnTrG7q5v5OgemTGlU29JPrrxUApqMu4quzs1sHLgAR+AJvIADcP4GrBmvBczfszBeCCTUXk1/6X7kpO4+lzDh/7PqYdUAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-asc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAANannypZYQAAAAAAAAIAAAAAAADWp58AAADWp58AAAAAAAACAAAA1qefAAAAAAAAAAAA1qefAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAI1eVgAAAAAAAAAAAAMDA3CfpwIAAABzoqoAAAADAwMDAwNwn6cAAAACAAAAAAAAc6KqAAAAcJ+nAAAAAAAAAnQX2cErsvcAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/search.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kTtIw1AUhv+mig8qDnYoIpKhOlkoKuIoVSyChdJWaNXB5KYvaNKQpLg4Cq4FBx+LVQcXZ10dXAVB8AHi6OSk6CIlnpsUWsR44HI//nv+n3vPBYRGhalmVxRQNctIxWNiNrcq9rzChxD6MIqoxEw9kV7MwLO+7qmb6i7Cs7z7/qwBJW8ywCcSzzHdsIg3iGc2LZ3zPnGQlSSF+Jx4wqALEj9yXXb5jXPRYYFnBo1Map44SCwWO1juYFYyVOJp4rCiapQvZF1WOG9xVis11ronf2Egr62kuU5rBHEsIYEkRMiooYwKLERo10gxkaLzmId/2PEnySWTqwxGjgVUoUJy/OB/8Hu2ZmFq0k0KxIDuF9v+GAN6doFm3ba/j227eQL4n4Erre2vNoDZT9LrbS18BAxuAxfXbU3eAy53gNCTLhmSI/lpCYUC8H5G35QDhm6B/jV3bq1znD4AGZrV8g1wcAiMFyl73ePdvZ1z+7enNb8fpuZyvNk619AAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARgJIBu0NNI+AAABNElEQVQ4y82SzUpCURSFv31uFDqRhr1E9QASBYXjoGewgZIJWsYlrxrSrRwkRuWoXqJRBPYG/cx6ihqUCnZ2ExG7eQ1HtUaHfc75WKy94K8lwUGx1kiIalLRhf7oAXGalVz69ldA8aTuAusgnnl37gGI9uIquFa5OdjJ+KGAYq2RQG3VTNnVUjb7OvzI95uxD6dzh9W9yu72NydmQFJNgnjBzwCFwuYbSFmMSQbvzNB5fmB7hDq23RrKZSRgrKLtiAh0QwGKPhLtxcMAvYhdVpXncAfiNFVwfb8Z+5HB4fmsEeMZYy/HrnH/uF4QYQOk3LHtFsA0MytGjIfonMFcl/JpF0TDi3R0utZPe1GVLvCkcCGiS0AqCJFJatsvWkpErsq5LXeiLQBU8pmqqp7pp77wb/QFm09xUl2IdBcAAAAASUVORK5CYII"},{ name : "icons/icons8-dashboard-layout-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAABJklEQVRoge2YwQ3CMAxFvyNuLIBEuTAAi7BHDizADCyA2kkYhAlQe+DKAjWXViCoK6W4iYL8joni5qlxYhkwDMNICUkTq+N1T+AKjHVgzIYJ/n7aXd4Ht+fHHnAVIzAeoWnZ+dtheRmaduI65nLC5gGgIEb1OcjkyuDNAwCjcGi/4vWIAgCK4I+92AxtRDVex5hAFphAakwgNfEECM0Pq2tpIppAy85PlKiZyUuTix/2FET3kor3+VQsB1KTvUC0HNCubnui/QHt6rYn5hGyanQIE0jNmMAstYs2ogATPKZJ1GAWaxdtxHegu3fVaxdt/joHsiB7ATEH5uqkaTNyC83TSdNGPkIzddK0yT4HTCA1JpAaWUC/kxa3M6fdSculujUMwwjjCZ+ZYM8fp35lAAAAAElFTkSuQmCC"},{ name : "themes/optex/oem-console-logo.png", data : "iVBORw0KGgoAAAANSUhEUgAAAQYAAAAuCAIAAABF3yCEAAAJ6klEQVR4nO2d728TyRnH93C83vUSex17jRM2sUlC4pTELZfA3QGipAjRgjhRVffiqv4D/Yv6vqp0r65FihBHKeJH4Sgcv5oQJQHiOo5xHNuJf2Xt9Rqf+mJgMjtrO/srBIn5vPJsdp99dj3PzPeZeax8Njx8giIQCO/Zt9cOEAgfFyQkCAQVJCQIBBUkJAgEFSQkCAQVJCQIBBUkJAgEFSQkCAQVJCQIBBUkJAgEFSQkCAQVXXvtQFuEyZPeoaiDpivJ+Pqju025ttceEfYSTgyLZy7A5ubCbO7J/d24kdWQYISQdzjq8vrZQBAerJeKb6tb0ptEYXFOmDzZMxbTbxA8KiOE4FXdA4PNRn39wW1zHjoY1hMZ5g5GaK/P6ebAwVo+Wy9tFOafK+Viy6sGfvsH9IlasvS3v4AP2LcFkNZSqZsz7a4Vz17iesV2BvVDe/juyGGub4D28A6aBgcbVeltVZLSyeLLF2QoMYr5kGCEUHDyZMt+4/LyLi/P9YqFxTlzxrsHhtQG/ebs+GPHfNEY7CsQNhBkA0F+aKy4vJB/9nA3+g3XKzoYtqVlB8Nq48EoDoY9cPx098Cg9k9ON+d0c2wgKG9mpdSKxRt9apjMJXzRifD53+84jpqmklxGm7VcxoSRvtPnA7EpbTyg8ENj/ecuOxjWhP0d8USGDR3XDyOEDn39x5bxQLCImZDwRSeCU6dsdwVFzmWyj+81FYWiqEoyvjn/1KiFvtPndfYYl5fvP3fZsIs64A5GDB3XCSOExOmLnUOdYBrDwokRQv7YcfRIU1Eqq8ul14vy+7GcE8NMT7A7PExRVO7JfSwNQmV6LZ9N/vB9yxsVFudM6y7P4CgWD9JaqrA0C1QEI4R6xn6JnuDy8sLkyQ7pmn6VX8tn4dO11E6oampUJZje6MTBsKEvp7F4qCTjW6lEOb4EmowQYv2CxcD7ZDEcEsHJk+j3US8V03euYUmqlFqRUisbsz/Z4KApAr/6Am1WkvH03euwKecy6VwGm+u8Q9HN+ae2JBX1UtHl5cFnT2QYC2xUNSmlgtGQ6DnyOTROUVRTUdZ+/BeWMMi5jJzLmB5QPnGMhQQjhND8oako2niwBSsrbp7BUbSf1UtFNB4ghcW57sgIfBwHTWu7rwm63JycX4e9ljsYwWzCwbupKPXiptE82zsURZvZx/cMJdC+6IR28a3l2pT2K9icf9pz5HOubwA8XaMqVVaWtd+Lg2H5kXGubwC+W7ACVkm81L5e/f7ofDr0OwWmjA7NxkICWwgqLS/uRjxYhD3QizZLr160O7P48gUb+A1saruvCZxuLp9KQFWGaSdUNVUzKaPGOTGMTtG1fBaKpR1hhFDoy2l0hgGAxTdfNLYx+6jD4++jnf3nLqOXO91cz1jMxfega80t8xywAkZRFGrfoj96ng6Y6g4Pr964oj/AjIUEK4TQZunVvKHLPwzYim058brdmVI6iTb3OdsmrKN/+jN2pMPEVY4vBadOwW6BTj6oatpKJVy+QLs7tsR9QDWlVBIvdV64Y0buoGkgI9v1Qn5orOVxrlf0RSfAVQ6G1Zn3W/cHhfbwHayB5ZPEzHc72gEYC4kutfD9CKcIiqJoj2qo6DA8YH+ycU25mkltTxTI5IOqpnJ8SZg0FhJObj/aVLbKOi/EMsD87GOgTDgxLBw9AQdXf+x4OfG63RsDZQQURQWOfoFGCHxAfmQcuwsQLYwQ4nr7XXyPvf5AQifOQmswuaI9fN+vfwdMuby8P3ZMp4IytghrNBfcEz6G1cnNhf/Cz0A7UZZVE0VRXe79O5+kgRPDaLSDngr6mZRaSd+5Bv/koGl+ZLylkVo+m757vSnXmnJt/cHtRlXSeoVNs8WX7ySrnMtszP4EMzpb/IFg+S1cbFDKxdyzH+FxsP6pB1L2tw3YBrEFOZdBOw3QS5hqsuteO4LJLWywVMrFWj4Lm1zfQEsj2G6pnF+Hn7X5ACB84RtfdEK7DWqLPxA0v62XiuhiA/q5nZNajAkndHmRoqh2BQu7SrvqI7h1gO4MUEac7KADTVQfSWtJqC6AtMBUk1GDFEXVSxuqR6MZPVehGSDa21qaxWRnOxrSlvZg6dU8Ws/mdHPBqVPBqVOVZDz//CF8vfb6g1pzeXlt1mcUY7PE26rqRVgvTNgNfm6oBvsOw4xncBRt1ksbNrpRer247UOvaF01URT1VpLQ5n4xYtY7FT8rDfjZiuxUykVYc4DSPTB46OtvfdGJD+wPBieG9ZxmLCSw2dP3i6O7VB1kBelNAm12EKPYn2rraza6gWmnwNHt3UPTqklaW0Wb3QODjHoN0Bxo1o76bILC4lzyh+8rybg2MIJTp3ROQTb6YwJjwqmSeBWITcGm0831n7tsaNHXOu0KQCDlxGt/7DgcXdhA8MBXZ7S15b7oBCpCGlXJnJjpAKqduvvfSV7Tqol6H2boIoc4fTF166rcsSwS1SEtNSft3V4LUkoFc75tWyi/2xv1DI56Do2ge5Hew0dyT+7b6w9qrV4q6l9sbYexWUIpF4vLC+gRl5cPX/jGHzsGBwAHw3Ji2B87Frn0rUXnzNGUa6XlRfQIPzQmnr0EB1RGCPWdPo9VLuafP7TdE1Q7wRA1rZoAmJ8OmhanLx746gw6XXBi2BedEM9eAlIBm/0wAcMIITQ/xOZYK5TjS6mbM/USnqHZ649S2Ja7Li9vfdo0XOOUf/aQDfRiu5iB2BQ6e+w5uSf3Yd0BgOsVO5ROVJLxziN3y6RtxzIT7aBOWV5rKseX9osRtGbRQdP80FjLrbTC0iy4BK2MAlWbYL0f7APA8xtVqcPO5o74Y8e6OK62vialk0A4eAZHu1g3POGtVLbdH0wUiNMXN2Yfwd0MUAHpPTy+W1t1FEU15Vr6zjW4CfLRsnrjClaA0A6sKNBeKivL6CKMFdUESd+93vJHeR3I/OcW3N8FG8Mty/vT//6nFQ28z9k2OCnw7O/7t43+NOVa9vG93hPvCnM6WNP7FCauUcrF1RtXKsm46bt+AJpyLTHzHSbz8HMUZXNhdvfigdLUvFhUTZDUzZnNhVn9GylyLpO6dbVDqtqoSivX/9E5J7FCoyqlbl2F/dtef8rxpZYrXeYw+UPTplxL371Oe3jv4SOsENL+8LeWy3wMFVDrD24X5p9jv05uKopSLn6YnyYr5SK6mWPjDl3uyf3N+af8yDgrhNBKUvB09dLG1ur/0L0qOZeJ//2voPKU8Qfhq5A3stKbhJ66iR2prqec3H7a2wOft4N9e/0pLM5J6VXQG2G2DV9FYf65flOfkf9CRCCgkIIOAkEFCQkCQQUJCQJBBQkJAkEFCQkCQQUJCQJBBQkJAkEFCQkCQQUJCQJBBQkJAkEFCQkCQcX/AR24GRkq74RNAAAAAElFTkSuQmCC"},{ name : "themes/optex/main.css", data : "LmRlZmF1bHQtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQzQTsNCn0NCiAgICANCi5sYWJlbCwgLnRleHRmaWVsZCwgLnRleHRhcmVhIHsNCiAgICBmb250LW5hbWU6ICJmb250cy9Ba3ppZGVuei1ncm90ZXNrLXJvbWFuLnR0ZiI7DQogICAgY29sb3I6ICM5MjkyYTA7DQogICAgZm9udC1zaXplOiAxNHB4Ow0KfQ0KDQoubW9kYWwtYmFja2dyb3VuZCB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMxMzE0YzsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2FjYWQxOw0KICAgIG9wYWNpdHk6IDAuNTsNCn0NCg"},{ name : "haxeui-core/styles/shared/right-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAM0lEQVQImWP8////O1lVBgYGBgYGJgYGBqHHtxEcOJ/x////DDDABGe9k1VlgrOgMnDTADWiDmfiE8U7AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/close-button-blue.png", data : ""},{ name : "themes/optex/cards.css", data : "LmNhcmQgew0KICAgIGJhY2tncm91bmQ6ICMyYzJjNDUgIzMxMzE0YyBob3Jpem9udGFsOw0KICAgIGZpbHRlcjogZHJvcC1zaGFkb3coNSwgNDUsICMwMDAwMDAsIDAuMSwgMjAsIDUsIDEsIDMsIGZhbHNlKTsNCn0NCiAgICANCi5jYXJkLXRpdGxlLWxhYmVsIHsNCiAgICBmb250LXNpemU6IDE2cHg7DQogICAgY29sb3I6ICM5MjkyYTA7DQogICAgZm9udC1ib2xkOiB0cnVlOw0KfQ0KICAgIA0KLmNhcmQtdGl0bGUtbGluZSB7DQogICAgaGVpZ2h0OiAxcHg7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzM3Mzc1MTsNCn0NCg"},{ name : "icons/icons8-delete-32.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAABfElEQVRYhe2Wy07DMBREx3EerGhp+Q4UKCpC6iKlBX6ZlIDYISEVRL8DtTQbRBTbbEqUFjuxTXksMkv7+s7RlT0J0KjRf1Y66ncXUdi2Pb+IwnY66nerahzVxutgsOcAVx71b5eXpx1T8/m41/JoEDvATRr19lV1RGXuBtkEwPFq6Ym5dNyK7+e65r5wJ4Dor5aeOWPj3bvpy2atdAJ8542DgJWWDmnOEp1JSMwBgIvA57J66QSKRqAxBE5Ky5WTUJhXnlECmELYmNcC6ELYmmsB1EEwljFbc20ANQSZCSAnEEc25kYAaog1GZkbA5QgEogiIz5bzZjrDE3MgYokrJEx+FYAitsu0Pu6Kw50w8oKQPbUBDADyGOpTDsxjQBU75y7dJiR/AwgD7YQekFU885/LIhMGm89im0abu1j9J2Rmp6VXkKSMwKI8p52wnWS6TIj+cXGxXTIeyb3UjVaRGHbo/41AGoar8DaJHzO2Lnsb6hWv/FT2qjRn+sDungiBRfqhd8AAAAASUVORK5CYII"},{ name : "themes/optex/diagram-project-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFgw5HC2ECD0AAAFnSURBVDjLrZK9SgNREIXP7F13EzGlhSJpImJpY5HKQsQHEASx0IvGSMIu2coXsEkVTCCFIolY+QqSIlhoUARL7a0sjKBF/vaOhVE3u1sk6JSHb87cOXOBPxYxM5XLlZlOB2MAYBgTL9ns+kcYnM+fxgyDJr84dDMZ+UzFYvUEwK6He1fKXczldp68zaVSZZ6ZbgHEfqYTjnUAy75BMSJxcHRUbXhFZiS9zX1tRQdAgb0IEoAcJgIdAAcN+EwpuvaZJgFs+1DWAaoBnBp8Gs1FIu1UOp3uejK4Yqa1wTX4UrPtrT0hVNx1VcJ1VQLgCwDJVss89JpalnwUYnz6mxNCxW1b7lPYqaJRcQ9glog2ej33DgBM02xmMpvNwLphyRQKlQUh6AZAxCN3iHjVsmTdy2phBo4jHwA0fLIBaEt+Vhvl2yqlaBSDwHk1TeMRDKjmE9rMVB8qxN8wz6eAbrSPvjqOfMN/1yfFRHfG/OOTrwAAAABJRU5ErkJggg"},{ name : "themes/optex/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogTlVNQkVSIFNURVBQRVIgLSBTVEFOREFSRCBMQVlPVVQNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoubnVtYmVyLXN0ZXBwZXIgew0KICAgIHBhZGRpbmc6IDBweDsNCiAgICBoZWlnaHQ6IGF1dG87DQogICAgaW5pdGlhbC13aWR0aDogMTAwcHg7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzQ3NDc1MjsNCiAgICBib3JkZXItcmFkaXVzOiAycHg7DQogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzg4ODg4OCwgMC4yLCAxLCAxLCAxLCAzLCB0cnVlKTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNBOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93X3doaXRlLnBuZyI7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzUyOw0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYzpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzNTI7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRpc2FibGVkIHsNCiAgICBvcGFjaXR5OiAwLjU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3JpZ2h0X2Fycm93X3doaXRlLnBuZyI7DQogICAgcGFkZGluZy1sZWZ0OiA0cHg7DQogICAgcGFkZGluZy1yaWdodDogNHB4Ow0KICAgIGJvcmRlcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzUyOw0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzNTI7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvcmlnaHRfYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzNTI7DQp9DQoNCi5udW1iZXItc3RlcHBlci5pbnZhbGlkLXZhbHVlIHsNCiAgICBjb2xvcjogcmVkOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmRkZGQ7DQp9DQoNCi5udW1iZXItc3RlcHBlcjphY3RpdmUgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkICMyMTZBQUU7DQp9DQoNCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCioqIE5VTUJFUiBTVEVQUEVSIC0gQ0xBU1MgTEFZT1VUDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLw0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciB7DQogICAgbGF5b3V0OiBjbGFzc2ljOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvZG93bl9hcnJvdy5wbmciOw0KfQ0KDQoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWluYyB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93LnBuZyI7DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2Rvd25fYXJyb3dfd2hpdGUucG5nIjsNCn0NCg0KLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3VwX2Fycm93X3doaXRlLnBuZyI7DQp9DQoNCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgew0KICAgIHRleHQtYWxpZ246IGxlZnQ7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KfQ0KDQovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoqKiBPUFRJT04gU1RFUFBFUg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5vcHRpb24tc3RlcHBlciB7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGhlaWdodDogYXV0bzsNCiAgICBpbml0aWFsLXdpZHRoOiAxMDBweDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjQUJBQkFCOw0KICAgIGJvcmRlci1yYWRpdXM6IDJweDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDEsIDQ1LCAjODg4ODg4LCAwLjIsIDEsIDEsIDEsIDMsIHRydWUpOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBmaWx0ZXI6IG5vbmU7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIHBhZGRpbmc6IDVweDsNCn0NCg0KLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvbGVmdF9hcnJvdy5wbmciOw0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDRweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U2RTZFNjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGMUYxRjE7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1kZWluYzpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzJDMkMyOw0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9sZWZ0X2Fycm93X3doaXRlLnBuZyI7DQp9DQoNCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYzpkaXNhYmxlZCB7DQogICAgb3BhY2l0eTogMC41Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0M7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmMgew0KICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9yaWdodF9hcnJvdy5wbmciOw0KICAgIHBhZGRpbmctbGVmdDogNHB4Ow0KICAgIHBhZGRpbmctcmlnaHQ6IDRweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0U2RTZFNjsNCiAgICBib3JkZXItcmFkaXVzOiAwOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjFGMUYxOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDMkMyQzI7DQogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3JpZ2h0X2Fycm93X3doaXRlLnBuZyI7DQp9DQoNCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmM6ZGlzYWJsZWQgew0KICAgIG9wYWNpdHk6IDAuNTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXIuaW52YWxpZC12YWx1ZSB7DQogICAgY29sb3I6IHJlZDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkZGRkOw0KfQ0KDQoub3B0aW9uLXN0ZXBwZXI6YWN0aXZlIHsNCiAgICBib3JkZXI6IDFweCBzb2xpZCAjMjE2QUFFOw0KfQ0K"},{ name : "haxeui-core/styles/shared/info-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABUElEQVQ4jaWSu05CQRRF15m5FBZgYWHjKyQan4U91laKpbGgNT7iB/gfvloJsZToD1j4BWqCMSTKD1BAYbwXzrG4YhQuinF3M5m9Zs0D/hlJmpw4bc4HannEzQBg+tQ2Kdf20pUfAdmz+rBq6kSMzQS4GVwErXCnejDS6AFkz+rD1k7dAou/ON/7KMx1IK4zr5o66S6PZxxjafcdYCy1g9TRN4OJ0+a8Vx66tc/XhgAoXL92e5gaC7W9dCUA8GobID0Xenjz1vcg3lkeqDgAETedtGo161nN+kSCatwJANSwpPdcHu2Uo14FweDjEgWt9nPtF5G442IDuYSYOGBUHeV4849MHTdLAluD9a34vJspfBoABK1wB+F+gPadb0X7ncEnoHow0vBRmMMokXwcBSv6VriS+JW/ZvKoOSdi607cLICqVgi4etnOPA5g+Le8A2uUcuHpLgzCAAAAAElFTkSuQmCC"},{ name : "icons/icons8-server-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAACHUlEQVRoge2WT4vTQBjGn8zUaTf9syiLYhUFRUT0IEj34tGjVz+AoPTsHrz4Bbx5VBDPHronP4EHXRAKsgcX1JvgCkpp06RN0mQm48EltEkILabN5f1BD3neyeQZSMrPQAaPuk/3aqL6nHNeBYysJRvF972h5Ywe9N6+fp+cpdp1nzw7LyJ+zAxefvMTfN+FbVsjJSuX9vdfTuZnleRi5c7us61mXF4pCccZQ8oQWm+ibhqtIwA4zURwC8Cn+VnqAMxgW/PXY2sIqeRaCy6L1lwkM5Z3g1IKUklwUUfrwp2FmcEqaF3swGCnFvJdIdBiudsWSu6TNP69M9uX76K924Won41n5s51tDuPUT93M87OMIa9Vgv3atXM/Vx3gtFokPrZYyteM5nYcBy7mAOUw2r/HalvIIvxjwOE7gDB9E+cuYNv+NV/g+nvozgbRhFeOA6+hmHmPqbZgGk2cp/VaDSXqRSz1AFUMIVz/Hkh05GE/bOfWtufzVYq8L+kXqFIR95GG6yAYaggmaUPEIp3oQwVoOF77maaLccwCsSXZMiTweHhR/fKtRsfPHfaCcNgB+W7hAZwBM0e9nqvvieHmd9As7F9uyaqVznnRvn9Yfi+17acUWYRcqFNQC5ELnQCuVAG5EJJyIVyIBcqCXKh0iEXIhdaI+RCxUMulIZcqCDIhUqCXKh0yIXIhdYIuVDxkAulIRcqCHKhksh1ob8svIy4TCGovQAAAABJRU5ErkJggg"},{ name : "data/blank-dashboard.xml", data : "PGRhc2hib2FyZD4KICAgIDxsYXlvdXQ+CiAgICAgICAgPHZib3ggd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgc3R5bGU9InNwYWNpbmc6IDIwcHg7Ij4KICAgICAgICA8L3Zib3g+CiAgICA8L2xheW91dD4KPC9kYXNoYm9hcmQ+Cg"},{ name : "icons/icons8-checked.gif", data : ""},{ name : "haxeui-core/styles/default/haxeui_tiny.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAAwFBMVEUAAAA+drJml8uevd7K2+1Ee7c1aaBcjsWfv99RhsA7cKqfvt/J2e01aaHJ3Ow1Z56kweGsxuM5cKxzoM9PhMCnxOJBd7SBqdSTtNp6otG90ui2zeetx+RFerM1a6Rllsiow+JDe7qhvt9jlsqfvt9dj8SzzOaoxeJCd7A5bqhVicKAqdOev95ik8SsyOOivuCmw99ThcJ4pNCnv99kl8tomc1+p9RRiMSUtts8drV0oNFdkcibu96IrtdOhL9Cerg7AHaNAAAANXRSTlMASfTz8fHx5uTh4d/T00RE9PLy8fHw5+bl4uHh4eHh39bW0NC/v7m5ubm4tVROSkpIR0ZAQIt9oOEAAACUSURBVBjTRc1FEsMwEETRjpkdZmZmS5FD979VRjVVce/e3zS8MGyMz6DdpuV2x0X/QTPn++uu9pRSDtAl0wRJL4DFzjIuDqIXm8snRlJhc7FTYMnmsgZwZHMpUTjlRZA6rET+t9oAiSl0YatqiugtqLBpMSyyLmzloCe4sNUQnpaxOFy29S+FAK2Rb0/0G+4zw/WbP+FUKshItzNPAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/transparent_px.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAADElEQVQImWN4K6MCAAMnAS7qrFRjAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-arrows-blue.png", data : ""},{ name : "themes/optex/dialogs.css", data : "LmRpYWxvZyB7DQogICAgX19iYWNrZ3JvdW5kOiAjMmMyYzQ1ICMzMTMxNGMgaG9yaXpvbnRhbDsNCiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDUsIDQ1LCAjMDAwMDAwLCAwLjIsIDIwLCA1LCAxLCAzLCBmYWxzZSk7DQogICAgDQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlcjogMnB4IHNvbGlkICMyNDI0M2E7DQogICAgDQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmM0NTsNCiAgICBib3JkZXItcmFkaXVzOiA2cHg7DQp9DQoNCi5kaWFsb2ctdGl0bGUgew0KICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7DQogICAgcGFkZGluZzogMTVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNhOw0KICAgIGJvcmRlcjogbm9uZTsNCn0NCg0KLmRpYWxvZy1jb250ZW50IHsNCiAgICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQouZGlhbG9nLWZvb3Rlci1jb250YWluZXIgew0KICAgIHBhZGRpbmc6IDVweDsNCiAgICBib3JkZXI6IG5vbmU7DQogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNhOw0KfQ"},{ name : "haxeui-core/styles/default/scrollview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTQ1JPTExWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zY3JvbGx2aWV3IHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgcGFkZGluZzogMHB4OwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGVydGlhcnktYmFja2dyb3VuZC1jb2xvcjsKfQoKLnNjcm9sbHZpZXcgLnNjcm9sbHZpZXctY29udGVudHMgewogICAgaGVpZ2h0OiBhdXRvOwogICAgc3BhY2luZzogNXB4OwogICAgcGFkZGluZzogNXB4OwogICAgYm9yZGVyOiBub25lOwp9Cgouc2Nyb2xsdmlldzphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNT0JJTEUgVkFSSUFOVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnNjcm9sbHZpZXc6bW9iaWxlIHsKICAgIG1vZGU6IG1vYmlsZTsKfQo"},{ name : "haxeui-core/styles/default/dialogs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBESUFMT0dTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5kaWFsb2cgewogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBmaWx0ZXI6ICRkaWFsb2ctc2hhZG93OwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogMnB4Owp9CgouZGlhbG9nLWNvbnRhaW5lciB7CiAgICBzcGFjaW5nOiAwOwp9CgouZGlhbG9nLXRpdGxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBwYWRkaW5nOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi5kaWFsb2ctdGl0bGUtbGFiZWwgewogICAgd2lkdGg6IDEwMCU7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgY29sb3I6ICRkaWFsb2ctdGl0bGUtY29sb3I7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7Cn0KCi5kaWFsb2ctY29udGVudCB7CiAgICBwYWRkaW5nOiAxMHB4Owp9CgouZGlhbG9nLm5vLXBhZGRpbmcgLmRpYWxvZy1jb250ZW50IHsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmRpYWxvZy1mb290ZXItY29udGFpbmVyIHsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmRpYWxvZy1mb290ZXIgewogICAgcGFkZGluZzogNXB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogcmlnaHQ7Cn0KCi5kaWFsb2ctY2xvc2UtYnV0dG9uIHsKICAgIHJlc291cmNlOiAkY2xvc2U7CiAgICB2ZXJ0aWNhbC1hbGlnbjogImNlbnRlciI7CiAgICBjdXJzb3I6ICJwb2ludGVyIjsKICAgIHBvaW50ZXItZXZlbnRzOiB0cnVlOwogICAgcGFkZGluZzogM3B4OwogICAgYm9yZGVyLXJhZGl1czogMnB4Owp9CgouZGlhbG9nLWNsb3NlLWJ1dHRvbjpob3ZlciB7CiAgICByZXNvdXJjZTogJGNsb3NlLWhvdmVyOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9CgouZGlhbG9nICNpY29uSW1hZ2UuaW5mbyB7CiAgICByZXNvdXJjZTogJGluZm8tbGFyZ2U7Cn0KCi5kaWFsb2cgI2ljb25JbWFnZS5xdWVzdGlvbiB7CiAgICByZXNvdXJjZTogJHF1ZXN0aW9uLWxhcmdlOwp9CgouZGlhbG9nICNpY29uSW1hZ2UueWVzbm8gewogICAgcmVzb3VyY2U6ICRxdWVzdGlvbi1sYXJnZTsKfQoKLmRpYWxvZyAjaWNvbkltYWdlLndhcm5pbmcgewogICAgcmVzb3VyY2U6ICR3YXJuaW5nLWxhcmdlOwp9CgouZGlhbG9nICNpY29uSW1hZ2UuZXJyb3IgewogICAgcmVzb3VyY2U6ICRlcnJvci1sYXJnZTsKfQoKLm1lc3NhZ2Vib3ggewogICAgaW5pdGlhbC13aWR0aDogMzAwcHg7Cn0"},{ name : "haxeui-core/styles/shared/warning-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACB0lEQVRYhe2WP2gUQRTGf+/udibFCbmL8exUjGiiFqlMZdBG8E9rYaWNggqipQRRRBCEJKWljY1gJ2n1LhCbNHIggorWIijkEHYvuWeT083u7GZ3L2JzX7W89+Z7H2/mm1kYYoj/DCm6UF9QpmHmUJRvwSO5yEYRnkpRAeyxt4D7CLDXroG/UISm0AR0hTrdkY+g9c3QT3rmkJxa+56Xq1REAF37MNQcYJRS8KAIVe4JaMtMofKO+PZtgE7LbNDOw5d/AirzjuYAZZDFvHS5BOgbewE4k1JyWpft+TycmbdAV/Ho2DbCYYD3X6o8fjYBwN0rnziyv9Nn/EzHPypn8bPwZp/AL3uz3xzAVHp/UsbTkFIOUrXXs9JmEqAr1FGZC8fCTb2QmE0R9/T1rt07JsBhuy1NjdeLrshsy20FaMtMAVej8XBThwCAa9o0xwcWkGQ7U1HndwiZbJkqIM12XtoZ+IttbZkoQFfxgCdJ+fDYvXKiAFAWdQmblE68B7Rlb6PMJzPngHBHTrpfS6cAx2sXr1F4264hAjPHfiDpV1ria+n+H3DYLooPX6s8fbkPgNFql8kDnbTyvi1vRBOxM6BNM4nDdlE0xnzGawHjtYDGWKZb12nL2OC0aV8B57IwFsCSzPpbuB0u0Jl/1BzQE9FI/AyU5DIql5y5wbAOPN9hziGGGBy/AQa5lYKywFiuAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/sortable-desc-blue.png", data : ""},{ name : "icons/icons8-settings-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAALrUlEQVRogdVaaXBUVRb+7n1Ld2df2+xLE2ICYRFRdgZlUZBR1BGdKQdxqix/jFMjJgHLqRl7/lhKErCccaqsGgvRqaka3FAcVECN0RjAIGAIHUKWTkLSIZ09ne681+/dOz8woZN+TWLsH+P51+ece5Z3zz3n3HMb+JkDCbfA8uKDm6kslhFKaCCeM86YqpWWVDz2cTj1ieEUBgCMknvj42MKsudmCYH4tqZ2va9n4F4A/98OiBK9KysvS8jJz52E5xzCcP/wpnDro9OzzBzKSt606n49JyklOYiWlJIETdNyX37u3zeFU2dYHQDYOlmW1ejYqCBKdGw0TCaTovq1teHUGDYH7PbXIgglDyanJQmheJJSE0VK+IN2+2sR4dL7k7NQxZ63VhKQYsbZPYIkkiWrbpHTs9MNeTvbOvFd9Xeq7tc5ofiIabyitPyxmp+if9YO7NtzYAEn0t8ZY6uzbJksc06mmJySDEJvLJIzDne3Gx1NHVp7awcVBOEr3a8/VVq+48Js7DDUZre/FhE7KMu7Xn58cCrt0EOHhI5c33Mc5C8ZOemYt2S+GBE9u4jwjnhRf7Ze73R2cYA977G0vmi329lUvhf3vBYrq/HqM/u3+2bkQFnJW3tB9GJBkmp1zX+Yc/5xadnO8/t3vW2GrLxNJXHj0jVL5ZSM0AlF13R4R70ACCIiLRDEkEcD3R3dqP36jKr5tU+panr4mf3bfRV73lqkM75ZEuk2TdNuI6DlJWU79kzrwN7SN+ZQIjQsXLZAVBUVXW2usaH+IZMg0H7O+aAlypKxetMaU0SUZdI6za/B1e6Cq8OFnq4e+FX/JLpkkmBNtSI1MxWpWakQpcklyOvx4etjXym+UV8HQOKYzhJjE2KVtOxUs2yScf5Unca5XrC7bGdz4LqgQiYKwitJKUnMVmADABQsKjCrioqerp7Efnd/YsHiQsiyNMHPGENrQysav78EKgnIzktH0W3LER0TiciYa6E1OuzFyNAo2ptdcJytR11tHQoWFSAnPweUXkuEEVEWrNt6h6nhnCMvITkB1jQrZJNsntilK93c7XK/AuCekDtQVnJwA6Xkk/X3bxCiYoJz+VTwjvpw6vOTUBUFt66ej7lFudMeYsY4Lte14ruv62Eym7DszmWwRE5/hjzDHnz2/gmdMX53afljJ4IcsNu/EGPGOi/aCm1zipYWTVsfBnoHUPNZDazpSbhj6+2QAnZlJuBX/ag8cgo9rn6suHMF4pLipl1T9+0F1trQ0jxsTp9nt9+hAQGFLMbnLGSM5ZrMpmlTq3fUh5rPajCnMAsb71/5o40HAEmWsOGBVci9ORM1n9fA5w1KMEFgtpgIYyw3xucsHMdNpIZPqz/o2bDy/jN9Lvd2KlKaaE00dIQxhupj1UhIjsMv7rkNhMy+FhJCkGFLwdUrvWhpcCI7LyukvMYLjdxx5qLGOLaV7N1ZPY6fFCq7y3YcZYxvuXjmot9xzsGNBLU2tEJVFNzxy9t/kvGBTqzbugxjYz44G52GPI5zDn7xjMPPGN+yu2zH0UBaUHI+/s3hlk3L76vqdw88ovk1wZpmnbBS82v4tvI0lq5dAGtaoqEyXdfhONuEb46d8Z38/Bw5V+NgzsYrCmNMSrDGgxocckEUIMsizp++CFuBbSIzAcCF2gus6UKTAl2/q7Ri5xdT1xoe1pKKnVWc6087G50aAvbB1e4ClQTMLcoxNN474sP7bxxXar+su9rnHnyeqdp6pmrre68O2E9/8X3P4YPHFe+IcazPXWCDIFB0tXddR3LA2ejUONefLqnYWWW0LuSFhnGSHZ8czwMTravDhey8dMNUqes6jh76UvEMjnyla9hWWv7YaAC56lX7oX+MDHoOf/xO1eptOzaaBGHyt6OUIDsvHd0dLmTaMq8hCRCXFM/drqtZoewMmS5FQViZmJxoCsT1uHqQNSfFkL/hXDNGh0YHrxm/Y3Qq/ff27R6TSd42MuAZunS+xVBG5pwU9Ljck3CJyQkmgQorfrQDhNI0c+T1dkHza/ArfsTEGRe4y3VOn6brFUbGBzqh6/q+xu9bDeMoJi4K6pgKXdMncBGRESACNe7Pb+QA5zzeZJInfvu8Y9cERlsM+Qf6RiSi81Oh5E0AY6cG+oYNC8d46+Ebve6fZJbAdBYfSlzoiss55/z6CSbX0aFtM0oxBhAq+xrJ5pyDgoRUGjqECB1UAzpKc8S1vsrnGTPkj0+M9gNsWSh5EwYRYXl8YozfiDaeoSyBoatoACVB95JxCB1C4FfGArZSlERIJgnDgx5D/rkLcy2iIBa/aj8Usgt8affr0YJAi/MX5hrG4fCgB7JZnnR38I56wRnr/NEOaJp2ss/dpwTirKlWtDe7DPkLFtkQHR8VqyjqYSMnXtr9erRIpA9iE6Ki8xfaDGV0NHfDmmqdhOtz9ys600Pem0PWAUp424B7gIBj4gCkZqbCcbYey9ffElRRBUHA5ofWmj5+u2r1yKCnuWz3wX2ck5M/kFcIlBbHJkRF3/3Q2qAaAFxrs9uaOjFvSdF1JAcGewcIAdpD2Wl4zysvfmMtEYR/2QpssjX9eisRGR2JyxebYLbISEoJTgySScLNC22i2SJHjo0qq5Qx9XFKyY5Ea+zaxcsLYlZtWiqazHLQOgC4dL4Fnc6ruGXF4uutBAFURSUDvYMbNy2/76tjNYfbpq4LygdlJQc3EEr/e/OifKlwcWEQvaWhBZfrGvGrJ+6eVRttBKqi4p1/foL8BTdj/CYYCI5zDn7pfKOfM3ZP4GUGmHIG9pa+uYVScnTerYWGxgNATn4OTGYTKo+cumFKnSlwzvHFR6dhtliQm2/cYxUuLiTzbi2UKCVH95a+uSWQNhFC+/YcWADQyvm3zhfzi/JD5nNCCG7KuAn13zXAM+xDhi1l1m015xw1J86iy3kVazathmQyDi8ASLQmEkEUaK/L/fDdq+89/Gn1Bz1AwA4MW3IclNJWZUyZ9rNaIiOw4s4VaL3UgePvVcOvGKb1G4KqqDj+XjVaL13BivUrEdi2hAJlTOGU0tZhS45jHDexA5WVB9mG5fc5BnsHHs2wZVD5Bl8DuFbYMnIz0NrgxPenHZBNIhKs8dPuBmMcl8634LMPasB0YM2m1YgyGAZPBc+wB2eqahnT2a//9MK2pnF8kLZ9e976KCk1aePKjasmPPhhrIJ+dz+mjlU4Y3A2OuE43wBBoMjOS0dmXiqiYyMR9UNv4xn2YmTQg47mbrQ1dULXGQoWFSA3Pwck4PKiqn40nHMgYKwyQfvmxDf+XlfviWdefHTSGQiqAxrT/9jT1dvQ0tACo8FW95XuSYMtQilyC2zIystGV7sL3R1dqDxyEuqUsJLNMqxpVsxbUoS0rNSgSd2ox4vqY18rPo/vivOSM07XWULgYKun000Y1/8w1d5pR4uaX38f0D8ZHy0yWfmPIAp3LV27VE7NML4bAICm6/B5fuhtoiwQhdCjRdeVbtRW1apMZ58QRX5k1/6HxspK31hECNksiNI23e9fCi5UlJb/dveMHNi365BFlQfkZ196cmgqzW630yhf7rOc079m5Kbz+UsKpYioyJDG3Qi8nlHUn3FonW2dAPifPZaWvUbD3f1PH4gbilNVu/1J74wcmAmUlbxZJIjkb4yxtem5mXp2XpY0o/E653C73Gi73K51OjsopUKVyrWnnn1pZ/1s7PjpDxy7DyznRCoG2FZBFOn0DxxnVd2vcRByhHCtonjv4ycNmWcIYXsn3rfrkIVJvgNp2ekP3L7udsMe43TlKa2rretdT8TY74zCYTYQtjeyZ/Zv93HG33N3uYNieBx6XX0a4+TdcBkPhP2VklaqqiqPDAVfekaGRqAoikmWRMP5zqw1hlNYafmOHkESnL3d7iBab3cvRFFsffqF31wNp86wv9RrfvZpe1P7E4RMvmu0N7frfk0/Fm59YXeAMv7h0MDwmrra+qA/e1DGPwy3vp89/A+c+xcBtZHf9gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/sliders.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTTElERVJTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ob3Jpem9udGFsLXNsaWRlciB7CiAgICBwYWRkaW5nLWxlZnQ6IDVweDsKICAgIHBhZGRpbmctcmlnaHQ6IDVweDsKICAgIHBhZGRpbmctdG9wOiAzcHg7CiAgICBwYWRkaW5nLWJvdHRvbTogM3B4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7CiAgICBib3JkZXItcmFkaXVzOiAkbm9ybWFsLWJvcmRlci1yYWRpdXM7Cn0KCi5ob3Jpem9udGFsLXNsaWRlcjphY3RpdmUgLmJ1dHRvbiB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouaG9yaXpvbnRhbC1zbGlkZXI6YWN0aXZlIC5yYW5nZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouaG9yaXpvbnRhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7CiAgICB3aWR0aDogMTAwJTsKICAgIGhlaWdodDogOHB4OwogICAgYm9yZGVyLXJhZGl1czogMXB4OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmhvcml6b250YWwtc2xpZGVyLndpdGgtY2VudGVyIC5yYW5nZS12YWx1ZSB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7Cn0KCi5ob3Jpem9udGFsLXNsaWRlciAubWlub3ItdGljayB7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICB3aWR0aDogMXB4OwogICAgaGVpZ2h0OiA0cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgouaG9yaXpvbnRhbC1zbGlkZXIgLm1ham9yLXRpY2sgewogICAgbWFyZ2luLXRvcDogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgd2lkdGg6IDFweDsKICAgIGhlaWdodDogOHB4OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLmhvcml6b250YWwtc2xpZGVyIC5idXR0b24gewogICAgd2lkdGg6IDExcHg7CiAgICBoZWlnaHQ6IDIwcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgZmlsdGVyOiBub25lOwp9CiAgICAKLnZlcnRpY2FsLXNsaWRlciB7CiAgICBwYWRkaW5nLXRvcDogNXB4OwogICAgcGFkZGluZy1ib3R0b206IDVweDsKICAgIHBhZGRpbmctbGVmdDogM3B4OwogICAgcGFkZGluZy1yaWdodDogM3B4OwogICAgd2lkdGg6IGF1dG87CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1zbGlkZXI6YWN0aXZlIC5idXR0b24gewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnZlcnRpY2FsLXNsaWRlcjphY3RpdmUgLnJhbmdlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi52ZXJ0aWNhbC1zbGlkZXIgLnNsaWRlci12YWx1ZSB7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogOHB4OwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoudmVydGljYWwtc2xpZGVyLndpdGgtY2VudGVyIC5yYW5nZS12YWx1ZSB7CiAgICBib3JkZXItcmFkaXVzOiAwcHg7Cn0KCi52ZXJ0aWNhbC1zbGlkZXIgLm1pbm9yLXRpY2sgewogICAgbWFyZ2luLWxlZnQ6IDEwcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHdpZHRoOiA0cHg7CiAgICBoZWlnaHQ6IDFweDsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKfQoKLnZlcnRpY2FsLXNsaWRlciAubWFqb3ItdGljayB7CiAgICBtYXJnaW4tbGVmdDogMTJweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgd2lkdGg6IDhweDsKICAgIGhlaWdodDogMXB4OwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwp9CgoudmVydGljYWwtc2xpZGVyIC5idXR0b24gewogICAgd2lkdGg6IDIwcHg7CiAgICBoZWlnaHQ6IDExcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBob3Jpem9udGFsLWFsaWduOiBjZW50ZXI7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCg"},{ name : "themes/optex/clintex-logo.png", data : ""},{ name : "haxeui-core/styles/shared/warning-large.png", data : ""},{ name : "haxeui-core/styles/default/accordion.css", data : "LmFjY29yZGlvbiB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIHNwYWNpbmc6IDA7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Owp9CgouYWNjb3JkaW9uLWJ1dHRvbiB7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyOiAwcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICB3aWR0aDogMTAwJTsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBpY29uOiAkYXJyb3ctcmlnaHQtc3F1YXJlOwogICAgaWNvbi1wb3NpdGlvbjogbGVmdDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBwYWRkaW5nOiA2cHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmFjY29yZGlvbi1idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi5hY2NvcmRpb24tYnV0dG9uOmRvd24gewogICAgaWNvbjogJGFycm93LWRvd24tc3F1YXJlOwp9CgouYWNjb3JkaW9uLXBhZ2UgewogICAgd2lkdGg6IDEwMCU7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBvcGFjaXR5OiAxOwogICAgcGFkZGluZzogNXB4Owp9CgouYWNjb3JkaW9uLXBhZ2U6ZXhwYW5kZWQgewogICAgYW5pbWF0aW9uOiBhY2NvcmRpb25BbmltYXRlRXhwYW5kIDAuM3MgZWFzZSAwcyAxOwp9CgouYWNjb3JkaW9uLXBhZ2U6Y29sbGFwc2VkIHsKICAgIGFuaW1hdGlvbjogYWNjb3JkaW9uQW5pbWF0ZUNvbGxwYXNlIDAuM3MgZWFzZSAwcyAxOwp9CgpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVFeHBhbmQgewogICAgMCUgewogICAgICAgIG9wYWNpdHk6IDA7CiAgICAgICAgaGVpZ2h0OiAwJTsKICAgIH0KICAgIDEwMCUgewogICAgICAgIG9wYWNpdHk6IDE7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgfQp9CgpAa2V5ZnJhbWVzIGFjY29yZGlvbkFuaW1hdGVDb2xscGFzZSB7CiAgICAwJSB7CiAgICAgICAgb3BhY2l0eTogMTsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBvcGFjaXR5OiAwOwogICAgICAgIGhlaWdodDogMCU7CiAgICB9Cn0KCi5hY2NvcmRpb24tcGFnZSAuc2Nyb2xsdmlldyB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBwYWRkaW5nLXRvcDogMDsKICAgIHBhZGRpbmctcmlnaHQ6IDA7CiAgICBwYWRkaW5nLWxlZnQ6IDA7CiAgICBwYWRkaW5nLWJvdHRvbTogMDsKfQo"},{ name : "haxeui-core/locale/it/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2FsdmEKZGlhbG9nLnllcz1Tw6wKZGlhbG9nLm5vPU5vCmRpYWxvZy5jbG9zZT1DaGl1ZGkKZGlhbG9nLm9rPU9LCmRpYWxvZy5jYW5jZWw9QW5udWxsYQpkaWFsb2cuYXBwbHk9QXBwbGljYQpkcm9wZG93bi5zZWFyY2g9Q2VyY2hpCg"},{ name : "themes/optex/dot.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVGgiqFt8GAAAAWklEQVQ4y+2QsRHAIAwDUXYhezGBZxF30DpzwTBOS4FzFKTjS0ln6RzC4V9IjaTGr8zlGTk/FUAD0EgtXg5eM4A2amZ2i6S+vGCV6QGR1M2sDlKZtW954mEDL/eeHmb8je1wAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/tableview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBIRUFERVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmhlYWRlciB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIHNwYWNpbmc6IDA7Cn0KCi5oZWFkZXIgLmNvbHVtbiB7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgaWNvbi1wb3NpdGlvbjogZmFyLXJpZ2h0OwogICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgcGFkZGluZzogNnB4OwogICAgYm9yZGVyLWNvbG9yOiAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLmhlYWRlciAuY29sdW1uLmxhc3QgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwOwp9CgovKgouaGVhZGVyLnNjcm9sbGluZyAuY29sdW1uLmxhc3QgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7Cn0KKi8KCi5jb2x1bW4uc29ydGFibGUgewogICAgaWNvbjogJGFycm93LXVwLWRvd247CiAgICBpY29uLXBvc2l0aW9uOiBmYXItcmlnaHQ7Cn0KCi5jb2x1bW4uc29ydC1hc2MgewogICAgaWNvbjogJHNvcnQtYXNjOwp9CgouY29sdW1uLnNvcnQtZGVzYyB7CiAgICBpY29uOiAkc29ydC1kZXNjOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRBQkxFVklFVwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoudGFibGV2aWV3IHsKICAgIHNwYWNpbmc6IDA7Cn0KCi50YWJsZXZpZXcgLnRhYmxldmlldy1jb250ZW50cyB7CiAgICBzcGFjaW5nOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAwcHg7Cn0KCi50YWJsZXZpZXcgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi50YWJsZXZpZXcgLm9kZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1hbHQ7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi50YWJsZXZpZXcgLmNvbXBvdW5kaXRlbXJlbmRlcmVyIC5pdGVtcmVuZGVyZXIgewogICAgaGVpZ2h0OiBhdXRvOwogICAgcGFkZGluZzogNnB4Owp9CgoudGFibGV2aWV3IC5ldmVuOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKfQoKLnRhYmxldmlldyAub2RkOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKfQoKLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXIgLmxhYmVsIHsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7Cn0KCi50YWJsZXZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsKICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsKfQoKLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsKfQoKLnRhYmxldmlldyAuY29tcG91bmRpdGVtcmVuZGVyZXI6c2VsZWN0ZWQgLmxhYmVsIHsKICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7Cn0K"},{ name : "haxeui-core/locale/de/dialog.properties", data : "ZGlhbG9nLnNhdmU9U3BlaWNoZXJuCmRpYWxvZy55ZXM9SmEKZGlhbG9nLm5vPU5laW4KZGlhbG9nLmNsb3NlPVNjaGxpZXNzZW4KZGlhbG9nLm9rPU9LCmRpYWxvZy5jYW5jZWw9QWJicmVjaGVuCmRpYWxvZy5hcHBseT1BbndlbmRlbgpkcm9wZG93bi5zZWFyY2g9U3VjaGUK"},{ name : "icons/icons8-tools-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAGPElEQVRoge2YWWxcVxnHf+dus3iLt7ETJW2cEBovaQSqIiHRFlAEL31FiRTakAoEArFIDUKiQJv2BVEVyvbC+gpC4qGqCxTUqqoKUUIESKRNm9hO2hKvM7bHM3fmLuccHsbb2L7juWO7llB+j3PPd87/f893zvfdgTvcYUuI3VhUZ3/yHcymbyGDOdTMh0X34+ONzmU0GvjqDffUKyPlh57UOtYcOvvjCxgdT0EyiVC9yNwf9e3HuhrV0dAOvDpS/l7aMb4ZSk2uGE4CL2qDnz3U33SlVpyefPYZnJ7zCAPkPASjoBVo/g2cFPuenYmrpaEdMIXoBzBNgSFED3BOKC4OXy2ci4qRt7//iyDvn1elhWrxAILjwF8b2YmGDCipfl9ZFxxr+WcLxK+Grxa/uHa8zj53wUj0fE6YNrIwiy6/syJ+CcFxBM9rHS8r1g3WWhtzHl/WcBY4FBV4fcpvN4SgHGjypbDq2cEux93bZnkA6eBvyUQ4lkIYEMwh3XFMuwxCbTjvXNtTc1k3kVzwlaNURZ9tCtexxYv3dJqnhagOtNZOkCtzQcC3N3NuGwKpIWkLvFDgBXr52a0ZP20J0geSl0nIMZZzXo5hOhsLB/DtDxGS3jNbCqp+90Ld5IX6029O6x7gwdXPqlJIa+0I+MZm4gHuardRuiK6LWWRsFY2UwOidJGUHGXdgY0gsPsppk/VXNP19ANTU7o50kDW5xCQqMeAYcChDmfFRHrFxLGml/lA041Y4gvpsyAsTAEi4hRoYNaSD0QaMDZIqVqY5noT/a3/pDf4D+HcFNrPxRK/hGVEn2NT4EQaaITVJvbZV+hrvonVmgEtUe50bPEQvQMbEeuNR2GaMNT6L9J6BISBsHyspnmEkJExUeLjsi0GksElUvp6Vc6LiGsStk88bEMKJYNLpOT1ug/sdPBBRuWZmuKl1JHP1rKlV5AqDGOXR6C5u27xVxZOoxYUmpCe1vXLaw0x9DduIBlcwi6PoUpFUAFmYrKm+Gy4KH5xydEZH7NYpGtvW9W4UMVQT4MptJQ2ZksnRjKBDos1xc/ro9zkYWzLXv6tfeJd+n76HN4rf68aWw532EDKv0hKLhYpNY/pjGOl85HjPWuQt8MzaCxa0xYJy6Dj9i1OvPBbrMCn50/D+K9dXhm/kwYMVSapRxYvagXeWCVpIwjsQdymRzjYkUQttpmZ7H858Zc/YIY+AEJrMi88T/BO5aPM9d+HFKqHwB6kkH4EhIllCvo6bJrfu8Wx1/+MkdkD6dTyWKEV+s238KUmiHOCiWlAGUk8cTeVrsQA5242+qhbLX4JyxRkDvcSIioxXe1VJnQmQ9GLJz62AQDX+SieuKtiwmwHp6/KRKVIPVwlfgnR0kz+7GeQerFj624HyyR7zyDO8X7y5eiLYNsMrJg4sGLCPrBKfO0KK1payD/6WYp7OvENm8mPnUScO00x0LGvUNhCHXCd+8F/jYR6F4RFYA9Fvvl1pFP4Z07hAw6Ve2DWDTeL2pAtVWLXuR9P3UYol9A6TKN/M82XFX7Mw7vElrspaezb0l0WSM1sKbpr3Ywdu0brQQOTCxIV/+wus6sGZooyduVdy64ZmHUV+dIWXv0iu2JgrqTIuY3n/Wq25YusXrSupE0jBSuK982ALzVTC1vP+bXsuAGtK/d8zpW1GteG2TEDWsOCp8i5CtlAi1Av227ACzULnqLgKeT2pXok4omnf/R6fm7+PhRCCIQwjLpMWZbJwL39PPiJj9Pa1kop0EwXZKx+3ncLXH75JaYnJpBhfb1Q4JVDJZXWAvb2ZobFV776hBZCoJWiXC6hqU+AUgrXLZBIJjj5qU9y7MRHkE4LGpBhSFhDUGl+njf+cZEbb1xlqX8Kw4Ag8NF1HhQNaB1q8dj5p0tBIJP5/BzlsltX8GZ0d/UijPpKjJSSQjGPVy7FXufwkSPjVkdP968n35v4klLbU1gAcrPTiDraaq0lUja+7v6D+58RAE9e+MHotWvX+hqeaRcYGBp867uPf+2oATDQv//egaHBt3dbVL0MHBu6dvTI3vtgzRfIz3/zu89PjE9+PZfLHnQLxUTgB7varS5hO7ZKNzd5XZ2dN7t7Mj/8wqOnf7nbmu7wf8P/APpK3hrfUSMiAAAAAElFTkSuQmCC"},{ name : "themes/optex/directions-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVJCDeZmyBAAABMUlEQVQ4y52TPU7DQBCFv12zJSU5QCqKUNHRQVKRGyDFgnRWwFEkTkCLRLEu0oFJzgAFkjlBykhwAQRKSkorHgoMWmAdCNusdvTem599o6g4w+GolufFLSDG6HYUhTMfTvmC1l5ugM6ArTL0uFgEe4NB5/lXAQ+ZZSLqj+RKEe32DPq+gvxa3ptBsLh7xzoC5cAyoOFLKyIXoE6AAmjkeZF9iCgfWSmeRHhwNMZxfDhKkqsDEZUCBpgao5vK2nQCbH/NWdTiuDv3VZMk6bkIp+VzsuYDxXF3bm0aAp2fFdB3sdoYvQ9MPX3XgRbQEpG6tdfHImpclk/ZQltVDPEMVAtkx/mFdUd/aoxuRlE4Uyt44NMLQSC7vd7Ry7+M5JJXtvJ38krL5CNXCjiDvQFYts5v+nOgQjATnaQAAAAASUVORK5CYII"},{ name : "icons/icons8-edit-32.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACCUlEQVRYhe2WzUsbQRiHf5PJhylVQ2pjQ68Ws5B4KC3tpYdaEPdg8ZD1GlDoKYdShKpILz31WOiplF4KvRQaTQ4iJe2t8VCEUgQpU/0DhIR2FXRM8npJYBt3/Ygz0YO/2+y7L8/zzjLMApc55zDdgJXxzAgDxnggNH/n09u/rXWfTvhqds5kxAoglq1JufzDetLbMQEhhNn7dPJjcCix1nh0r74vv363pqLaBYQQJoAcAZHuTHowmBr8CQBEuM1lbUargBDCJKIcEYWICER05WomfashIYnqS873uUp4uQiTVcVLGR7tAxBwlALBIaOrtr5h3f3w5ouzR9kpKBdh1hlyDAjJ8Oivf9HXAwDCjbIkIiuRSORb+5TsgBMOALwq+vn+7/W9sNkDgAC4wpUIlIsYI4bPTXgz/uqffn91Y3W3ayRrGEbBq/9Mn6B18pbIOmBdH4br5GcWUAFvW0AVvC0BlfBTC6iGn0pAB/zEArrgJxLQCT9W4Dg4ARN9w1hsF36kQCfgngKdggMu/wNba88ek48XvOCMkFYFdxUI3Hwx7rsx7XZJSQImoo/gebEoEQDwkMVn4Ys/PwRXOXkz/02az+fv27Y9HYvFwLofgIFAOys1Alk64ADgdy5s254qlUoAgGQyucnis98YsHDNeKV02z0FOOfbqVTqXaVSeR+JREq6oJe5UDkAV8TpJv6Uvr0AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/textinputs.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBURVhUIEZJRUxECioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi50ZXh0ZmllbGQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBwYWRkaW5nOiA2cHggOHB4OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaGVpZ2h0OiBhdXRvOwogICAgc3BhY2luZzogNXB4OwogICAgaWNvbi1wb3NpdGlvbjogcmlnaHQ7CiAgICBjb250ZW50LXR5cGU6IGF1dG87Cn0KCi50ZXh0ZmllbGQ6YWN0aXZlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi50ZXh0ZmllbGQ6ZW1wdHkgewogICAgY29sb3I6ICRsaWdodGVyLXRleHQtY29sb3I7Cn0KCi50ZXh0ZmllbGQ6ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIFRFWFQgQVJFQQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoudGV4dGFyZWEgewogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgcGFkZGluZzogMXB4OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgaW5pdGlhbC13aWR0aDogMTUwcHg7CiAgICBpbml0aWFsLWhlaWdodDogMTAwcHg7CiAgICBjb250ZW50LXR5cGU6IGF1dG87Cn0KCi50ZXh0YXJlYTphY3RpdmUgewogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLnRleHRhcmVhOmVtcHR5IHsKICAgIGNvbG9yOiAkbGlnaHRlci10ZXh0LWNvbG9yOwp9CgoudGV4dGFyZWE6ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwp9"},{ name : "haxeui-core/styles/default/steppers.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBVTkFUVEFDSEVEIFNURVBQRVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnN0ZXBwZXIgewogICAgc3BhY2luZzogMDsKfQoKLnN0ZXBwZXItYnV0dG9uIHsKICAgIHBhZGRpbmc6IDNweDsKICAgIHBhZGRpbmctdG9wOiA0cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogNHB4OwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgb3BhY2l0eTogMTsKfQoKLnN0ZXBwZXItYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9Cgouc3RlcHBlci1idXR0b246ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kb3duOwp9Cgouc3RlcHBlci1idXR0b246ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7Cn0KCi5zdGVwcGVyLWluYyB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1kb3duOwp9Cgouc3RlcHBlci1pbmM6ZG93biB7CiAgICBpY29uOiAkYXJyb3ctdXA7Cn0KCi5zdGVwcGVyLWRlaW5jOmRvd24gewogICAgaWNvbjogJGFycm93LWRvd247Cn0KCi5zdGVwcGVyLXN0ZXAgLnN0ZXBwZXItaW5jLCAuc3RlcHBlci1zdGVwIC5zdGVwcGVyLWRlaW5jIHsKICAgIGhlaWdodDogNTAlOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE5VTUJFUiBTVEVQUEVSIC0gU1RBTkRBUkQgTEFZT1VUCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5udW1iZXItc3RlcHBlciB7CiAgICBwYWRkaW5nOiAwcHg7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBpbml0aWFsLXdpZHRoOiA4MHB4OwogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIG1hcmdpbi10b3A6IDBweDsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1sZWZ0OwogICAgcGFkZGluZy1sZWZ0OiA0cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAwOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsKICAgIGljb246ICRhcnJvdy1sZWZ0Owp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZGlzYWJsZWQgewogICAgb3BhY2l0eTogMC41OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubnVtYmVyLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsKICAgIGljb246ICRhcnJvdy1yaWdodDsKICAgIHBhZGRpbmctbGVmdDogNHB4OwogICAgcGFkZGluZy1yaWdodDogNHB4OwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMDsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7Cn0KCi5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsKICAgIGljb246ICRhcnJvdy1yaWdodDsKfQoKLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7CiAgICBvcGFjaXR5OiAwLjU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7Cn0KCi5udW1iZXItc3RlcHBlci5pbnZhbGlkLXZhbHVlIHsKICAgIGNvbG9yOiAkZXJyb3ItdGV4dC1jb2xvcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICRlcnJvci1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoubnVtYmVyLXN0ZXBwZXI6YWN0aXZlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTlVNQkVSIFNURVBQRVIgLSBDTEFTU0lDIExBWU9VVAoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIHsKICAgIGxheW91dDogY2xhc3NpYzsKfQoKLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1kZWluYyB7CiAgICBpY29uOiAkYXJyb3ctZG93bjsKfQoKLm51bWJlci1zdGVwcGVyLmNsYXNzaWMtc3RlcHBlciAuc3RlcHBlci1pbmMgewogICAgaWNvbjogJGFycm93LXVwOwp9CgoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jOmRvd24gewogICAgaWNvbjogJGFycm93LWRvd247Cn0KCi5udW1iZXItc3RlcHBlci5jbGFzc2ljLXN0ZXBwZXIgLnN0ZXBwZXItaW5jOmRvd24gewogICAgaWNvbjogJGFycm93LXVwOwp9CgoubnVtYmVyLXN0ZXBwZXIuY2xhc3NpYy1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsKICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICBtYXJnaW4tdG9wOiAwcHg7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogT1BUSU9OIFNURVBQRVIKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm9wdGlvbi1zdGVwcGVyIHsKICAgIHBhZGRpbmc6IDBweDsKICAgIGhlaWdodDogYXV0bzsKICAgIGluaXRpYWwtd2lkdGg6IDEwMHB4OwogICAgYm9yZGVyOiAkbm9ybWFsLWJvcmRlci1zaXplIHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogJG5vcm1hbC1ib3JkZXItcmFkaXVzOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItdmFsdWUgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKICAgIG1hcmdpbi10b3A6IDBweDsKICAgIHBhZGRpbmc6IDZweDsKfQoKLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWRlaW5jIHsKICAgIGljb246ICRhcnJvdy1sZWZ0OwogICAgcGFkZGluZy1sZWZ0OiA0cHg7CiAgICBwYWRkaW5nLXJpZ2h0OiA0cHg7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAwOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsKICAgIGljb246ICRhcnJvdy1sZWZ0Owp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItZGVpbmM6ZGlzYWJsZWQgewogICAgb3BhY2l0eTogMC41OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgoub3B0aW9uLXN0ZXBwZXIgLnN0ZXBwZXItaW5jIHsKICAgIGljb246ICRhcnJvdy1yaWdodDsKICAgIHBhZGRpbmctbGVmdDogNHB4OwogICAgcGFkZGluZy1yaWdodDogNHB4OwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMDsKfQoKLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7Cn0KCi5vcHRpb24tc3RlcHBlciAuc3RlcHBlci1pbmM6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJ1dHRvbi1jb2xvcjsKICAgIGljb246ICRhcnJvdy1yaWdodDsKfQoKLm9wdGlvbi1zdGVwcGVyIC5zdGVwcGVyLWluYzpkaXNhYmxlZCB7CiAgICBvcGFjaXR5OiAwLjU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I7Cn0KCi5vcHRpb24tc3RlcHBlci5pbnZhbGlkLXZhbHVlIHsKICAgIGNvbG9yOiByZWQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZXJyb3ItYmFja2dyb3VuZC1jb2xvcjsKfQoKLm9wdGlvbi1zdGVwcGVyOmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cg"},{ name : "icons/icons8-error.gif", data : ""},{ name : "haxeui-core/styles/shared/collapsed-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwocG2BobAAAAHlJREFUOMtjYBi+YP36bcrEqGPCLfP36Pr1W4zJN4CBQZyB6f/B9Zs2eZJrAAMDAwM3w3/GDRs2bI4i1wAGBgYGtv+MDEs2bNpSTq4BeAELEWp+Mf5nSAzw91lGjgFfGRj/hwb4+20nxwUvGf4xegcG+p6laUIaBgAAk1kg6zuyVSkAAAAASUVORK5CYII"},{ name : "themes/optex/exclamation-triangle-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVHDtDnBmWAAABe0lEQVQ4y6WTvS9DURjGf+fcal1fSZuGwVfFYmCoWAxi8i8YDL4SYbohUtaOhEQ1TBLEaMFksYhNJSQMIiEkErF0MzTS8xpcyXV7b0R6lnPyPu/n8z4HqjwqDMjldlq0rjkDxJjPkfn5mfcgPx2WwLIiq0Av0Kd1zcq/Otja2u03Rhc8BQyoQceZuPyzAxFRxuhNH6ZBciJSUdDyG5LJ1BioBaAM3ABvQDPQUSjcPJyentyGjrC2dlAfi5l7oA24c5zJPoB8fv/W5eO1VNI9mcz4R+AI0agsu8EADZ46je6jLRYzS4EcbG/vtislix6sycOM501mY2MvVZGgXNbrQJ03gYgol7hGj922LLX6i4N8fm8I1HnAWg/de9S/LJBhx5m6UNlsVicSqSsg7XN6LBY7ewASiZd7oNuHXxeLzwOReLxrGiRdoTBFrW0/2e627QC9pePxrumIUjIXpEYRWm3bevqRR6CMlcxq4BgohUg9GRb8HaOOqv3NfAHSe2jr0XZGeQAAAABJRU5ErkJggg"},{ name : "themes/optex/user-group-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFg0JEhS4ef4AAAGFSURBVDjLxZPBS1RRGMV/3701CtFC2ogoKf0DTgS5CWbjoo22FUEcSAaS9xDpD3gKbhzFYIZW4aB/gftol+gmcKFbhVxYkbPIrJzBe9qM9Jh5aNCiu7rfuecc7ne/c+F/L0sXlcrmkBSWgDxwBFqM4+IuQLm8eef8/PBnkiQh06Ba3bgXgvaB3tR5E+wx6AXwHDgDFuJ4evWK4K42kqbaxAC3Jc2DvrTqu8BKtVob7TAA+jJ7NOuT3GkaC8FlGWg7+5n03ozhNvBjh0EUFbfMtNFG3A2h+Ro0/udG7HV1/VrPaoEoKk6DK5gxL9mzev3+k7m5mc+SHoFFZpqUvo2USqUfHVNIksT19AzmwfqdCzmwEEI4Mfv+IY7ji2tzUKnUCpK9AR5kcE5BL8GaZiwCFxLvvNfS7Gzxk62t1Ya9tx2g+7rESZowsyngaQs6bjRyD533tnCTuDXOZeBVChrI5RplBxT+MvYDZq7eho3dknjrHPmb1BJfLy+bZ977wxR28M+/8TfTk4rNEEDZOQAAAABJRU5ErkJggg"},{ name : "styles/main.css", data : ""},{ name : "icons/icons8-virtual-machine-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAABsUlEQVRoge3Zv0sCYRwG8Od9ffWEcDmXoFloyCCag2joD2hoiKYGnYsGm1scCmnVJVobGiMysP6BolIcWlJv0m7pl6fc+7ZIBKW+hueb1/uBm+47PA+8X3iPAzTtfyMAkNjZm+YiOKE6zFe03X7M7m83+s0xAAjQ0DG4O+N9LHkkGEgCyPabYwBAA5QtLS9idi7ueTAZh7mjN7tuS81Sj7N4ThdQTRdQTRdQbewLMJkh+8lGrWJ5neWT8+4wQCwkU5muMxyinktvnUgVqFUsFPKXMKPm0EL2YoSNkBE2VkGw8tP7ZtNhrabzAECuAACYURPrG2tDCykh1Hm+ub2+Q+HiigI+2AFdQDVdQDVdQDVdQDUGAK7rRqxq97uOVbXABR9ZqEEwABAC0VKxjFKx3HVwVPegQY39EfJHASGE6hy/1tkBcUAhprqPkRgBmYfkB9AoMQDIpTdTvYaSqUwCRMTxBwv4YwfGmS6gmtRScsJjr88vofPTvNd5pNgNG9zlUUCyABVksum02O3NvbfJBkAIjQA+OEK6gDKd+4/cErfErgjSM28TDYi6cn8BNc3nPgCRrnVjPussRwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/folder-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADX3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7ZdRlusmDIbfWUWXgCRAYjkYzDndQZffH7DdydzkNHOdt9aMERZYCH0CZ9z+15/d/YGLvXgXolrKKXlcIYfMBQ3z6yqzJh9mfTz4s/Ggd1cHQyWQsh4tHeNPPfkHS1TQil8MWT06tseOHA779s3QMZEMjxiNdhjKhyHh1UGHgbKW5VM2/bqEbV+ynSuxdbtR9TMmusT356CIXouYR5h3IfGoWcJyQMbNTgoahJok82gZ2gG6gu58eIKAPIuT/+KV+07latEL/TcokpbeQfEYzHTJp3qKz4PvZoi/zCz1mvlBX7Zriocgzxj3Zq73fa2uhISQpmNR51JmCwM3hFzmawlFcUe0dZaMYg7ZW4G8+eo3lEqZGFg6BWpUqNM+ZaUKFwPvrJDMlWXqTJQzV2wRcAqjUGeVLA3UWCrwCrR8+UJz3jynq2SYuBFGMsEYLfz8mfLSUO8j5Ym8XbGCXzw2BdwY5EaNUQBC/cyjOAN8lu/X4CogGGeYDQssflsmtkhHbo08kglaMDBCrr1G2g4DCBHmjnCGBAR8IomUyCuzEiGOBj4FhgybhjcgoBi5wUsOIglwjMfceEdpjuXIS40zCyCiJFGgyVLAKuBgQ/5oMORQiRJDjDFFjRZzLElSSDGlpGkcfkVFg0ZNqmqatZhYsGjJ1MxZtpI5Cw7HmFPWbDnnUjBpgeWCtwsGlLLxJlvY4pY23WzLW6lInxpqrKlqNVdzLY2bNJwTLTVt1nIrO+1IpT3scU+77rbnvXSkWpceeuypa7eee7mokVtYfynvU6OTGk9SY6Be1PCq6mmCxnESBzMQ40AgroMAEpoHM28UAruBbjDzmbErIsPLOOA0GsRAMOzEsdPF7h9yD9xcCLe48UnODXSfIOcGuhfkfuX2hFobX5vqxU1CYxuOoHrB9sOA3QpbGR+1t6X76Qv/G3pT9pLTbLZQD6V7NTp5jhTw52vPaWGsodkr2+4DzryxtDAEZ3vDKfcBZ35vaW/HCIsoaxHW6lu+/Au1n0p335cl3YcSexm658uS7jPMenb3fflQHp1hcfd9uZ1Hj4jcfV9u5NGzdHH3ffmtPHqduu6+Lz/Mo6e+/Jc/kB0/V/BvqPsb0xrN2E54p04AAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDUBSFT1OlIhWRdhBxyFA7WRAVcZQqFsFCaSu06mDy0j9o0pCkuDgKrgUHfxarDi7Oujq4CoLgD4ijk5Oii5R4X1JoEeOFx/s4757De/cBQrPKVLNnAlA1y0gn4mIuvyoGXuFDCEOIQpCYqSczi1l41tc9dVPdxXiWd9+fNaAUTAb4ROI5phsW8QbxzKalc94nDrOypBCfE48bdEHiR67LLr9xLjks8MywkU3PE4eJxVIXy13MyoZKPE0cUVSN8oWcywrnLc5qtc7a9+QvDBa0lQzXaY0igSUkkYIIGXVUUIWFGO0aKSbSdB738I84/hS5ZHJVwMixgBpUSI4f/A9+z9YsTk26ScE40Pti2x9jQGAXaDVs+/vYtlsngP8ZuNI6/loTmP0kvdHRIkfA4DZwcd3R5D3gcgcYftIlQ3IkPy2hWATez+ib8kDoFuhfc+fWPsfpA5ClWS3fAAeHQLRE2ese7+7rntu/Pe35/QBP4XKZ9Ef7VwAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6NmIwMzEyYjItZDE5YS00NTc2LTlkYjAtYjVhNTNmZDRmMjA1IgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmEyMTJiNWZhLWNjNjgtNDBiZS1hZTA5LTA3NmExZjU5NGY4NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjIwMmRiNTQzLTYwMGMtNGUyYi1hNDM4LTcxOTZjMjI4ZWNlZSIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQyNjE0MDI5ODk2ODExIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YmQ3YTVjZTUtNjE4Yy00MTE0LTg5ZWYtNTg5ZmMxM2Q2OTJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAxLTE5VDE4OjQwOjI5Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PhbZGncAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARMRKB1QuojKAAAARUlEQVQ4y2NgGPKAkYGBgWHWig1n0ISfM/z/Py8tMmA9IQOYsAv/l2RgZKietXxjKpkuIA6kRQSYMFEaBqMGDAsDBh4AAD+qEAAUuqhbAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/help-large.png", data : ""},{ name : "haxeui-core/styles/shared/down-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCgAGYMIUYGBhYkk10sKide+YKmtDcM1eYIBSyEMJcCAcuzYjVDQAFcxCadfC9sQAAAABJRU5ErkJggg"},{ name : "icons/icons8-smartphone-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAADQUlEQVRoge2YTW/jRBjHfzN2nBS1bKRtURESF14KaNEe+B6c4ID4DBw4ILix3DhxQeLCaT8BEhIcuK0E0iJAArEUtiB2t21CVps08Sa247cZDpM22aRtYsdpL/7dbM8z83/mefHYUFJSUlJSUnJ5iMmLjtZPWy7WRSzsS6zIZyOrXWgT7WyKxvG10FrLbsAHCN4DnitU5TnsdxPiVOeytaVI1yriu50t603R8fX7QvBZwfrm8uAoIVH5HDhmvSq/Ep1A7wl4qSBdC/PwccogUkvNUZEisgW8UJCmTDgVQeJDx5VoLZBS41SgvrG4U7HSjg3I1ck8G0eCF0ha7XHPEEB9J1tULkU8gJSCKxuKF59PkKNemKci7BsffXIy4Suvvcrb776FEGKO2fJIAXEC+y0LpSFJwc7RwE8ioJRm984u/zVbReo8E6Xh3qFNFAm6HgyG8FQtewzs6RtxFBUi8DyUgp/3BEEIrg9eaO5vb6WZ51p5Dbge3D0EfyRSa/jpb3jUM7veHy43/0wEisQbwvd/QBjD7j48U4eKBY02BCH0/PHYZNDk/p9NXn/jeqY1VhaBKIEfRuJ7ozRpdeGwbe4deU+OD5u3+e3Wt5nXKSwCSkEyqkGt4Me/TIp0vXGOrzlwdR28aLZlajQ6x9GiEAcGAdz63ezsJP3hWDyYzlM0SzsQTqTKYGiKtOaYXO8HRUg8n6UcUApu75pdnkwVIY0DF8FSRfzLP9Dpm52eTJWLJLcDd+7DwSPTDt2pVNHHxTxtpDnjQX5mUsipOnON7rVgr2FaZcebfT4Ymmd6SmiUmPYZxLM2eTlxwLIk165fY/vZ7XMNHnbh138hVdDunz4mVRCcciLRjN/IRWHf+PTjuYMOHhzQf9zHG5o3aqrMy0kt90H1BCp0c9nN7UJpmnLzy5skSfaDVlYqTjWzjTgKdMqcYm40mrhHPeLEnNvXFlwnVpqer0gXjFR9c5MrVzcXGzxCdAN9V8PLmawWwA0UHT+dKeQiqUgRSQRfFDlpqqHhJrS91YoHqFXE17Je5XM0HwKHRUyaKE2YrFa5JUW6XpXf7GxZ76zk12IvpkZKbdl5TmP612JJSUlJSUnJZfI/9Y5uG9UEU04AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/rules.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBSVUxFCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5ydWxlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgouaG9yaXpvbnRhbC1ydWxlIHsKICAgIGhlaWdodDogMXB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsKfQoKLnZlcnRpY2FsLXJ1bGUgewogICAgaGVpZ2h0OiAxMDAlOwogICAgd2lkdGg6IDFweDsKICAgIHZlcnRpY2FsLWFsaWduOiAiY2VudGVyIjsKfQ"},{ name : "haxeui-core/locale/fr/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2F1dmVnYXJkZXIKZGlhbG9nLnllcz1PdWkKZGlhbG9nLm5vPU5vbgpkaWFsb2cuY2xvc2U9RmVybWVyCmRpYWxvZy5vaz1PSwpkaWFsb2cuY2FuY2VsPUFubnVsZXIKZGlhbG9nLmFwcGx5PUFwcGxpcXVlcgpkcm9wZG93bi5zZWFyY2g9Q2hlcmNoZQo"},{ name : "haxeui-core/styles/shared/up-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMAADK0A4MJuH53gAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/left-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMAg9Pg2E5zFwMDABGcxMDAw/v//nwEGmN7JqiI4DAwMcD7UAAgfAMkKDTd2MVgoAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/propertygrids.css", data : "LnByb3BlcnR5LWdyaWQgewp9CgoucHJvcGVydHktZ3JpZCAuc2Nyb2xsdmlldy1jb250ZW50cyB7CiAgICBwYWRkaW5nOiAwOwogICAgd2lkdGg6IDEwMCU7CiAgICBzcGFjaW5nOiAwOwp9CgoucHJvcGVydHktZ3JvdXAgewogICAgd2lkdGg6IDEwMCU7CiAgICBzcGFjaW5nOiAwOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlci1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxcHg7CiAgICBib3JkZXItYm90dG9tLXNpemU6IDFweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlci5zY3JvbGxpbmcgewogICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAwcHg7CiAgICBib3JkZXItcmlnaHQtc2l6ZTogMHB4Owp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpleHBhbmRlZCAucHJvcGVydHktZ3JvdXAtaGVhZGVyLWljb24gewogICAgcmVzb3VyY2U6ICRhcnJvdy1kb3duLXNxdWFyZTsKfQoKLnByb3BlcnR5LWdyb3VwLWhlYWRlcjpjb2xsYXBzZWQgLnByb3BlcnR5LWdyb3VwLWhlYWRlci1pY29uIHsKICAgIHJlc291cmNlOiAkYXJyb3ctcmlnaHQtc3F1YXJlOwp9CgoucHJvcGVydHktZ3JvdXAtaGVhZGVyLWxhYmVsIHsKfQoKLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzIHsKICAgIHdpZHRoOiAxMDAlOwogICAgc3BhY2luZzogMTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZy1ib3R0b206IDFweDsKfQoKLnByb3BlcnR5LWdyb3VwLmxhc3QgLnByb3BlcnR5LWdyb3VwLWNvbnRlbnRzLnNjcm9sbGluZyB7CiAgICBwYWRkaW5nLWJvdHRvbTogMHB4Owp9CgoucHJvcGVydHktZ3JvdXAtY29udGVudHMuc2Nyb2xsaW5nIHsKICAgIHBhZGRpbmctcmlnaHQ6IDBweDsKfQoKLnByb3BlcnR5LWdyb3VwLWl0ZW0tbGFiZWwtY29udGFpbmVyIHsKICAgIHdpZHRoOiA1MCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICBwYWRkaW5nLWxlZnQ6IDVweDsKfQoKLnByb3BlcnR5LWdyb3VwLWl0ZW0tZWRpdG9yLWNvbnRhaW5lciB7CiAgICB3aWR0aDogNTAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwp9ICAgICAgICAKCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5wcm9wZXJ0eS1ncm91cC1pdGVtLWVkaXRvciB7CiAgICB3aWR0aDogMTAwJTsKfQoKLnByb3BlcnR5LWdyb3VwIC50ZXh0ZmllbGQgewogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMDsKfQoKLnByb3BlcnR5LWdyb3VwIC5jaGVja2JveCB7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBwYWRkaW5nLWxlZnQ6IDRweDsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciB7CiAgICBwYWRkaW5nOiAwOwogICAgYm9yZGVyOiBub25lOwp9CgoucHJvcGVydHktZ3JvdXAgLm51bWJlci1zdGVwcGVyIC5zdGVwcGVyLXZhbHVlIHsKICAgIGZpbHRlcjogbm9uZTsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci1kZWluYyB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnByb3BlcnR5LWdyb3VwIC5udW1iZXItc3RlcHBlciAuc3RlcHBlci1pbmMgewogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnByb3BlcnR5LWdyb3VwIC5kcm9wZG93biB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBib3JkZXItcmFkaXVzOiBub25lOwp9Cg"},{ name : "haxeui-core/styles/shared/left-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEOHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkuwmDP1nFVkCkhCC5YCBquwgy88Rdnd6+nFnbiUfMW2kxlivIwmH+defK/yBi4xSSGol15wjrlRT5QamxPNqe6aY9nxe6aL0dT1Eux4wlgRUzr8lX/tv63QXcJIGTh8EleN60L8+qJdmLk+CLkXiFjGYcQmqlyDh8wFdAtrpVsy12KMLfZ70ev8MQ3HXMPXbql6bn/4nQ/SGQo8wTyGJmFnSaYD4zUHaZnwu2EhSwcueWW4xQUDexSk+WBWeUan8HpU79wSK5HM9YOFrMPOdvl0nfR/8sEP8oFmOu+Yv63ndIvY1yH6vNUpYa57etZQR0nw5dY+OM9jYEXLZr2UMw63gbY+KUQKy9wDkIx6xYxxUiQHLokSDGi2amx50wMTEkw2U+WDZa0WMKx8SA3BKPmixAashBWgdgFewyndbaOutW91BBYoHYScThNEJP/8346OgtTzliWI544S0gF3syQEzHDmfsQuA0Lrlke4A38bz5bgKENQd5gIHW+yniK505ZbnkWygBRsV9Kw1snEJQIigW2EMCRCImUQpUzRmI0IcC/BpEFRQNNwBAanygJWcRDLAQcVAN94x2ntZ+VxGzwIQKlkM0KCYgJU3NuSPpYIcaiqaVDWradGqLUtOWXPOlr35NRNLppbNrFi1VqSkoiUXKyWUWlrlKmiOWnO1WmqtrUFpg+SGtxs2tNa5S09de+7WS6+9HUifIx165MOOEo56tMFDBvrEyMNGGXW0SROpNNPUmafNMutsC6m2ZKWlKy9bZdXV7qhR2GVHL+PnqNENNd5I+Ua7o4ZXzW4iyNuJOmZAjBMBcXMEkNDsmMVCKXFw6BwzZByqQhlWqoMzyBEDgmkS66I7dv8g9wW3kNK/wo1vyAWH7r9ALjh0H5B7xe0NasNPmyNK2Ah5GXpQo6D8slJS0pUyzmBnk/op9Q0NqfWR4ZcajEJGfNiIIDqD0mtc8Huh4fWB6uweeFeANvvhRZxgztQStwMJCXkyD1R6XgQpXTlOII1jdfQJV8eyZnvPudAIzbvmgjBxcPHOPNEyN5M/B+XUAmBrtASLyosM/g3ZUq0P6VFGgOWEcwK9JlpTZO/EdwhWUpEW/SAfP9Jyd+1F3akLadjHrBD7najwS090tFxwA5ualOcQRNy/Qm7iG7pv31rCz+LzPf2/Cco5oDB7ynuuXgJkRkub7Dl5DtPRUkUiip7hf5PCoOF54Q319HDmuBtgvHP8UXT4pYifi9aATEdxWYQj3j/wzTNxhLi3Ph/bt9WL94aB5rjrorzpAeFntf3GtjP1y2z4kMLZED42mN+UHR6FVyDWcDQhpzOAdDDT7ki19oKaw3mB//OtpvAjN54pt50buwUiquMD/K+YfEurBofj0rB9ertx4bRAtoS/AceHGj2Vzz6UAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjk2N2IxNTgzLWYyOWUtNDY2ZS04Yjc4LWJjZGFjZDFkNWZkNCIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo5MzBjOGE4NS02OTVkLTRmZTYtOGVmZC0xOTFlMzIzNzRmYTAiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3ODQyMjBkOC0wZTAyLTQ5ZDUtYjVmYS0zNzZiZWViYTNlYTEiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDM0NTU2MTU2MTg1NSIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmMDUxYzAzLTBlNmItNDgwYy1iYjMzLTljMzc0OTY1YjM3MCIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxOTozOToyMSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6o2UKgAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gIIEicVGwcIIAAAAChJREFUCNdjYEACoV1H/jMicxgYGBgYkTkMDAwMjMgc7CrQzWBAtwUAMwgSdDGUjZQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/checkboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDSEVDS0JPWAoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2hlY2tib3ggewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDRweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7Cn0KCi5jaGVja2JveDpob3ZlciB7Cn0KCi5jaGVja2JveDpkaXNhYmxlZCB7CiAgICBjdXJzb3I6IGRlZmF1bHQ7CiAgICBjb2xvcjogJGRpc2FibGVkLXRleHQtY29sb3I7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0KCi5jaGVja2JveC12YWx1ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXJ0aWFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgd2lkdGg6IDE4cHg7CiAgICBoZWlnaHQ6IDE4cHg7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgaWNvbjogbm9uZTsKICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jaGVja2JveC12YWx1ZTpob3ZlciB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouY2hlY2tib3gtdmFsdWU6YWN0aXZlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi5jaGVja2JveC12YWx1ZTpzZWxlY3RlZCB7CiAgICBpY29uOiAkY2hlY2stc2VsZWN0ZWQ7Cn0KCi5jaGVja2JveC12YWx1ZTpkaXNhYmxlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvci1kaXNhYmxlZDsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKICAgIGN1cnNvcjogZGVmYXVsdDsKfQoKLmNoZWNrYm94LWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jaGVja2JveC1pY29uIHsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBvcGFjaXR5OiAxOwp9CgouY2hlY2tib3gtaWNvbjpkaXNhYmxlZCB7CiAgICBjdXJzb3I6IGRlZmF1bHQ7CiAgICBvcGFjaXR5OiAwLjU7Cn0K"},{ name : "haxeui-core/styles/default/scrollbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTQ1JPTEwKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLnNjcm9sbCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgcGFkZGluZzogMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOwp9Cgouc2Nyb2xsIC5idXR0b24gewogICAgd2lkdGg6IDdweDsKICAgIGhlaWdodDogN3B4OwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNjcm9sbGJhci1idXR0b24tY29sb3I7CiAgICBib3JkZXItcmFkaXVzOiAwOwogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwogICAgb3BhY2l0eTogMC42Owp9Cgouc2Nyb2xsIC5idXR0b246aG92ZXIgewogICAgb3BhY2l0eTogMTsKfQoKLnNjcm9sbDpkaXNhYmxlZCAuYnV0dG9uIHsKICAgIG9wYWNpdHk6IC4zOwp9CgoudmVydGljYWwtc2Nyb2xsIHsKICAgIHdpZHRoOiA4cHg7CiAgICBwYWRkaW5nLWxlZnQ6IDFweDsKICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbCB7CiAgICBoZWlnaHQ6IDhweDsKICAgIHBhZGRpbmctdG9wOiAxcHg7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQk9SREVSTEVTUyBWQVJJQU5UUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouc2Nyb2xsdmlldy5ib3JkZXJsZXNzIC5zY3JvbGwgLmJ1dHRvbiwgLnRleHRhcmVhLmJvcmRlcmxlc3MgLnNjcm9sbCAuYnV0dG9uIHsKICAgIHdpZHRoOiA4cHg7CiAgICBoZWlnaHQ6IDhweDsKfQoKLnNjcm9sbHZpZXcuYm9yZGVybGVzcyAudmVydGljYWwtc2Nyb2xsLCAudGV4dGFyZWEuYm9yZGVybGVzcyAudmVydGljYWwtc2Nyb2xsIHsKICAgIHBhZGRpbmctbGVmdDogMHB4OwogICAgYm9yZGVyLWxlZnQ6IG5vbmU7Cn0KCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgLmhvcml6b250YWwtc2Nyb2xsLCAudGV4dGFyZWEuYm9yZGVybGVzcyAuaG9yaXpvbnRhbC1zY3JvbGwgewogICAgcGFkZGluZy10b3A6IDBweDsKICAgIGJvcmRlci10b3A6IG5vbmU7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQ0xBU1NJQyBWQVJJQU5UUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFOUU5RTk7CiAgICBib3JkZXI6bm9uZTsKICAgIHBhZGRpbmc6IDA7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAuYnV0dG9uLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuYnV0dG9uewogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICNFOUU5RTk7CiAgICBwYWRkaW5nOiAwOwogICAgZmlsdGVyOiBub25lOwogICAgaGlkZGVuOiBmYWxzZTsKICAgIHdpZHRoOiAxN3B4OwogICAgaGVpZ2h0OiAxN3B4OwogICAgb3BhY2l0eTogMTsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC5idXR0b246aG92ZXIsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5idXR0b246aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0Q3RDdENzsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC5idXR0b246ZG93biwKLnNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmJ1dHRvbjpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM1MjUyNTI7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnNjcm9sbCAudGh1bWIsCi5zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC50aHVtYiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQzZDNkM2Owp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmhvdmVyLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQTsKfQoKLmNsYXNzaWMtc2Nyb2xscyAuc2Nyb2xsIC50aHVtYjpkb3duLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTI1MjUyOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5zY3JvbGwgLnRodW1iOmRpc2FibGVkLAouc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAudGh1bWI6ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogI0RERERERDsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7CiAgICB3aWR0aDogMTdweDsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5kZWluYywKLnZlcnRpY2FsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmRlaW5jIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL3VwLWFycm93LWRhcmsucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5kZWluYzpkb3duLAoudmVydGljYWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmM6ZG93biB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC91cC1hcnJvdy1icmlnaHQucG5nIjsKfQoKLmNsYXNzaWMtc2Nyb2xscyAudmVydGljYWwtc2Nyb2xsIC5pbmMsCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvZG93bi1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLnZlcnRpY2FsLXNjcm9sbCAuaW5jOmRvd24sCi52ZXJ0aWNhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5pbmM6ZG93biB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9kb3duLWFycm93LWJyaWdodC5wbmciOwp9CgouY2xhc3NpYy1zY3JvbGxzIC5ob3Jpem9udGFsLXNjcm9sbCwKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyB7CiAgICBoZWlnaHQ6IDE3cHg7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYywKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuZGVpbmMgewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvbGVmdC1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5kZWluYzpkb3duLAouaG9yaXpvbnRhbC1zY3JvbGwuY2xhc3NpYy1zY3JvbGxzIC5kZWluYzpkb3duIHsKICAgIGljb246ICJoYXhldWktY29yZS9zdHlsZXMvc2hhcmVkL2xlZnQtYXJyb3ctYnJpZ2h0LnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmMsCi5ob3Jpem9udGFsLXNjcm9sbC5jbGFzc2ljLXNjcm9sbHMgLmluYyB7CiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL3NoYXJlZC9yaWdodC1hcnJvdy1kYXJrLnBuZyI7Cn0KCi5jbGFzc2ljLXNjcm9sbHMgLmhvcml6b250YWwtc2Nyb2xsIC5pbmM6ZG93biwKLmhvcml6b250YWwtc2Nyb2xsLmNsYXNzaWMtc2Nyb2xscyAuaW5jOmRvd24gewogICAgaWNvbjogImhheGV1aS1jb3JlL3N0eWxlcy9zaGFyZWQvcmlnaHQtYXJyb3ctYnJpZ2h0LnBuZyI7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogTU9CSUxFIFZBUklBTlRTCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zY3JvbGw6bW9iaWxlIC5pbmMsIC5zY3JvbGw6bW9iaWxlIC5kZWluYyB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgewogICAgb3BhY2l0eTogLjU7CiAgICBoZWlnaHQ6IDhweDsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi5ob3Jpem9udGFsLXNjcm9sbDptb2JpbGUgLnRodW1iIHsKICAgIGhlaWdodDogNHB4OwogICAgYm9yZGVyLXJhZGl1czogNHB4Owp9CgoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSB7CiAgICBvcGFjaXR5OiAuNTsKICAgIHdpZHRoOiA4cHg7CiAgICBwYWRkaW5nOiAycHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgYm9yZGVyOiBub25lOwp9CgoudmVydGljYWwtc2Nyb2xsOm1vYmlsZSAudGh1bWIgewogICAgd2lkdGg6IDRweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKfQo"},{ name : "haxeui-core/styles/shared/expanded-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5AoNCwkgHyJHKAAAAJBJREFUOMtjYBgFAw8YkTlrt2xRYv77/+h/BgYJHOpf///LZBMU5H0LJsCELBvs43OPkeGfOwMDw0csmj8z/GP0RNaMYQADAwODv7//JSYGxkAGBoafSMK/Gf8zhgYG+pxFV8+EzZ3+/j77/zMwJjAwMPxjYGD4/5+BMTUgwGcnyQG0fuOW4vUbtxSPJhUaAwCz8idCJS/GkgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/down-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWP8//8/AwZgeieriib0TlaVCUIhCzEwMDAhc+DSAPKbCiUI9YmvAAAAAElFTkSuQmCC"},{ name : "themes/optex/buttons.css", data : "LmJ1dHRvbiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzI0MjQzQTsNCiAgICBib3JkZXI6IDJweCBzb2xpZCAjMmMyYzQ1Ow0KICAgIGNvbG9yOiAjOTI5MmEwOw0KICAgIHBhZGRpbmc6IDhweCAxMnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCn0NCg0KLmJ1dHRvbjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzJjMmM0NTsNCiAgICBjb2xvcjogI2NhY2FkMTsNCn0NCg0KLmJ1dHRvbjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjQyNDNBOw0KfQ0K"},{ name : "haxeui-core/styles/shared/help-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABsklEQVQ4ja2TS2tTURSFv3POTapoWjAqiFgkotRAin8gcx1IOxQEHTiItFL8B/ojBJuJAx+dWjpxoLOAU7UKiZJBMlBI0YJJqTfXe/d2kJ6Yx0UHukdnr73XOmufB/xjmDRwfr1XDESXMPYCACqfEjWb7dVc/Y8CherunEjmoVGupYgryoZLopXmWr47JVCo7s6pZGoopb+43nZxVPYigUcPdh6Si8cdV845LPCqFfOmI760mASZB8CNoYP59V7RCR98fvKI4dnVw7S7QpQoF/OO61shX/aGIqpOi63KbMMCONHl0XGOHTK8/pxwvxZRfRvjLJzOjZ+dFZYBLIAx9vxotfFNuFfrs7MvVC4FtL4L73dkTEFkwAkARNG0+7xZynDqqOX2i5AwGa8Zg/52gDRT+IQxPNr+SWdfp2rGDDh24MA8B6a6vv5QOnsyCR9MwOZQoL2aq6NsTHZdLjjKZ4JJGNCnrcpsA0begUuilSTIloBFj9192Z+2Be+yM/07PrF+0VzLd10clUGf+HEmyAL6ODsTlj/eOtHzYOpnOlvtLpCwZI1dGAwsdQK2vO3/Gr8AlhyqPdEFcaYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWMMCAhgwABMc89cQROae+YKE4RCFmJgYGBC5sClAQxaDmYcnISCAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/ranges.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBSQU5HRQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoucmFuZ2UgewogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBwYWRkaW5nOiAxcHg7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBmaWx0ZXI6ICRub3JtYWwtaW5uZXItc2hhZG93Owp9CgoucmFuZ2UtdmFsdWUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouaG9yaXpvbnRhbC1yYW5nZSB7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCB2ZXJ0aWNhbDsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsKfSAgICAKCi5ob3Jpem9udGFsLXJhbmdlIC5yYW5nZS12YWx1ZSB7CiAgICBiYWNrZ3JvdW5kOiRhY2NlbnQtZ3JhZGllbnQtc3RhcnQgJGFjY2VudC1ncmFkaWVudC1lbmQgdmVydGljYWw7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KCi5ob3Jpem9udGFsLXJhbmdlOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQoKLmhvcml6b250YWwtcmFuZ2U6ZGlzYWJsZWQgLnJhbmdlLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLnZlcnRpY2FsLXJhbmdlIHsKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1lbmQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0IGhvcml6b250YWw7CiAgICBpbml0aWFsLXdpZHRoOiA4cHg7CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1yYW5nZSAucmFuZ2UtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGFjY2VudC1ncmFkaWVudC1zdGFydCAkYWNjZW50LWdyYWRpZW50LWVuZCBob3Jpem9udGFsOwogICAgd2lkdGg6IDEwMCU7Cn0KCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCAucmFuZ2UtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIGhvcml6b250YWw7Cn0KCi52ZXJ0aWNhbC1yYW5nZTpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0K"},{ name : "haxeui-core/styles/shared/right-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAOElEQVQImWPYsmXLWxkVCGJiYGA4PmMCAwMDAwMDE4SC8Bm3bNnCAANMcJZlRgETnAWVgbAYGBgAg4cO3PCuD3sAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-large.png", data : ""},{ name : "icons/icons8-services-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAFh0lEQVRoge2YW2wUZRTHf2d2wUIbIVCpXS4qRoMkYMQgCalFHkSNUNgNJd6gLUggPmAhQuKLEnzAiBUk8YHG2F00JrSFboBEwXgJCg9FTSiSKIlSLd0t4K0xdCnd7vGh7bIzO7O37sIL/7c5t+9/Zub7zjkf3MathdyKRbUZF32EgCkW1QWpZWY2sYz80coC/UwhmTzADG3GlU2oW5PAAOUOGhe9lGYTqqAJaBMT1c+L+gl3xmWK4OIJR6exLDTF+JRSDfCyNjPOzryge0ADNKKsB3qBD1GOIrwDzE/lBnwMNKKsRlgDjEN4S2p4w2pcsAQ0wCMopyG7fzoFIiizpY7ORGFBfiFVBGUP+SMPQ19hl1VYmD0Q4DmgMo1VK0olBiUYlACLEA6l8VmpARYnCtyj4ZkCvpRaoV5qeN8iPQGc0ABbUBocfWMsBb4eeSzMFxhPHdDkoG21IR+H1PAe0GajUuBdinndZJ8zyQygflYBByw0KqWOb1P67WcRMb5JEF1DqZI6vrDaFryVUD9qEhiUyBqupvRppoQ+/ksQRaSW8Xa2N6MS95meijJ4adeTeMWcTAtdiZ9MWqOPeWkdB5JsXBpguZ1pYepAM2PVzy6EY0CRSSm8mkGIestzEUpQ/bRoE3cnKgrzBfp4G3gNuz2m+DTAFidXbWIrYv+2gZUIJxMFhakDwhGUzY56pUH9VKDsxcVpAAaZD9SnID8C0xGb0yl0qYoyxlCcKOsf4NqMw4TiHP20ACtziZ8Cl+nnQdlA74gg6wRCXh4CfsLm9xNlcXlw6PzWj5iOwc9gf/zliLVSay6Q2e8BYZaTXwzuj5utpQuJtwQRlH1ABbAfLLUheY3fEZahbAO6hqXf00nAapr9Hogxw+m7iUGZSTCOnUT4gzEE5QX+HJae1ABB1LFx89PLRtlEP3BU97GHIpaidMj25HqQdQIqTHP67wTzqCiriJyrZv/ka0yFeAJwnVOMcVziu2HyQzE2MIB9bwQ4JBCu5i6NchbowKCh/CDHO1cwoQh2KKxzCqbKK2EvpYPCVnXxlzHAOomyLeamrLuKuVMP8wsA3VzhXqK26ythx9RsYPsyQ14agfUJorPARGB6hnH/AfohoegoxzxBno4/+ukA5lj8+hHmSg3nM1wnOYGQj3ko7eR3mgJAheVTD3E4nzFNp4lSkFEwDlF2X6i1tBajhCmBsI+XgMcz8GslRqVxlRLjKiUIiyDtOAgwc2xvRr1QxjBvImV2Wg+l3hO0HwdDXrZAinEQYiL8my3JVDDtAQUJe6kHdgJ32Ni3etqoThUw5OUQ4LVRXRRl9UilzhdMv5CAetrYHYMFwG9J1jH2pgso2M677YNuHs43eXBoCaa1cUagPck4wo/pArrc/GCVKXROb+Hv3CimhmMvpJJcK40J6Zs/6b+5V/a2Ceh2DNTcLgNEB9OPg1GDR60yEe65XE1JbhRTIymBiz6mhc/wJdyomnFo+iNQJWkcBGVBNMqpnmXclyNPR5gSCK1giaGcAcfrb9/wUWmLsJet4DhRzYm5aQ+v4LHcqNrDXAeEp4BJaXwaQl4qRNkrfUPjoI5nvgr16kx+BKUqVGBzQOQK04brqmaSK8p5YHK+FrCgiyizPEcsd0WjgOkXGj7qduQreBKUzfkkDzabuNzNBwId+VwEQOErT5CD+Y6bPJi3MMiNkySGcDAGCxWeB65kEPMi8IzCEpRjDM2/UcNgU/5oJ/B1UnT7qHLHOFcW5NcRWc8SimPFHACetfNRwd8XYeMDn90YCXuWMycmlHuCHM8r82FkXTW7fWwX5U1bpbLBE6Rx1KyyQNbXKgZcdtKpcGl0dLJH1gmo0uOkc92CBLK/F4ryubpZK2pp9gwiZSP3nLeROf4HU+aaCzffDWUAAAAASUVORK5CYII"},{ name : "themes/optex/search-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVDxSJomVdAAABnElEQVQ4y5WTMW8TQRCFv7c4RZTKIogiAkwDNTU4En8AVwhXOHQo5HRwFLT+A5x8cS4dSq6lIYb0EQR+AC0UYKJUieSONOiGwnvK3WFAfs3uzu57+2ZnR5SwubnTBp6A2sCyxAlwmOcuDcOHH5kBAfT7B41mczyUeMxfYGbbk0kr7Pfv/irHGwA18k8z7Un5kZm7IlkHWJK03mx+Z+qw5GAw2F11jvd++dksvx+Gj74WB+I4W2k07B1wC0DiThCsfSr2nXO2fn5zlQwQRb1j59QFzqapVB04/2CYaa9OLrCx0fsiMfIOVmsCLE+t2Jh/45t3cKkucAqQ57r2H4HrfjytCEh8mFqzThxnK7OYg8Grm2Z0fEEPKwJ57lI/X1pYsP2trexGnezchdfAog+lf3ykJNlJJRXVOJMYmdkYaIHulcg/JIIgWHtbfgMmk1ZoZts+tmhGF/QC9KAgSxwDV80YJUkWVRwUGA53b/s6t4HLwInPOZW4aKY3519bz8OwF4s5kCRZJNnLUoc8m0tghsjR3AK+7Z+CIrO8+xv6iJ0CRAGV+wAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/close-button-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpVUrCnYQcchQXbQgKuIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIm5uToouU+L+k0CLWg+N+vLv3uHsHCLUSU82OCUDVLCMRjYjpzKroe0UX/OjHGHokZuqx5GIKbcfXPTx8vQvzrPbn/hy9StZkgEcknmO6YRFvEM9sWjrnfeIgK0gK8TnxuEEXJH7kuuzyG+e8wwLPDBqpxDxxkFjMt7DcwqxgqMTTxCFF1ShfSLuscN7irJYqrHFP/sJAVltJcp3mMKJYQgxxiJBRQRElWAjTqpFiIkH7kTb+IccfJ5dMriIYORZQhgrJ8YP/we9uzdzUpJsUiACdL7b9MQL4doF61ba/j227fgJ4n4Errekv14DZT9KrTS10BPRtAxfXTU3eAy53gMEnXTIkR/LSFHI54P2MvikDDNwC3Wtub419nD4AKepq+QY4OARG85S93ubd/tbe/j3T6O8HZkByogoVjmQAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCQgQLBKUV9OZAAAA9klEQVQY012PTU4CQRCFv6qhh7gWdy6N0XtwAhPwEqzMzIJZ9QYIybAh3sEEPAEXgURPQGCv89PlwjQitavUq/e+J36+vA1qU5X6xWfZgbMZT5c3ztmiTdqxmjIB+mbp2pdl75+oY2ugn7TJRMbT1+vUhZVhjxifTW2DtNu0IbgVwoPAh1ANBMCXZS8eMHaAItwLsq1qHc6K0VH+os6cgejk83wPoFHYTb/EzE6PZkhVudOuETwE9/7LJFuMHcJdx8lbLCjnfDHuu75qLwuqWbqITlWdPPk838+K0VGkej45pzLXJmkKYBPbRSafZQfVeghsNGjxAx6fgSyXIE/yAAAAAElFTkSuQmCC"},{ name : "icons/icons8-dashboard-layout-96.png", data : "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABmJLR0QA/wD/AP+gvaeTAAACl0lEQVR4nO3dsWobQRSF4TNaqzFYkJQCVa7D+ini1hDIQziQQmn0DIJElV/CfoIUqt0GVAkcXCRRF0xkcCX5plmCJIi9d2PvmZmcr95hx/4tWUKXESAiIiIiIiIiIv+L0GRRfzgbWBcTmL0GcPDEe9p1C2AaYKPFuJzXWXB4dje4D+sJgFb2F4CpwUbXp71a+9vkDtAfzga2Z18AvPSu/Uc3YRXKxadX3x66qPrlU/bXsaL8+m7/wf3t6njvYl1M0P4PBwAv0LWPj11U/eVT9ncf1o/ub5c7QPW0Q2HAcY3LaPtDvf1t8Qd4/ufUvzP0alzF2x9q7W9LkwDyhBSATAHIFIBMAcgUgEwByBSATAHIFIBMAchyDHBLvPcv74LsAgRgSru54bN3SXYBDDYCcEO49c9iXXzwLsouwPVpb96xogRwAWDZwi2XMJwXq+Lo6v3+d+/ivefYEVv1seBb9j7qyO4RkBoFIFMAMgUgUwAyBSBTALIs3wfEPru6KbtHwJ/ZVbM3aGdI6wDAiSFc9oezgXdxdgFin13dlV2ABGZXt+QXIP7Z1S05BkiKApApAJkCkCkAmQKQKQBZkwC0uZvQYO4mdk0C8OZu4J+7iZ07QCDO3QSYe+4mdu4Ai3E5D6tQhoALhBbmbgKWATjvwI5+jEv33E3sGn0eUB0XkMTcTez0KohMAcgUgEwByBSATAHIFICs0fuAlM5ki537EbBxJltrczcGnADh8vDszj13Ezt3gNTOZItdk/8BSZ3JFru0zoxrcCZb7PQqiEwByBSATAHIFIBMAcgUgEwByBSATAHIFIAsqdlQ1JsNTWp2tcFoYvRnsiU1u+r/DpnIz2RLbXbVHSD2M9k0uyoiIiIiIiIiIrH6DbVjwoBDnSnnAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/dropdowns.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBEUk9QRE9XTlMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duIHsKICAgIGljb246ICRhcnJvdy11cC1kb3duOwogICAgaWNvbi1wb3NpdGlvbjogZmFyLXJpZ2h0OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIHBhZGRpbmc6IDZweCA4cHg7Cn0KCi5kcm9wZG93bi1wb3B1cCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJGFjY2VudC1jb2xvcjsKfQoKLmRyb3Bkb3duLXBvcHVwIC5saXN0dmlldyAuaXRlbXJlbmRlcmVyIHsKICAgIHBhZGRpbmc6IDZweCA4cHg7Cn0KCi5kcm9wZG93bi1wb3B1cCA+IC5zY3JvbGx2aWV3LCAuZHJvcGRvd24tcG9wdXAgPiBkcm9wZG93bi1zZWFyY2gtY29udGFpbmVyID4gLnNjcm9sbHZpZXcgIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCi5kcm9wZG93bi1zZWFyY2gtY29udGFpbmVyIHsKICAgIHNwYWNpbmc6IDA7Cn0KCi5kcm9wZG93bi1zZWFyY2gtZmllbGQtY29udGFpbmVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogMXB4Owp9CgouZHJvcGRvd24tc2VhcmNoLWZpZWxkIHsKICAgIHdpZHRoOiAxMDAlOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMHB4OwogICAgaWNvbjogJHNlYXJjaDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNT0JJTEUgVkFSSUFOVFMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLmRyb3Bkb3duOm1vYmlsZSB7CiAgICBtb2RlOiBtb2JpbGU7Cn0KCi5kcm9wZG93bi1wb3B1cDptb2JpbGUgewogICAgd2lkdGg6IDc1JTsKfQo"},{ name : "haxeui-core/locale/en/dialog.properties", data : "ZGlhbG9nLnNhdmU9U2F2ZQpkaWFsb2cueWVzPVllcwpkaWFsb2cubm89Tm8KZGlhbG9nLmNsb3NlPUNsb3NlCmRpYWxvZy5vaz1PSwpkaWFsb2cuY2FuY2VsPUNhbmNlbApkaWFsb2cuYXBwbHk9QXBwbHkKZHJvcGRvd24uc2VhcmNoPVNlYXJjaAo"},{ name : "themes/optex/treeviews.css", data : "LnRyZWV2aWV3IC5pdGVtcmVuZGVyZXI6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyYzJjNDU7DQp9DQoNCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzNTI7DQp9DQoNCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgLmxhYmVsIHsNCiAgICBjb2xvcjogI2NhY2FkMTsNCn0NCg"},{ name : "haxeui-core/styles/shared/check-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QITChsNaCG5cQAAAS5JREFUKM+NkDFLw1AUhb/3DG0Q6pBOdSgI4tBRsaCTP0EcHeSBEpAQkt2lggiKUGg6WMRVhGziILg4CRUnh+KibiVLl06lmPdcglRsrXe5nMP9uJwj+Md4nrckpVwvFotX1rRj3/fnhBD3QLnX6yGnAVLKU6AMDIGnP4EwDDeMMW4mj6Io6kwEXNedTdP0AhDAi+M4JwATM9i2fQwsAp9a691arTYEsIIgWDXG3Akhbrrd7l4cx2kYhmtaaz9jz5rN5vN3JmPMAuAYY1SpVDpXStla60tAAq/9fv9w9PNMu93uVKvVeSHECrCcz+e3gAqggc1Wq/XxozXAJEmyD1xnXiXbUaPRePxVM0Acx+lgMNgBbjP/LZfLHYwrQ4wKpZRdKBS2Lct6qNfr7+OAL7OwYq6nyWzXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/check-blue.png", data : ""},{ name : "haxeui-core/styles/shared/right-arrow-square-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMCQbKIz98wVBhhggrOSTXSwiCJLoIjCJdBFIaYzYQqhiCK7AQAMqA07hk2gSAAAAABJRU5ErkJggg"},{ name : "icons/icons8-database-48(1).png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAAqklEQVRoge3WsRHCQAxE0ZWLcGRaoAIqcCHXkyuhASqgBTuiCEQGEQgG7sTN/BdrJG22EgDgCxYNnE+X2d0XmaYWD925NjMr+8N4fDU2hHsynpck0+S6LtFYGCDl+cfxXTQRB/hzBMhGgGxxANfW4I9nx9doIgxgZuWdRb/nq3wo7e/iM3ShauhCnSBANgJkowvVQxfqA12oGrpQJwiQjQDZ6EL10IUAoIEbo81OKNn/snUAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/tooltips.css", data : "LnRvb2x0aXAgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRvb2x0aXAtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4wNSwgNiwgMSwgMzAsIDM1LCBmYWxzZSk7CiAgICBib3JkZXItcmFkaXVzOiAycHg7CiAgICBwYWRkaW5nOiA0cHggNXB4OwogICAgbWFyZ2luLWxlZnQ6IDBweDsKICAgIG1hcmdpbi10b3A6IDMwcHg7Cn0K"},{ name : "haxeui-core/styles/shared/collapsed-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADq3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbcuwoDP1nFbMES0JILAfzqJodzPLngN1OutOZSm567tc1ZSQDlsQ54hH6P3+P8Bce3nQLUc1TTmnDE3PMXKD4djxl1bTFVZ8f2025aw9XB6NJIOX49HSOv7XTdmeJCjR9Z8jr2bHfd+R42vcHQ6cjmRExlHYayqch4aODTgPlmNaWstv7Kez9kO02Ez/eMKtxw8QO8fgdDeg1hR9h7kKyoWaJRwAyXw5SllLQDThQC3QWXbWdkQCQZzht76IKj6xcGn3S/kCKpKM9oOEezHTJp+2kz8EPC+J3nqVenu/a65uLO5AXxqN5GKMfsysxAdJ0Tuo2laVh4A7IZf2WUAyvQrdVMooHZG8F5Q0ud5RKmRi0DIrUqNCgvmSlihAjdzZI5sqy2lyMM1fZAniKs9BgkyxNHGxV0Cto5SsWWn7zclfJ4bgRRjLBGB3082vKp4bGmClPtPmFFeLiuSgQxmRu1hgFQmjc8kgXwLfy+ExeBQzqgtkxwbLth4ld6cytmUeyiBYMVMhjrZG10wAggm9FMMj9SFsiUUq0GbMRAUcHPwWGHIuGd1BAqtwQJUeRBHKcp2/8Y7TGsvLRjD0LRKgkMVCTpYCriI0N+WPRkUNFRaOqJjV1zVqSpJg0pWRpbn7FxKKpJTNzy1ZcPLp6cnMPnr1kzoLNUXPKlj3nXAqcFlgu+LtgQCk777LHXfe02+573ktF+tRYtaZq1UPNtTRu0rBPtNSsecutdOpIpR679tSte8+9DKTakBGHjjRs+MijXKxROGj9UL7OGt1Y48XUHGgXa/jV7GaC5naikzMwxpHAuE0GkNA8OducYuQwqZucbZmxKpQRpU5yGk3GwGDsxDro4u6NuTveQow/4o1vzIVJ3SuYC5O6T5j7yNsT1lpZu56ExdBchhPUTbD8MKB7YS/zUPuyDN/94Y+hVxsaSOqlQpEq0q3ML967+bCn9sKLAnpuCHGUMyCcvJGO9sT/FdlvjWhbUeCMXzI7DamNopJCsT1NNQadlzQoP5XPDOEkakudR1LH3Xd1bJfMqxPH2HvIwkj1FRB5+C5Eb/JMtbld9Glo/pCH4NbxyQ9fk+Fjh3RP59Qd96RPZ6TXeDvon1jVH0MVvg3RLc83eNeD3Ip7XWj+yO6vyfChgwZuGkfe4sx0v8+ylT35bcFdiISXLLSnhn5l6f/vEX13d5wyvCigP4Z+hyFcbHL4F54nyj1078dQAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDoxMGUxMWRlMi0wNTI1LTQwM2ItOTZhYi1jODYxZDZmMTlhMGEiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NjIzZTNmZWMtYzg5Yi00MGVhLTljNjktMzFjYTgwODgwMGMyIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6MmM0NTNkMzQtNmI5Mi00NDJjLTlhY2ItMTgyNWYyNzQ0NjFhIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODIzMjkxMjA3NDQiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDpiM2YwMzU2NS0xNWQzLTQ4MGEtOGUxYi1kMmZlZTM3NDZmMmMiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjU6MjkiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+OWQ6JAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwZHVAUuvsAAAB7SURBVDjLY2AYviCq75gyMeqYcEkwMjIcjeo7Zky2AQwMDOKMjAwHY/qPe5JrAAMDAwP3f4b/G6L7jkWRawADAwMDGwMjw5LYCcfLyTUAL2AhQs0vhv8MiYsLLZeRY8BXRgbG0CVFltvJccHL//8ZvJcWWZ6laUIaBgAAEBYdvIFAlrEAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/info-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACr0lEQVRYhe2XPUxTURiGn+/ctkKkQAxJERu1QkxcUJnAXVYSjG51UpEGTZx0kcQQBzcNFCW44axhddDERRYRFwfDryk/AhILJMLtvfc4SKG/cCkti77TyXd+njffPefc78C/Lilk0tmB1ZqErepESdB20IatY5vizM12Vf4smYH6aLxBiwpraAPO5xk2Jpph5bGHxjuqJ4piIDS4HsDS3WhuAl6XfhNoBpSiZ6LTv1iwgVMvVluUI6+BWpfgTC3jcGWqy/8h3wCVryP0fO2acuT9AeAANSjehvrXruYbkDMD9dHVS47IO+DIAeCpMnG4nCsTWQZCg+sBTP0FIVAkeFILhkXj+F3/Umow+xNYutsNvMInPGjxcb/Zx1Gvq8NUa3t4mBlMm1kfjTc4or7iYrc/aPFx64IPgIHPJk9GTDcmTBv73PdI9WQykJYBB3XdDRxAazejsuRTYoRTA560bqHN7Up9nxI523tJNG3Aox3klv5er7KUc1ZxpRM+pyZ2o2oFUjJgWioo4j6vtRVCU8AAYPSHzcK667niNY0gsAIpe0CLHHdNB5oCBn2tZfS1lm0bcSutqUu2tw2ILnBbFSKF3mkmDRjMHxrfYi7LgGk5sUPia7Pcns0ysFVMjB2CgdHkCUgzACCa4ZLjJZ2RZkB57CHA1Z1aoEzHsl+l+8lQKLrWi9BVCrrA08mI/15qLOtvqBQ9wEIJ+PMeQz/O4mUGJjr9i47S7cBmEeEbGqf9W0fl8p4GAGZuV34EwkUysYEmPB2pGsnVuWslcbo/3iyoNxReF85rnPZ8cNilKAWYjlSNGBaNQC/7Ox2mCM+8hm7cDQ77eJic7P91RokR3vqfX8y5mDDqaIa1bQ/N3KmecrNuQU+z4Mv4Md9v44RtSBDAsHXMLLdnU2+4/3KrPzu548SSV/k0AAAAAElFTkSuQmCC"},{ name : "data/test-dashboads-bars.xml", data : "PGRhc2hib2FyZD4KICAgIDxsYXlvdXQ+CiAgICAgICAgPGhib3ggd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgc3R5bGU9InNwYWNpbmc6IDIwcHg7Ij4KICAgICAgICAgICAgPHZzcGxpdHRlciB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIj4KICAgICAgICAgICAgICAgIDxoc3BsaXR0ZXIgd2lkdGg9IjEwMCUiIGhlaWdodD0iNzAlIj4KICAgICAgICAgICAgICAgICAgICA8cG9ydGxldCB3aWR0aD0iNTAlIiBoZWlnaHQ9IjEwMCUiIHR5cGU9ImNoYXJ0LWJhciIgdGl0bGU9IkRSIDIuMSAtIENvbXBsZXRlZCBWaXNpdHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGF0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzb3VyY2UgZGF0YWJhc2U9IkNsaW50ZXhQcmltYXJ5RGF0YSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGU9IklDUCAxIERhdGEgLSBQYXRpZW50IFZpc2l0cyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtPSJncm91cC1ieSgnSW52ZXN0aWdhdG9yIFNpdGUnKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXhpc1g9IkludmVzdGlnYXRvciBTaXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBheGlzWT0iTnVtYmVyIENvbXBsZXRlZCBWaXNpdHMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlckZ1bmN0aW9uPSJzdGF0aWMteSg2MCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlckJlaGluZD0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3JDYWxjdWxhdG9yPSJ0aHJlc2hvbGQ6NjAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGF0YT4KICAgICAgICAgICAgICAgICAgICA8L3BvcnRsZXQ+CiAgICAgICAgICAgICAgICAgICAgPHBvcnRsZXQgd2lkdGg9IjUwJSIgaGVpZ2h0PSIxMDAlIiB0eXBlPSJjaGFydC1iYXIiIHRpdGxlPSJEUiAyLjIgLSBBY3R1YWwgdnMgQ29tcGxldGVkIFZpc2l0cyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkYXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNvdXJjZSBkYXRhYmFzZT0iQ2xpbnRleFByaW1hcnlEYXRhIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZT0iSUNQIDEgRGF0YSAtIFBhdGllbnQgVmlzaXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09Imdyb3VwLWJ5KCdJbnZlc3RpZ2F0b3IgU2l0ZScpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBheGlzWD0iSW52ZXN0aWdhdG9yIFNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNZPSJFeHBlY3RlZCBOdW1iZXIgb2YgVmlzaXRzLEFjdHVhbCBOdW1iZXIgb2YgVmlzaXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJGdW5jdGlvbj0iZGVsdGEteSgwLCAxKSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kYXRhPgogICAgICAgICAgICAgICAgICAgIDwvcG9ydGxldD4KICAgICAgICAgICAgICAgIDwvaHNwbGl0dGVyPgoKICAgICAgICAgICAgICAgIDxwb3J0bGV0IHdpZHRoPSIxMDAlIiBoZWlnaHQ9IjMwJSIgdHlwZT0idGFibGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGF0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzb3VyY2UgZGF0YWJhc2U9IkNsaW50ZXhQcmltYXJ5RGF0YSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFibGU9IklDUCAxIERhdGEgLSBQYXRpZW50IFZpc2l0cyIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kYXRhPgogICAgICAgICAgICAgICAgPC9wb3J0bGV0PgogICAgICAgICAgICA8L3ZzcGxpdHRlcj4gICAgCiAgICAgICAgPC9oYm94PgogICAgPC9sYXlvdXQ+CjwvZGFzaGJvYXJkPgo"},{ name : "haxeui-core/styles/default/haxeui.png", data : "iVBORw0KGgoAAAANSUhEUgAAAIgAAACICAMAAAALZFNgAAAC7lBMVEUAAACxubtjcotcaIKYmKs9RWc9Sl9jcYuutME+SGKstMPHyNhhcIrBxdNCT2esssBgbIiGiaLAwM56hZ5jb4zGydqyt8V7hJs6SF9hbYlfaYTGxtatssGmrb09SWB/iJ5/h56/wdFha4g+TWRhbIe0uMdhbYhue5dibonDxNXGx9lfbIU+TGOwtcM/TWXM1+h8hZy5vMumq7vBw9RvfJezuMfGyNaAiJ+Bi6NhbYhvfJfGx9g8S2Cpr71DUGh9h501Xotli7iiqbp8hZ2ytsV2gZg+TGNJdq55g5p/h569v89vfJZsdpLK1OWxtsRtepU8S2M7SmE9TGQ8SmHKyt26vs1+iJ5jb4tRXXU4V3s9VnZhbIfExddhbIdIVW3DxNWjqbtwfJWkqrtwe5ZgbIWkqbmmq7yCi6Ccss3N2OmrscBOW3M9TGO4u8uytsWus8JbZ4FKV298hZtWY3uqxOB7hZujqLlQXXW3vMtSXnU8Wn49S2KsscBseJTHyNnIyNifpbZve5VkibREUmp/iqGtssHHyNlGU2pkd5d/iqCkqrpRX3dib4mswdrEx9ebo7PFxtc+XYNufZmQmK2uv9S4vc+1uclUYXk6SWGxtsSutcNteZRebIW4u8tDd7JYe6k3VXmAjqWKk6iAiaBWY3uOl6pAdrSswdqtwdubsMuIlKtjboeQmKydtM+ZrclRd6dJYYGnr8B8h51UYnlJV3CmuNCPl6u+zeHM1uZjb4dga4Q+aZjG1OeWsM9mjbtTf7ONqMlNerBvkbtNaY9Yc5mUna+nv9qlu9Y4UHCLpMKKpMNomc08drVRiMR+p9OUttszZp2pxOLP3u9nmMxtnM5BerlckMlyoNBSh8Gbut3G2OyRtNqGrNbO3e5wns99ptJQhsCYuNxUicJ9ptOStdujwOBYjcdKgbxnl8tgksg6c7A1aJ+4z+edvN5kk8c2a6NEebM8cKiwyeRLgb03b6qbu944bqhMgryyyuWdu96j3pigAAAAy3RSTlMAAwQHBQUNCQcJDw8NBRULEAoJEBgLGRgfFCMYJBcRMCNrMSxYMSkkQTEjHFBEPfFEIyBWMisUFA5rQz8ZFGU+8vEsHWtYJPFsTkQsIOJWVUg4MSoeHVY3KsGjY19RUE46bFVNR0MyKvHwa2VZV049PDs3Nf5jTUs/HcBhVj02KGFg625rYC0fl3hpQy7vhHdGuHof1IliXkE1emZMN/7TvJdlXlU6/vLw7JVvSPDp1ayVi3Fb0VTx24V29/T09PTy7unBjYn06pPnxN39F5cAAAyOSURBVHjarNl5bIthHAdw64oqdZQ56xpzz2zUXWSOOOY29zGjc2/DzFBMGHHf9xFn3OK+ibhFHBUhrSORGH+0oo2I+M/v97zv26ft8x71vv3+tWTp+sn393vfvutTgiZGPiVUJQaj0+ligqPDiP1NqtCbTCZ9aEwQvSoLvCO+qV40aMHfizhMBoPBbDZXCI8ZAr8CzX9Z4F2IIbaSWEqXjoWQYsIYegMSjMEpC+F+ijMix0ApymUQBb5le0xlJuXKlUMMUoIr1BsMqLDZamOqhqW2zWYzGgEDvVCKAiMWqgBBO0g1kdRohxikUAk6KlUw2kCQArGEJBmSnp4OmrZljXEVzCZCUW6DKIDQvXv3eiFpjElLS2vevEqNithKSUGCY4E2UGFJTU3NwiSExGq1WiyAqW0jtSBFnmEABijQMGXKlLrBaUPSr1+/Ro3TOAp2wr/SUAnqQEVWRkaOHZNIUwDJ2b8bNMnQi60sS2HbIAxQgGHOnK6QVjQdMYsXLx4Rv65RzeYggenE0ELAAQy7PT8/MzPTkenADBCSnZ0Nnv0JVpgSQ5FkoAIEffr0GU7SU8hAyKRJk5uMiOckMBwdeTXvyLADorBwDWQ6SQ8hO3YUzRqQ3bdg/26GIs1ABRiOHJk3r/eKFb0DmQjZu3fZsoHjgIISHE4MvtxkNtqqguPKk8ePj68XcpzkBMn6E+u37dkBlsSc3WRCdFfkGKCYd+rc1KlnSaaG5c6de/cfxjdKqwKVEIiOFJKaZV//6tWXv8XFTvHkbdvTo4inWAiFXEEYVIgx5q04dTLPKZ4vL99+e/HiQW48VIKz4SdT1WLNyL/2iuTLj2IlCl5D9AoiChFGb2BIIzDfN0+e22hB+YowG4DAqsJksuyZt38Dg8EoUAwGPSY2NpTRU4rx5SMghBzYvC93ZM3yFctwEFiRFGtGoiPJiQaK+V0sSpkeoHD3lUpcKiOjcT/KUEBgfm4+unZuzeYAgSWBXYUVsebkFyV5qYI2I0pxcJSUFLj5G9tD8B6axjDkEBgPQkYuqFEqGJJdlOSmAhkMpWSlpqakbK1ta4d3cmC0mdO14yRgHApjuAiCzffXm3fOpxC9GXY1IccxPenNb0bBjEmgrCly5NszgGLZunUr3EORsRgYyyYiQxmBOfB64c75s0cuKF+qDFw25KJJTkhECF0SpWaQUpgJFLCQT5M2czpOIoxzSggaPwdZFYCURcgAgLBLwmIoZSNSztiPHTvWtSvMZGDPvUGM34hQiOf1whkMpGBAj6Q3zJLIYvKuAKXw6tUz+GnScxky8njEZzkEXRGAjJ/dIACJI40ghFkSeQxSNh4+fBg/TibybbgUEXRFxCGzAMIsiQIGKY9WY7YAg0EoxM9DqlNIreSmfRHCLokyJu/KqYsXD91jEMrxEEhLBlIfIMySRIJxPbvLLGZEKwKQLmGQZjzkjUuF5MPndy9UxAeQUcEQUzDEqcbx/LkaiV8C0ppAvKocqiQeAmkhAXGrcaiQ4IrIQCAuFQ5VEp80ZBpCnCocqiR+CUgnHuJV4VAl8ShA3CocKiS4IghZFAQxUAjGpcKhQuITgZhDIE4VDhUSvwAZjJBYMppQiFeFQ4XEQyAHFw0aPBQhOh4ybGWnCWM5iDtCx3sGwUiUVoSFtBUgGFekDi0SHw+ZCZDOdYTRxLUdtnRJAOKMcC6aJP4AZEgvgJQsSf7ljGubvnTJprHX30S6JF/BoU3i4SBPW+xCCFw0CBFuJBs+RbgkX2EuGiR0RboJVy9C6LYKlbg0OahEeUVG44ogRAcQfklwNnwlTmWHVomfK6TLTDIZoRFcEu5O0p8uiez1olni4Qohk4EVoV9dcbPhK3ErOTRLvnOFLBcmUzIGHEGzESpxyTu0S3xCIcGTCVw3tBKnvEO7xB9aCDpEK/HKO7RLPKSQLnwhsRTCPwoIlbhlHdolf8ILoRDyeUMrcck5tEt8oYWgQ6ISp5xDu8QfVAh/7UpU4pVzaJd4uEJa0kLCK1lZMGHHdqjELePQLvklFNKAFsJU0ncWqcQl7dAu8UkXItxek4VKnNIO7RI/FnJZZENoJenW/fA9CVTiZT/noifxQCEzxosWQitJKMjGStyMI3qSP6SQ+bNpIUwlRlqJi3FETeIjhaylhYhVUhUrKYJKnIxDs4SuSLdLWMgqelMVrwS+ce1Pl4RxaJZ45AuhleRgJW7GES3JHyiEft9MIWwluxMdUImLOqIpwRU5PwPOJMhzCJ6gSVZiycrJXHPhk5M6oivxYyG5MoUgRE9OTDLyCzf291JHdCWe8x3IIQ19MGODD0jkVA0qcVNHVCW/bt0cMy43npyfUQi7JXDgiZDCjddcxBF1yYHzN8fsyxXOaCQhenLyirO5UIyO6Etu3TjdkBxtliPP7tKzESCP7oAj+vn2gIfAYa8uMsg/Vu1gtYEQisLwpg/WR+8DyGEWs6ggpKU7N4JI18VFMOkfxzAn5wXyMeMYvfd+7P7PMl+ALF/N9w8lviPg1SwXaxIlviP8PrVY324+X4kS3xHyOz7fRzvr2NCqeiDxHD3b4YY2TtC9Bdy3+ChIfEdPwRZ//KeXBInv6Gk3f3p8JDwGSJD4jp6MY8DhwagKEtdxzTgp9pLV7IFcT89xQPDteI5QcFQ8OjwnQeI5RhoOz0fXCQkSzzGSeZ2YX7CqXij5DPfZcMGaXzmj7nPZbcdIwZVzfglPgsR9LyMNl/B5WUJyJcOBZJQlpoWaKkMCB7LhkcxKV1GGBA6koHQ1K+YlGRI4kIZi3qy8KRkSOJCM8uak4FtlSPjdMhsLviyBY4lgZ7MdoaAEzgeCJQKJ7wiNTYGHbRLJk9DBRcI2CRtHVZaEDmZD4witNCwRZrcdoaCV9qi5mGRK6OAiYXOR7VbJktDBZLZb2YCuMiV0MBsa0GzJRzFcsZ4jFLTkOaSQZEjgmKRhSIFjG5IhgWOSjLENDLJUGRI4pgEEoz1RT+ayG45Q/o32cNgp6YQEjmXaFTId/5JOSOBYJq8gVSckdKyzLUYEo05I6FinLIYmk05K/kq5Y5A2ojAO4FAjdugQaUAiFCWEJJDBUoRUoYgN0hYD2ZohZKgX6HpYQqcOEQcLtyQZDRUsdakgONilKIpQKEEECe0gUlyqKWqxJbVbv+9L7l5evjtfLv0LBjKcv7x3qHDv/x1X3KV+LYRuEfcS7lCndj3kcq8rCXeoI0HYUeOzva4k3KHOBUIcD18f7nUjAYf7/CaI03H0LhhH5ztbf6ruITVxHJ0f0L90izj99nNpfX19YfL8+JdbzL44oM8qC2fuENUKMLCwUCwuzJ0cnLrDXIjKAitxHHb4l/foHBCVypul1/PzuVwuD1WS90g5cIOpNyF2tZbOEF/pRxFj+e1TKLVoWjKYTzconWNqHGI2jq5UiC+EsBiouDsxMQsV0Ug5ExSUzjD77UUf7GAR5EyNkBigmB0amoYYqVQkC5QxQUHM92sxF1L1iZ6x0pOAEedbRCCq8FVZAUauwXg+PJyAhENGgFFUmLpUBjPrcTNQj+sEgYziY4sRjw8MxPw+XzQxGGIUxTbVWD2u8fhs5MoZUcUvel1ZA8aUBozp8HB8IEY9c6/X7/cxihKzX2g8urEgDxAy8/GvMwJiMp7lp7TxidEm4/6t/j4IWXxRW4rzNv2QKpSiVHpovx1iQYiR1MZfASNMjP6+Hg/8Cw4jAMCioHBMvfBSlEqpZkt788FEHEsIfIVIjFA47ovdxrK9B8YUUFQUkRMLUyvAzpg1W1E8/iQQEIGhb8hYbGH4sfTvAYBZPFZROAauXpCKx7g3uCSfd7a2trcf2WetmE+2MdqmIHBKORhM785NOmRzc257F54A++gWscrppXsP362ubmwsQ+YxZpEcm+SLeVLQvcEYEuWGoBgpHX7dgiWdHmNJp4PBTFZ/IcrptCT9TQlQVp9siG59shlNQ0UKGDRzgDGcKAGwZMvlTAY8UuCdcjaiB9BBD4BvmAMMYHNKJSipUkG0ZdCANW0AFAqG3QahJaXrER5dZwMM6C6BNYndKYn5C6OtMWD+QogUjKGgRBOIMYxAewwjFBocFCMdxJALrJZDqbtUMidRiCQgUVLgTAqPYCgpYCGMXRqXxM/Va13PHEsBFsBY8VnxI4IWQ6yGgiIsftDw0CXF2A9pEApaANMaL4aGlsBa9OFmSgwVBS0YLwsi2AezKJ6bPTi0xS44xgXibjQMWVBjEz4aRkjMwTY9UgjABtt0uiyYXhLJobclBrPY5b/HB7Hw8UH/AM3ZIm9FzQVkAAAAAElFTkSuQmCC"},{ name : "icons/database(1).png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAI6gAACOoBxNcq+QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAO1SURBVFiFvZZNax1VGMd/58zMnZmb1NzbWOjC1GDrRijoptBN8QuIuMimLsRN+glEFJSgC6HfoFmIFAqVIAh+gbgShYpQdKPGvkGSmuTeJPN2z5xzHhdJb5smaW4k9/5hFjNnzvP7n5nnec5RvEAffvL1mTCJr4Zx8+0oTd4IomQyipvjUZw20BCEsQJwtid4qHulqas8c6a3bqryd1+Xi1Vob9389IP1wxjqIGhjfOJ6s9V+Z3zy7KQOwhd5PFLeWfKN1bW8u/FDuZ19dPOrvWb6BmZnb0TBa2dut6cuvBc1kn3GTkK1qWTj4Z/f+aW1q/Pz1+q+gdnZG1F68fxS6+y5V4YBfl7dlXsPy7v/nJ+fv1ZrAHm19eWo4ACts9NTfrr9BYAG0E7eHBX8iQLj3+obsN1MF+v/jgxerD3GdPOgbwDRoVneorO0NHR4Z+kvzHKGVioA6NdYGCZgYP23P1DjIS9NTRPGjROBOtNj8/59fG5JkgmIno7tK/I4mQAL5d+rVGYTQgjHU9LWaeJTp1BH9AVxlmpri163Q52XYCGJJ2ioMUj2v39oNKU1adLeuanArhTY5RxrezhfA4IXD4BWGlAEQUQYxKAUIcnOVz2ijx2vzSlFGCWEBy3lf0oDeC9yYhEH1BOmBtjeuGe8tyODO1ezuX7P9A3UtopXHt6hNvnQ4cYUrDz6FeeqGJ7JAWsrlh/dIR07Q6t9jqgxdrLgXsZW5wFltoaop398bxKKUGaPKbNVgjAlTlqkzTZx2iIMj9cTnDVUZZeq6FBVXZytdgae22cPqQKFsxVFtkKRrQCgVYgOInQQoXRIoANE7URTIjjvEG/xrt65ZLCcGrgMvVi8tWDLQacMpN29QIZyAHmhdpkaoOrlJYyyFQjGFEXfgDVFkm93GIkJgXy7g+nlKTyTA1W5ha0rmuNtokY6FHZtCvKsi7OG3fzdm4TWGra6qwRBRCNpEkUpUSPmgMPzYBLB2h7GlPSqHO/2V8aBVeBcTZlvUrKJUju7nA4bBEGwW44ahebJMkQ8IHjn8WJxzuGswbsaOWKbObIMRQRrDVgzyJqPLT2UqMc1IMgvowaLqJ/7Biab5efAgxHy71+5NP1Z38DCwoKZHMtfF/gWGV4zUOARffvKpekLc3NzdvfZXl2emTndzJvXBd4F9fLJoGVNaf19kWYf/7SwsPGcqcN1eWbmdFqk74O6gqiLgkwq1CmliERQz8wXpRARjCCZUmoN0XeVdj+6TN1aXPymexjjP1c2shSEXShEAAAAAElFTkSuQmCC"},{ name : "icons/clintex-logo-all.png", data : ""},{ name : "haxeui-core/styles/shared/sortable-asc-blue.png", data : ""},{ name : "themes/optex/person-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFg0JN1+8rbkAAAEBSURBVDjLxZK9TsNAEIS/9fkF6OmSggqJhhpEA014AShch/y8B4oi20oNUXiBdC6QSINAokCiJCkp6KDPnZfCbkBnOxSIkU46zc2OZvdWqMBkMms75zIAY8xxt3u+8umCKgPn3CnQAlrW5p0qXaWBMWYOrICliM75K4iPTJLpPmgK7JXUc57rxXAYPTUaJMnNNtgXYOvH0weEu/3+2VvDDOzIU0zB2VFtgji+PhLhtq5nVT0ZDKLMm0CEuLxmntqs0MhlXQufwAMw9hiMgcdiFg2/kKZXB6py9z2dHvZ60WLjRSqxKA+/3sRN8f8GoY9cr4NlGOq7CPdAoMoO5K8+7RfVR0lp9JeQagAAAABJRU5ErkJggg"},{ name : "themes/optex/splitters.css", data : "LnNwbGl0dGVyIHsNCiAgICBzcGFjaW5nOiAwOw0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgYm9yZGVyLXJhZGl1czogM3B4Ow0KfQ0KDQoudmVydGljYWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlcjpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzM1MjsNCn0NCg0KLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7DQogICAgYm9yZGVyLXJhZGl1czogM3B4Ow0KfQ0K"},{ name : "haxeui-core/styles/shared/blank.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH4QIKDCIwjMBeawAAAB1pVFh0Q29tbWVudAAAAAAAQ3JlYXRlZCB3aXRoIEdJTVBkLmUHAAAAHElEQVQ4y2P8//8/AyWAiYFCMGrAqAGjBgwWAwBjmgMd7D3zQQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEqXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarVdZlsMoDPzXKeYIlkAgjsP63txgjj8FttNZOp30YtoWLWMhVCVBqP/376B/cAmnjbxGCymEDZdPPklGx7b9yuvJm1/P/YqH5Fs9XV4IVA7S7f9aOMafer4Y2EVGT68MWT1elNsXyR/27c7QMZGbHgk67TCUDkNO9hd8GMj7sraQLF4vofRdHt/vYbC5NDzKqdVj8N3/PiJ6TTGPE+mO3YanOL874OYt5PLq5PUafruEvnNx6ePhCQLyWZy2K6/oAZWzx0/0d6C4sOsJittghov8VM/6efBphfhqZlcvM9/ofbkQ5SbI8x6jGY3R99VlHxDScCzqXMrqYWCBKbc+C2gRt6IfV0toRmBvBeRtq1tBq5xYEPfBnhtnHtyXrFzhopcuEVKkils6c1GSVLcR0PKz8ZAIxJozYFgBr4NWLr7wmjet6SobJm6MkcIwxjv88jftqaExJuWZN7vECn7JTAq4MZGbT4wCIDxOHukK8NnuL15M9Rg1w2xYYN7KbqIoH9yaPHILaIeBCrnnGsd2GECIMLfCGXZAYAvslANvUSQyI44GfDIMGZJGCiBgVWnwUrxzAeCYzLnxTeQ1VlR2NWoWgFAXkEg2UwpYeRQ28Cd6A4eyOvWqGjSqadIcXPBBQwgxzOKXo4s+agwxRospZnPmTS1YNCNLlpMkh+KoKaSYLKWUMybNsJzxdcaAnIsUV3zREkosVlLJFfSpvmoNNVajmmpu0lxDnWihxWYttdy5g0rdd+2hx2499TxAteGGHzrCiMNGGvmCGtMO60N7HzU+UZOF1BwYL6jh0xhPEzzLiU7MgJh4BuJxIgBCy8RsM/ZeaEI3MduSICtU4KVOcBpPxICg7yw6+ILdB3I3uJH3v8JNTuRoQvcXyNGE7glyj7h9glqbu03dHC2EZhrOoG4O6ReUvbIOH7AHz67XuUvdSZWt2/Q5bdGzR2ETy/iDscSldzgmLrY5z27Q148RX0l6NeArmVFFN0X04R0BSWyEa27I3RtF/R6lQFHnJ5LsY8QzSa8GvJLeXN6yddrdQ+Fbc2NvyR58lRSm8yE05+c95itOxTfG7fp8aYAbBE1a+lAhdVc2fiHpRrGgVG67v357Cv4hHS9vVEqk1sHe8PKTl5JeEe0lCZC40xnKCdW/CQ5uw88IIo6PmphQZ6Ll8Dyi9I2QfhlBemP9W8wMpqDoYKNGwTlZdJM89POkuM2Jd5nN3cJCAHGbNO3z1Ju8Sl/90GiKitORpBgSRoHXP0oVOnPlMVW+J+lDAUJojg1szTgey7eqUYahLwL4HUnXiuUMgmatBST7Pteb6UM/Sot7CSwJYGKzKH5c2FaKjYy6M5+ywqStxhZwhKztqUv0pc/fcJWe+upWVu3ZcaL8RfGmt4vyC6JdZX+1oRkHWkTD2ojYxLEU/6HFCmfh7h6luoeUbmlGf7KpgX70mm8Ve1ybR5XdzSdxoj/Z1OAdPQbQS1w/ibGzTY75eQNGYJaKTX7NH6pHEHHoCjv56Zebx0XSS+q9eUihXxxGnhp6Xk/eOKTQj/DCz6uGieh/0DPsUZQQ03EAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6YTJjZmUzZWYtMzE5Yi00YTlkLThlZGEtMzJhNDYzZjMwNmZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjgxY2EwNjczLTJlODEtNGM3Mi1hNTM2LTg2MTJkYjc4YWY3NiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmI0OGNmYzRiLTMxOGItNDEzNy1iMmZlLTEzYWZjM2E0ZTExZCIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjI4NDI1Mjg0IgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6ZWFmMzkzYzAtOGRlNy00NTlmLTg4MzItYWE2MGYyYTc0NWJlIgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjA4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj16UaAAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJQjxj+hWAAAAMklEQVQI12NggILQriP/GdAAEzIHXQETumpkBRiSyAqwSq4us2HEKgmTYMDnGAYGBgYAozYP8SPzNcgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/sortable-desc-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAA0UlEQVQIHQHGADn/Ae0cJAAAAAAAAIdYUHmosAAAAAAAAAIAAAAAAACHWFAAAACJWlIAAAAAAAACAAAAh1hQAgICAgICAAAAjV5WAAAAAe0cJAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAANannwAAAAAAAAAAAAAAACpZYQIAAAAqWWEAAAAAAAAAAAAqWWEAAAACAAAAAAAAKllhAAAAKllhAAAAAAAAmeIQ3V5WWXgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/treeviews.css", data : "LnRyZWV2aWV3IC5zY3JvbGx2aWV3LWNvbnRlbnRzIHsKICAgIHNwYWNpbmc6IDA7Cn0KCi50cmVldmlld25vZGUgewogICAgc3BhY2luZzogMDsKfQoKLnRyZWV2aWV3bm9kZSAuaXRlbXJlbmRlcmVyIHsKICAgIHdpZHRoOiBhdXRvOwogICAgcGFkZGluZzogNXB4OwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi50cmVldmlldyAuaXRlbXJlbmRlcmVyOm5vZGUtc2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoudHJlZXZpZXcgLml0ZW1yZW5kZXJlcjpub2RlLXNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1jb250YWluZXIgewogICAgd2lkdGg6IGF1dG87Cn0KICAgIAoudHJlZXZpZXdub2RlIC5iYXNpYy1yZW5kZXJlci1sYWJlbCB7CiAgICB3aWR0aDogYXV0bzsKfQogICAgCi50cmVlbm9kZS1jb250YWluZXIgewogICAgc3BhY2luZzogMDsKfQogICAgCi50cmVlbm9kZS1jaGlsZC1jb250YWluZXIgewogICAgcGFkZGluZy1sZWZ0OiAxNnB4OwogICAgc3BhY2luZzogMDsKfQogICAgCi50cmVlbm9kZS1leHBhbmQtY29sbGFwc2UtaWNvbiB7CiAgICByZXNvdXJjZTogbm9uZTsKfQoKLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uIHsKICAgIHJlc291cmNlOiAkYmxhbms7CiAgICBjdXJzb3I6IG5vbmU7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CiAgICAKLnRyZWVub2RlLWV4cGFuZC1jb2xsYXBzZS1pY29uLm5vZGUtZXhwYW5kZWQgewogICAgcmVzb3VyY2U6ICRjb2xsYXBzZWQ7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KICAgIAoudHJlZW5vZGUtZXhwYW5kLWNvbGxhcHNlLWljb24ubm9kZS1jb2xsYXBzZWQgewogICAgcmVzb3VyY2U6ICRleHBhbmRlZDsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnRyZWV2aWV3LmZ1bGwtd2lkdGggLml0ZW1yZW5kZXJlciB7CiAgICB3aWR0aDogMTAwJTsKfQoKLnRyZWV2aWV3LmZ1bGwtd2lkdGggLnNjcm9sbHZpZXctY29udGVudHMgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVldmlld25vZGUgewogICAgd2lkdGg6IDEwMCU7Cn0KCi50cmVldmlldy5mdWxsLXdpZHRoIC50cmVlbm9kZS1jb250YWluZXIgewogICAgd2lkdGg6IDEwMCUKfQoKLnRyZWV2aWV3LmZ1bGwtd2lkdGggLnRyZWVub2RlLWNoaWxkLWNvbnRhaW5lciB7CiAgICB3aWR0aDogMTAwJTsKfQ"},{ name : "icons/icons8-layout-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAADCElEQVRoge2YX0hTURzHv+fe3Tn/4aYyTbfItqZSMu0t7KkipJdeSnoJoofCHgT1ISECIQJ7yMAHg4IQeinfepGo5yFIUD6Iuj8RuNXUzMXdbO7u3tODOit2N8/u7DK5n6d7z+H3/f2+7P7O+THAwMDAwEADBAD67o2/4nnOq3cxLMiyMvf0Yf81EwDwPOd1e1xtDmez3nXti/ByBEF/CABg2l10OJvh7erQrShWdg1wOtehmZI3YFLbGBqd1iTcbK/B4M1uAMDYCx8iqz816T0evpR1XdUAALS2eVBhKWdO9n39B9LJvYIVSuF0OlFfV8ustZn8haVFv+p+TgMVlnJUVVcxJxUTcaSTf6+VWcwFaeWj5HvAMKA3JW8gZxMHAgHwPM8smpIk2KrLMu+EEETCEaytrDJrybKcc1/VwJWeU8zJ/qSqwpx5vnjWhfhmSpOeGqoGznQeLVqSDk9j0bT+RdVAOKrt5jQLPOx12+f+6nocKSn3p5APR2NN1nVVA08mfZoSNtlrMLQzSrx8M4eveowSXZ3egm7Pb9EoErG1zDulFO4TLhxpZP+U4mIcHz/Nqe6X/DFqGNAbw4De5DyFcnV/Pprse+c2IQTBQAjBQKhgPTVUDQzc6NYkbBb2Zqjrl72aLzI1VA2o3XyFsHsjHwSHpwdEUUQ0yj7u6oEoiplnEwCkZTk145vFjG9Wt6JY4TguBez8uVss7twfX2hv9bQ5nY6s+8vLYSws+RcnHvS3FytnyfdAwb9A3/CETSapXgp6khCUAQAhpNdmtVorKyuzxiQSCWzEYjFK6RQAgNIkoWR+y4KpyZGB2H8zcHt4rIdw/GvBbDLbam28YBKEQnSktCTFNjbSW1uSRBXl6rPRwXesGswGbt0d6wDPffC4XYLr+DFCiLY2opQi9PkL9QdDEpWV088fDc6zxDP3ABG4kQZ7Ped2tWguHtgeM9yuFtJgryccT0ZY43POQtmgCj23srJmmn77njU0HwIh3HnWIGYDisJdYI3ZLxxR6EFpGxgcVn4DhPTfRuPC8agAAAAASUVORK5CYII"},{ name : "themes/optex/scrollviews.css", data : "LnNjcm9sbHZpZXcgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI0M0E7DQogICAgYm9yZGVyOiAycHggc29saWQgIzJjMmM0NTsNCn0"},{ name : "haxeui-core/styles/shared/check-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAwAAAAMCAYAAABWdVznAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCTskh/mOvAAAAS5JREFUKM+NkbtKA2EQhb/ZrLIGL2BnExDEIr2FguADBLMo/IWFCF7AwiewEkRQ7GwUkXRiY4LZGASLtbIQK4tgo7VWgmBMdrM7FokQxBinO2fmzAczwj8qn78cFzuaCmu1U7vbcLlcHqyH0TUqqR7HweoWqDXiPSAFBBLHd38SCgVvBtW1ppJt13UrHQme5yWxOAZE4SGsV3cBOhIaMTvAGNBIEC/PGRMA2OfF4oSFXBFLMQyqK8aYKO95k8RsAIiwn53N3n8vsiwYRRlGdMl2+g5zvu+IcgJYAo9vA/1b7WRRVbkolo4UVltWBTQNxKIy7bqZ2/aAJSIa1D/XBc6alqZbvYOfw0DzD8aY6PVlZBEotfynpNO7+dsxpF3kfN8Zev9Y0AQ385nM82+BL3sbaMn2+wKIAAAAAElFTkSuQmCC"},{ name : "icons/icons8-dashboard-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAFOUlEQVRoge2ayW9TVxTGf8/P8ZQ4I2SiJJAGB0KgEzSoDAJVrbpgWdSqXbTqojvaZaVu2/4H/QMqWgmp6qalTC2CEiEBCRgKtElInEAGHBzHibEdT7FfF9dxSJ6f/TyEJFK/Ta7vvefe73vnvHOHF/gfawvp069/frW6YdcZW/XWZkk2Sis73Dr9uT8eDShrQU4TCjEkepILiS+MNU17/6hq6Nis2VehmvVFX0DhhCzLNoN903ZN8usdCrxtMMimteZRDCyGtWZQLIyLhVo77N8BEuB0gcevbVTT4KDr6Cfk5T1FYch5lieDVzM2m8uree3dk5itlRnbp0adDF4/nUVABexoAkmCMW92Acc++g6LxayffAr2egcz4/eIzs+q2g6f+Jb6phZN203NHUyPD+KbcGYWMOyG78/qI2Iya5OPLUA8Acmkui0UM2Cpas4ooLxyk6pOAaJxMV44BtbaFtASUCzCUZgLQyID8UIwH4O5ECSfS+GSapUqgQAF8IcgGC12pCWEojAb0tc3LcBmhp0vifLQEwiEdRjL8FYnlK14DC43XPsXtm6GY11wrR9GpvQRSiTFk9eL9NRtjXCoU5QlCW4PaxstujKeAF8QrGXL2xfFR1NhEI7pYCKJWJmPkdfCnxbw4DG4Z0Ua9T7LbqQoQsSzMFy4rd3P44ffenUyUcRTiS/o7J/CMufP5CC+iEUPROP5TaYHyTz3XUWtxPlOBqAoGkapECJDpsk2YVqALIv34OVG9Uu5El7PU0JRWEjkorsc8WiQ8OxYxjb3o37CMYhpelXhmadfVZumunsrHN0jytcHoG9Im8jlUyep23YA2ah/NVaUJHOT94hHgxnbe3/9hrpt3ZisVRnbg14XgWl1ZkkL6J+AUASQYNybnUwiHsEz9Jdu8vqgMPPoRt5WaQHxBXDpzNXrCRt+O73hBRS8FzJZKzCZK0rJRROKkiTknybTGl2QgL1HPqbr4AfF8soLIb+HP3/8ivnAzLL6gkLI8cbxkpDKB+VV9WxxHFDVFyTAIJfl7rQKkI3qeUt2oNGL+mqwmcRGb74EZ4gXJsAgwevt0FIvfieTcGsIJnIsmjnHLZ6aPuxuFeSH3XCuD4IR2OeAOru6ryTB5iporRe3JdnwQjxQa4f2Znjig/O3xXnCF4IPD8GbO+HKXYikNnEWE3R3QN1ztyuzQeGtTFh1D0gSvNImSF+5L/4C+AJw+T5YTXBglzjS1lTA0b2C/J0RONMHf49ClQ2O7IHGxlrV+KvugdZ6QczpUh+YBiYEue4OeG+fqFtIwEUnDE6K36NTMPoUju+D9rYWVm4hV1WAuQy6tols06sRAjcfwqQP2hrEOvtgDGYDy/uMTcPFO2C21qnsixZQboGuVqithPmIeKpPZ0E2wH4HmIxw6W62g4rIRLmykWsKEjMzqvqiBNhTsWk2irxebYODneCZE7Ftt4kYHnYXM8sSwlH1ib9gAQYDdDvAaIDf+8S9T7kFDnfC9gZIKOJuyOkqinNOFCxgdwtUlkPPP0uXVqEIXHBmtys1Ckqj5jKJtkYRNndHSk0pP6Q9YDaKHCwbRL4OZ9mntDfFkOUyeh++CIpLiAQ8qrq0gM4W6Ngiyr4g3BjQHujcL6dQ3v+M0clY1mucUiLqdzNw7QdVfVqAN5BaJSXwZvm4AXCz5zw3e86XmmNBSAsYn4afrooQyiVgPcGYTMTS37pWroAbABFD0DuifjM2Di4ZvY/vvJNMxM/aaloy/quBJOFHWmff6hViKFxNJhNfrjWV//EfzRm/y878pTgAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/sidebars.css", data : "LnNpZGViYXItbW9kYWwtYmFja2dyb3VuZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbW9kYWwtYmFja2dyb3VuZC1jb2xvcjsKICAgIG9wYWNpdHk6IDAuNjA7Cn0KCi5zaWRlYmFyIHsKICAgIG1hcmdpbjogNTBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogNXB4OwogICAgZmlsdGVyOiBkcm9wLXNoYWRvdygxLCA0NSwgIzAwMDAwMCwgMC4xLCAzMCwgMiwgMSwgMywgZmFsc2UpOwp9CiAgICAKLnNpZGViYXI6bGVmdCB7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6cmlnaHQgewogICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6dG9wIHsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLnNpZGViYXI6Ym90dG9tIHsKICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKCi5zaWRlYmFyOmxlZnQgI2Nsb3NlU2lkZUJhciB7CiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L2xlZnRfYXJyb3dfY2lyY2xlZC5wbmcgIjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnNpZGViYXI6cmlnaHQgI2Nsb3NlU2lkZUJhciB7CiAgICByZXNvdXJjZTogImhheGV1aS1jb3JlL3N0eWxlcy9kZWZhdWx0L3JpZ2h0X2Fycm93X2NpcmNsZWQucG5nICI7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5zaWRlYmFyOnRvcCAjY2xvc2VTaWRlQmFyIHsKICAgIHJlc291cmNlOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvdXBfYXJyb3dfY2lyY2xlZC5wbmcgIjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLnNpZGViYXI6Ym90dG9tICNjbG9zZVNpZGVCYXIgewogICAgcmVzb3VyY2U6ICJoYXhldWktY29yZS9zdHlsZXMvZGVmYXVsdC9kb3duX2Fycm93X2NpcmNsZWQucG5nICI7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwovKiBBTklNQVRJT05TICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgouc2lkZUJhck1vZGlmeUNvbnRlbnQgewogICAgYW5pbWF0aW9uOiBzaWRlQmFyTW9kaWZ5Q29udGVudCAwLjNzIGVhc2UgMHMgMTsKfQoKLnNpZGVCYXJSZXN0b3JlQ29udGVudCB7CiAgICBhbmltYXRpb246IHNpZGVCYXJSZXN0b3JlQ29udGVudCAwLjNzIGVhc2UgMHMgMTsKfQoKICAgIApAa2V5ZnJhbWVzIHNpZGVCYXJNb2RpZnlDb250ZW50IHsKICAgIDAlIHsKICAgIH0KICAgIDEwMCUgewogICAgfQp9CiAgICAKQGtleWZyYW1lcyBzaWRlQmFyUmVzdG9yZUNvbnRlbnQgewogICAgMCUgewogICAgfQogICAgMTAwJSB7CiAgICB9Cn0KICAgIAouc2hvd1NpZGVCYXJMZWZ0IHsKICAgIGFuaW1hdGlvbjogc2hvd1NpZGVCYXJMZWZ0IDAuM3MgZWFzZSAwcyAxOwp9Ci5oaWRlU2lkZUJhckxlZnQgewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckxlZnQgMC4zcyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7Cn0KICAgIApAa2V5ZnJhbWVzIHNob3dTaWRlQmFyTGVmdCB7CiAgICAwJSB7CiAgICB9CiAgICAxMDAlIHsKICAgIH0KfQoKLnNob3dTaWRlQmFyUmlnaHQgewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhclJpZ2h0IDAuM3MgZWFzZSAwcyAxOwp9CgouaGlkZVNpZGVCYXJSaWdodCB7CiAgICBhbmltYXRpb246IHNob3dTaWRlQmFyUmlnaHQgMC4zcyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7Cn0KICAgIApAa2V5ZnJhbWVzIHNob3dTaWRlQmFyUmlnaHQgewogICAgMCUgewogICAgfQogICAgMTAwJSB7CiAgICB9Cn0KICAgIAouc2hvd1NpZGVCYXJUb3AgewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhclRvcCAwLjNzIGVhc2UgMHMgMTsKfQouaGlkZVNpZGVCYXJUb3AgewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhclRvcCAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQogICAgCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJUb3AgewogICAgMCUgewogICAgfQogICAgMTAwJSB7CiAgICB9Cn0KICAgIAouc2hvd1NpZGVCYXJCb3R0b20gewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMTsKfQouaGlkZVNpZGVCYXJCb3R0b20gewogICAgYW5pbWF0aW9uOiBzaG93U2lkZUJhckJvdHRvbSAwLjNzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQogICAgCkBrZXlmcmFtZXMgc2hvd1NpZGVCYXJCb3R0b20gewogICAgMCUgewogICAgfQogICAgMTAwJSB7CiAgICB9Cn0K"},{ name : "haxeui-core/styles/shared/gripper-horizontal.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAECAIAAAA4WjmaAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWN8K6PCgBswMTAwTEqOnpQcjZXBhEcrAwMDI37DARkxCkFtOZfXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-large.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAPKnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjarZppduMwroX/cxW9BM7Dcjie83bwlt8fSNmuDO7E5YrLkUqmKQL3Arigoub//99S/+EnBJOVDynHEqPmxxdfbOUk6/NT92+j/f69f9z1Ef//cF3dP7Bcco+ROV7jb9fNfYJzqJyFPybK/fqgffyg+Gv+/Gkie61MViTn45qoXBM5ez4w1wT1mKVjyelPE9o8x3GzJJ+3kl8+f1z2l/8nvDcC93HWTmec5rd1/izAydsqV/eJ/M4MNLwqb7kSnLkmwyHf+Un/sSr1GZX7mXly/RMoLp7rigsfnRnvx2+vm/Dp+jWh2i7+kyf9fucP1327wfDRyfJea2S11jzWVR9xabyMupmyzxjYmMrtr0VeiXfgPO1X4ZUV7O3ca+iuG69uirHAsow3w1SzzNzHbjpL9HbaxNHabt2+ll2yxXYHs43z8jLLJlfccBnEOvA6rtr7Wsy+b9m36yZz42EYaQ2TmQO//TevpxOtJZQ3Rue7r1iXlaBgGYKc/GYUEJh141HYDr69Pv8Irg4Ew3ZzxsCq25miBXNxS3jkNtCOgYHjAdmkcU2Ai7h3YDGw3hsdjQsmGp2sTcbgxww+lYkyQWMbEJgQ7GCV1jsXAYeI4d58J5k91gZ7LpOzACK46BLQFFfBypPY4E/yGQ7V4IIPIcSQQg4l1OiijyHGmKIkv5pc8imkmFLKqaSaXfY55JhTziqXXIstjuQYSiyp5FJKrdy0MnPl25UBtTbbXPMttNhSy6202qFP9z302FPPqpdehx1ukCdGHGnkUUadZkKl6WeYcaaZZ5l1QbXlll9hxZVWXmXVO2pGHVi/vH6PmrmhZjdSMjDdUeOrKd2mMJJOgmAGYtYbEE+CAIS2gpnOxnurBDrBTBdLVATLKoOAM4wgBoJ+GhuWuWP3QO4Dbsr7t3CzN+SUQPcvkFMC3RPkvuL2DWpDqk3XTm2EJAzFqdoRfgyYudpcpaj9+qjOSYvLp6XbmLPhjpVcZImtksFyBB1PTSejaTeyWaHOrhc2DZsWq7Wsb6rVPNnWRuz2aZg4mvec8d+YSiA5EpYADQUm5c5Rj2cJPbgOQCWNPvqq5MtIrIU0amI+Jk69lBlH7SuHyCXXnMenpcQxZE4DBYwjqRYCek6daohmpOZikwI52mzoEUYnu+w2x3odSWKmZ8osCX7ERgnQepowZ3ELp5vU5MpehSQ2UnYtUfJ0m2tO20O8FjknY9uMfbkgPrWtgdTU+5wi9PGo9JMPXj2SIWF1xAHThd768XIuZkS3vYw3ds1t2s0WMGuaM9pTcaxneGH4GIookMAsIIyUyceDdubBF5oZelLZxP+h5QQxOmj52qmmJIF0MGwpzKAilc5MWD3y7LhmBomx7iyJtwpDwmw15EO9yTLazSaqKDQgdjurqgo6xIFDDUKmd2pp9EDWteC6ybfgZsT6lvfyrNyLeiurg1gssBhAzurYkpod0czmjkHQwFhiLGIQ0c5XovaxV3GXJV7FXYP47zDXrcQwowjNWMQYX1OwpWKM38Yse4E+gpus9IdwU/bF+BxoirYNlWXPUUfhNimganv2oJBRBl5LNNYhtuZwhuvlO5y/OaZkyN79dkytrmVg8xGM1Wsgf8U4XRirn0D+fPwI+gNz9R7oD8zVe6A/MFfvgf44qtdAfo6xeg3k5xir10B+jrH6XfZ6BvoDc/Ue6A/M1XugPzBX74H+wFi9BvJzjNVrID/HWL0G8icsU/Jt6Yo8qWolPyI6RSRDq9UksEQxUFduJagOqaSaOg6snKFmpOw2hI1ol+5D5FwBfBmxRrmI+/dx6BJbQ/1g6DS19OkQaZ3KtRzoDV1HLzrWMZFtXr7RrWqOui7iBKMWRZu6vqSZCejFemmJjImi0URLlMFSszMNx6DQzAAKX1dU+Ib2E51g6vBOJkEmbHlQpekITQ/kqGnVMG6vJ8l63LWeOoxn1EwKQns590E2D84xmpXrIXhyvucHMQrKkwubGJhw1XERQorizGLMmDY0Kf5+TnrDomXdFvX9WLwgSgB1AsNtCgVUVm9I+NlMlr0RpKdEnPXrKKG69Mp5RYRNb9GhWZELLeTip+hnHFkGuJuJtBMTUq2pK0TytgjffH80iGQX97pZBmwKDUUsqyg0uShq6ekyQXvCnrXrdoZD2QKrbnYKowxSHDtDEPnmhs3kz2MiPnEIyeYVNopXJF5Q6z53Y/WKMrrF2ToRTgig3xpRkxfTo7YxM/paaRIws4mZOqiNXs8IrM/Y3Y6JeMl4NIVeto5so8APb8UQLHFZiKc616GPSFPUcqZBmJko6/Q/K4ORmQkiw4aZs219rp6quMubw7l+cU45nG4JV1oJUbKAkp2sN2ytShatzgTUue5l0CT5hhtmuuBimWMeVNQ3MGXEfLlUJcC7h6yMZot3kZW23RJV4XNXleRz8k0+Ktu4Ru4SlY3QFMdfMOEWUdqhgG0AehGgtFzOji4FAEvoIF0MQoUCjLvPaJ1060ZZjeyeEeZESR3RUkUKkUZWSGHYnuDIibNaRER8ibNM0Fx1J0Hve9mJ1JwYttSw9KI7BlgqdNqjafwoU+1hFwlVugexK4QrzpyPxyTxwdU59e0E6ZzoNyErIULrJKPJkFCNJMMyaFh6im4yfROzkOG1BOk+6hKzzvKTpWDcIkw9DbEBZQBMQwuz8xSJqAnVYqEB4B24OPXkc5fMUpAvk5SrodzUzHtlv6YBHmlHW7SDfowk7KB3rl3TAhNDsjImGnoIn2PrTdH0OdiYc2Q6rppDRJcgYjpEhJAUKIjYXTg4QWvs+gCT+hpbf5MfZ1b/Jj/mrv5NfqQX4URikloE7yh++GmWHdHUBHzsd9LL0nda/eXzCRXpzrmvStaulTrYkVBOeV6sjjX/soN0tOk5ZgUzrAiIU2n9VWklTKnEvbpdaQF1zp1djKQ0WWYIwYHnhGkLxiTUSIRoC2TgixnwDLBtX0g9fwq4MK0J00iqld69c0OLtcUniW5IKsVdXbTKx1YJnTXHYU28otuXFeezRHw73qM/2bSMRgUQHTqRege+m9mynghZOsV5FhPJZKFcXKk5N9kZNFtoJYtiOJmI/p4McIZbsDanhlViSGepYTrbRGMtqVEEXE3Z1Uy2KWQqtYiQOY2l4JCDKTiuosB2qplmbsmStd1+EO0zdCAhjK+fqz8G1EWskjpLs+ZlSqiPnECS5eQTAtgII0B53+SwQbuC8MEFNjNKitLq6xSlOtSpSlaYPmAManqNyQTEC4QH3+WmAEk6KdCDTGFP7QgERnSkaz0gx1BMIOhE0KlJFmMgGMzqtU3Z9kZ0bRDr1o9UUEjrHFxGEnApIv16Kb2oK8MEs2L+iSu3I3hCgEam1xGTZ53FErSUrr3BpPemFV1DEQkNe6YFngkHJqMtojd4Erc8lZIHA3gWzezM7F5MVaF85aGYcGNiJi0j4wf6hvq1uQLHqNm0J8IVd4BqqvVVEO1R4tX4caqolLOBSHnUsxCOnkJMg5tUHMSraaFcjdRUZMpi7aNH0LuTkgVv8u4GZA+XtFtoomawJ+12uiivd9plharsvCsNhV6zA/2jn6iWPiqQGN3uJwr9hOwoiiEFMdY/NEnqu65p0F9E+oQoot23ZJJsCcuWPpChXm1yDdiTFXnRUCOLuka5Mx4fENzLQTdyyU6kPewex2HChDm4pGhCnvUCPI4nJcXaMz2FSSgZS2LD2zOtUiYdjZvUaYsN3eJRRJRMbR9TazhBIrEa0RU8TZMdw3rEZFbeCjMAPKUbJ2hdgQ5hg1rjqjWdZCuZzcs6KLeUTdnjtN15FmFWQb/sLruJlvo52Z/CJtvh90rYwxHFuSjy2wg3cSbeQ1p5WudLcBsR0dZvwa1FQtMxi+CGatvVfBpo0+JUe/dxb8j6s/u4wyXbq8ku9ybbyfYwxJImO9JkQw5nk5ciJxsrStjR5x89dv7MhhWkCh2Tbk0EBVbfuwgaAt3V1nFWarUI/YgKk4U672SXFIp42fasBKfEqb06Y7PDmn/mjKasK3rhh10YJmlgy99KePqTwtAIGAa/qaSkmya5ITdjC/o0ryHZKqoSXZy/2BELFNhhLI1EolDSmIqkDvjUzq10lBSla2dkjt0k0d7KijdtQ6WIdbhS2tCSNqjD3ZhoYBWta6fpYdloO2o/sC/ZdK8MDWJW150eGRdEQ2YNCOpCIgqlTiKJHiMMh7xDirk8hkcx0cSkpHCx6cnRBMNgSFrk3kvujeoi4Rl0OwJJMn+pdImCOxoUYWhlz/nsX5BDlUcst4wohxvUHUxqorddlseNFBCLmzv5kdTG+ohPit1CZkOZStWhX5Ab26IOg3pzxNnTXZnThuwEeutb6Jn6o3EJQd2UYhaFL7tWSMO42wHiNSJpdztg5dmI3u1ARODL4LNpdZInXYOy9+R5bUHt5OlvJIJzaErZb8P5CC5cFOGQdG+OUg+HOEAhp+op7QH9Vn9Uef+jRqhfFokfa4T6ZZH4sUaoXxYJjmTrblqVak3uXBZJb6XKdB3SpIUQnshDmiHtNZmiQYzVUTLdF5sDWiNNFA3JW3NDmh76dU/tsB39TjowDGstUSDNole2LdFdkkboy7LfTaamhljZMlr7zy2YyGDSisRkJbdOHyhXU5Myim9VIX8gTaMogEmdK5gcO4LGSo3w8piMKsK9qC6BNeWWwmpBRIi1Iu7W8HjNGMVNIgsmizXAiRVpaUh+yJLeqZWtzSAqfpI/ZxNFFHRJwUieJjeagOBCO++n64QeqDBZIh/7SlNqnOsshJRmC6mE1EHquXb/kL25fxND6scg+mUMqR+D6JcxpH4Mol/GkHo5qJ7ElHo5qJ7ElHo5qJ7ElPomqP4qUarXQH6OsXoN5OcYq9dAfn5U74H+wFy9B/oDc/Ue6A/M1V9Vw28wVn9VDb/BWP1VNfwG43/5dP39FkswV/+ixRLM1bst1g1j9XK2Lt9jrN7P1gdj9X62Pkf1Jvju6sqNPDnefwcy1/V3IN3uLU1Dk7+fYjXdzhk1FHmx2pQd11zr/isQCEPz7jOtKDKc5oKGI40ukK9uuz1/NYNk4CB7rrIRl/l6yKHyv74o4Hs3bulyuksVzoOkNGiY0PZxTuegXLs9oAOv+Bs71QeD16IdwHH/BV5nZEVoBRQjAAABhWlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TtSIVByuIOGSoThZERQQXqWIRLJS2QqsOJpd+QZOGJMXFUXAtOPixWHVwcdbVwVUQBD9AHJ2cFF2kxP8lhRYxHhz34929x907QKiXmWp2jAOqZhnJWFTMZFfFwCsEBDCAWXRJzNTjqcU0PMfXPXx8vYvwLO9zf45eJWcywCcSzzHdsIg3iKc3LZ3zPnGIFSWF+Jx4zKALEj9yXXb5jXPBYYFnhox0cp44RCwW2lhuY1Y0VOIp4rCiapQvZFxWOG9xVstV1rwnf2Ewp62kuE5zGDEsIY4ERMioooQyLERo1UgxkaT9qId/yPEnyCWTqwRGjgVUoEJy/OB/8LtbMz854SYFo0Dni21/jACBXaBRs+3vY9tunAD+Z+BKa/krdWDmk/RaSwsfAX3bwMV1S5P3gMsdYPBJlwzJkfw0hXweeD+jb8oC/bdAz5rbW3Mfpw9AmrpavgEODoHRAmWve7y7u723f880+/sBfKVyq9JFJD0AAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOmFmNjJmZDk3LWFiZTAtNGVmMy05M2Y1LTZkMWU5N2VlZjYxMSIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpkM2ZkZjM5ZC1kYmVjLTQ0MGYtODRjNy1mODUxZWFjNGYyYmQiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo3NmE3ZjMzYi0zY2U2LTQzMzAtYTFiNi1iMzdlNDdhZmRjOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDMxNTE3MTg5Mjk3NiIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmU3ZjQzNTE5LTU0ZTYtNGVjNC1iMWU1LTZjOGVjNTJlODliMSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0wOFQxMToxMjo1MSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz6NJXiWAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJTUUH5gIICgwzrU+CfAAAAudJREFUaN7tmr9PU1EUx7/nPn4IUhKwqImxGomDjsZSIwvBh8rg5iRGB2cTV/4BHf0HHHQQEqOLDoYEGjcLxNkYDEggJlqIBhDb1757HCRAy6vv17m0MZytt8m7n8895/56LXAQteP7wEDL6nCm1WQfZOKhG0Pp49A0DCAFgED4qhkTnVMziw0vsD6YPqWIRhhoqfrKVYyX7dmZj5L9KcmHrdmZFBHd8oAHAEsTbm4O9p1ryAys2ZmUYh4B4FfzopmgfYYXl6A6wItKUJ3gxSSojvAiElRn+NgS1ADwsSSoQeAjS5AJeKvvMg49fFzRVhh9AHf2vbiEMjLyTjFYWw3/MDu2MlE2XNwLy8EFQkkoIzXvOMHaBCSUkQnrNdrFYpRJ7SuhTKw2XuXC4TMQSEIZWSqLYhnwlVBG1nmv0S7FEqgpsS2wfvXiUYv5tsQm5VlCxdgC2xJrdia1R4BcZde4SYWPchnQeuez1oDrSu3WlmK+5lVCp0UPBbuyIDT6u+NEvr+/tVpAS/ZQAe0UpAU42V3QVQL8WTYDTpxNzI9/kd58KFUIWK41CcYvsS4MlRABDqDe7pkDbe9yP1mppwA2GjgDJQ0a75ia/lbzOL1uX+oh1ncBdMQaqWQP0Ly1qJUc8Eo+NjyDxhJT0wu+9wEpCcHwhP/nhSauBHV1o+n6DVBbO8rZCegv8+LwvjeyqBKU6ETbk3HQkeTWxlbC7/v3oOc+icL73gcSk7k8k3oWdmJbF9I78ADQ1IymgSFx+EA3sigSenkJYK5sW1oUhwcAK8jTHs0vb472npwj8HkEOC/xj1Xw6gqsM2cBt4zy61covXgOgEXhQ79W2YfVKRR8pBdbBiVCw0cSMCQRCT6ygLBEZPhYAkISseBjC8SUiA0vIhBRQgReTCCkhBi8qEBACVF4cQEA2LiSOQbmOyAcrn61xcxjieys6K/1Rv5qULDTXS7IZkYv/h4gFkAqm5jM5XEQ/1n8ASmb3x/MRO6eAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/menus.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNRU5VQkFSCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5tZW51YmFyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogNnB4OwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4OwogICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBmaWx0ZXI6ICRtZW51LXNoYWRvdzsKfQoKLm1lbnViYXItYnV0dG9uIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyOiBub25lOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5tZW51YmFyLWJ1dHRvbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7CiAgICBjb2xvcjogJGhvdmVyLXRleHQtY29sb3I7Cn0KCi5tZW51YmFyLWJ1dHRvbjphY3RpdmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOwp9CgoubWVudWJhci1idXR0b246ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMHB4OwogICAgYm9yZGVyLWJvdHRvbS1zaXplOiAwcHg7Cn0KCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogbm9uZTsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW46aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOwp9CgoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW46ZG93biB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBjb2xvcjogJGRvd24tdGV4dC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoubWVudWJhci1idXR0b24tbm8tY2hpbGRyZW4tYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyOiBub25lOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5tZW51YmFyLWJ1dHRvbi1uby1jaGlsZHJlbi1hY3RpdmU6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY29sb3I6ICRkb3duLXRleHQtY29sb3I7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKfQoKLm1lbnViYXItYnV0dG9uLW5vLWNoaWxkcmVuLWFjdGl2ZTpkb3duIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKICAgIGNvbG9yOiAkZG93bi10ZXh0LWNvbG9yOwogICAgYm9yZGVyOiBub25lOwp9CgovKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCioqIE1FTlUKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm1lbnUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yOwogICAgcGFkZGluZzogMXB4OwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBmaWx0ZXI6ICRtZW51LXNoYWRvdzsKICAgIHNwYWNpbmc6IDA7CiAgICB3aWR0aDogMjAwcHg7Cn0KCi5tZW51LmV4cGFuZGVkIHsKICAgIGJvcmRlci10b3Atd2lkdGg6IDBweDsKICAgIGJvcmRlci10b3Atc2l6ZTogMHB4Owp9CgoubWVudS1maWxsZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBoZWlnaHQ6IDFweDsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBNRU5VSVRFTVMKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm1lbnVpdGVtIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvcjsKICAgIHdpZHRoOiAxMDAlOwogICAgcGFkZGluZzogNnB4OwogICAgcGFkZGluZy1sZWZ0OiAxMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoubWVudWl0ZW0tbGFiZWwsIC5tZW51aXRlbS1jaGVja2JveCwgLm1lbnVpdGVtLW9wdGlvbmJveCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5tZW51aXRlbS1sYWJlbDpkaXNhYmxlZCwgLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsOmRpc2FibGVkIHsKICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsKfQoKLm1lbnVpdGVtLXNob3J0Y3V0LWxhYmVsIHsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGhvcml6b250YWwtYWxpZ246IHJpZ2h0Owp9CgoubWVudWl0ZW0taWNvbiB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9CgoubWVudWl0ZW06aG92ZXIsIC5tZW51aXRlbTpzZWxlY3RlZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi5tZW51aXRlbSAubGFiZWw6aG92ZXIsIC5tZW51aXRlbSAubGFiZWw6c2VsZWN0ZWQgewogICAgY29sb3I6ICRob3Zlci10ZXh0LWNvbG9yOwp9CgoubWVudWl0ZW0tZXhwYW5kYWJsZSB7CiAgICByZXNvdXJjZTogJGFycm93LXJpZ2h0OwogICAgdmVydGljYWwtYWxpZ246ICJjZW50ZXIiOwp9CgoubWVudXNlcGFyYXRvciB7CiAgICBoZWlnaHQ6IDFweDsKICAgIHdpZHRoOiAxMDAlOwogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBob3Jpem9udGFsLWFsaWduOiAiY2VudGVyIjsKfQo"},{ name : "haxeui-core/styles/shared/expanded-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADaXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VZbciQpDPznFHsEJCEkjkNBEbE32ONvQj3G3W47POv52QgXXUjFQ0qUgibs//w9wl94OBKHpOa55BzxpJIKVygej6eummJa9fkRL+WhPdwdMBsFUo5Pz+f4q53igyWq0PSNIW9nx/bYUdJp358MnY5kImIo/TRUTkPCRwedBuqxrJiL29slbPsh+7USP94wq3HFxA7x/J0M0esKP8K8C0lEzZIOADJfDlKXUtGNcKAW6CwZdZJrSQjIqzjFN6jCMyu3Rh+0P5Ei+WgPaHgMZr7ly3bS18EPK8RvPEu7PT+0l3q7eAjyivHoHsbYj9XVlBHSfC7qWsrSMHBDyGVNyyiGV6HbKgXFA7K3gfIeW9xQGhVi0DIoUadKg/YlGzVATLyzQTI3ltXmYly4SQzgKc1Cg02KdHFw1kCvoJVvLLT8luWukcNxJ4xkgjE66Oc/Uz40NMZMeaLod6yAi+emAIzJ3KwxCoTQuPJIV4Cv8vxMXgUM6gqzY4E1boeJTenMrZlHsogWDFTIY6+R9dMAQgTfCjDI/UQxkyhlisZsRIijg58KQ45NwxsoIFXuQMnYGhnkOE/fmGO0xrLy0YwzC0QotpGBmiIVXCUcbMgfS44cqiqaVDWrqWvRmiWnrDlny/PwqyaWTC2bmVux6uLJ1bObe/DitXARHI5acrHipZRa4bTCcsXsigG1brzJljbd8mabb2WrDenTUtOWmzUPrbTauUvHOdFzt+699LrTjlTa06573m33vex1INWGjDR05GHDRxn1Zo3CQeu78nXW6GKNF1NzoN2sYarZZYLmcaKTMzDGicC4TQaQ0Dw5i04pcZjUTc5iYewKZaDUSU6nyRgYTDuxDrq5+8XcA28hpW/xxhdzYVL3J5gLk7oPmHvP2wvW+vy3aVHCYmhuwxnUKNh+GLB7Za/zT+3LMvzuhB9DP4b+x4ZGpWOXjIpbBf5BjvZESfGb17p3MnzUsaTkZSGz7LZNjbfdfNgLSOFzzIBWf0FLcRnDRea9DC87zrUsJPVzJF9E9AIZ3chKjLqCMGW4lAdJQ1qfqo4ZnfxJkL8W7GeJC0Ff6rwZ7PzWf/gmkFuG3wH0GbDwTSC3DP8B0I+hH0N/0pDhLlLCvwJpjAM7CC1lAAABg2lDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV9TpaIVBzOIOGSoTi2IijhKFYtgobQVWnUwufQLmhiSFBdHwbXg4Mdi1cHFWVcHV0EQ/ABxdHJSdJES/5cUWsR4cNyPd/ced+8AoVFlmtU1Dmi6baYTcSmXX5FCrxDQhzBERGVmGcnMQha+4+seAb7exXiW/7k/R79asBgQkIhnmWHaxOvE05u2wXmfWGRlWSU+J46adEHiR64rHr9xLrks8EzRzKbniEViqdTBSgezsqkRTxFHVE2nfCHnscp5i7NWrbHWPfkLwwV9OcN1miNIYBFJpCBBQQ0VVGEjRqtOioU07cd9/MOuP0UuhVwVMHLMYwMaZNcP/ge/u7WKkxNeUjgOdL84zscoENoFmnXH+T52nOYJEHwGrvS2f6MBzHySXm9rkSNgYBu4uG5ryh5wuQMMPRmyKbtSkKZQLALvZ/RNeWDwFuhd9Xpr7eP0AchSV0s3wMEhMFai7DWfd/d09vbvmVZ/P21dcqXiaaDUAAANGGlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4KPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iWE1QIENvcmUgNC40LjAtRXhpdjIiPgogPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICA8cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIgogICAgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iCiAgICB4bWxuczpzdEV2dD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlRXZlbnQjIgogICAgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIgogICAgeG1sbnM6R0lNUD0iaHR0cDovL3d3dy5naW1wLm9yZy94bXAvIgogICAgeG1sbnM6dGlmZj0iaHR0cDovL25zLmFkb2JlLmNvbS90aWZmLzEuMC8iCiAgICB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC8iCiAgIHhtcE1NOkRvY3VtZW50SUQ9ImdpbXA6ZG9jaWQ6Z2ltcDo3YzhmNGQ2ZC05Mjk0LTQ2ZWQtYmRhOS1hNDA1MDVlZjNmOTAiCiAgIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6MTFhMGRlODctY2RlYi00YmMxLWIwNGQtZmY4ZmY4NmZmN2RjIgogICB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6ZDNjOTZmYzktYWZlMy00YTJjLWIwNzgtNmUwM2QxZmQ1ZWEzIgogICBkYzpGb3JtYXQ9ImltYWdlL3BuZyIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE2NDQ1ODI0MDQ3ODc2NjUiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4yNCIKICAgdGlmZjpPcmllbnRhdGlvbj0iMSIKICAgeG1wOkNyZWF0b3JUb29sPSJHSU1QIDIuMTAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDplMTE5ZmRkMC04ODgwLTQ0NDQtYTg4MC02ODRlNTg4MGEzM2YiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjItMDItMTFUMTM6MjY6NDQiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+QhhreAAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YCCwwaLCrn6QIAAACQSURBVDjLY2AYBQMPGJE5cROOK/37///ofwYGCRzqX//7999mebH1LZgAE7LsogLLewwMDO4MDAwfsWj+/P8/gyeyZgwDGBgYGJYUWl1iZGAMZGBg+Ikk/JuBgSF0WZHVWXT1TNjcuaTQcj8DA0MCAwPDPwYGhv8MDAypSwutdpIcQDH9x4pj+o8VjyYVGgMAhMInzjvMAn0AAAAASUVORK5CYII"},{ name : "themes/optex/database-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVHwTe12doAAAA/ElEQVQ4y+2TL0tEURDFf3PvC5tEDaLRIJhEeGX9INsMmhd2P4DiH9C8sLBZwU1aNZsEDYbNfgExKFjc8OYeg9dFxODTYvDAlDPMcPgNY2T1eicLMXoLaJqxKjENzOT2U64RcB2jTtvtzXsAA+j3j7eBLaDB9zSWOOh2Nw5DNvZqDAM0zNgHCPxSAUBiFxjXmHsB2wEoAELQVQgsVhUtCE0zrQCznyA+AiNJN0XBWUpaniyQ7NKdWzMuzBiGEO/c7aHTWX9+gzycilFzKaUlydbcdQ6UgBUfYpVAKQl3J18ntyqyhdkXDAD/AT//h/hXIE4CDQZH83Ugvr/zK1aRoDY3wRpIAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-down-arrows-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAJCAIAAABxOqH0AAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAARElEQVQImWN8K6PCwMDAwMBwfMYEy4wCCJsJLgQnoaJwDpzNuGXLFgYMwAg3F0UUq1omuL1wYJlRwAShkIUQLoNw4NIA3UcXw9uo6KsAAAAASUVORK5CYII"},{ name : "themes/optex/exclamation-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw1AUhU9TtSIVBytIcchQnSyIijhKFYtgobQVWnUweekfNGlIUlwcBdeCgz+LVQcXZ10dXAVB8AfE0clJ0UVKvC8ptIjxwuN9nHfP4b37AKFRYarZNQGommWk4jExm1sVA6/wIYwhBNAjMVNPpBcz8Kyve+qmuovyLO++P6tfyZsM8InEc0w3LOIN4plNS+e8TxxiJUkhPiceN+iCxI9cl11+41x0WOCZISOTmicOEYvFDpY7mJUMlXiaOKKoGuULWZcVzluc1UqNte7JXxjMaytprtMaQRxLSCAJETJqKKMCC1HaNVJMpOg85uEPO/4kuWRylcHIsYAqVEiOH/wPfs/WLExNuknBGND9Ytsfo0BgF2jWbfv72LabJ4D/GbjS2v5qA5j9JL3e1iJHwMA2cHHd1uQ94HIHGH7SJUNyJD8toVAA3s/om3LA4C3Qt+bOrXWO0wcgQ7NavgEODoGxImWve7y7t3Nu//a05vcDKA1yiSVGDWUAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQfmARoVISnazSBgAAAA30lEQVQ4y7WRvQ4BQRSFzx2GDtF6BL2ORxGi3p3SI+gUuw+AVxEKjc4rqLEaG+Yo/GSzZmUScZJpTs589+RegUPT6aJVLnMHoP60DiK3dhCM9vmscgG0ts3MZwBoWKubrqwTcL0iyXulUpp4A7RWH+E0hT/A2uM5751OtbMrKyhQFM0vACqvAmE4qHo3eCo7MSkKfQFI8iOAvwKwfXcRbvEvFV4hjheG5BgASE6MGcbegCiadQFZZhdCqp4x/ZXnDqTzOYgd7yWSapO3lOLGG2BMf0UyBLB/PAmDYLB2Ze8pFEzooQNj6QAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/optionboxes.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBPUFRJT05CT1gKKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLm9wdGlvbmJveCB7CiAgICB3aWR0aDogYXV0bzsKICAgIGhlaWdodDogYXV0bzsKICAgIGhvcml6b250YWwtc3BhY2luZzogNHB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKfQoKLm9wdGlvbmJveDpob3ZlciB7Cn0KCi5vcHRpb25ib3g6ZGlzYWJsZWQgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgY29sb3I6ICRkaXNhYmxlZC10ZXh0LWNvbG9yOwogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICB3aWR0aDogMThweDsKICAgIGhlaWdodDogMThweDsKICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICBib3JkZXItcmFkaXVzOiA5cHg7CiAgICBpY29uOiBub25lOwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLm9wdGlvbmJveC12YWx1ZTpob3ZlciB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlOmFjdGl2ZSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9Cgoub3B0aW9uYm94LXZhbHVlOnNlbGVjdGVkIHsKICAgIGljb246ICRvcHRpb24tc2VsZWN0ZWQ7Cn0KCi5vcHRpb25ib3gtdmFsdWU6ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZGlzYWJsZWQ7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7CiAgICBjdXJzb3I6IGRlZmF1bHQ7Cn0KCi5vcHRpb25ib3gtbGFiZWwgewogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLm9wdGlvbmJveC1pY29uIHsKICAgIGhvcml6b250YWwtYWxpZ246IGNlbnRlcjsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICBvcGFjaXR5OiAxOwp9Cgoub3B0aW9uYm94LWljb246ZGlzYWJsZWQgewogICAgY3Vyc29yOiBkZWZhdWx0OwogICAgb3BhY2l0eTogMC41Owp9Cg"},{ name : "haxeui-core/styles/shared/gripper-vertical.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAKCAIAAAAcmWhZAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAH0lEQVQImWN8K6PCAANMDAwMk5KjJyVHQzlwwEg7ZQCDgwyl+MMKdgAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/option-blue.png", data : ""},{ name : "haxeui-core/styles/default/calendars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBDQUxFTkRBUgoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwouY2FsZW5kYXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIHBhZGRpbmc6IDVweDsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouY2FsZW5kYXIgLmJ1dHRvbiB7CiAgICBwYWRkaW5nOiA4cHg7Cn0KCi5jYWxlbmRhciAuY2FsZW5kYXItb2ZmLWRheSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY3Vyc29yOiBkZWZhdWx0Owp9CgouY2FsZW5kYXIgLmNhbGVuZGFyLWRheSB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50LWNvbG9yLWxpZ2h0ZXI7Cn0KCi5jYWxlbmRhciAuY2FsZW5kYXItZGF5OmhvdmVyIHsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvci1ob3ZlcjsKfQoKLmNhbGVuZGFyIC5jYWxlbmRhci1kYXktc2VsZWN0ZWQgewogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwogICAgY29sb3I6ICRzZWxlY3Rpb24tdGV4dC1jb2xvcjsKfQoKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogQ0FMRU5EQVJWSUVXCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jYWxlbmRhci12aWV3IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICBwYWRkaW5nOiA1cHg7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1yYWRpdXM6IDFweDsKfQoKLmNhbGVuZGFyLXZpZXcgLmNhbGVuZGFyIHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmNhbGVuZGFyLXZpZXcgLmhib3ggewoJc3BhY2luZzogMDsKfQoKLmNhbGVuZGFyLXZpZXcgI3ByZXYtbW9udGggewogICAgaWNvbjogJGFycm93LWxlZnQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKfQoKLmNhbGVuZGFyLXZpZXcgI25leHQtbW9udGggewogICAgaWNvbjogJGFycm93LXJpZ2h0OwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7Cn0KCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LW1vbnRoIHsKICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7Cn0KCi5jYWxlbmRhci12aWV3ICNjdXJyZW50LXllYXIgewogICAgdGV4dC1hbGlnbjogcmlnaHQ7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwoJYm9yZGVyOiBub25lOwoJcGFkZGluZy10b3A6IDFweDsKCWJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7Cn0KLmNhbGVuZGFyLXZpZXcgI2N1cnJlbnQteWVhciAuYnV0dG9uIHsKCWJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7Cglib3JkZXI6IG5vbmU7Cn0K"},{ name : "icons/icons8-database-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAHvklEQVRogd2aS2wb1xWG/zt3ho8ZDkmJFEXqaSeVmlhS4ERuAjeOUVeLJECbtot6EbSLIEGCLrJIX05W1aItUrdIgbYI4GyKFEUX7iJGEBRNK7dGDdWO4Ydk2JBc2ZIsMRIl8T2cGXJm7twuZAsNao5elAznW/IeXv4/L3nOPYcEHnDIdp584tUTUini6yOcPsKJ20GI0ClQ0kUgNBFAJOBNAMBBChxwONyCy/gc5+484UKaEzYZKVnXX3vvNXtXDJz89kk6u6d6iBDygkjpsw5jXyRwBX8gUFNUGYoa8gWCASpKIgglkCQJAGDbNjjjcGwHVdNkelm3DMNE1TD9BIQJlP6HMfZXMPfDrjl59Oifj7KGGnjnjffbuYTXIQjfAydyoi3utnYkfdHmKCLNEVCRbuZ9WIM5DKV8CYVcEUvpJWtlcYmCEJ0z/i4j9m+PHX95YVsGTrx6QipHgz8hwJuR5ojT09/jT3alINKtCV4PhzFkbi9i6vpUrZQrihDIz9SC+VOvj1hdA++8cTKIQO1fkuQfGHxm0J9oa9kR0fVYXljGpbOXapZlX9UC9uHh4Zeq94oT6m3A/dV3ZUXuH/rW0K6LB4BEWwJD3xzyy0pwIFwTf1cvrq4B18WLfYP9AZ9P2hmFG8Dn96H/QH+AM/6dejF1DQiC4NPK2s4o2wTlkgYQ4q+3Xv8EGMPElQmkp9M7o2wDzE+nMTk2Add168bUNQAAvX09uDJ6Gef/cR6lfLHhAutRyhVx7vR5XPn3ZfT293rGil6Lqa42dPV04/rF6/jnR2cQS8TQvqcdqa4UgnKwoaJN3UBmPoP52U+RX84h1dmGoW8Mwa7ZmByf3JoBAFBUBU8eeRJGRcfsjVlMT05j/JNxqGEV0XgUTbEmqNEwgkoAsiKvW9SYw2DoBkzdhFbUUMgVUMwWoZU1hCNhJDtTOPD0IGRVBgAUa94nv66Bu8ghBfsG+7BvsA+6piO7lEUxW0R6No1KUYNlrdYaySeBiiIEQYB0J4PZlg3XdcEcB/adOJ9PQiiqItocRc9AL1qSMcghZaNyNm/gf1FUBYqqoPsL3WuPMYfBqBiomlUwxwFjLhzLWX0RnwhKBVBRRCAYgBxa/6R21MC9oCKFGlWhRtVGbbkhPLPQg8Dn20C5WN4tHR4aSp7rngZmbsyAu7yhgjYD5xzTkzOeMZ4GjIqBC2cuwKpZDRW2EayqhQtnLsDUDc84TwP7D+5H1axi5IMRTF2bWsvhO4lt2Zi6NoWRUyOomTU8fvBxz3jPNBqUgzj8/GHcvnkbN69PYXJ8EsnOJJIdKbS2J+Dz+xoi2qpZWPp0GZn0IjLzGQTlAPY9sQ/dPd0o5by/A+vWASIQ7Ondg+6ebqwsrmDh9gKuXbqGi2dNKCEFTfEmhJvCkBUZshKEPxiA5JdABAGStLq9bTvgrgu7ZqNmVmHoJgzdQLlQRiFbgK7pCChBpDqSeOrIU2hJtYCQjc0bNlzICCFItCWQaEtgPwe0soZitohCroBsJgtTN2FWDDjMe6AgUopgSEZQCSLcpOLR/Y8iGo9CDatbGvJsrRITQI2oUCMqOh/u/MySYzmwbQucc1i11auEzy+unogoQfQ1rPgDaOBVYm1Dn7gmUg41evf/xzMLeXVCu8V6GjwNFFbyDRWzFfLL3ho8Dczdmru/ldjlmJue84zxNGAaVYxfuArOd98E5xzjn4yjatxznrWGp4GBAwPIzC1i9G+j0DW9oQK9qJQrGP14FJn0Ega+9JhnrKcBNariyAtHQEWKv38wgrFzY9BKOzcr0ooaxs6NYeTUaVBJxJGvfwVqxDuVrZtG/QE/Dg4dRG45h4krkzh96jQizWG07+1AS2sc0VgURNhaW8FdF4VsEdnlLNIzaZTzZcSTLXjmuUOIJWIAALNibs/AXWKJGA49+zQM3UR6Zh6LtxcxcXkCAiEIN0cQCoeghBUoIQVUohBF8TNXCcdxwGyGilaBUTFQKVVQzpfgco5oLIqOPR3o/GoHgoq8qTdh04VMVoLo7e9Fb38vmMNQyBZQzBWhazryK3mkp9NgjgPHdmDbq5VYkkSIkggqipBVGUpIQcfedkQH+xCNN22rwd9WJaYiRTwZRzwZ38422+Lz3RM/CHiN13W9snu5vx5VswpKhUq99fonQMhHN69NWfejCt+Fuy4mr96occ4/rBdT34Bl/aiQL+kXz15kzNnwr54NgzkMF89eYuV8sUIs/uN6cZ490K9+8PtHiCj+RVHl1P4vPxGIt8Yar/Qe5DJZXD43VjM1fcHmeP7Y8e/eqBe7bhP3m9f/GLaC7i8AvNKcaGY9fT3+1vYEhAb/1Ooyhkx6CdMTt6xsJkeJQN5zuHXs2PGXPe8uG+5Cf/nDP+wlAnmTCHiRCIKvrSMlxFNxMdYa21o/ywGtpCG3nEN2ccVZSGdcztya6+JPDnXefuvtl2Y3ss2m2+jh4ZM+1TCeAxG+Jgh0yHGcvYIgMDkkW0pYoaGw6hclClESIYl3rhJ3KjNzHGilSk0v68zQTZ/LGBUpnbGZO0I4PtJDgY+Hh49uaoq2rT97AMDP33o/RhkeE1zyECf8IUrJwwQkTIgQBhC+E1bm3C1z8DJj/BbhZBpgtyhjV7//61fuf9t3P/kvzrY6KQ5e/KAAAAAASUVORK5CYII"},{ name : "haxeui_rtti", data : "YnkzMzpoYXhlLnVpLmNvcmUuaW50ZXJhY3RpdmVjb21wb25lbnRveTEwOnByb3BlcnRpZXNieTE2OmFsbG93aW50ZXJhY3Rpb25veTEyOnByb3BlcnR5VHlwZXk0OmJvb2x5MTI6cHJvcGVydHlOYW1lUjJnaGd5MzE6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGNvbnRhaW5lcm9SMWJ5NTp2YWx1ZW9SM3k3OmR5bmFtaWNSNVI3Z3kxNTp0b29sdGlwcmVuZGVyZXJvUjN5OTpjb21wb25lbnRSNVI5Z3k3OnRvb2x0aXBvUjNSOFI1UjExZ3k0OnRleHRvUjN5NjpzdHJpbmdSNVIxMmd5ODpkaXNhYmxlZG9SM1I0UjVSMTRnaGd5Mjg6aGF4ZS51aS5jb3JlLmNvbXBvbmVudGJvdW5kc29SMWJ5NTp3aWR0aG9SM3k1OmZsb2F0UjVSMTZneTEyOnBlcmNlbnR3aWR0aG9SM1IxN1I1UjE4Z3kxMzpwZXJjZW50aGVpZ2h0b1IzUjE3UjVSMTlneTY6aGVpZ2h0b1IzUjE3UjVSMjBnaGd5MjY6aGF4ZS51aS5jb250YWluZXJzLnRhYnZpZXdvUjFieTExOnRhYnBvc2l0aW9ub1IzUjEzUjVSMjJneTEyOnNlbGVjdGVkcGFnZW9SM1IxMFI1UjIzZ3k5OnBhZ2VpbmRleG9SM3kzOmludFI1UjI0Z3k5OnBhZ2Vjb3VudG9SM1IyNVI1UjI2Z3k4OmNsb3NhYmxlb1IzUjRSNVIyN2doZ3kyODpoYXhlLnVpLmNvbnRhaW5lcnMudGFibGV2aWV3b1IxYnkxNjp2YXJpYWJsZWl0ZW1zaXplb1IzUjRSNVIyOWd5MTM6c2VsZWN0aW9ubW9kZW9SM1IzMFI1UjMwZ3kxMzpzZWxlY3RlZGl0ZW1zb1IzeTE4OmFycmF5JTNDZHluYW1pYyUzRVI1UjMxZ3kxMjpzZWxlY3RlZGl0ZW1vUjNSOFI1UjMzZ3kxNTpzZWxlY3RlZGluZGljZXNvUjN5MTQ6YXJyYXklM0NpbnQlM0VSNVIzNGd5MTM6c2VsZWN0ZWRpbmRleG9SM1IyNVI1UjM2Z3kyMjpsb25ncHJlc3NzZWxlY3Rpb250aW1lb1IzUjI1UjVSMzdneTk6aXRlbXdpZHRob1IzUjE3UjVSMzhneTEwOml0ZW1oZWlnaHRvUjNSMTdSNVIzOWd5OTppdGVtY291bnRvUjNSMjVSNVI0MGd5NjpoZWFkZXJvUjNSMTBSNVI0MWd5MTA6ZGF0YXNvdXJjZW9SM3kyMzpkYXRhc291cmNlJTNDZHluYW1pYyUzRVI1UjQyZ2hneTI0OmhheGUudWkuY29udGFpbmVycy5zdGFja29SMWJSMzZvUjNSMjVSNVIzNmd5MTA6c2VsZWN0ZWRpZG9SM1IxM1I1UjQ1Z2hneTI5OmhheGUudWkuY29udGFpbmVycy5zY3JvbGx2aWV3b1IxYnkxMDp2c2Nyb2xscG9zb1IzUjE3UjVSNDdneTE1OnZzY3JvbGxwYWdlc2l6ZW9SM1IxN1I1UjQ4Z3kxMDp2c2Nyb2xsbWF4b1IzUjE3UjVSNDlneTc6dmlydHVhbG9SM1I0UjVSNTBneTEwOnNjcm9sbG1vZGVvUjNSNTFSNVI1MWd5MTk6cGVyY2VudGNvbnRlbnR3aWR0aG9SM1IxN1I1UjUyZ3kyMDpwZXJjZW50Y29udGVudGhlaWdodG9SM1IxN1I1UjUzZ3kxMDpoc2Nyb2xscG9zb1IzUjE3UjVSNTRneTE1OmhzY3JvbGxwYWdlc2l6ZW9SM1IxN1I1UjU1Z3kxMDpoc2Nyb2xsbWF4b1IzUjE3UjVSNTZneTEyOmNvbnRlbnR3aWR0aG9SM1IxN1I1UjU3Z3k4OmNvbnRlbnRzb1IzUjEwUjVSNThneTE3OmNvbnRlbnRsYXlvdXRuYW1lb1IzUjEzUjVSNTlneTEzOmNvbnRlbnRoZWlnaHRvUjNSMTdSNVI2MGd5MTU6YXV0b2hpZGVzY3JvbGxzb1IzUjRSNVI2MWd5MTU6YWxsb3dhdXRvc2Nyb2xsb1IzUjRSNVI2MmdoZ3kzMzpoYXhlLnVpLmNvbnRhaW5lcnMubWVudXMubWVudWl0ZW1vUjFiUjEyb1IzUjEzUjVSMTJneTEyOnNob3J0Y3V0dGV4dG9SM1IxM1I1UjY0Z3k0Omljb25vUjNSMTNSNVI2NWd5MTA6ZXhwYW5kYWJsZW9SM1I0UjVSNjZnaGd5MzI6aGF4ZS51aS5jb250YWluZXJzLm1lbnVzLm1lbnViYXJvUjFieTE0Om1lbnVzdHlsZW5hbWVzb1IzUjEzUjVSNjhnaGd5Mjk6aGF4ZS51aS5jb250YWluZXJzLm1lbnVzLm1lbnVvUjFiUjY4b1IzUjEzUjVSNjhnaGd5Mjc6aGF4ZS51aS5jb250YWluZXJzLmxpc3R2aWV3b1IxYlIyOW9SM1I0UjVSMjlnUjdvUjNSMjVSNVI3Z1IzMG9SM1IzMFI1UjMwZ1IzMW9SM1IzMlI1UjMxZ1IzM29SM1I4UjVSMzNnUjM0b1IzUjM1UjVSMzRnUjM2b1IzUjI1UjVSMzZnUjM3b1IzUjI1UjVSMzdnUjM4b1IzUjE3UjVSMzhnUjM5b1IzUjE3UjVSMzlnUjQwb1IzUjI1UjVSNDBnUjQyb1IzUjQzUjVSNDJnaGd5MjQ6aGF4ZS51aS5jb250YWluZXJzLmZyYW1lb1IxYlI3b1IzUjEzUjVSN2dSMTJvUjNSMTNSNVIxMmdSNjVvUjNSMTNSNVI2NWdoZ3kyMzpoYXhlLnVpLmNvbnRhaW5lcnMuY2FyZG9SMWJSN29SM1IxM1I1UjdnUjEyb1IzUjEzUjVSMTJnaGd5MzE6aGF4ZS51aS5jb250YWluZXJzLmNhbGVuZGFydmlld29SMWJ5MTI6c2VsZWN0ZWRkYXRlb1IzeTQ6ZGF0ZVI1Ujc0Z2hneTI4OmhheGUudWkuY29udGFpbmVycy5idXR0b25iYXJvUjFiUjdvUjNSMjVSNVI3Z3k2OnRvZ2dsZW9SM1I0UjVSNzdnUjM2b1IzUjI1UjVSMzZneTE0OnNlbGVjdGVkYnV0dG9ub1IzUjEwUjVSNzhneTE2OmFsbG93dW5zZWxlY3Rpb25vUjNSNFI1Ujc5Z2hneTIyOmhheGUudWkuY29udGFpbmVycy5ib3hvUjFiUjY1b1IzUjEzUjVSNjVnaGd5Mjg6aGF4ZS51aS5jb21wb25lbnRzLnRleHRmaWVsZG9SMWJSN29SM1IxM1I1UjdnUjEyb1IzUjEzUjVSMTJneTEzOnJlc3RyaWN0Y2hhcnNvUjNSMTNSNVI4Mmd5MTE6cGxhY2Vob2xkZXJvUjNSMTNSNVI4M2d5ODpwYXNzd29yZG9SM1I0UjVSODRneTg6bWF4Y2hhcnNvUjNSMjVSNVI4NWdSNjVvUjNSMTNSNVI2NWd5ODpodG1sdGV4dG9SM1IxM1I1Ujg2Z2hneTI3OmhheGUudWkuY29tcG9uZW50cy50ZXh0YXJlYW9SMWJ5NDp3cmFwb1IzUjRSNVI4OGdSN29SM1IxM1I1UjdnUjEyb1IzUjEzUjVSMTJnUjgzb1IzUjEzUjVSODNnUjg2b1IzUjEzUjVSODZnUjQyb1IzeTIyOmRhdGFzb3VyY2UlM0NzdHJpbmclM0VSNVI0Mmd5MTg6YXV0b3Njcm9sbHRvYm90dG9tb1IzUjRSNVI5MGdoZ3kyNTpoYXhlLnVpLmNvbXBvbmVudHMudGFiYmFyb1IxYlIyMm9SM1IxM1I1UjIyZ3k4OnRhYmNvdW50b1IzUjI1UjVSOTJneTExOnNlbGVjdGVkdGFib1IzUjEwUjVSOTNnUjM2b1IzUjI1UjVSMzZnUjI3b1IzUjRSNVIyN2doZ3kyNjpoYXhlLnVpLmNvbXBvbmVudHMuc3RlcHBlcm9SMWJSN29SM1IxN1I1UjdneTQ6c3RlcG9SM1IxN1I1Ujk1Z3kxNDpyZXBlYXRpbnRlcnZhbG9SM1IyNVI1Ujk2Z3k4OnJlcGVhdGVyb1IzUjRSNVI5N2d5OTpwcmVjaXNpb25vUjNSMjVSNVI5OGd5Mzpwb3NvUjNSMTdSNVI5OWd5MzptaW5vUjNSMTdSNVIxMDBneTM6bWF4b1IzUjE3UjVSMTAxZ2hneTI1OmhheGUudWkuY29tcG9uZW50cy5zY3JvbGxvUjFiUjk5b1IzUjE3UjVSOTlneTg6cGFnZXNpemVvUjNSMTdSNVIxMDNnUjEwMG9SM1IxN1I1UjEwMGdSMTAxb1IzUjE3UjVSMTAxZ3k5OmluY3JlbWVudG9SM1IxN1I1UjEwNGdoZ3kyODpoYXhlLnVpLmNvbXBvbmVudHMub3B0aW9uYm94b1IxYlI3b1IzUjRSNVI3Z3kxNDpzZWxlY3RlZG9wdGlvbm9SM1IxMFI1UjEwNmd5ODpzZWxlY3RlZG9SM1I0UjVSMTA3Z3kxNDpjb21wb25lbnRncm91cG9SM1IxM1I1UjEwOGdoZ3kzMjpoYXhlLnVpLmNvbXBvbmVudHMubnVtYmVyc3RlcHBlcm9SMWJSN29SM1IxN1I1UjdnUjk1b1IzUjE3UjVSOTVnUjk4b1IzUjI1UjVSOThnUjk5b1IzUjE3UjVSOTlnUjEwMG9SM1IxN1I1UjEwMGdSMTAxb1IzUjE3UjVSMTAxZ3kxMTphdXRvY29ycmVjdG9SM1I0UjVSMTEwZ2hneTI0OmhheGUudWkuY29tcG9uZW50cy5sYWJlbG9SMWJSN29SM1IxM1I1UjdnUjEyb1IzUjEzUjVSMTJnUjg2b1IzUjEzUjVSODZnaGd5MjQ6aGF4ZS51aS5jb21wb25lbnRzLmltYWdlb1IxYlI3b1IzeTc6dmFyaWFudFI1UjdneTk6c2NhbGVtb2Rlb1IzUjExNFI1UjExNGd5ODpyZXNvdXJjZW9SM1IxMTNSNVIxMTVneTEzOm9yaWdpbmFsd2lkdGhvUjNSMTdSNVIxMTZneTE0Om9yaWdpbmFsaGVpZ2h0b1IzUjE3UjVSMTE3Z3kxODppbWFnZXZlcnRpY2FsYWxpZ25vUjN5MTM6dmVydGljYWxhbGlnblI1UjExOGd5MjA6aW1hZ2Vob3Jpem9udGFsYWxpZ25vUjN5MTU6aG9yaXpvbnRhbGFsaWduUjVSMTIwZ2hneTI3OmhheGUudWkuY29tcG9uZW50cy5kcm9wZG93bm9SMWJSNTBvUjNSNFI1UjUwZ1I3b1IzUjhSNVI3Z3k0OnR5cGVvUjNSMTNSNVIxMjNnUjMzb1IzUjhSNVIzM2dSMzZvUjNSMjVSNVIzNmd5MTI6c2VhcmNocHJvbXB0b1IzUjEzUjVSMTI0Z3kxMDpzZWFyY2hhYmxlb1IzUjRSNVIxMjVneTE3OmhhbmRsZXJzdHlsZW5hbWVzb1IzUjEzUjVSMTI2Z3kxMzpkcm9wZG93bndpZHRob1IzUjE3UjVSMTI3Z3kxMjpkcm9wZG93bnNpemVvUjNSMjVSNVIxMjhneTE0OmRyb3Bkb3duaGVpZ2h0b1IzUjE3UjVSMTI5Z1I0Mm9SM1I0M1I1UjQyZ2hneTI3OmhheGUudWkuY29tcG9uZW50cy5jaGVja2JveG9SMWJSN29SM1I0UjVSN2dSMTJvUjNSMTNSNVIxMmdSMTA3b1IzUjRSNVIxMDdnaGd5Mjc6aGF4ZS51aS5jb21wb25lbnRzLmNhbGVuZGFyb1IxYlI3NG9SM1I3NVI1Ujc0Z1I3NW9SM1I3NVI1Ujc1Z2hneTI1OmhheGUudWkuY29tcG9uZW50cy5idXR0b25vUjFiUjdvUjNSMTNSNVI3Z1I3N29SM1I0UjVSNzdnUjEyb1IzUjEzUjVSMTJnUjEwN29SM1I0UjVSMTA3Z1I5Nm9SM1IyNVI1Ujk2Z1I5N29SM1I0UjVSOTdneTEzOnJlbWFpbnByZXNzZWRvUjNSNFI1UjEzM2dSNjVvUjNSMTEzUjVSNjVneTE0OmVhc2VpbnJlcGVhdGVyb1IzUjRSNVIxMzRnUjEwOG9SM1IxM1I1UjEwOGdoZ2g"},{ name : "haxeui-core/styles/default/splitters.css", data : "LnNwbGl0dGVyIHsKICAgIHNwYWNpbmc6IDA7Cn0KCi52ZXJ0aWNhbC1zcGxpdHRlci1ncmlwcGVyIHsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiA2cHg7CiAgICBjdXJzb3I6IHJvdy1yZXNpemU7CiAgICBwb2ludGVyLWV2ZW50czogdHJ1ZTsKfQoKLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsKfQoKLnZlcnRpY2FsLXNwbGl0dGVyLWdyaXBwZXIgLmltYWdlIHsKICAgIHJlc291cmNlOiAkZ3JpcHBlci1ob3Jpem9udGFsOwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQoKLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciB7CiAgICB3aWR0aDogNnB4OwogICAgaGVpZ2h0OiAxMDAlOwogICAgY3Vyc29yOiBjb2wtcmVzaXplOwogICAgcG9pbnRlci1ldmVudHM6IHRydWU7Cn0KCi5ob3Jpem9udGFsLXNwbGl0dGVyLWdyaXBwZXI6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItZG93bjsKfQoKLmhvcml6b250YWwtc3BsaXR0ZXItZ3JpcHBlciAuaW1hZ2UgewogICAgcmVzb3VyY2U6ICRncmlwcGVyLXZlcnRpY2FsOwogICAgaG9yaXpvbnRhbC1hbGlnbjogY2VudGVyOwogICAgdmVydGljYWwtYWxpZ246IGNlbnRlcjsKfQo"},{ name : "fonts/Roboto-Regular.ttf", data : ""},{ name : "haxeui-core/styles/shared/up-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAKklEQVQImWN8K6PCwMDAwMCQbKIz98wVCJsJLgQnoaJwDpzNGBAQwIABAOGNCDDIObJsAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/listview.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBMSVNUVklFVwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwoubGlzdHZpZXcgLmxpc3R2aWV3LWNvbnRlbnRzIHsKICAgIHNwYWNpbmc6IDA7CiAgICB3aWR0aDogMTAwJTsKICAgIHBhZGRpbmc6IDBweDsKfQoKLmxpc3R2aWV3IC5pdGVtcmVuZGVyZXIgewogICAgY3Vyc29yOiBwb2ludGVyOyAgCn0KCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwogICAgY3Vyc29yOiBwb2ludGVyOwp9CgoubGlzdHZpZXcgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7Cn0KCi5saXN0dmlldyAuZXZlbjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3ItaG92ZXI7Cn0KCi5saXN0dmlldyAub2RkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWFsdDsKfQoKLmxpc3R2aWV3IC5vZGQ6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwp9CgoubGlzdHZpZXcgLml0ZW1yZW5kZXJlciB7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBwYWRkaW5nOiA2cHg7Cn0KCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkc2VsZWN0aW9uLXRleHQtY29sb3I7Cn0KCi5saXN0dmlldyAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJHNlbGVjdGlvbi10ZXh0LWNvbG9yOwp9CgoubGlzdHZpZXc6ZGlzYWJsZWQgLmxhYmVsIHsKICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dC1jb2xvcjsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBMSVNUIFZJRVcgLSBMRUZUIE1FTlUgQUxURVJOQVRFCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgoubGlzdHZpZXcubGVmdC1tZW51IHsKICAgIGJvcmRlcjogbm9uZTsKICAgIHBhZGRpbmc6IDBweDsKICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKICAgIG1vZGU6IG1vYmlsZTsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9CgoubGlzdHZpZXcubGVmdC1tZW51IC52ZXJ0aWNhbC1zY3JvbGwgLmRlaW5jLCAubGlzdHZpZXcubGVmdC1tZW51IC52ZXJ0aWNhbC1zY3JvbGwgLmluYyB7CiAgICBoaWRkZW46IHRydWU7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLnZlcnRpY2FsLXNjcm9sbCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgd2lkdGg6IDlweDsKICAgIHBhZGRpbmc6IDJweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIC50aHVtYiB7CiAgICBiYWNrZ3JvdW5kLW9wYWNpdHk6IC4zOwogICAgd2lkdGg6IDVweDsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAubGlzdHZpZXctY29udGVudHMgewp9CiAgICAgICAgCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW4gewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIAogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLmV2ZW46aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHNvbGlkLWJhY2tncm91bmQtY29sb3ItaG92ZXI7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIAogICAgcGFkZGluZy10b3A6IDhweDsKICAgIHBhZGRpbmctYm90dG9tOiA4cHg7Cn0KCi5saXN0dmlldy5sZWZ0LW1lbnUgLm9kZCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc29saWQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgCiAgICBwYWRkaW5nLXRvcDogOHB4OwogICAgcGFkZGluZy1ib3R0b206IDhweDsKfQoKLmxpc3R2aWV3LmxlZnQtbWVudSAub2RkOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICRzb2xpZC1iYWNrZ3JvdW5kLWNvbG9yLWhvdmVyOwogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICAKICAgIHBhZGRpbmctdG9wOiA4cHg7CiAgICBwYWRkaW5nLWJvdHRvbTogOHB4Owp9CgoubGlzdHZpZXcubGVmdC1tZW51IC5pdGVtcmVuZGVyZXI6c2VsZWN0ZWQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7CiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwp9CgoKLmxpc3R2aWV3LmxlZnQtbWVudSAuaXRlbXJlbmRlcmVyOnNlbGVjdGVkIC5sYWJlbCB7CiAgICBjb2xvcjogJG5vcm1hbC10ZXh0LWNvbG9yOwp9CiAgICAKLmxpc3R2aWV3LmxlZnQtbWVudSAudmVydGljYWwtc2Nyb2xsIHsKICAgIG9wYWNpdHk6IC41OwogICAgd2lkdGg6IDhweDsKICAgIHBhZGRpbmc6IDJweDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7Cn0K"},{ name : "themes/optex/sitemap-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFg0ACDgYO80AAAGKSURBVDjLpZM7L0RBGIafGXv2JCJuBQ1x7URcKomCn0AjNIJENkI2FKLQbKNQ2QwbhYTNNkSzvSiQSFQa0bmGhsK6J2ePc0axG5lsLCummjzzfm/eb2Y++OcS+Q4ike1gWdlrDcDTU8ltJDKQLtggFtsu8bz3E6A+iy4dR7bOzg6/5Wrldwae99JkFAM02Lbb/J02j4EUhbC8BrYdvAZSBnoArv50iauriSrX9bcALEsOTkwM3/9ooFQ8DHSDMEx1V1Z2ZDANHIbDI+qrheXljV4gKgTWr++e0USVSvQACKWUDaVzwLyUdE5NjZwCRKNr1VJamwC+7w5NT4/fAaysxFt8n2NgAZ4XhVLxJND3lU+LfssKHHx8uOdARZanPE83BgL0ai2SRpqkBNrNhFLS7jjpOqOY7L4eZJvZjtZ0SEDn9llU5BfEAC1B7BrA0VrsOY51BlwaUS8yzN8HjJnQOyLz99dr02ksEA8zM6OPucNUXOzehEIhF2BpaaMcdGUwiDs5OXbz32nmE5YcjAs1DrJ0AAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/default/last.css", data : "LmNvbXBvbmVudDphY3RpdmUgewogICAgX19ib3JkZXI6IDFweCBzb2xpZCAkYWNjZW50LWNvbG9yOwp9CgouY29tcG9uZW50OmFjdGl2YXRhYmxlIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQtY29sb3I7Cn0KCg"},{ name : "haxeui-core/styles/shared/down-arrow-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAJElEQVQImWPcsmULAwZgsswoQBOyzChgglDIQgwMDEzIHLg0AIkLCIq+gFfgAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/left-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAANklEQVQImWN8K6PCwMDAwMCQbKLDBGcxMDAwwVkMDAzMt5zsGGCAae6ZKwgOAwMDnA81AMIHAN2yC5bbbdIbAAAAAElFTkSuQmCC"},{ name : "icons/icons8-plus-+-32.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACk0lEQVRYhe2XvU8UURTFf3f2K7FEKz6MdDYGoaDQwpJEGdhhg4kx2FtqQkKiliYmJtoY/gDpMO4OrJDYmRgoMKJ0lhiX7cBOmJ3duRa7bGZnd5b9pNFTzXtz3zsn75373n3wr0M6GTS1Oj8QiReGIirDACXRXKkQP/h4991R3wSY6+YoxeiCis4CEyFhuwp2DFZsy97viQAza17SYuQp8BCIt6jXUZXlODzPzGUOOxYwszYz7nnGGjDSInEQecD6YNk7YQFG2I9pe9byVLa7IAcYBD6ZmWQyLKDhCpjv5ybU8D4DF7og97HoCSq3Gq1EnYDKnu9RVt87qBzEYCzoiWhdXMl41gr50uRiTfvFzsvmA0SHCipPgMc13f6GuW6Oainygxbcnk1matqmbZ01BMCJwlV/itaYUEuRB62Qd4GECwv+jmAWhLq1V5AAR1XA1Or8ADDWbwHAeIUL8JkwFi2OEJKWS5OL3By80XTWoCe28tthxpREwhkGjsC3AiLa27RrgmIpUuWqCiip6HkJEMOrclUFRCOl/HkJ0PIdUeY9/XCcRC4Wc5UGPmi0lx2eAwAq0WLutFFdgUox8a3VWTqFwteN6Y3fdQIARGWt3wIEajhqBERE3wJOH/kdzzNW/B01l5Ft2ft30tayiD46a6at/Hbb7AJvNlPpn4G+Wlhp66ILe4gOtc3QHDnXjY0FC9e6iigzlzkUlRngT8+oRU+AVKOquWFJlk2ldwXuA8c9oD8WlXthdWHTovR2JnndKLv2cofkefGMZDaV/hIWEFqUAmxa9veYyoSqvKa97HCAV64bu9aMHNp4mCQzySsuLFTu80YPEwV2AdvzjJWg27sW4Efwaeap/CJeOPCfcP/RKv4CC9bmqxDR0ZsAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/right-arrow-square-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAIAAABLMMCEAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAMUlEQVQImWN8K6PCwMBwfMYEy4wCBhhggrOOz5iARRRZAkUULoEuCjGdCVMIRRTZDQD4NA07+SZ5fAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/right-arrow-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAIAAACgB3uHAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAL0lEQVQImWMMCAiYe+YKAwMDAwMDEwMDQ7KJDoID50M5ED6CM/fMFSY4C6oMbhoAEcwMOy/jUHEAAAAASUVORK5CYII"},{ name : "icons/icons8-wrench-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAGsUlEQVRogcVaW2xcRxn+/jmX2fWu102iqJHtdQvNC1AShNcWdwQCFKkIWgQPCCSgCCKkFjXNQ1X6ABI3VbR9qGhBQhW8kEqBhkoICaGqAiGVQoMiSosMaRzb6zjxOvHer2dmfh7O7maz2ctZ+6zzPZ3jnfPP981/mxmZsMf435a6JyLFo1Lg3ZaguCAIZrBnuK41VhXo+a0EfpQi8oLYo3ETbuGtnPfxqGX9MmLT3LBJr5XVvw8fsI8SEQ+zuycCLmb1UwkpHiLy52MGSg2DSp1RUwxlfJ4WAbYgNAyDmI/OJ+Xrw2zbY+aOlZx6ISHF5wCAARRrBttlDd1jbTUD2v+hCMvdCGJ/rALeyukfTjbJawY2iwrVxtCoUET89dQ0XQ0yx9hCaDnjfTgRt/8iCKQZ2MgrNNRw8kz8pcVZeTroPGMTsLSlMp4yB21BzTgf+snI5IExhdC59fp3lrfqB7ljwScjFqKu6PeJZvBXRyUPjMkDf1upZaQtDhoANY9Rrmkow4hJgZi0uofvaOVb6LskO8VpZvdQwtl/5wEHt0/akDZhX9yCYxHKdYNyXd8wnhnfGIX80hZP/zNdP8LMBIxBwHxBf34qKiwAiNi+gwmEqQkLdktEoy3iwuKc+6ugtley+omDMb60P2b/6+x644+nma3QBdgGH2s9e+Z6Eggi7Is1PVFre6Ia1O7FrPfUpBQniQiuTQDoU3euq0+GLkCQeFvr2evqVt2eqDTM4SA2V7L6yYS0TxAByjC2Sk0PEn8mdAEgRFuP3KN0CiLc1hRRqunIK//lmUHmVrL6iUkpHibyF+RSTrcXhhgLoQtgRqP90qfGdYZTXVTf38/W2fX6F2IunWyR38jr9r6pibtCF2BgLreJNq0z/A1cJ1rhJG37A6+t1e8+e4GnbiTf+AozncrXDCqNnuQBwAm9D6xm9YOTEfE0ANQVYy2rsF3yYAuB22I39YBu5AGkAUQB3DVsMAOZ0D1QscSp1mq7NqHcUDAMRDq6cLc3OjAF4G4EIA8ABPwndAHvSNA1A5jmBNgXdbAvZiPSdHahqnG15A0SERhM/NcxJDEL6khfIQDHapKvKNQ8A2kTaPfBy0LgVOgClrP6mOg4ebVKXqGqUVMM6RASkTD2kHQmNS2XQhcghfhx67nUMO1Q8TQj6gpMRWyAgLrHyFX0TkOpSKwfAULeTq9k9cmopCOAfwLbLl/vZAfi16fyNCNfU/Aja2hl6gaD+XhqLnIBCFHAWpZPxCR+QvDJX8mrXnUbgJ8gEZsQi9ij5gIT8FBqTj7faWvXWMnpH0y64jEiQBvGRkEHOT6OihIR35+alb/p/OOuPbCW1c/FpLifAHjKJ99v5XcKAv1OWOrEe6ejq92/7UrAatb8Ph6hTwN+172cVz2vS7qQhd8nEgCcfoMYyBDwogA/M590+94P7UgAM4t0Qf897lIKAKoe40rB77h9oAD8jCx+NjUtlwDglTRHXaPm2eJ3MtMhwSYCEnkDsw6iNxdmnNeJaOhVwMg5cJ5ZRgvmjQlXHAb8UpkpDiyHRUF07/ys8/KocwXBSDXs2jVOQPP5CUfcAQCFqkGmpAd90iCm+1JJ56XdkByEwI1seYPv8Fxem7BpGgByVYOt8kDymoi/nJpz/rRbkoMQKAeWNvnIRJxfdQVFAeBqWSNfHRiezMC3FrpK3jgwVMByxvtIbIJfcgQ5zECmpFGqD84tJnpscdb5RWgsB2BgEl/M8r1xF7+1BCxm4EpRoTL8cvaZhaT7QHgUB6NvDixn9YOTEmcsAcs0L2eHkSfg16lZ59uhsxyAngJWst73p6R4WhBIG+BSXqE2dGvAf8Cm87UgtTtM3BRCqzn987grjrduAi4X9E33O91g4FXpOJ84eojKY2PaBzck8VrOnIlLug8YaWvwhoJzz+ItIA+gdXJikc7rl+PS+ijQ3BoUFczwYEizUB9cnJlIj5lnXxAApPP6XMwV7wGASsMnP+ykxEDGwHzofcnI+fHT7A9xMacfb5H39HXy0cFXRgUSOHaryQOAcAV9s/WSr/ln2Lfvt/Cu2+1+ImoAfXZhxj23dzT7Q0ib2ld6VY8RdQj7JwS2KwZV76Y40sT8xYWk8+e9pdkfNhjtYsoMVBXjzU3VizwDOJ6aky/uLcXBEA3N260X08zcHuRBoEcXku5ze0ctGEShZh4p1Aw2ixq6T9lkwpOppPP43lILBgKA19LedwH+Xs8BhGfnZ5wHgvzjxa1Au8z8I+0dI+KHwViEf1I7C/BPF5LyhVtHbzj+D2MGEBXSUlYSAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAYAAABCxiV9AAAEAXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja5VZZdsUmDP1nFV0CkhCC5TCe0x10+b1g++VNSdMmfzXHFhZC0xWDG3/9Od0feMh8ckEtxRyjxxNyyFzQSf54yv6SD/t7PHZSeuS7/bMeBktA5fhN8ZS/+HRTcJCCnt4pSu0cqI8D+TTA6UnRaUiWR4xOPxXlU5HwMUCngnKE5WNOdh9CHQc95x9pSCs0fOrF1VP46T8YstcVdoR5CInHlyUcDsh62UnZnYJhWoKgRQJaEZErVCTkXZ78nVfuBZWr94RK5vegSDwkHBiPyYw3+pZP+j75bqf4zrK0s8eP/JivjD0meb1z9uTmHEd0JUSkNJ5BXSHuHgQrUi57WkQzvIq+7ZbRkkP1NkDeffMVrVEmBiyTAnUqNGls2qjBxcCDDZS5AZXFS2KcuYl3QGlhFGiySZYuCcg1wCvg8s0X2nbzNtcowXAnSDJBGR3w8++0TxXNuUqeaCUz884V/OJVBHBjIbe+kAIgNK860p3gqz0/C1cBgrrTnBBg8fVQUZXO2lp1JBtogaCCHmuNrJ8KkCLYVjiD2g/kI4lSJG/MRoQ8JuBToChh0XAFBKTKHV5yEIkAJ/GyjTlGW5aVDzb2LAChEsUATZYCrAI2NtSPhYQaKioaVDWqadKsJUoMUWOMFtfmV0wsmFo0s2TZSpIUkqaYLCWXciqZs2Bz1Byz5ZRzLgVGCzQXzC4QKKVylRqq1litpppraSifFpq22Kwl13Irnbt07BM9duup514GDZTSCENHHDbSyKNMlNqUGabOOG2mmWe5oUbugPWlfR81ulDjjdQStBtqmGp2qaC1nejCDIhxICBuCwEUNC/MfKIQ2C3oFmaourWTMbzUBU6nhRgQDINYJ92w+0DuATcXwo9w4ws5t6D7DeTcgu4T5F5xe4NaX6dN8+I2QmsZrqR6wfKLSkFJZ4g4g1c36Dql/oG6UGqPiEsNTqEingSE6piK1VGtDwQaP1Pl/Ldtfk2Xol/xyf3Il9FrM8DaQ8JJ6wsK2+KsnZbR3Lcfm8FJG6EAcJPw+NxTsI0RwzXH3Sbda/FleFgKxcDsJd7ckBeFF3WfDXzQ7G0tMLh/eP8+Uvd5ClgOb6TXMbrclOfkd6Vhdd9R98y4KCp6htH8xBG87jUacqKxjmIrum46yn5gqW2J74X2lGQ6/EMCcWwADniOVRnc1vjA2hxsEIpVFL4IZtPDcaxrN60sL/+tYy/UvQxsX6yjoAtugHyYbn4Pl3U5LQoI0npx8t7+3PpVq11KphAZ25H/NI6vqPtSYLslI6+7U1/XvA93kLcclJH3EPECtXnk87/58UHdTxX8rxXhNtYBgfsbkBUChqlTc0oAAAGDaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1OlohUHM4g4ZKhOLYiKOEoVi2ChtBVadTC59AuaGJIUF0fBteDgx2LVwcVZVwdXQRD8AHF0clJ0kRL/lxRaxHhw3I939x537wChUWWa1TUOaLptphNxKZdfkUKvENCHMEREZWYZycxCFr7j6x4Bvt7FeJb/uT9Hv1qwGBCQiGeZYdrE68TTm7bBeZ9YZGVZJT4njpp0QeJHrisev3EuuSzwTNHMpueIRWKp1MFKB7OyqRFPEUdUTad8IeexynmLs1atsdY9+QvDBX05w3WaI0hgEUmkIEFBDRVUYSNGq06KhTTtx338w64/RS6FXBUwcsxjAxpk1w/+B7+7tYqTE15SOA50vzjOxygQ2gWadcf5Pnac5gkQfAau9LZ/owHMfJJeb2uRI2BgG7i4bmvKHnC5Aww9GbIpu1KQplAsAu9n9E15YPAW6F31emvt4/QByFJXSzfAwSEwVqLsNZ9393T29u+ZVn8/bV1ypeJpoNQAAA0YaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjIyYzQ2ODgwLTQzNDktNDFjMS05NWJjLWZkZGNmYTk0OWIxMyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDowNmYyYWY4Ni1jNjA4LTRlZTItOTUwMy1lM2QwOWY3MWRhNjgiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDoxMDAxNDQzZC1kM2RkLTQ2YmQtYjYzMi0xMWE5ODk4MTYyOWYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICBHSU1QOkFQST0iMi4wIgogICBHSU1QOlBsYXRmb3JtPSJXaW5kb3dzIgogICBHSU1QOlRpbWVTdGFtcD0iMTY0NDYxMjI3NzAwMjQxNyIKICAgR0lNUDpWZXJzaW9uPSIyLjEwLjI0IgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQwN2YyZDllLWYyYzUtNDY2My04YzEyLTRkNjcyMGZhZDM0MSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyMi0wMi0xMVQyMTo0NDozNyIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz7T4nLNAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH5gILFCwkvxUCjQAAACNJREFUCNdjYEACoV1H/iPzGbFJrC6zYYRLouuAKWDEJgEDACRXDUjpoGrXAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/up-arrow-bright.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAECAIAAADNpLIqAAAABnRSTlMA7QAcACSX3bo6AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAK0lEQVQImWN8K6PCwMDAwMAg9Pj2O1lVCJsJLgQnoaJwDpzN+P//fwYMAADCtw5xBtAKnQAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/default/progressbars.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBQUk9HUkVTUwoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLwpAa2V5ZnJhbWVzIGluZGV0ZXJtaW5hdGUgewogICAgMCUgewogICAgICAgIHN0YXJ0OiAwOwogICAgICAgIGVuZDogMjU7CiAgICB9CiAgICA1MCUgewogICAgICAgIHN0YXJ0OiA3NTsKICAgICAgICBlbmQ6IDEwMDsKICAgIH0KICAgIDEwMCUgewogICAgICAgIHN0YXJ0OiAwOwogICAgICAgIGVuZDogMjU7CiAgICB9Cn0KCi5wcm9ncmVzczppbmRldGVybWluYXRlIHsKICAgIGFuaW1hdGlvbjogaW5kZXRlcm1pbmF0ZSAxcyBlYXNlIDBzIGluZmluaXRlOwp9CgoucHJvZ3Jlc3MtdmFsdWUgewogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMXB4Owp9CgouaG9yaXpvbnRhbC1wcm9ncmVzcyB7CiAgICBiYWNrZ3JvdW5kOiAkbm9ybWFsLWJhY2tncm91bmQtY29sb3ItZW5kICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1zdGFydCB2ZXJ0aWNhbDsKICAgIGluaXRpYWwtd2lkdGg6IDE1MHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDhweDsKfQoKLmhvcml6b250YWwtcHJvZ3Jlc3MgLnByb2dyZXNzLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRhY2NlbnQtZ3JhZGllbnQtc3RhcnQgJGFjY2VudC1ncmFkaWVudC1lbmQgdmVydGljYWw7CiAgICBoZWlnaHQ6IDEwMCU7Cn0KCi5ob3Jpem9udGFsLXByb2dyZXNzOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQoKLmhvcml6b250YWwtcHJvZ3Jlc3M6ZGlzYWJsZWQgLnByb2dyZXNzLXZhbHVlIHsKICAgIGJhY2tncm91bmQ6ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0ICRkaXNhYmxlZC1iYWNrZ3JvdW5kLWNvbG9yLWVuZCB2ZXJ0aWNhbDsKfQoKLnZlcnRpY2FsLXByb2dyZXNzIHsKICAgIGJhY2tncm91bmQ6ICRub3JtYWwtYmFja2dyb3VuZC1jb2xvci1lbmQgJG5vcm1hbC1iYWNrZ3JvdW5kLWNvbG9yLXN0YXJ0IGhvcml6b250YWw7CiAgICBpbml0aWFsLXdpZHRoOiA4cHg7CiAgICBpbml0aWFsLWhlaWdodDogMTUwcHg7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzcyAucHJvZ3Jlc3MtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGFjY2VudC1ncmFkaWVudC1zdGFydCAkYWNjZW50LWdyYWRpZW50LWVuZCBob3Jpem9udGFsOwogICAgd2lkdGg6IDEwMCU7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCAucHJvZ3Jlc3MtdmFsdWUgewogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIGhvcml6b250YWw7Cn0KCi52ZXJ0aWNhbC1wcm9ncmVzczpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7Cn0K"},{ name : "haxeui-core/styles/default/cards.css", data : "LmNhcmQgewogICAgYmFja2dyb3VuZC1jb2xvcjogJHRlcnRpYXJ5LWJhY2tncm91bmQtY29sb3I7CiAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAsIDQ1LCAjMDAwMDAwLCAwLjEsIDUsIDEsIDEsIDMsIGZhbHNlKTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIHBhZGRpbmc6IDE1cHg7Cn0KCi5jYXJkLXRpdGxlLWxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIGNvbG9yOiAkbm9ybWFsLXRleHQtY29sb3I7CiAgICBmb250LWJvbGQ6IHRydWU7Cn0KCi5jYXJkLXRpdGxlLWNvbnRhaW5lciB7CiAgICBwYWRkaW5nLWJvdHRvbTogNXB4OwogICAgd2lkdGg6IDEwMCU7Cn0KCi5jYXJkLXRpdGxlLWxpbmUgewogICAgaGVpZ2h0OiAxcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQtY29sb3I6ICRub3JtYWwtYm9yZGVyLWNvbG9yOwp9Cg"},{ name : "haxeui-core/styles/shared/option-dark.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAMAAAC67D+PAAAAQlBMVEVYWGzW/9EAAACYtdLCqYPP6PTU////9KxYWFhUVlhXVVJ4rthXkMHs1Kxsj6lSYXvElmdYWGeefViUXFhfUVNWUk58LX/QAAAACHRSTlMnCADr69QWFksN2hQAAAA8SURBVAjXY2BiZxDi5OBjYGNiYGTh4OTg4BJkZmTgFeEAA35WBgFOCFOUm0EYyuTiQWYiFCBrQxiGZAUAvXcDb/w8amgAAAAASUVORK5CYII"},{ name : "icons/clintex-logo-text.png", data : "iVBORw0KGgoAAAANSUhEUgAAAdEAAABzCAQAAABtafBBAAABJWlDQ1BJQ0MgcHJvZmlsZQAAKJGdkL9Kw1AUxn+poqUqDoqCOGRwLbiYycU/GBwKNa1gdUqTFItJDElK8Q36JvowHQTBN/AFFJz9bnRwMIsXDt+Pwznfd++Fhh0HSbG4D0la5q53NLgaXNvLb6zQosk2635QZJ3eWZ/a8/mKZfSlbbzq5/48S2FUBNK5Kg2yvATrUOxMy8ywis27vncinontMElD8ZN4L0xCw2bXS+JJ8ONpbrMapZc901ft4nJOhy42QyaMiSlpS1N1TnE4kLrk+DxQEEhjIvWmmim5FRVycjkW9UW6TU3eTpXXVcpQHmN5mYR7EnmaPMz/fq99XFSb1tY883O/ai2oGqMRvD/C2gA2nqF1U5PV/P22mhmnmvnnG78AyHZQVYXAJlAAAAACYktHRAD/h4/MvwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+ULCggZOsEv0PYAAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAeWUlEQVR42u2dd3xUVdrHv2cyCQECJEAIRCF0qYIIKAii4AIWELusoovKi6AIKgusZV3sooKAKCK6uCI2sCEoYkMFpYiEjvRQpAQIIZVJ5nn/SFDm3pR7ZibJJJwf//C5mTlzz73nd556nkdh4BiiiKQKkSgAckknU3nMczEoSSjzCBzSsybnkEAjziaOMAAy2UUSO9nObkNUA0PRognUk54OP5rDcvWF5uhRdOcqutCE6pY/edjPOr7gc5VkFpOBQeEkekycIkte1Bw7Xh6XLeIpYsxDMlcuMm/BoCTgNo+gGOuzEc/Tm6giPxbL1Zwtj7PYKLwGwYbLPIIiEcU/GVAMQfO2us48x8VinqdBaEtRcVOTysRYxvWSzgmySFHecvZ8ujHQ4TamaMMQ1nDELCqDEKSo1KcVcdSnDrWpQi3LuEIqqWRyRPawnyS2cURJOVBzq/IPqmp8oR+T5IhxkhuEEEUlggu5iDbUJ45qRFO56I9znFRSSGa7LOOnkA9WNKWt1hOqQi9WUi40BXHTitYhe3sr2FnuNK5QoqhAJarTmt704WyqEpkfKSxeGYwmmgZAd24gnU2yiI85RHqIvo521NT8RtdyE8aqxFWMDtm7G8VuDEX9pahEcA69GEBHqvi9IMOJJpqz6MVo5jFffuNwCNL0LKpofqMtLnLLxZtXRBITsncXYZJq/KSohNOcXtxA1yD5ghVxDGcAX/CpfKMyQuzpxBWjuBsYhBJFRRHHQPrRkWpBvot47uRi5srbalNIPZ2qJm5sUE4oKhBGFx7iAm3rzCmacR8XyjS+JN3oOAYGWhQVF3UZzF3Ud+gW8ldmXUxr3ucl2VkeQjIGBiFCUQmnM6O4isgSv5sw6jCChvxHElUoOF1yEOO2MAhxioqLfoymSyne0+VUZ7z8EAIkTSarwjqMPKxlTsCjxNGRGj5XDvMrRwMed7sJuTikqETQl/G0KeV76sp4HpWfypykh7UpepjyoqKf5Et+CniUbjxpoehuJrE24HFTy0noqqwpKlUYzH00LfW7CqcLE/inLC1jkm4lVTN2uK68UFQJaaQFOoocJcdG/SPqgCFW8FBEdFMqcxsP06xMTsO46chEWpXx01lBkhblcvjKKGgGpURRqcQNjKZemblLXHTgSYkrU0lzhPlkanzhN5YYX7RBaUnRTjxCk7LVxejJMKlWpvcwl18df/YYb5ijaAalRFGJ5aEysEGtiOI2LpeyzPBJ4mmcZTyl8TafqmyzpAxKgaJSnXFcEhIRwQYM5zwpsztRuXzDGFaQXaRN6uUAU3iWg2ZBGQQb7gKt0Nu4JUTigWF0Yyi7OVRmJPXIF2zlDq6gviW8kAcPB9nEKyzkpMlyMCgFioqiI7cTFzJ3GMZNfC1zVU4ZStItjJUPuYTzqEc1auXnWR0hg30k8SPfc9S4iQxKS4rW5GbOC8LIaSTnh59dNAgotzeKu/mGw2X7oNQqVkkUDahBnXwN4xBp7OJo2W0eBmcgRSWMztwYAKGy2UAia/iDNNLy7TdFLAm0pgvN/TzcdT7X8lrZPyyVxkazZAzKVorGMIo6fozjJZXf+ZzFJJFJBidPV/xEEUFloujE7XQjWnsLqMpd8rnaZ16XgaFoH7r5McoJVjKDz8nEW5DLRAnZZJMi+/iCHgyjOzFa/mJFcwbJC0alNDjz4BN0kRgGaR858/I7kxnKhypdeYvmnRKVpRYxjOfYo/kr1fkbDc3rMjjTpWhv2mtm5Oawgpf4Up3QEIl/yFSSGU1Lx18RDvCdViqegUHFo6hEcQW1tb4t/Mp9rNfNqVGZMocUnnREUiGTL5nJL+qYeV2+DwaFi6q0IZ6aNCSC4/yBh1z2sZv9ePAiJlZbYSgqip501XLkCL8xjDX+RARVlsynMk/RoEib1MshfuC/rCSlbI6liaIa4Q4/nEuaE2tZoIpGYkgmmfYnLC6qcRYX0oOLqUo4LiJQ5JKDAB48HGUTX/GTHCS1Itvw4iIcF5XyV66QheCpSDP+S4pW42JNa28bj7HO35C98sgHxPJoEeXKDrGC1/lSnSzD5xPOCNo6/OxBXmWzk6lzFdc6voOP+ZQsy7KMohPX04/6RXyvHq25nmS+ZoEso8JVg5JIalOb2sRSjyo0yO/86uV3sjggBzlGMgdUWkWiaAIdtaKWR5nB94HsVsojs7mA6wqUUkdYykI+UQfL/Pn04G8OP7uDuQ4p2pabNDbCBT5LM4zmXM8gmjn6dm1uph+LmCnfqwpiy4uLc2hLS86hCY2ILfBD6exhO+tlLRvZEEhbEokuoCRtKqnB3/JEEW/zBGWS7P5z2s1ppzFeLt/zYaB7lEqW1+ltk6M5rGAOX7BbmeIYdtnRk7vpqdUMqioDaMEseUftL/fzr0xHLucCWhBXpFFWlRa04HIOs41VsoBlKt3Pn7yYW2xPezWTS+DY4SUMtxlAr7LwlNyMogvRGsPtYbZ24KQgLOdbrj/NTPOwjZksYI8y/lv7Ao3iVkbR2LF1fAouWvIvOsiTbCyvCq8oKtOZO+jCWY4teRdxxNGJ/qySWfzECT9mn8hQ+li2g+5skznBtHcFmvAQl/r8jvALW/nzLGYMvTRG9PAdC4LSgyWD6fQnIv//O3ifOewj2/ghCyToMB4lyq9DgooYrqM2I8tnCqNE0ozh3ExV7e0JImhEfXrzGdMkUWVpfjuJh2nCOT7XqvMIv7EuiBOszSgushB0M0+yQ+XpvqJoRHuNAU/wfnCcOErYwhogm9VM4nr1pNqhDEELVvEG8zDVAjjFG85lPC9Nyt3MlZzNHXzAUKL9IOgpn0INbuUd/iHx2it0DS/aCrE14gmpG7QZVuHv3GTRDQ7ycp6vJ888DaO71phbWRq0N3Cc79jB64zkMbXFULGQlxhGH0YWeF5VDz15UOqUq5m7aMO/eYIWAZcYUDThSR6T1uLS+xpz+dRS6dBNdwZKpSDNsCODLW6vTD7jk7w2ZO58inbSGvVrsoL2DjKYxVesI9mcuCwC7bifRkEYJ5LrWCevl6O44bk8S/cimkjmcJDDJOVTSFGdRtQt9PO1uI2mPCQrtcy047xKMzr7XIvhdhL5NggzrMkDlsCelzVMPeXcc+dr6+dqDJnL4uAVIla5bHYUqjiTZWgsd3BhkIqlxjKEjfJDedgQxc1FTOD8Any3XrJJYSk/sobDnCTzz8I1bqpQjXO4jEuJJdL21CK5hJe5R1Y5J6nyyiqm8gQJp0lyRWvulb1sDexJips7uNwyw2Se+ctnkEfRDlrtCLeyGyPxSg9uunJTvkstCHsi7biVTWVXakZj8fbkWdrZSCYcJZFFfMJePOQUkHsFv/ERsVzDFbQj1jKCiw5M4z5Z4Tyop7LlIxIY7RP1cNOPzTwrqf5r4OLiUkZa3m0mU1j81waSd/Pno6NVJ5JmHDqliCoM0cydLhourqWThIU8QTsyjvNsBM3mRx7jRjVB/a4ylKcgGaZQuSpTJanJ3MoYluCxPYEOPEU7HZtUZfAGX9ks0nvoFZCN3Iwx1LXoqAt543S/syvfP6XjKdtqzpyUKlrTNcgj1uSGIqy7UCCooj5jC3Bi7mMaI5iuHCYOqMPqfzzADFuigYsu3E+ClvpxgBfZablYnRF6o/jMMobBXGDZhBJ52bcIUN6fG2ul/m0NorPIoHhcrpVL5Ax/o25IzzmCwfS2rEov63mYp9RazayzRMbzHPtsNml/BkmU1kirmYL1VFcXhotfRoiE05eBFhNzHzNY7js/F0gj6mm4IjLK6tTJGYqu3OB3NLBw1D4tpysUZWhv/s8i5738xp28p7QbIypRh3mFx9lp8aBUZzgXaJ3Wy+FD3raozZHczEAJ92OO7RltOQiRxnt8YM2rc8GfFe2c4SDHDW9KET04qwSKjofTVyJDds71echSQcvLGoax0t9q/yqdN3iMXZbLcTyqU45WwUGm8J0lnnE2I7hIdP3tdXmY83zerJclTOSY3XUA9ULbLjnD4SqRrgCKBMeH7EpbhkYwiFaWWa9nHKsDCW+oXOYwGWt1kI4M1HtsbOQVdlgutuNO6mnN0c3fucIyx928pPbbX7YbiNWSoqnGWVSmyGI3G9nDPk6SVwC1KefSSDsoU4POrAzJGbajf/7pz1NIYiqB95rN5X06cqvPtSpcL4vURh2qy2JmM9rHhnQzgFUyXUPGd2OoxdJO59WCWzK7QaOuAMAxMgxPyghH+ZLP2c4hjpOqckEUVahFHD0YRbyWvK1GeyH0gmdSlSst8j2Tj5mrAl51CjnETNr4ZKMr2nK1bNQqR5khM+hMX590gyhGskTWOBlH8joVNbQ8/Pm8V7Ab1gU0suxZRcNrmtyWxcrlOO/Sl3v4QK1Qu9SxPJmiRKWrJLWSl7mG5eik9YXRyP9wQQk6ilpzlY9WJ6zmZZUSFO3eyzLetFh7UVxGG81xDjDeouxCAk8XcrzciprcyxU+YjGXJbzEPkVhFHWXSR9uAx0VbTNjuVutVIV401UWq7ibpVrbZ52gZP0GF5H05nyfKyeYobYFzQT3MN/ylBRd6KXtkV3DeEsLExfdGCrFenUkkuu43SeMJuxgolpeWEKiS6oRZTgQ4hJ0K+N4Q6UWufiEdUzROmYfE0LNtf6SMFdYrmz0LQwTMEl3scAiRyvTTc/ZA8rDIuZYTL5q3EavorO2RNGGERZvdTqz+Lrw77iooaXmGpQ+MpjIwuLPpigvS2wBgaIQHWrpC6I413ZueRYpQf6ZhbYc8y6crT3KEWbxi+VaE4bRvMhv1eA+myf9a2YWZWkbFTf08R3znB0eU0f4ViM9virRIXYaIow+lujCdr4n2Ikye/nJkn5Qjy66Zz+VsIFX2GZh0yXcLjGFPVVxcSv9LBd3M1EV+c4MRUMdmUzXkCPLNFRdRc0QM3Iq26otLuRAsL3OystCS+DQRV/9J6E8zGcmqZYZ/J8tcfEUQcPoznDLsfxkniku9GUoGur4hbUaJxu3s0tD6tQogezfQNDZYh2n8yMnSuSZJlmudPGnH6A6yUt8blGaY3iokC4LzRjHOT6hlnTe5uPiqikZioY6NqJXCnUTzqtKhZovv6Ol6dfv7FIlEeLzsMpyJVKrRO1fJM3mBVtBgpbcLzb/jtRmMBf5PO8cfuANVaxhYiga6tijmc31h0Z0tFaIuQrPt1H0QIn8Tg5rbUr/uX6OtYFJFg9xOFdwrW8YR8LpxSDLqZY9THNSb8RQNNRxEL3U8WQNilYOWi2HIEASSLCVqfyjRH7Kw2qLeqro6Kdle5JPmW3ZRmO5mwv/OkMj0IKHLYGdVF7hGydJjYaioQ6PZvL4bjzldKbNLH0JjrG3ZMqgKSHF4vlWNJTKfg53mBl867MxuujIcBr+SdIajKW1z3e8fMp0ZzV9DUUrGspvemaCRe1OLYGmDKeQaZPPVSzlrDUIr9bzEpt95HIY1zE4zxknlbiF/rbaCs/jsIWFoahBqKCBhaLHS5Ci2bb4cXhAiRxLeN1CuXDupKsooCvDLCGdJCbyu1PtyFDUIDQs0XDiLM6itKDnFf2FXNt5rfBA0iGVh3dZaLkYzyhqSVOG0dwn1JLGB3zp/OCa2ywOg5BALWpZrqSTWoq/H0GDgL6fzDO0s5DxYh4mg6t8nHIevuQ1Hf3ATRrpZn0YlDmq2Gp/SAlWa861+cldgXm3lcgGxvMCp/eMqcq9iM+xM2EjE9mu4wJ0qxQxtYgMyh6xtlrBNWgrsSX0a1G2HKywIvrFO1R25Sve4h4fi9qqpR5jqvpZb1w34MGrYZO6CTPryaAU0ILxZJfQ2GGcZVN04wMdVB2Rt2hL3yLMx3nM0x3VDRwgQyOJOFaruYSBgTNUtlXQiqZDuZvFVibSttBqFsuZrl8/0wWcQKdXaGQJVHU1MIjW6hIfolBefmRygW4uYRvPsFa/iqEL2Kl1mqCS8QIblABcFSMAqHKYwbwCThul8iZf+ZMt5QKOaWn8saZKg4FBEcjgDZILuHoAvzrbu4BdWvGncOqIUXUNDAqDmzYFBHDiuIVW/g0HhzQr4zancrlN1TYIVaTbVuFxdpeYR7cgBKXOoMB5PEhMAcLwIu6SJ0hW+hRVHlnHhRqB21ZUKdW8D4MzAcdtvs7VPKhV0TBQnAzKKPV4lMYF/iWSIWzgLd1tJ8/1swWPBkU7EC1BrSgj4bg4qUzn7zMZYjujc5KjKrmcTSKGB7m00MyByoxhA0v1bVFYq8XsOrQIsvetA6PoIiYlwqB87zKRXMNNRdaDSuA+qesPRTdr1sfpFUyKSjWu5lEmMVLqmdd8xiKzvDeWFhfnM9xSkTfXoj676cMgPXdrHtVSbLVcikbvAsxh/83rpvSgKp14lDfkGokRZdbrGYgU29GzchUpFajLKEuRspN8xiuWoinVuYsrdbqRuvK5rqcfxwexx3Nl+tAZUETTm9d5jQvEtLA485Blk6K1A8+aLUVUYQhXW9J61vAI01nkUzRF0ZQRtHdO0lMUXa6lZlRhgASlH4goWjLkz4mFUYsbmMv90k63OrhB+YY6xB8Wh5Gr/BzYkDCuYJglNfYIz7BZbWEaW32O1bnoyQhiRYeiStjhpFzgad/qwHUSjERAN4NtLuqzeIip3CXxRuU9o5BsUQmjLJXbQxnnMdLSujCTt/hOeYElzLSdyb6Ra51uQKfE7TG+0bqlWtxgqWnmH/7GdQVcjaQ7/2Yafc26PYOw3+K0rGE7QRqqMjSOuzjfYjl/zYy87AHl4S0W2/TQ4U75c2rYNJZaCvYWo5fQhSFSLxA5Jy5pyZhCK8bUoR+vyovSRiKNND0jsNuSEBND3fLw5iWKQdxgaVucyDS2/RnpP8oLttylFjziLPyST1HlZTO/at1ZJf7Bnf637RFFUx6naxFeuzASGME8RtLcZAWfAdhqERJhJARaCaEUCOqmD/db7vMgU/j6tDLWwq88b/FYu+nNMKnmmKLADr7XbE1QlXu51j+LVBT1GUXfYs+ehtOcx5nGjVLbrOGKDZVkaxnViNiQv+1W/MvieT7Jh8w+vc68QmUz39YyuAa3cVXxwudPiqpslrNT8/bieIQbxZ/DaQ0ZxyCHMjiCnkxgvHQwy7iC41dLXKG1rXxJqMnQCO611YZYwTRly/dVfzCTlRafdUOG0qo4Zf50NXMlK9E9ctqYJ7hXtwiUNOdZxwTN24biuZJGZg1XcKyyULRuyJs4N3MNvhQ7zPOFnJlZz+sctFzrwrDiCg2dRlF1nLfZr3mLLhoxjnfkcqlRvGkvSLjUlcHM4RpNK9bDj/xk1nAFxwpLG4cwLi8pa1SiJF4iAzm5IWHSmwcs1X+PM4XvCm6mpDx8xBzLJhTBrVxTdHa6r7NmKT9rty1XVOMy5vAcvaSRRBYxpUiaMZB3eYUO2vWP9jDTtgOdDm857mVicAqZfGW5chlNS8KrKy568h73cLa/o4uiNWM410eGZjOX/xZeZkhlMgFric6qPMp5Rf2Sj7NHZclULvWjX7EimqFcxzJ+lg3sJYmUv3YSUcQSTwPa0INutoLGzmToV/xc5LNMId1UJiz38LKYET7bd2UGsaIECghE04fuXMC5zJDlfvVfq8kQevgQ1MuvzFT7ivxWMk/TxFL3vgGjZYxKckRRYA0LGOzntGvTnyvYxx6SSJFM9pEL1KFGPkXj/a4duJfXVNEHblPJMBQt71AiG9hAe5+LfWlFYpBlqKIFA4AI/k5L3pB5uudSJZz+3GRhTzKTbN2/rTP0ygre5EGftRpOH9bKZJXujKKZzKJXAN0t3CTkVxHN5QReoCqBZtsKr7OpmM+cdOzoctFKbrdJ6XVqnaFICOAI82jnI5vq8g95IMjH/aswND9Q4qYjDbhIJrDB+W8ItGSMJSCUw/sscCCPT/AO7RjgM8doBrNeFhRsw7ptLF/FZP4dhOzIsCDVRc3lE+YUe+T8D446dNCHcyldLNfSmIihaGhYo0vYQovTrlSiP0tkvsoN1k+I4kr6nWakxTGAT9mk4YWpy1M0s7B2Cc8rB3kFSmQHL5NAex8/UGNGs1PWF7RN2HJ7VAZz+SxIdVyCYZ2s4yW1u1ib/oBGo7tK1LD8q445VxMiqi6JfGzxejbmvuKjhxo4l0cs4uN7VjvfAqQGo+lpSYLfyiPsdThHr/qWyRy28LA79xbsvS4g/U4l8RrrCI1KQgd4jdUOPrePZLPAKwRJU1nE75aLnRnihxOzYII14RFa+KiZR5nvlF4gkVzFtRan5yGmsU5LGZ/HfJvUvpkBDikK/MIEjoaE2jOPucpBCVF1gs2a6YsGoYpfWWRJlavKzdwTjIP+0pCx9PZxW+byPV8phz5jcdGeYZaeLVl8zPtKqwWoSmea7fhnNYbJ+Q4pqnL5jMllrux6+YVJjn1ty0uwp7NBacrRNN5kvUWLi+VeRgaWaSRIPOMZaOmmkMRsp6VABerxAJ18WONlBa+qg9q3s4EXLIfvFOcyUuLEkRRFZTGdtzVLYAeboGsZyS7Hn/+O3ZgynxUDvzPF1sc6hvsZI7X9TjUIoxHPcrMlqy2dt1mgnKa9VOYurraUs93DE365Gj18xjSL5hdOf+62NmQp9CiYOsx45pRZSWsviYxlk3P9XqXyYcg4uQwCk6NePmKOzVarxVgm0FH86KYt1enDLP5uqxb9LVOV81VzGcMsI2TxOt8oPzLbFOoos1hsScuowWD6+moLRRQ5Unt4lvc1y3cGi6C/8W+WaGZ9LGKfWd4VBFlMKaAOSDUGMZkhUktPfkprHmQS3WylSDYywSatCx+nFaNth+MW8mYAuttWZtj0xASG+yY9FlmHTG3nGV4tdXVX2MhjLFa6/Ty286ZZ2xVEjgq7mcBvtj+46cJjTJV+4jByL7HcwavcT3PbWt/Fc6x0qqdJHPfQ0TLGeqZx0P9okMrlO9618esihp4uq4s5kK12yrMcZgw1S62mqYefGcV6pZ+Xmc17dOZKTFX7ikDSHPmJf/GErSYQxHIDPdgmX7OQHZzEQw7e04kiCjfhVKYJV3MZjQuogeRlG08z16kYkChu5WZLqGU/U1imAjq+oTJkCh240icI5GYgq2X2qZGLr5lwlFfYw320tzU6Lwn5eYz5PM1WfxK+lMhOniGGroakFYKk2fI1J5hEJ5RNlsZTjwt5kJ0sZwvbOSwZ+VadIpJoGtOWS2hEBOGoAtbZFh7jY6eGlLjpyT2WxIJ03uFDFXgF/SM8QRsaWjah0WyU1XkkLZaiCtLlQzZxF9cTR0mWe8phE28x2w8H9p9uBlnF84yjs+kkXiFImssy+SdPcWEB71MRQQTt85PuczmY79p0E1fsgYoVvKg+dC43aMZDloICOXzDyyoIYT6FrGUS//Hp76BowRjG5NmpLmePSiXyH8bxUwn2FU3nMx5kuv8EzVOP+IIxLDbhlwqDpYzmE4pLDAgjnha0oAVNiyFoFgsYy0cadxDBCC6wXEtiSuHHxzTXbBYf8bnFfx1OL27KKz7mWNqoIzKbRPpzhyW3IjjYxEzmq63BsGFYKuPYw/WhXz3OwIl4kFWMZS3DqRuE4f7gv8zmd62k/IHcaPN6zGBZECe5n+m0oJPPtZrcSaIsVrkunYdFIi/Sj7EkkkpwTh54SWMN93MNr7I1aFNex1hu5F32kmHkafknqdrBRPrzMSnkBLDSjrOQW3mWzRop8y7pwX2WzT6HebwTzHRT5WUlU205Tk15lATRs9mUkC7r2Mgs+jKAlsRTLQDrNJMD7OBz3uEoucE0cpWQIt/yA80ZwMXUpRbVicIUzC6/NE2XVQyiN7fQnvroJi/kcoj1vMtc0nQckaJozj85z2fl5LKUF9kX3MWkPDKX1owk0sci7cJY7td2q6i8Cf9PPqI9XelAUxpQU9OH6mEvG0lkGStILpnu3ErwsIENMpFmtCaB+lQv1ErJtJ2t+OuFLHMcFz7gMAwubOJTxxPZqznxFL5wfFJ3fcDZY4f51lLvbnPJ5EorIZ2P5Xs6czkX0spxjY1MtrKSJSxWB7R/NIxGnOAzi8/kPRKDv2ZVprxMHZtxFkHtgDYDgTia0JAmNKUxjalTjFTOYDe72M02trCBPSqHUoO4qFboaxVS1YlC9tFaRDr8iRyOOYmzCVTHee3ho0ordUTCiXUcw84mRQXkAJRKRFvK3ZwkRZVoIqZE0pb2NKclzWlS6FyFVLazlt9IJNE/36u4qG6rVOkhRTupxqnMtq81LykqSA8thprEUJV61CmgL6SXwxziEPs5yjFSSClNchpUPIiLKGKpRV3OIp54KgE1qIebbLZykn3sZDdHOMjh8r7WgmyfiRs3YQWUEcvJ+2fMQYMgS55w3PnpCWG4UXg5ieDhZEVZbf8Piyhub7NCJmAAAAAASUVORK5CYII"},{ name : "icons/icons8-data-protection-96.png", data : "iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABmJLR0QA/wD/AP+gvaeTAAADhElEQVR4nO3az2tUVxjG8e+5mSbY0CrxBxRciNCFWNTYYEEQV6L9A6Ski3abJsGdmXEnhYJjQFGMZufONlKKLtpNdGUJIZRCurPpooqKQRIwMpAfN/d0kUbT0E4zOZd5ZzzPZzkzee+Z+3BPLnceEBEREREREREREYmBy2PI5PjMbpbSyzhOAu/lMbOBvQJGs2VX6jy+ayp0WHAAk+Mzu0nTSaAjdFaTmfVJy4FDR3c8DRmSBC9jKb1MfCcfoCPJ0kuhQ8IDWNl2ouRxwd89PIC3f8+vZmvogDwCkAAKwJgCMKYAjCkAYwrAmAIwpgCMKQBjCsCYAjAWHICDuTwW0qRehg4IDsDDvdAZTcszGjoiPACfnANmQuc0odlCizsXOiQ4gEPHdv7uk5aDDn87hu3IwRye7wuJ+2T/0V1/WK9HRESal3pBtVMvqEGoF2RMvSBr6gXZUy+o2SkAYwrAmAIwpgCMKQBjCsBY+KOIn6d9Hgupp+nFCoPPJxibe0olW6r34V8BoyRJiZ6BqegCmF6scHrqDi+XF62XMotLD0S3BQ0+n2iEkw/QQVa4FF0AY3NBDy/z5TgZXS/IYM+vZqt6QcbUCzKmXpCxXH4TbirXLzTUbXN0d0GNRgEYUwDGousFHfztpvUS/qEQOuB1L8hFWU0Jpl6QMfWCjKkXZEx3QcYUgDEFYEwBGFMAxhSAMQVgTAEYUwDGFICx6AJIXEP9CptF1wvaXthivYQ3HM+i6wXtaXvfeglrPYyuF3Rq217rJbyRMRJdL+jTbXv54J1262UA/hHMf9tQ/5HqZrh8gsz/RA4/yW5SSuZO0V+8H91dEAA9xVG86wYsmrrLwJf0F+9DjM24tW6Uj+D9CLCnLsdzPMEnn9M78GD1pTivgFVfFSfIsi7gxzoc7R6F5a61Jx9ivwJWee+4Xj6D4yLQmvP0FO+/4cXC15w/n61/UwGsNVzuIvMjQF73qo/xdNNXGvuvD8S9Ba3XU/yFdL4T3EjwLMddWls7q538lY/Jvxu68AWOYaDWZxcLeIr0Fq/i3P9W4RVANdcuHibJvgM+3OBf/Amum97i+EYPoS2omv6BX2lzHwO3NvDpH1ho66zl5IOugI1b2ZJuAO+ue2ceT4m+0pXNjFUAtRgq78NxG/xHf7/ykITP6ClNbnakAqjV4GA77ekQAJVCH2fPVoxXJCH+Al0UBn0o76GqAAAAAElFTkSuQmCC"},{ name : "themes/optex/folder-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFgw1KKCFs4QAAABwSURBVDjL7ZDBCYAwFEPfr6BruIqjOIJ0B0+Fgh1AN3EV17BQvndBD/0XD+Ya8kgCRklK26yKB9qbd5SiwzSNxxvAPYQB+qaRPca1f22wLJtWts+gwRnmtyDeGT/srAB+wFcA2ZA/HWiohGQRgnUBF40VHB4yAg2yAAAAAElFTkSuQmCC"},{ name : "themes/optex/dropdowns.css", data : "LmRyb3Bkb3duLXBvcHVwIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOw0KICAgIGJvcmRlcjogMnB4IHNvbGlkICMyYzJjNDU7DQp9DQoNCi5kcm9wZG93bjpkb3duIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyYzQ1Ow0KICAgIGNvbG9yOiAjY2FjYWQxOw0KfQ0KDQouZHJvcGRvd24tc2VhcmNoLWNvbnRhaW5lciB7DQogICAgc3BhY2luZzogMDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZC1jb250YWluZXIgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmc6IDJweDsNCn0NCg0KLmRyb3Bkb3duLXNlYXJjaC1maWVsZCB7DQogICAgd2lkdGg6IDEwMCU7DQogICAgYm9yZGVyOiBub25lOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCiAgICBpY29uOiAiaGF4ZXVpLWNvcmUvc3R5bGVzL2RlZmF1bHQvc2VhcmNoLnBuZyI7DQp9DQoNCg"},{ name : "haxeui-core/styles/shared/help-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAADpElEQVRYhe2X32scVRTHP/fOZtMFs7tJC4np1mS7RQjC2oJg7ZMKPvShBBR9MopiqYbaP0CwL0VQ30SyGtsnow9SUGMViw8WBGlebBWjlJgf/ZFNQo2Jm0SSzM6914fJbmayO7OTRJ/0+zRz5n7P97tnzpx7F/7rEDsh3T+4tK+sZKeQIqM0xlJmel3omeLp5B//moHcQOmQEbLPQC/wYMCyH4VhWMbU0Pip9MQ/YiB7fqUdx5zFcBJoiui3jGFQSs5NvNJyd8cGut5fekRq8SnQEVF4K+bRPDV1uuW7oAUy6EH2veVnpBZXdiEOsA/JN9nC8tNBC+pWIDewdEwL8S3QvAtxL2w0T9SrRI2B7PmVdmzzE4L2sIwHkpIDLQJbGWZWYHZFY8JNzFkO+fEzLb97g7GaZY45GybelZK8dqyJnr2WL357SfPWSJmf76ogaoeK8Tpwxhv0VSA3UDqkhfyVgG5PxgUfnthDW6J+7646hucvrTH3V2AtbIXqud2fnqwEfE2okc8FiQMcz1lV8TtLmv7L67z41RpjCxqARExwPFdbVA/iUlh93oD/KxD0hrFzrZtlv3jDYXReMb6o+XzMqcYzycAPy5Uwfo2qXXe8kg8jfzHmcLXoio3O62q81fNKFlcbtCIczlwotU2/lFrwGbAdmREinDw6r2DeH+vZa/HsA24apeHrSacO0wfRZFsZYAE8r8AIcW8j5lZ0pyVvPx4nEXMrULhmM7GoG7DAGDor11UDwpiGtfMibsGbj8ZJNbvig9fLXLzR8NdXVM3mZcWAxex2DBzdb9F5j0v/ctzh41/KkbnSYabGgO3o6e0Y6E5tdvul3wKHTz0YO6GKlRvfRMkWlq8Dh6NkOdgq6Uq69JGiZtWJ/AZ/mOpveahy45sawjBsRDQDk4sapSXLttmOOAiGvbe+qSFjagiwo+R5Id/E0Ik9fNKbqNkXQmBrR30UaGD8VHoCwwdRMj3c6VKbY3CkI3z6VSCgcOvV9FSgAQApOQfMNUp2eVKhDCyuGb6/E6kJZ2OWeaOOqVpsHMWu0OBA0hwDR7sTsAHWDPqxm/2pka0P6tbu1svJq0AfsB6Wdd2JJo6hr544NDiUdhdKRwXyM3Z+Lpw16CeDxCHkUApwsz81YjnkgXeJ+HVswBaCd5oskw8Th238Mbmv8OdBKay+jf38SN1kgmvaMGyUGtra7bs24EXmQqktvmrtV5bIAFjKTNsJVazs8f9jO/gbuERJ498j87cAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/down-arrow-square-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAHCAYAAADEUlfTAAAEK3pUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHja7VdZkuQoDP3nFHMEJCEQx8EsEX2DOf482U53ZVZld23z0RNjwoCFEEJPCDnMv3+s8BcepppC0mK55hzxpJoqN3QsHk/ba4ppr4+nnC3d08M1wCAJWjk+LZ/8NzpdAo6moacvBFk/B7b7gZpO+fYg6FxIXCNGZ5yC6ilI+BigU0A7thVztfJyC9s82nP+YQbzraHablQ9mR++U4H1hmIdYZ5CElGzpEMB8ZeDtL3T9mHoLRV9kbLXN5vAIG/ZKb7QKrxC5dajJ/QHUCQf9ADCvTHz1b5JJ33b+GE38YuVpV8r39HTuhzlzsj+rjUsrDWP3bWUYdJ8buqyjnfAuEGU7NMySsGr6Je9VBQL8N4OyEfscUPpVIlh90WJBjVaNPe2U4eKiScXtMydZaeZFK7cJQaglbzQ4gLEhhgw7IBXQOVLF9rXrftynQwLDwInE4TRAT9/T3kqaC13eaJol62gF/uhgBqOnNfgAiC0bn6ku4Fv5fGh3VMTuNzMhg22uB0iNqXTt9yPZAdawKhoj7NGZZwCYCKsrVCGBAjETKKUKRbmQgQ7GvBpEGQ4NLwBAlLlAS05iWSAY+xrY06hnZeVDzJiFoBQyThI5kcKWHlgg/+UZPChpqJJVbMWNa3asuSUNedcsge/VqSkoiWXUqzU0kwsmVq2YhasWqtcBcFRa66lWq21NSzaILlhdgNDaxtvsqVNt7yVzba6tQ736alrz710C732NnjIQJwYeZRho442acKVZpo68yzTZp1twdWWrLR05VWWrbrahRqFA9ZX5f2o0Q013pFyxnKhhqml3ESQhxN1zIAYJwLixRGAQ7NjFo1S4uDQOWaxMk6FMrRUB2eQIwYE0yTWRRd2P5G7wy2k9CXc+IZccOi+A7ng0D1B7jVub6A2/LbpUcKOkB9DN2oUHL+slJR0pYw72LtJ/Zb6TRvey/i/oD9LUKpG02+80hRXkcBRU48redIwkPUclPCa9DnKHycoNrb2rja8l/HjgqqUuLQdNbK/Nyk46ghP/5pGiVN8uvY95QgxMOM+31l0bmm1zAHjZfDXVQqvBhDQXbbQ1pAl86MKj+1NpcDfpFKIX1UpUleeMwg0q3488eH9PB8pi4bfJzWWRMmeCQzPV4J/50PsEqSMuPpwRW+22qC95l1RHb2MXP2nZnwuACGkTPupaniq669URc42kpVGzeZp3sDV4mHP+PFWkOcZ9YFcIjTkH7WSmzmV5pbQ+Ehp28KljTTocXs/uSTQNpfy68nqvyUVSfm+Xvut4uEzO+K2xvT8Qtc2QFjNt4aYcLH07CNIbwb2Uj9kvvBZO9+0gmP7/2X1MOJu5x4Nty1wqj56Nn8RNQ4FCUlZUvnleQvfE9b+c4JkIfUD6OEf4i71AujO6WgAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZWY5MjY4YzktNTgwYy00MjQ0LTgyODktYTAwYzk2N2E0YmFjIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjRiZDVmMGQ1LWNkMWUtNDViYi1iNmQ5LWE4YzVlNDkyM2U3MSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmVhMTQ5N2M5LTAxMzktNDk4ZS1hZDYwLTk5NTI1NzhlOWIxYyIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0NDgyMjUxMTA2NTgwIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6OWVhYTkyOTYtOTI0NC00ZTU4LThkYmUtZWNhODMxMTJkZDE2IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTEwVDA5OjM3OjMxIi8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/PjAYwf0AAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAgoIJR9yXG2RAAAALUlEQVQI12NgIBcwhnYd+Y9TkoGBgQGbgtVlNoyMMA6ygtVlNowYxuCzAgMAAKYfDUgzMsMOAAAAAElFTkSuQmCC"},{ name : "icons/icons8-edit-32(1).png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAAB2klEQVRYhe3WyytEYRjH8d9znDFEkhQzw0mJsqBcisbCpVwmsUKRBdnMP6AUi7GYZKWsJFkqG0ZyC0W5JsKWsDEuZTAYl8y8Fpo66YzbvO+w8OzO2/v2+b6dTh3gf355SDTgbGsrZ15v9aNO15na03MT0oCDLrsl0u1yAAgnYONBliveRwgLGFtYthAwnLa9cRR75swGADC27WOsLLm31+XfJ4nAt8ZtlUTkAFHsfm5++nVC4g4AgChHkqR29V7uAWwAlpzTLke8Z3PzbYWi9vPM6VeJxl0Az4yxafX+MN44fBgDoFfcs8plZOaKR2dSAOhcBlNE3PlFXUq3fU5IgBr3rynuGeVan7F0H55sJEKjuaVp8v05LgGsH9VgGFXj/km6nTfcRxhqSiubp7TOBv0VaN1cNc8A6smK8UDngwoIFg8qgAf+4wBe+I8CeOLfDuCNfytABP7lAFH4lwJE4p8GiMY/DAgFHjAgVDig8T/ARuRC+OD4AK/lhWsGwCC1wiSvBsDryYoJXrh2AKMSxIQVwyQvauDcbq4Z0GfLKpjcM6YAgCpCGA4AsvrB7dG32tff/Kos5xFipEPcyR3U8KL1SvgHyOS9q8o8GTy+iB6ioqc1Uej//Kl5BVggyYlLts7MAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/option-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAgAAAAICAYAAADED76LAAAABmJLR0QA/wD/AP+gvaeTAAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJTUUH5QEaCgw0CA+AtQAAAINJREFUGNN9zDEKwlAQRdE781egfdYQV6FgM0WWYpNNSPYRm2ktsgfb9LYSsE7+WAQE4ccDr7rwBMDdqyB1CEcAgkElt2Y2irtXoelBsOfXJLHUGqSuEAF2SLrq97Yg4KT8F0owbHe5q0pugalQX3nWi5rZKLHUAjfgvU76PKdD05yfH881KnTRsBd3AAAAAElFTkSuQmCC"},{ name : "icons/icons8-top-menu-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAACFUlEQVRoge2YP2gTYRiHn/fSP7RNqyK1QwttBCcnEXGTLo4ODjoVnPPHgJNSBxUEwULaattUOlVwFRQnJ3ESBJ06GUwGOwZpmlg0zb0u3eyX3l3u+Ch+z3jv937v77mD77gDh8PhsIkktfFU+ddkv3YWQYZU2rdr2VO1JObELnDxhfbX91s5EX0MpA8u74ny1Oukn1SK8jvOebEKZFZ2r6jHmsB5w5JvqBSq+fT7uGbGIpDZaE7Q9hdA5oLtKe9S+162Uhz+0evs3gQeqpcZb80hWgJOh+zeUZUHtfGRFW5KJ2qEyALT5dYFT7UMejnqHgd8VfxcLXfiU5Tm0AIziz9PykDfI4Q8kIoy9BB80Fd/fO5sF8bqYRpDCWTWdm+gPEeYCJcvMHVgvppNbyCiQRoCCZxd3zmnHW8V4WpP8YIifEx1yFUKo1tHL+3CVEmHBgabd1W4BwzGFjAYbZTyMHv3t/JnmqZFRoHMauMa4j0DnUkmXzAEtlVlvppPvzys7pk75a3t8AAKk4humupmgWOCE7BNX5SmD7dG4s4BwOxmK3TP//kEotyppDj2T8AJ2MadQrZxp5BtnIBt3ClkG3cK2aabgPFPgAUapkKXj3q+JBIlGsYsRgHxWU4mS3jU1yVTzSjwPT/6GrSUTKQwyEKtMPbGWD2qfbrcuO6pFEEugSbzAvgHaYF+Vl+XuoV3OBwO+/wFRlmbIISWFYkAAAAASUVORK5CYII"},{ name : "icons/clintex-logo-icon.png", data : "iVBORw0KGgoAAAANSUhEUgAAAHMAAABzCAQAAAABSvVtAAABJWlDQ1BJQ0MgcHJvZmlsZQAAKJGdkL9Kw1AUxn+poqUqDoqCOGRwLbiYycU/GBwKNa1gdUqTFItJDElK8Q36JvowHQTBN/AFFJz9bnRwMIsXDt+Pwznfd++Fhh0HSbG4D0la5q53NLgaXNvLb6zQosk2635QZJ3eWZ/a8/mKZfSlbbzq5/48S2FUBNK5Kg2yvATrUOxMy8ywis27vncinontMElD8ZN4L0xCw2bXS+JJ8ONpbrMapZc901ft4nJOhy42QyaMiSlpS1N1TnE4kLrk+DxQEEhjIvWmmim5FRVycjkW9UW6TU3eTpXXVcpQHmN5mYR7EnmaPMz/fq99XFSb1tY883O/ai2oGqMRvD/C2gA2nqF1U5PV/P22mhmnmvnnG78AyHZQVYXAJlAAAAACYktHRAD/h4/MvwAAAAlwSFlzAAALEwAACxMBAJqcGAAAAAd0SU1FB+ULCggZJUwn3QMAAAAZdEVYdENvbW1lbnQAQ3JlYXRlZCB3aXRoIEdJTVBXgQ4XAAAMv0lEQVR42u2da3BVVxXHf+cmNwkJSZoHjwYICTQJpQQlQIGmtra02qq1qIyP0fExjq+Ojo4jWv2idHxMpzPV0Zmqo63a8VXf2lqlWEGhPKQ0ECENAZJACOER8n7c3Nybvx/uJeSc+zj7QOxN9a5vO7krZ/332dl7rfVfa1+LaRTlkkd2dBBikIAVNtTMII9cMqPDAEOMWZo+y6xpAjibSpZwE4uZG/3RACc4RQtHrCEX3VKqqKGKReRHf3SONlpoot0KzhiYyqCWzdSzghLH3xuhmb/xW16yQgmnp563soHlk6sg+gu6eZHn+T3t1gQzQfRW7dawEklA+/UB5cbVLNQWNSuYULdX27RWvtRDzND9atKEksmEOvVALFDN1lfVp+QS1gGtkZVqmHV6wQVkRC7oTqexerd6DTRD+ovKUgsyT19TQGbyc2XaNx7tNJogqVsfv1ZLr23dV7DesXUklluptI3Xs8RwAyzidpWmEuYClhl/Np8627iOYmMbK6hIJcwi5ht/NodVtvEicj1M5+JUwrQ86FtkOZ5svn9mkplKmK8aScNMw/w/gzlB2MNn+23jIOYueZCxVMIcoNv4swEabeNORox1L9CVSphnaDL+7JgDZiN9xrodtKYS5nF2EjBzf9nBGdtPdnDYcMl38zyXUuu8V+sZjRu43+2qi4lQ7tYZA81x/VpzUx9x3qn9CruYekofVk6MZpY+r/OuMHfrNTMje3CvdibJAAS1Tx9UYVzN6/Q5NSuUUHdQT+s2zYxDTxlapQe1K26i5LAe0urYNzmpW6CNekTNcSLPYW3Tp3WDMmZMZk8WsyilnBVUM59SIEAL52nkJOetQRfdfOZTw3IWUE4ucJEuWmikgx5rdMZk9qYYnIFvMvIII8KmWTn5orqRXXmCCcLTmadNS1rSkpYUStydViVETrph+r3td8qiiExggj6vh4HyKMAHBOmzxj3qFjMLgBH64+3ulu1AKGUtyyljXlRpiG5OcJjG5GcfKJNy1rCMMorJBML0cYHjNHLYjfxTFiu5mUXMi8Ico58OjtBgnXY9woqpYzmLmM8sLGCYSxyniUNWb4K51Hu1TSfVb/NQQ+rWUf1B98qf+MxTpb6i3Trt8IPG1KUGfVsrE7trytJ6PaZD6na4i0Nq0w5t0cLE/Ily9U49oxb12NzFsLrVrKf1rhjfS5laoafUk9AFD6tLj6gs3iOVpXvVpOGEREFAL+uBBD5tib6gNo0lpJiGtFevV2bcqa3WD3QhicXd+oEWTLFYPq3TLtdIYVQ/0qKYx/m1SZ2uuj16UHlx/NkvGzAwL+u22MWqZfqdawAY0C9VdUVpvp4wihl79AXlOx64RrtdwzBJOqeNMfHme3XJiBH7sxbETNDDRhYP62uT60hvMiLgJKlRqx3/HVs1Yqj7CwcjVqztRhMkdesTjne5WmcNn3pUt1xOktzPdYb79o3U2baiSm6N7snuUu/gQeqpMUzRFPE6lUwZZ/BGrjd8ajUblReBudH4eMpknY3gKecmY91CbreN11JinK+qsTFvGY6/lNziOqIwl3o4h2tsfGYh84w1s7jBNl7ggRGbY3uOjyoPFleR6z2zV8jVRvMWOVftq2ViP7Wzvf6BNLmQhpmG+b8Bs4fQVT4pTI9tPO6BERtzUBhDHp47zkQEphcapsVGwfVzwcPjTtnGXYx6mNyLU0YTnPRgcSuBCMxnjVVCHLAZ10aDse4Ae2zjvcak4QTHOGZbF39HxhbvZzAC8xnHckosB/mXLa4/yfPGC2g79iB5F/82ZsS2W5dsMJ9zsGuJ5d/sjGYxVKpvJamgnFp394AzVNUy/dkoVjiu+pgI5S51GDJiDl9L+dpqZHGPHtTsK/Hmcv3CNdIY0KOKcZiVoY16ybX2rkMf06w4AfkW9biaulfr4oTVlXrSFeiQHlO5PRav0Q+TqnXrIWfUNwn0bh1IAjSkwwkZsSJt0ekkugH9Va+Ll2KRT1X6rgaTBtXfuZIGsCaTRwXcwcepJYccsqJVVWOEGaGPvTzBi4mKuZXBYu5jM0vJJTtakSUChAjQxTM8SbuVoERCs1jOO9jEHHLw48cHhBgnyBDN/Ipn6YqfMpNFAfV8kA3kko0/WkMWJMQo/TTwOHutvrgJTGWxlFqqqYhWrLdyiRc5aBkcG8piBauoYh4lwBgtXOQIe61hA91CbuFGylhILtBNFydpsAx2cflYzBqqmR+NZtvo4ZB7TjAtaUlLWtKSlqtMRF05g/wUUstaKqimAIBLtNPIbtoZtZLEmbLIppS11LGUcrKAMGdo5zD7OMtoMvJQPnJYzHpqqWQ+GcAInbSwj0P0EUyqm0khNaylmmoiflYv7RzmRU4wEMdi+XS9Pqz9GtCogpPuV1hBjeiC/qbNSphVlV+r9A0d06ACCk3qhjSmYZ3W97TBSUlcmR4V6i79WOc0rLFJXmtC4wpoUE36klYkYuLk03y9X7vVr5EYi/u1S++L8cDl02v1c40m8RB79aiWxp9RvU2NLqVsn40/SZqjrS40wQG9OV4BlHyq1U+SeuFBPa4qJ8g/JAUZ8fe/a/P3L4O8T0dcI5QufT4OI5avh1x7xKSDipNjV41+42rxiH6kKylwzdX3XFUi0dtnnOGU6vT3JDV3V+Ss7oiJN9+lLiNG7E/OHjEV6GEji/v1ZRVcVtqUNKCxLyFbZ5Bm6+vGPWJPKduxYP9h3CP2SdmKB3SzQeVmRJp0m6xIkuQ+Zhvuy3Vs0NSmmQo2GCf6b3NwNbcY94gVcwdTK2ozuB/TCttl3M6sCMy7PKQ7V9mIvsXUGuvmssE2Xkep8aFXaSOHMljj4cBcQ34EZrmHc7ba9vbyjck78Dva2eZ5oI6KbVPiY4kHixeT7T0dfd1VM2I+8q7aicly/GvketDNxJcmF9Iw0zBnMkwvxYdORsxc18mIeXnqOPbbLLwUPQpFYDZ7UHrZxoj1cNaDqXbm7RgDxrrnbc+Z4KgHi48yEoH5nLFKkH22BrY2Dhnr9rLLNj5oTFBN8LLtVYTY5mFy9zBwmfgz7cBqoMEWrJ5iJ4OGujsdXXv7jHvELvFPq98Gew+njd/lPmssArOBpzAp0+3mpxy3eVJB/sIBI9a5jR/aQVkjPGb0PsPs4WmbpjjBj40s7uc3kz2J8qlKT7oyYn36ZmxLmjJUr5dcQrGwOvSROD1iOfqUel2ilJD2a1WcrEOFHndlxAb0mC2Ek6VyParTCc0dU4u+qKK49bQ+rdPzScwd1D+0OcENM/n6qA4lrMUN66J+q9fGZcQsLdTDakvIrY7rlB5W8WWLJw1XNvfwbm5kLqVTaqpCdNJBI7/khUQdQrK4ns28nmqut91MMcx5TvACT1rtSZJWN/F2bmUpc2yeag+dNLGNP1oJF7ayuZPNrGSBw+JznKGJ3/HcFWbdXutexHIqWMi8aJ6si0GO08xJy7UZVXOo5QbKKCIfGKeTfto5zGn3BipVsZJFlFBKNjBAD10cp8Hqd9WcRS1VLKA4GoGeZ4BWWmi2NxTE71zIi0YTvZ47CHzkMQsIW577Z5VBAX5gxBryrJsdfTF903UtVlrSkpa0TJtMZzduJtn48WMBIsQ4Y6Y7tfzk4I/Wr0wQIkhgOu/Xm67e6kIqWU4tS1gUZcQ6OUUjTbQmr0ORj3ks5SZWUMG8KCN2luMc5CRt1uCMWRDK1K16REfiNkG16vu6OxEjBirSJj2hzjjuXlAHtVWrE/emvdIw36H9Ser2QmrWpxX3ejIVa6takzTdBPSC7pmeKwGucbnqLWp05ULOaYtmx4lQHjKo2WuI7RF75UHWa69RC9RF3R2nR+yiESO2TQtTC7NAjxqVmUrS0/aIUyXaY8iI9elz13phx7Xemrja+Gq4mx1dRbdTbrjPF1LP3FTCXMiNxp/NZoVtbH5rIix0XCz5CsP0wohlOdrmvDBic407/P4rML3cmuhkxLzcmujHn0qYrxpJw0zDvMpj9tUKc8JDx1gY+70S3m5NDKYSZi/nPJhqZ95OYh5knXX0l73CML3cmjjAQdu4gV7jNdNKWyphtvNP4x6xHXTYxv/iqDEjtsPqJZWiGj1rULM3oXatj4lQ7jG45kMK6lcqIbUiS6u0wyUUC+mY3qOYojdl6UOuQIParpqZkT1Ypz8mue5jVM9pk+LedaE8fUj7klCOF/UzrZyOryKYjm/Q8FHBm9lIHWWOGrBeGtjOsxxNdDWScqjlXt7ACgodZ2w7e9nBNs5Mx3170/V9KNmUUcZSlkRr3UOcpZ02OjjldtmVZrOYRVRSOSWzd4JWTnHBK1X1X4Z5OcdH1pQ8bZCQ6ZuQhR8/mVhRp2PMCk+nZf8BQWdFdWLvOEQAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/switches.css", data : "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTV0lUQ0ggKERFRkFVTFQpCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5zd2l0Y2ggewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBob3Jpem9udGFsLXNwYWNpbmc6IDVweDsKfQoKLnN3aXRjaC1sYWJlbCB7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWIgewogICAgYmFja2dyb3VuZC1jb2xvcjogJGRlZmF1bHQtYmFja2dyb3VuZC1jb2xvcjsKICAgIGJvcmRlcjogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgcGFkZGluZzogMHB4OwogICAgaW5pdGlhbC13aWR0aDogNDBweDsKICAgIGluaXRpYWwtaGVpZ2h0OiAyMHB4OwogICAgZmlsdGVyOiAkbm9ybWFsLWlubmVyLXNoYWRvdzsKfQoKLnN3aXRjaC1idXR0b24tc3ViOmRpc2FibGVkIHsKICAgIGJvcmRlci1jb2xvcjogJGRpc2FibGVkLWJvcmRlci1jb2xvcjsKfQoKLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b24gewogICAgaGVpZ2h0OiAxMDAlOwogICAgd2lkdGg6IDUwJTsKICAgIGJvcmRlci1yYWRpdXM6IDJweDsKICAgIGZpbHRlcjogbm9uZTsKfQoKLnN3aXRjaC1idXR0b24tc3ViIC5idXR0b246ZGlzYWJsZWQgewogICAgYmFja2dyb3VuZDogJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3Itc3RhcnQgJGRpc2FibGVkLWJhY2tncm91bmQtY29sb3ItZW5kIHZlcnRpY2FsOwogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOwp9Cgouc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmEgewogICAgaGVpZ2h0OiAwOwogICAgd2lkdGg6IDA7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgZmlsdGVyOiBub25lOwp9CgpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVTZWxlY3RlZCB7CiAgICAwJSB7CiAgICAgICAgcG9zOiAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBwb3M6IDEwMDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7CiAgICB9Cn0KCi5zd2l0Y2gtYnV0dG9uLXN1YjpzZWxlY3RlZCB7CiAgICBhbmltYXRpb246IHN3aXRjaEFuaW1hdGVTZWxlY3RlZCAwLjJzIGVhc2UgMHMgMTsKfQoKLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWQgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7Cn0KCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKiogU1dJVENIIChDSVJDTEUpCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiB7CiAgICBib3JkZXI6IG5vbmU7CiAgICBmaWx0ZXI6IG5vbmU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogMnB4OwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgcGFkZGluZzogMHB4OwogICAgaW5pdGlhbC1oZWlnaHQ6IDIwcHg7CiAgICBpbml0aWFsLXdpZHRoOiA0MHB4Owp9CgouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmEgewogICAgaGVpZ2h0OiAxNHB4OwogICAgd2lkdGg6IDEwMCU7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgYm9yZGVyOiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7Cn0KCi5jaXJjbGUtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYTpkaXNhYmxlZCB7CiAgICBib3JkZXItY29sb3I6ICRkaXNhYmxlZC1ib3JkZXItY29sb3I7ICAgIAp9CgouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgLmJ1dHRvbiB7CiAgICB3aWR0aDogMjBweDsKICAgIGhlaWdodDogMjBweDsKICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7Cn0KCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIHsKICAgIDAlIHsKICAgICAgICBwb3M6IDA7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBwb3M6IDEwMDsKICAgIH0KfQoKLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnNlbGVjdGVkIHsKICAgIGFuaW1hdGlvbjogc3dpdGNoQW5pbWF0ZVNlbGVjdGVkQ2lyY2xlIDAuMnMgZWFzZSAwcyAxOwp9CiAKLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRDaXJjbGUgMC4ycyBlYXNlIDBzIDEgcmV2ZXJzZSBiYWNrd2FyZHM7Cn0KCgpAa2V5ZnJhbWVzIHN3aXRjaEFuaW1hdGVFeHRyYVNlbGVjdGVkQ2lyY2xlIHsKICAgIDAlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZGVmYXVsdC1iYWNrZ3JvdW5kLWNvbG9yOwogICAgfQogICAgMTAwJSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHNlbGVjdGlvbi1iYWNrZ3JvdW5kLWNvbG9yOwogICAgfQp9CgouY2lyY2xlLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWItZXh0cmE6c2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMTsKfQoKLmNpcmNsZS1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViLWV4dHJhOnVuc2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlRXh0cmFTZWxlY3RlZENpcmNsZSAwLjJzIGVhc2UgMHMgMSByZXZlcnNlIGJhY2t3YXJkczsKfQoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoqKiBTV0lUQ0ggKFBJTEwpCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWIgewogICAgYm9yZGVyLXJhZGl1czogMjBweDsKICAgIGluaXRpYWwtd2lkdGg6IDQwcHg7CiAgICBpbml0aWFsLWhlaWdodDogMjBweDsKICAgIHBhZGRpbmc6IDBweDsKICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICBib3JkZXI6IDFweCBzb2xpZCAkbm9ybWFsLWJvcmRlci1jb2xvcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGZpbHRlcjogJG5vcm1hbC1pbm5lci1zaGFkb3c7Cn0KCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6ZGlzYWJsZWQgewogICAgYm9yZGVyLWNvbG9yOiAkZGlzYWJsZWQtYm9yZGVyLWNvbG9yOyAKfQoKLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1YiAuYnV0dG9uIHsKICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7CiAgICB3aWR0aDogMjBweDsKICAgIGhlaWdodDogMjBweDsKICAgIGZpbHRlcjogbm9uZTsKfQoKLnBpbGwtc3dpdGNoIC5zd2l0Y2gtYnV0dG9uLXN1Yi1leHRyYSB7CiAgICBoZWlnaHQ6IDA7CiAgICB3aWR0aDogMDsKICAgIGJhY2tncm91bmQtY29sb3I6IG5vbmU7CiAgICBib3JkZXI6IG5vbmU7CiAgICBmaWx0ZXI6IG5vbmU7Cn0KCkBrZXlmcmFtZXMgc3dpdGNoQW5pbWF0ZVNlbGVjdGVkUGlsbCB7CiAgICAwJSB7CiAgICAgICAgcG9zOiAwOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRkZWZhdWx0LWJhY2tncm91bmQtY29sb3I7CiAgICB9CiAgICAxMDAlIHsKICAgICAgICBwb3M6IDEwMDsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7CiAgICB9Cn0KCi5waWxsLXN3aXRjaCAuc3dpdGNoLWJ1dHRvbi1zdWI6c2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxOwp9CgoucGlsbC1zd2l0Y2ggLnN3aXRjaC1idXR0b24tc3ViOnVuc2VsZWN0ZWQgewogICAgYW5pbWF0aW9uOiBzd2l0Y2hBbmltYXRlU2VsZWN0ZWRQaWxsIDAuMnMgZWFzZSAwcyAxIHJldmVyc2UgYmFja3dhcmRzOwp9Cg"},{ name : "haxeui-core/styles/shared/right-arrow-blue.png", data : "iVBORw0KGgoAAAANSUhEUgAAAAQAAAAHCAYAAAAvZezQAAAEJXpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjazVZbkiQnDPznFD4CkhASx+FRRPgGPr4Tqrp3ph+zs+v9cBENtIpKRKYEhOOfv2f4Cw8Zx5DUPJecI55UUuGKjsfzqbummHZ9Pulq6bM9RLteMEyCVs6/nq/xNzvdAc6moqcfgLxfL9rnF+Wamf0B6JpIlkeMzriAygUkfL6gC6Cey4q5uH1cQjvO9vr+pMHX0lC1m1WvwQ//k4G9oZhHmA8hiahZ0umArB8HqbuzasdAkoK+iKNWscsTEPKKp/jBq/CoSuHXqtx7D6JIPu0Bhs9k5nv70k76mvywKf4ws/T7zJ/spjfGPpO8fnMOD3Me5+pqyqA0X4u6LWX3MLCBctmfZRTDT9G3XQqKB0Rvh+Qj9thQOhViyDIp0aBKk47ddupwMfHBSAdm7izb5mJcuEsM0CmtQpMNig3oxdIhr8DKd19oz1v2dJ0cEw/CSCaA0Sk//5nyFmjOFfJE0U+eEBbwi1dwwI2l3KoxCoLQvMWRboJv5fFZugoU1E2zY4E1thOiKV2xteJIttASl8Dp2ibIxgUAijC3whkSKBAziVKmaMxGBB4d+lQAOZKGGyQgVR7wkpNIhjjIGMyNb4z2WFY+zdizIIRKFoM0SClolbCxIX4sOWKoqmhS1aymrkVrlpyy5pwtr82vmlgytWxmbsWqiydXz27uwYvXwkWwOWrJxYqXUmrFpBXIFV9XDKi1cZOWmrbcrHkrrXaET09de+7WPfTS6+AhA/vEyMOGjzLqQQdC6UiHHvmww49y1IlQmzLT1JmnTZ9l1rtqFHba0VP5vmp0U423Umug3VXDp2Y3CFrbiS7NoBgnguK2FEBA89IsOqXEYUm3NEPEISuU4aUucQYtxaBgOoh10l27H8p90i2k9J9045tyYUn3J5QLS7o3yj3r9kK1sU6bHiVshVYaLlKjIP20slduh/uMfXUdY+FDrnlIaQ3UYFfcg4ojd5KuIyzcOj9pQfjueHwDHZ6xfw86ADtB+FSajaOMhB1eLM826NEg1gbUIJD1Ym3h+2t5anGQQp4LO7wi7neww2dwHEdWdZ/2morT8coyMvW14LxhcJAu9KDx7Oi+Z60OXy76N1pIl6ohH1qoT9i/Bx0esBGaZdHSQZrlUgW/HBc5rSUomXDjuf/DuHny+/2A/Gn7PwBah39ce8PiBEBpdBvZd10243wg61vKuy6L88ui/EU0hVche2tLHYORJSMf65I73gTuhg5fZ0HBNRLue5+67p5zdNnuoy7bWZkWp+JuFThiOeMHfn9CK2cnPUXZvV3JFrCRpvuM77C+gR02+7gI27oCG1zroy/nkcw0zz2jrJfpjpNfuha+zAgC27W0hG0blH8JFd4s+5ehw1sG37Q2cXKs3PoX/YUPPAIScFcAAAGFaUNDUElDQyBwcm9maWxlAAB4nH2RPUjDQBzFX1O1IhUHK4g4ZKhOFkRFBBepYhEslLZCqw4ml35Bk4YkxcVRcC04+LFYdXBx1tXBVRAEP0AcnZwUXaTE/yWFFjEeHPfj3b3H3TtAqJeZanaMA6pmGclYVMxkV8XAKwQEMIBZdEnM1OOpxTQ8x9c9fHy9i/As73N/jl4lZzLAJxLPMd2wiDeIpzctnfM+cYgVJYX4nHjMoAsSP3JddvmNc8FhgWeGjHRynjhELBbaWG5jVjRU4inisKJqlC9kXFY4b3FWy1XWvCd/YTCnraS4TnMYMSwhjgREyKiihDIsRGjVSDGRpP2oh3/I8SfIJZOrBEaOBVSgQnL84H/wu1szPznhJgWjQOeLbX+MAIFdoFGz7e9j226cAP5n4Epr+St1YOaT9FpLCx8BfdvAxXVLk/eAyx1g8EmXDMmR/DSFfB54P6NvygL9t0DPmttbcx+nD0Caulq+AQ4OgdECZa97vLu7vbd/zzT7+wF8pXKr0kUkPQAADRhpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ZjA2MTJiMDQtMmJkZC00N2E3LTgyOGQtYzkzNWMwOTU5OTZlIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjVhODNkZjU5LTk2NGUtNDI5Zi05ZmEyLTg5ZDNmYWY4ZTc1ZiIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjExMjg5YWQzLTA2ZTEtNGU4Ni1hMTkyLTQ0ZWVhNjRkZDkzNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNjQ0MzQ1NTM4NjkyMjYyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMjQiCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIj4KICAgPHhtcE1NOkhpc3Rvcnk+CiAgICA8cmRmOlNlcT4KICAgICA8cmRmOmxpCiAgICAgIHN0RXZ0OmFjdGlvbj0ic2F2ZWQiCiAgICAgIHN0RXZ0OmNoYW5nZWQ9Ii8iCiAgICAgIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YTI2YzU1ZDUtMDYxMi00NDZhLTgzZGEtYjZiNjA5NGI5ZjY5IgogICAgICBzdEV2dDpzb2Z0d2FyZUFnZW50PSJHaW1wIDIuMTAgKFdpbmRvd3MpIgogICAgICBzdEV2dDp3aGVuPSIyMDIyLTAyLTA4VDE5OjM4OjU4Ii8+CiAgICA8L3JkZjpTZXE+CiAgIDwveG1wTU06SGlzdG9yeT4KICA8L3JkZjpEZXNjcmlwdGlvbj4KIDwvcmRmOlJERj4KPC94OnhtcG1ldGE+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAKPD94cGFja2V0IGVuZD0idyI/Pj86b/sAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADsQAAA7EAZUrDhsAAAAHdElNRQfmAggSJjqpzQQ4AAAALklEQVQI12MI7TrynwEJMDEwMDAgCzLBGDBBRqxaYGB1mQ0jEzKHAd1ABgYGBgAWuA/w/oe0hAAAAABJRU5ErkJggg"},{ name : "icons/icons8-data-sheet-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAAAqElEQVRoge3VsQ2DMBCF4QuKlElS0rJLRqBjFDpGYBdaSiZJ5VR0cEZy7CeL/yt9Lu7ppDszAECCh1ud5lCoD1//Oe2zKdlHDs9Lv97t8fu2lqk7qp8AAdQIoHZtC8W2Qe664yYTiO3pk0s5Lt9gZjZ0r7S601r1EyCAGgHU/nIH9m2Rq+65yQQidyB5z0fqnuonQAA1AqhxB9S4A2oEUCOAGncAAFC1H4LhX33i28xDAAAAAElFTkSuQmCC"},{ name : "data/test-dashboads-scatter.xml", data : "PGRhc2hib2FyZD4KICAgIDxsYXlvdXQ+CiAgICAgICAgPGhib3ggd2lkdGg9IjEwMCUiIGhlaWdodD0iMTAwJSIgc3R5bGU9InNwYWNpbmc6IDIwcHg7Ij4KICAgICAgICAgICAgPHZzcGxpdHRlciB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIj4KICAgICAgICAgICAgICAgIDxoc3BsaXR0ZXIgd2lkdGg9IjEwMCUiIGhlaWdodD0iNzAlIj4KICAgICAgICAgICAgICAgICAgICA8cG9ydGxldCB3aWR0aD0iMTAwJSIgaGVpZ2h0PSIxMDAlIiB0eXBlPSJjaGFydC1zY2F0dGVyIiB0aXRsZT0iRFIgMi4zIC0gQ29tcGxldGVkIFZpc2l0cyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkYXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNvdXJjZSBkYXRhYmFzZT0iQ2xpbnRleFByaW1hcnlEYXRhIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZT0iSUNQIDEgRGF0YSAtIFBhdGllbnQgVmlzaXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09Imdyb3VwLWJ5KCdJbnZlc3RpZ2F0b3IgU2l0ZScpLT5hdmVyYWdlKCdOdW1iZXIgQ29tcGxldGVkIFZpc2l0cycpLT5hdmVyYWdlKCdEYXRhIEVudHJ5IExhZyAoRGF5cyknKS0+YXZlcmFnZSgnRXhwZWN0ZWQgTnVtYmVyIG9mIFZpc2l0cycpLT5hdmVyYWdlKCdBY3R1YWwgTnVtYmVyIG9mIFZpc2l0cycpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBheGlzWD0iSW52ZXN0aWdhdG9yIFNpdGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF4aXNZPSJEYXRhIEVudHJ5IExhZyAoRGF5cykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9Ik51bWJlciBDb21wbGV0ZWQgVmlzaXRzIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJGdW5jdGlvbj0ic3RhdGljLXkoMTYpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXJCZWhpbmQ9InRydWUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yQ2FsY3VsYXRvcj0idGhyZXNob2xkOjE2IiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8L2RhdGE+CiAgICAgICAgICAgICAgICAgICAgPC9wb3J0bGV0PgogICAgICAgICAgICAgICAgPC9oc3BsaXR0ZXI+CgogICAgICAgICAgICAgICAgPHBvcnRsZXQgd2lkdGg9IjEwMCUiIGhlaWdodD0iMzAlIiB0eXBlPSJ0YWJsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkYXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNvdXJjZSBkYXRhYmFzZT0iQ2xpbnRleFByaW1hcnlEYXRhIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJsZT0iSUNQIDEgRGF0YSAtIFBhdGllbnQgVmlzaXRzIiAvPgogICAgICAgICAgICAgICAgICAgICAgICA8L2RhdGE+CiAgICAgICAgICAgICAgICA8L3BvcnRsZXQ+CiAgICAgICAgICAgIDwvdnNwbGl0dGVyPiAgICAKICAgICAgICA8L2hib3g+CiAgICA8L2xheW91dD4KPC9kYXNoYm9hcmQ+Cg"},{ name : "icons/Double Ring-1.6s-134px.gif", data : "},{ name : "data/complex-dashboard-a.xml", data : ""},{ name : "themes/optex/scrollbars.css", data : "LnNjcm9sbCB7DQogICAgcGFkZGluZzogMHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICMyNDI0M0E7DQp9DQoNCi5zY3JvbGwgLmJ1dHRvbiB7DQogICAgd2lkdGg6IDdweDsNCiAgICBoZWlnaHQ6IDdweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmMyYzQ1Ow0KICAgIGJvcmRlci1yYWRpdXM6IDA7DQogICAgYm9yZGVyOiBub25lOw0KICAgIG9wYWNpdHk6IC44Ow0KICAgIGZpbHRlcjogbm9uZTsNCn0NCg0KLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgd2lkdGg6IDhweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDFweDsNCiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICMyYzJjNDU7DQp9DQoNCi5ob3Jpem9udGFsLXNjcm9sbCB7DQogICAgaGVpZ2h0OiA4cHg7DQogICAgcGFkZGluZy10b3A6IDFweDsNCiAgICBib3JkZXItdG9wOiAycHggc29saWQgIzJjMmM0NTsNCn0NCg0KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiogQk9SREVSTEVTUyBWQVJJQU5UUw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8NCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgLnNjcm9sbCAuYnV0dG9uLCAudGV4dGFyZWEuYm9yZGVybGVzcyAuc2Nyb2xsIC5idXR0b24gew0KICAgIHdpZHRoOiA4cHg7DQogICAgaGVpZ2h0OiA4cHg7DQp9DQoNCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgLnZlcnRpY2FsLXNjcm9sbCwgLnRleHRhcmVhLmJvcmRlcmxlc3MgLnZlcnRpY2FsLXNjcm9sbCB7DQogICAgcGFkZGluZy1sZWZ0OiAwcHg7DQogICAgYm9yZGVyLWxlZnQ6IG5vbmU7DQp9DQoNCi5zY3JvbGx2aWV3LmJvcmRlcmxlc3MgLmhvcml6b250YWwtc2Nyb2xsLCAudGV4dGFyZWEuYm9yZGVybGVzcyAuaG9yaXpvbnRhbC1zY3JvbGwgew0KICAgIHBhZGRpbmctdG9wOiAwcHg7DQogICAgYm9yZGVyLXRvcDogbm9uZTsNCn0NCg"},{ name : "haxeui-core/styles/shared/warning-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABCUlEQVQ4jc2RPUoDURSFvzvzfgKKoCmSKmijSLSzF7ERrd1CIOIeBBcgLiCLCGg/jIq1rW5ABUFQUsSR92x8zkxw4tiIp3vvnnvOuRz41/BpY8knjcVpHKlcTlCIvQEUs+N12SD7jhdVSsf2EKGLsMLIHvwqgb9mgczcgTQ/ac84vSxbr0/1EmT2GKQ5GHYYDDuAnyd6O6p1gk/NKtAD0MphtAujvk/M2s8JRE4ADWB0SSAmktOpAv7C7uHZCW+jHToXANj2qd0t+X0th9qEbvh7GSkA5mbeCy7cFmvNE4TaCji7bHF+1Zo4sVxrniC1D8AEuxKPsjluA6g8muyDa9da9/F9TaM/wAcSz0RlELj/AwAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/native/main.css", data : "KiB7CiAgICBuYXRpdmU6IHRydWU7Cn0KCi5oc2xpZGVyOm5hdGl2ZSwgLnZzbGlkZXI6bmF0aXZlLCAuaHByb2dyZXNzOm5hdGl2ZSwgLnZwcm9ncmVzczpuYXRpdmUgewogICAgd2lkdGg6IGF1dG87CiAgICBoZWlnaHQ6IGF1dG87CiAgICBiYWNrZ3JvdW5kOiBub25lOwogICAgYm9yZGVyOiBub25lOwogICAgYm9yZGVyLXJhZGl1czogbm9uZTsKfQoKLmJ1dHRvbjpuYXRpdmUsIC5kcm9wZG93bjpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKfQoKLnRleHRmaWVsZDpuYXRpdmUsIC50ZXh0YXJlYTpuYXRpdmUgewogICAgYmFja2dyb3VuZDogbm9uZTsKICAgIGJvcmRlcjogbm9uZTsKICAgIGJvcmRlci1yYWRpdXM6IG5vbmU7CiAgICBjb2xvcjogbm9uZTsKICAgIGZpbHRlcjogbm9uZTsKfQoKLmRpYWxvZzpuYXRpdmUgewogICAgcGFkZGluZy10b3A6IDBweDsKfQ"},{ name : "haxeui-core/styles/default/haxeui_small.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAMAAABg3Am1AAAC91BMVEUAAABgbY0+U25ga4QwSGe/wMy2ucI8SWC1t8OGj6Sana+zuMd3gppicY1ibYm0ucUzZZvH0ODExdZ8hZw/TGQ+TGPFxth/hp+vtMJNXHLExNI/TmVlhq5hbYi6vc2pr75veZI0ZpyrvdTK0+Q7WoC0t8d/iZ/Gx9ezuMaorb3Gx9dmc49OWm+DiaOpw+CVqMJUe6uwtcGprr5gbIdteZRaZn11gJpgbIhiborM1+g/XoM4WH2zusw8S2RhaYFCUGVuepdyfJVLWG9UYHjDxdZhbYg8SmGeprfKytmSmKw6bqZnjryTqseXq8RQd6mmrb58iaF4g5m2uMd4gZiorrx3gZeKkqZmco5smMg0Y5fP3e5ol8rS3+4+drUzZZs0ZJhPe67AzN7J0+RTeKc5X4o3WoNCYog6WoKuv9ZihK7M1ea+ydyht9JBX4U2V35ieZzAxtd7h59ldZPIzt9je6BBVHBYZoDBwtNMWHCco7Rea4KYqsRWcJZxeI6/wtJSXXTEw9O6vc08RVicpLU5SV7Ly904Rl19h55KVm43RFpLf7lFerOZuNqcudpIeK48bqWftdGftdGZsc6OqsuswdlLd62qv9l2lrxjh7NlibRJbpumudBcga6svtWnutJdg7GKoL6svdZylL1uj7ZSeahJbJREZZCGlKyOm7OZorNgboyxtcNwfJmKkqWhprSHjaB5fJBmc4yor7ylp7Vomc08drVRiMSUttt+p9OStdt9p9M9d7bQ3+9nmMypxOGBqdQ6dbRtnc9gk8qsxuN6pdJ1odFwntBtnM1pms1SicVQh8RHfrs8draqxeKhvuCaut5yoNBilctajsZYjMSXuNxOhcBBerg0aJ8zZ52nwuGdvN6Vt9yOstlklcpckMZNhcM5b6o3a6TR4PDL2+7K2u23zuejwOBekchSisZZjcRVicI6c7EyZZvT4fHF2OzC1eu+0umkweGJr9dfkspik8hWi8VMg75Lgr1Bdq85cq+yyuWEq9VFe7VNUsNiAAAAtHRSTlMABQIDBAYDEgUFAhYWChcK/ac7OzYuFxQTDQwJpjsgDw/9p6aXOjQyMisTExIL+KenPDc0MiciGxXQlpVyXUdCPDk1MSIiHhwVD/7Tx6SkcG1dR0dGLCsq+/r5+Pb29vDMxL28vLerqKOhoKCXj454dnV1cXBpaGdiXldVTUlIQkE8OzYzKiYgHhz9/fz48fHW087OzMzKysjCwLu7t6Cgn5eXlJSFhXl4bm1jY11FRUM4IQf95cbSAAAEV0lEQVRIx32WZZwSQRjGF1ZQMMAEG+zE7u7u7u7u7u7u7m4WdlkQFEwEFOG48+70zu5u/eAE7C6s+nzgA7/3P888O/PODAEkTwclk4EfuZKIllQpV2BJJCRJoHKFKr82PZY2vyqaIRWlm2k0GZBK6jJKpOA/Rf4mxReULwdUuHCx4vm0KlkEUYJyzZLORbJC1atXsUuVnICQq5rMGLm7ANLQoTXLFeMQWF65yNmjrVqVgWq198DMKhkBkL/4vkCiz3vRcxHIsPFEe4woLsDyDm3XGsDfHqfXnvzFdKhSTpJIpy0/ImA2M0zg3tOEBI/n4q6aHYud1zbTZahccdaRlhedzqe+pNv+Bw9umoKjGpRKQ8jSF878lDEjJQZ83gSnYXOb0ws6d6o3a9w6g9Nntz37cvOmCejGiur1w8ATBGAxifc+JOw4dqrduJbepKs3wMARPW9evX5aAOSYl/lREg9Axuxb1bJF1zuCauSgL5QNAVkyW++ZY8RcvWOKlVsdAQpanUxM/RWj8VNM/Y3veh54z8SMbwSK9WiurwGBdE0B8DYQMz7S5aj6YKq+xkIIlCg63PpIGIK5bTOGCWHobyH96OxpwcLlWjShu/WDsB7Wij1+x/eutRistFKVb24160+Gnw8cX0zcSIkfNH9ZbikB5zTF+pbh8/ISJn8e6lYrO4gA+iFXw9n93yRG5xV7fH09pE5jaEAoZU2Lju3pwRYgr4i4iVehzyRgAABk0b7ae0aYV+zxPHUgNAAAtChRrOYjOD6XV0wE9VOxAbbI17GfNyqvKLl78JylKAG2SF++jYHPK9Yn0+rJoHkiAGzTaeuF44s9BkyH7SkENlz6H3B/OwKEU1pJ/8fiLrUGT0kQOommr/2r3k9RP/jQ+LM+pmna8vdZXb9LUZRDjT8rt3BPXP8kXrAAYENo4fit4bPQUNfE4/sdFARS8NbgNp8dVCMPcV6sV9zmQ9v7nYv+O3GfCouNx9sbN9BDj4UWEThvRLdScQPhFn1opjlZBDn8LMUp5TVqUXwIPP5IC3QpOm8kRLwaHgL4mHmHMvOz4r8nL0dIDY8ZfJA9wRH4WfF5eaWqa3AnnxcBQg8uL5+6uZo7jB9+xIDQA48v1A8I4OP+sUtYbLdbrnXd0ne5m3I4oggI4AvFKQDsruRg3M627dqN35rs/8YKEDYELhQMmC3h2tvX77odvfq2PVOkU6dztce36HH92Ut3HBsOkQKvLHQp/oLzuPI56I67dYsdMLFDkSUanS5Towq1x2yzGW3Jz158jYOzewUvRdieI2nXtZewlmV7bTrZoWJlTWkJmUaSsSpAjrfoYQMyfn7pZqnDoE3Rxb5/T1mo1q1bT6xbsXLJjBLUvSRGxgzLgzXsILrYCUWzJuh1ULduXfg6gOXhVpQipEuFvFgVKqGnAyGH748MQJkyVS2pQ6PzAoiuZNVMSJHHiRQgCgkWSSqlMc8fKUlKsPDz5w9agXK/G5FNrAAAAABJRU5ErkJggg"},{ name : "haxeui-core/styles/shared/error-small.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABGklEQVQ4jYWSPUrEUBRGz3sTbHQ2ohi1yE9hkwmCS7AQsVBEEMWViI0wiI1YuInUGi0EFyCDW5g4MMHkWgxqJr4bb/n4zrn3gwcd85EGwSSJo66M1eHwSDB5beuHcRqcajnjhAfhgRiGjQUC5nwpyy//FTjg73FK5gRteGHvEIDy9lqVWA0GsCs+dnm1tVAuijQ6mxOoZ5dTKEtH7V+JV2wF61I7OyPlFETazz+SSRI/eohXQeUKzba7BbMFyKcBGKfRjkHugF4z0PM3AKheX/6wgpz0s+crC9DP8nvB7NI6pRdv4qXbKgyN3i5J/T6iHr2pMDg+klbHBTsFisQJqwKAYhDsY8wNYAwcL2ZPQy2rTpFGfpGEa12ZLwdajcanz1XAAAAAAElFTkSuQmCC"},{ name : "haxeui-core/styles/shared/error-medium.png", data : "iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABmJLR0QA/wD/AP+gvaeTAAACJElEQVRYhcXXzWsTQRjH8e8zSUprmv4JohTEm4fS9CJKbRUsePAFFPGkgVoE/xqxFnyDHvTmzZONUBAlkYCIF0GrnsRLS2uEJO4+HrRh1ybZecZin9OwJM/vszOzOyzscUnoH5vTUxPq9CaIi+Poztjz1y/+G2BrdvKcqDwGCn8uRahWRqv1h9ZebhfCAXKI3G/OlOet/Uwz0Cc8WSqwUFypLe06wCM8COEFMISbEZmAgHATYiBgULg7OI7bfwCA+Msn4rUPQYh8SDhA/vgMhSvXAOgs36PdGyAKi82ZMv0QPR9Dn2nXdjsxbvX7WRLR8xHdAfBe81YidDBgICIFsGy45F1rKxPQF9EFmHd7YglSYyPCAXyfLh8RlUfe4ZBeAr8ZSCJub85OHe0CJEcFGLJ0SS1BxwQAcE6Z7wIU/WntkNp4thn4XRJ3uoBYZRH4YQME7YHt6kicu9UFjK3U3qvqaaDp20HX14kaNaJGDd3YMIU75WKx+qoBf72Kt05MHhORp0DR0tEavq9ae7J9YcdZ4IuQUonC1QVkeIT2gyX021dzOPR4E5aq9VVVnSNjOQoXLlM4c578yTmGKjeCwnsCfBHx57XE+GNQOGQdxxnL4cYPIcMjRO/eBIVnAnwQAyoz3AsQiPAK9wYYEd7hJoAnwhRuBmQgzOEQ8GVUqtZXQc6SPjvaKnrJGg7/8HG6eWrisIvcdXCCuLujz16+De21p/ULbmcp8bwvNP8AAAAASUVORK5CYII"},{ name : "haxeui-core/styles/shared/close-button-light.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhWlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TS0UrDnaQ4pChOlnwC3GUKhbBQmkrtOpgcumH0KQhSXFxFFwLDn4sVh1cnHV1cBUEwQ8QNzcnRRcp8X9JoUWMB8f9eHfvcfcOEBoVpppdY4CqWUY6ERdz+RUx+IpeBBBEBOMSM/VkZiELz/F1Dx9f72I8y/vcn6NPKZgM8InEs0w3LOJ14ulNS+e8TxxmZUkhPiceNeiCxI9cl11+41xyWOCZYSObniMOE4ulDpY7mJUNlXiKOKqoGuULOZcVzluc1UqNte7JXxgqaMsZrtMcQgKLSCIFETJq2EAFFmK0aqSYSNN+3MMfcfwpcsnk2gAjxzyqUCE5fvA/+N2tWZyccJNCcSDwYtsfw0BwF2jWbfv72LabJ4D/GbjS2v5qA5j5JL3e1qJHQP82cHHd1uQ94HIHGHzSJUNyJD9NoVgE3s/om/LAwC3Qs+r21trH6QOQpa6WboCDQ2CkRNlrHu/u7uzt3zOt/n4AgVdyrUq8E1wAAAAGYktHRAD/AP8A/6C9p5MAAAAJcEhZcwAADdcAAA3XAUIom3gAAAAHdElNRQflCwUHHhl/NmAoAAABNElEQVQ4y92QsU4CQRCG/9nbdb2jsFHvBUh4A2NrjDEhhkeAWNNySnkl5HgHPR8BExpotbbS8AqExoS7y3Jkx+IguRAusdWpdnbnn3+/H/jzReXmcTA40UI3U9qMR0GQlN96UVTzWLaMNZNhv/+9uxflIS10E4yGa1WnF0W1sti1qgNGQwvdLGtkuUlpM/Yg28Tsu1bdPwyHsRXCeizbAJ8zaOmk6rUSoexGhWBRDBXnTOTxPhodCmbL2wbDBwAGLZ1MPYdhd7U/K36bduquDpo51QjwCwRKCHzmQNYvbq8/36fTvHLB7utb8dLJVJxq86Eg6gT4kp3G5c3V19tstj6I4LFsgQvnTORPYdhdjYIgSWnzwqAFgU+P6eiuMgNjzQSE+X7aoyBIMpHHIMyNNRP8r/oB7XSENXBA5j4AAAAASUVORK5CYII"},{ name : "themes/optex/user-solid.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABhGlDQ1BJQ0MgcHJvZmlsZQAAKJF9kT1Iw0AcxV9TpSIVB4uIOGSoLloQLeIoVSyChdJWaNXB5NIvaNKQpLg4Cq4FBz8Wqw4uzro6uAqC4AeIo5OToouU+L+k0CLGg+N+vLv3uHsHCI0KU82uSUDVLCMVj4nZ3KoYeIUfgwgiinGJmXoivZiB5/i6h4+vdxGe5X3uz9Gn5E0G+ETiOaYbFvEG8cympXPeJw6xkqQQnxNPGHRB4keuyy6/cS46LPDMkJFJzROHiMViB8sdzEqGShwlDiuqRvlC1mWF8xZntVJjrXvyFwbz2kqa6zRHEMcSEkhChIwayqjAQoRWjRQTKdqPefiHHX+SXDK5ymDkWEAVKiTHD/4Hv7s1C9NTblIwBnS/2PbHKBDYBZp12/4+tu3mCeB/Bq60tr/aAGY/Sa+3tfAR0L8NXFy3NXkPuNwBhp50yZAcyU9TKBSA9zP6phwwcAv0rrm9tfZx+gBkqKvlG+DgEBgrUva6x7t7Onv790yrvx/Y5nLQ4/qSVgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAN1wAADdcBQiibeAAAAAd0SU1FB+YDFgw6GAHEn+cAAAEdSURBVDjLrZI/S8NAGMZ/l6uk4KLZRXBVqF+hiH8+hA5thAzFkuLSsXuRTBmyFHHUT1Awk34A1y4O6moLDmIgd+dSJKahacQHbnnunh8v73OCAoXhaCtNrUAIjuZWrLXq+747yb8VRWGlrCfAyV3NpNSNTqf9mjWtPCBNraAgDLCplLzKmwuAzNgFMselgBKZVQDxEsC4FKC16gOzgvA71C5LAb7vTqTUDRB3wMf83EJtv9s9feO/tfAPgmC0I6U8BDZ+bc+Ymdb6vtdrPxcChsOb9XpdhcaIsyXtaBDXtv114Xne5w8giqK1JLHHQHPFyePpdPtkMGimFkCS2OcVwgAHjvPiZltoVV6e0K0sYLcqwBixlwU8/qHBB4Bv+spW2eNYoNYAAAAASUVORK5CYII"},{ name : "haxeui-core/styles/default/frames.css", data : "LmZyYW1lIHsKICAgIHBhZGRpbmctbGVmdDogMTBweDsKICAgIHdpZHRoOiBhdXRvOwogICAgaGVpZ2h0OiBhdXRvOwp9CgouZnJhbWUtY29udGVudHMgewogICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRub3JtYWwtYm9yZGVyLWNvbG9yOwogICAgcGFkZGluZzogMTBweDsKICAgIHBhZGRpbmctdG9wOiAxNXB4Owp9CgouZnJhbWUtdGl0bGUgewogICAgY29sb3I6ICRub3JtYWwtdGV4dC1jb2xvcjsKfQoKLmZyYW1lLWxlZnQtbGluZSwgLmZyYW1lLXJpZ2h0LWxpbmUgewogICAgYmFja2dyb3VuZC1jb2xvcjogJG5vcm1hbC1ib3JkZXItY29sb3I7CiAgICBoZWlnaHQ6IDFweDsKfQo"},{ name : "haxeui-core/locale/es/dialog.properties", data : "ZGlhbG9nLnNhdmU9R3VhcmRhcgpkaWFsb2cueWVzPVNpCmRpYWxvZy5ubz1ObwpkaWFsb2cuY2xvc2U9Q2VycmFyCmRpYWxvZy5vaz1PSwpkaWFsb2cuY2FuY2VsPUNhbmNlbGFyCmRpYWxvZy5hcHBseT1BcGxpY2FyCmRyb3Bkb3duLnNlYXJjaD1CdXNjYQo"},{ name : "icons/icons8-data-protection-48.png", data : "iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABmJLR0QA/wD/AP+gvaeTAAABnklEQVRoge2WsUtCURSHv6sN1RI1NCntSbVFg1BDU/9AW6NETi5lrUG9NTDLqaUhQmhsjoTWcmho1QZbCiLQAk+DZFLYVd973mfcb7zvvHPOj3vPvT+wWCwWiwuULqBYeFoRkRyKSD8aaiKUlVKJ2fjk5V9hIW0eE80DKCJCPacL0wow0vx38aguQi8g4FgBprECTKMXIJT70Ee74iVdhFaAUirRSSLvkRISSvS/rqU7rBfyDeuFBgQrwDTaW+iuUBE/Cl+/lth9vKHy/tZbAkUZIWFsB1w1DyBEQOWMeSFXzTeRaIC9UGdoZ8A3so4ns/X/byG/vNBc8cSTPMH1Qh0ScC+kZ+BnwAowjRXQKx69oGLMC00MjXiRpmLMCy2PTblPIpI36IX2x1HqCmGmtwRSpDa8aG6IN7af+ajGgbOu/xUugCVSqRdzO9DKobOG4ggY1UTWELZIpg++FoIhAOB4b5p66ByItYl4QEKrJDdvWxeD8w6s79wj1QXg9Nc3RZ4w8z+bb3wKIo0jlQXCCOnWIzM4ZJwYGafdcWryCRyjiMcJw9OjAAAAAElFTkSuQmCC"},{ name : "icons/icons8-folder-16.png", data : "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABE0lEQVQ4jaWTvUoDQRSFv5lEowRTBH8KhUW0thAR30GwVrDyFSx9AytR1NLGV9DOF9BnsPCvECRZjNnsbmbmWiwad41Ooqe6nLn3u4eBC/+Uksvdc7ReztsiWHOi1g+O/YCrPeEthK4pMFyIMUtq6+zBD2g8g/R9v6My/khlLMi5abKvNg6PAMqehAFJJyCNQX1xnWwDAwEyiRQTfuJ6gKl5mJgEZ/1AxYrcnCZEzfseoDYDcQjJKygNugQm/hkBo8Ci/mZXp6G+ALOrUBrxhsn/gQjU5rL66Rpsd0iAM9C8zWqbeof7JHDQaQw0+CHtb/EB4sgigP4DS4Qy7dYm1foOSbRG0n7BFo/iFzl7MfzWgt4BxEhfapnfZXEAAAAASUVORK5CYII"}];
haxe_ds_ObjectMap.count = 0;
haxe_ui_validation_ValidationManager.get_instance().registerEvent("ValidationStop",haxe_ui_backend_html5_HtmlUtils.onValidationStop);
js_Boot.__toStr = ({ }).toString;
haxe_ui_core_ComponentEvents.INTERACTIVE_EVENTS = ["mousemove","mouseover","mouseout","mousedown","mouseup","mousewheel","click","doubleclick","keydown","keyup"];
haxe_ui_core_ComponentBounds.__meta__ = { fields : { percentWidth : { clonable : null, bindable : null}, percentHeight : { clonable : null, bindable : null}, width : { bindable : null}, height : { bindable : null}}};
haxe_ui_backend_ComponentImpl.elementToComponent = new haxe_ds_ObjectMap();
haxe_ui_backend_ComponentImpl._stylesAdded = false;
haxe_ui_core_Component.__meta__ = { fields : { styleNames : { clonable : null}, styleString : { clonable : null}}};
DateTools.DAY_SHORT_NAMES = ["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];
DateTools.DAY_NAMES = ["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];
DateTools.MONTH_SHORT_NAMES = ["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];
DateTools.MONTH_NAMES = ["January","February","March","April","May","June","July","August","September","October","November","December"];
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
haxe_ui_events_UIEvent.READY = "ready";
haxe_ui_events_UIEvent.DESTROY = "destroy";
haxe_ui_events_UIEvent.RESIZE = "resize";
haxe_ui_events_UIEvent.CHANGE = "change";
haxe_ui_events_UIEvent.BEFORE_CHANGE = "beforeChange";
haxe_ui_events_UIEvent.MOVE = "move";
haxe_ui_events_UIEvent.INITIALIZE = "initialize";
haxe_ui_events_UIEvent.RENDERER_CREATED = "rendererCreated";
haxe_ui_events_UIEvent.RENDERER_DESTROYED = "rendererDestroyed";
haxe_ui_events_UIEvent.HIDDEN = "hidden";
haxe_ui_events_UIEvent.SHOWN = "shown";
haxe_ui_events_UIEvent.ENABLED = "enabled";
haxe_ui_events_UIEvent.DISABLED = "disabled";
haxe_ui_events_UIEvent.BEFORE_CLOSE = "beforeClose";
haxe_ui_events_UIEvent.CLOSE = "close";
haxe_ui_events_UIEvent.PROPERTY_CHANGE = "propertyChange";
haxe_ui_events_UIEvent.COMPONENT_ADDED = "componentAdded";
haxe_ui_events_UIEvent.COMPONENT_REMOVED = "componentRemoved";
core_dashboards_DashboardInstanceEvent.FILTER_CHANGED = "filterChanged";
core_data_ActionType.View = 1;
core_data_ActionType.Update = 2;
core_data_ActionType.Add = 3;
core_data_ActionType.Delete = 4;
core_data_DashboardData.TableName = "dashboarddata";
core_data_DashboardData.FieldDefinitions = [{ fieldName : "dashboardId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "order", fieldType : 2},{ fieldName : "layoutData", fieldType : 1},{ fieldName : "iconId", fieldType : 2},{ fieldName : "dashboardGroupId", fieldType : 2},{ fieldName : "organizationId", fieldType : 2},{ fieldName : "creatorUserId", fieldType : 2}];
core_data_DashboardData.PrimaryFieldDefinitions = [{ fieldName : "dashboardId", fieldType : 2}];
core_data_DashboardData.LinkedFields = [{ tableName : "dashboardgroupdata", fieldName : "dashboardGroupId"},{ tableName : "icondata", fieldName : "iconId"}];
core_data_DashboardDataTable.TableName = "dashboarddata";
core_data_DashboardGroupData.TableName = "dashboardgroupdata";
core_data_DashboardGroupData.FieldDefinitions = [{ fieldName : "dashboardGroupId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "order", fieldType : 2},{ fieldName : "iconId", fieldType : 2},{ fieldName : "organizationId", fieldType : 2},{ fieldName : "creatorUserId", fieldType : 2}];
core_data_DashboardGroupData.PrimaryFieldDefinitions = [{ fieldName : "dashboardGroupId", fieldType : 2}];
core_data_DashboardGroupData.LinkedFields = [{ tableName : "icondata", fieldName : "iconId"}];
core_data_DashboardGroupDataTable.TableName = "dashboardgroupdata";
core_data_DatabaseEvent.Initialized = "dbInitialized";
core_data_IconData.TableName = "icondata";
core_data_IconData.FieldDefinitions = [{ fieldName : "iconId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "path", fieldType : 1}];
core_data_IconData.PrimaryFieldDefinitions = [{ fieldName : "iconId", fieldType : 2}];
core_data_IconData.LinkedFields = [];
core_data_IconDataTable.TableName = "icondata";
core_data_LayoutData.TableName = "layoutdata";
core_data_LayoutData.FieldDefinitions = [{ fieldName : "layoutId", fieldType : 2},{ fieldName : "organizationId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "layoutData", fieldType : 1}];
core_data_LayoutData.PrimaryFieldDefinitions = [{ fieldName : "layoutId", fieldType : 2}];
core_data_LayoutData.LinkedFields = [];
core_data_LayoutDataTable.TableName = "layoutdata";
core_data_OrganizationData.TableName = "organizationdata";
core_data_OrganizationData.FieldDefinitions = [{ fieldName : "organizationId", fieldType : 2},{ fieldName : "name", fieldType : 1}];
core_data_OrganizationData.PrimaryFieldDefinitions = [{ fieldName : "organizationId", fieldType : 2}];
core_data_OrganizationData.LinkedFields = [];
core_data_OrganizationDataTable.TableName = "organizationdata";
core_data_PageData.TableName = "pagedata";
core_data_PageData.FieldDefinitions = [{ fieldName : "pageId", fieldType : 2},{ fieldName : "parentPageId", fieldType : 2},{ fieldName : "siteId", fieldType : 2},{ fieldName : "layoutId", fieldType : 2},{ fieldName : "iconId", fieldType : 2},{ fieldName : "name", fieldType : 1}];
core_data_PageData.PrimaryFieldDefinitions = [{ fieldName : "pageId", fieldType : 2}];
core_data_PageData.LinkedFields = [];
core_data_PageDataTable.TableName = "pagedata";
core_data_PermissionData.TableName = "permissiondata";
core_data_PermissionData.FieldDefinitions = [{ fieldName : "permissionId", fieldType : 2},{ fieldName : "roleId", fieldType : 2},{ fieldName : "resourceId", fieldType : 2},{ fieldName : "resourceType", fieldType : 2},{ fieldName : "permissionAction", fieldType : 2}];
core_data_PermissionData.PrimaryFieldDefinitions = [{ fieldName : "permissionId", fieldType : 2}];
core_data_PermissionData.LinkedFields = [];
core_data_PermissionDataTable.TableName = "permissiondata";
core_data_PortletInstanceData.TableName = "portletinstancedata";
core_data_PortletInstanceData.FieldDefinitions = [{ fieldName : "portletInstanceId", fieldType : 2},{ fieldName : "pageId", fieldType : 2},{ fieldName : "portletData", fieldType : 1},{ fieldName : "layoutData", fieldType : 1}];
core_data_PortletInstanceData.PrimaryFieldDefinitions = [{ fieldName : "portletInstanceId", fieldType : 2}];
core_data_PortletInstanceData.LinkedFields = [];
core_data_PortletInstanceDataTable.TableName = "portletinstancedata";
core_data_ResourceType.Organization = 1;
core_data_ResourceType.User = 2;
core_data_ResourceType.UserGroup = 3;
core_data_ResourceType.Role = 4;
core_data_ResourceType.Site = 5;
core_data_ResourceType.Dashboard = 6;
core_data_ResourceType.DashboardGroup = 7;
core_data_ResourceType.DataSource = 8;
core_data_RoleData.TableName = "roledata";
core_data_RoleData.FieldDefinitions = [{ fieldName : "roleId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "organizationId", fieldType : 2}];
core_data_RoleData.PrimaryFieldDefinitions = [{ fieldName : "roleId", fieldType : 2}];
core_data_RoleData.LinkedFields = [];
core_data_RoleDataTable.TableName = "roledata";
core_data_SiteData.TableName = "sitedata";
core_data_SiteData.FieldDefinitions = [{ fieldName : "siteId", fieldType : 2},{ fieldName : "organizationId", fieldType : 2},{ fieldName : "name", fieldType : 1}];
core_data_SiteData.PrimaryFieldDefinitions = [{ fieldName : "siteId", fieldType : 2}];
core_data_SiteData.LinkedFields = [];
core_data_SiteDataTable.TableName = "sitedata";
core_data_UserData.TableName = "userdata";
core_data_UserData.FieldDefinitions = [{ fieldName : "userId", fieldType : 2},{ fieldName : "username", fieldType : 1},{ fieldName : "password", fieldType : 1},{ fieldName : "firstName", fieldType : 1},{ fieldName : "lastName", fieldType : 1},{ fieldName : "emailAddress", fieldType : 1},{ fieldName : "isAdmin", fieldType : 3}];
core_data_UserData.PrimaryFieldDefinitions = [{ fieldName : "userId", fieldType : 2}];
core_data_UserData.LinkedFields = [];
core_data_UserDataTable.TableName = "userdata";
core_data_UserGroupData.TableName = "usergroupdata";
core_data_UserGroupData.FieldDefinitions = [{ fieldName : "userGroupId", fieldType : 2},{ fieldName : "name", fieldType : 1},{ fieldName : "organizationId", fieldType : 2}];
core_data_UserGroupData.PrimaryFieldDefinitions = [{ fieldName : "userGroupId", fieldType : 2}];
core_data_UserGroupData.LinkedFields = [];
core_data_UserGroupDataTable.TableName = "usergroupdata";
core_data_UserGroupRoleLinkData.TableName = "usergrouprolelinkdata";
core_data_UserGroupRoleLinkData.FieldDefinitions = [{ fieldName : "userGroupId", fieldType : 2},{ fieldName : "roleId", fieldType : 2}];
core_data_UserGroupRoleLinkData.PrimaryFieldDefinitions = [{ fieldName : "userGroupId", fieldType : 2}];
core_data_UserGroupRoleLinkData.LinkedFields = [];
core_data_UserGroupRoleLinkDataTable.TableName = "usergrouprolelinkdata";
core_data_UserOrganizationLinkData.TableName = "userorganizationlinkdata";
core_data_UserOrganizationLinkData.FieldDefinitions = [{ fieldName : "userId", fieldType : 2},{ fieldName : "organizationId", fieldType : 2}];
core_data_UserOrganizationLinkData.PrimaryFieldDefinitions = [{ fieldName : "userId", fieldType : 2}];
core_data_UserOrganizationLinkData.LinkedFields = [];
core_data_UserOrganizationLinkDataTable.TableName = "userorganizationlinkdata";
core_data_UserUserGroupLinkData.TableName = "userusergrouplinkdata";
core_data_UserUserGroupLinkData.FieldDefinitions = [{ fieldName : "userId", fieldType : 2},{ fieldName : "userGroupId", fieldType : 2}];
core_data_UserUserGroupLinkData.PrimaryFieldDefinitions = [{ fieldName : "userId", fieldType : 2}];
core_data_UserUserGroupLinkData.LinkedFields = [];
core_data_UserUserGroupLinkDataTable.TableName = "userusergrouplinkdata";
core_data_internal_FieldType.Unknown = 0;
core_data_internal_FieldType.String = 1;
core_data_internal_FieldType.Number = 2;
core_data_internal_FieldType.Boolean = 3;
core_graphs_BarGraphEvent.BAR_SELECTED = "barSelected";
core_graphs_BarGraphEvent.BAR_UNSELECTED = "barUnselected";
core_graphs_BarGraph.nextId = 0;
core_graphs_BarGraph.counter = 0;
core_graphs_HorizontalBarGraphEvent.BAR_SELECTED = "barSelected";
core_graphs_HorizontalBarGraphEvent.BAR_UNSELECTED = "barUnselected";
core_graphs_HorizontalBarGraph.nextId = 0;
core_graphs_HorizontalBarGraph.counter = 0;
core_graphs_ScatterGraphEvent.POINT_SELECTED = "pointSelected";
core_graphs_ScatterGraphEvent.POINT_UNSELECTED = "pointUnselected";
core_graphs_ScatterGraph.nextId = 0;
haxe_Unserializer.DEFAULT_RESOLVER = new haxe__$Unserializer_DefaultResolver();
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ui_backend_BackendImpl.id = "html5";
haxe_ui_util_GenericConfig.cache = new haxe_ds_StringMap();
haxe_ui_Toolkit.styleSheet = new haxe_ui_styles_CompositeStyleSheet();
haxe_ui_Toolkit.properties = new haxe_ds_StringMap();
haxe_ui_Toolkit.nativeConfig = new haxe_ui_util_GenericConfig();
haxe_ui_Toolkit._theme = "default";
haxe_ui_Toolkit._backendProperties = new haxe_ui_util_Properties();
haxe_ui_Toolkit._built = false;
haxe_ui_Toolkit._backendBuilt = false;
haxe_ui_Toolkit._initialized = false;
haxe_ui_Toolkit.pixelsPerRem = 16;
haxe_ui_Toolkit.roundScale = true;
haxe_ui_Toolkit.autoScale = true;
haxe_ui_Toolkit._scaleX = 0;
haxe_ui_Toolkit._scaleY = 0;
haxe_ui_backend_PlatformBase.KEY_CODE_TAB = 9;
haxe_ui_backend_PlatformBase.KEY_CODE_UP = 38;
haxe_ui_backend_PlatformBase.KEY_CODE_DOWN = 40;
haxe_ui_backend_PlatformBase.KEY_CODE_LEFT = 37;
haxe_ui_backend_PlatformBase.KEY_CODE_RIGHT = 39;
haxe_ui_backend_PlatformBase.KEY_CODE_SPACE = 32;
haxe_ui_backend_PlatformBase.KEY_CODE_ENTER = 13;
haxe_ui_backend_PlatformBase.KEY_CODE_ESCAPE = 27;
haxe_ui_backend_PlatformBase.MOBILE_REGEXP = new EReg("(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino","gi");
haxe_ui_backend_PlatformImpl._vscrollWidth = -1;
haxe_ui_backend_PlatformImpl._hscrollHeight = -1;
haxe_ui_backend_html5_EventMapper.HAXEUI_TO_DOM = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["doubleclick"] = "dblclick";
	_g.h["rightmousedown"] = "mousedown";
	_g.h["rightmouseup"] = "mouseup";
	_g.h["rightclick"] = "contextmenu";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scrollchange"] = "scroll";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.DOM_TO_HAXEUI = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "mousemove";
	_g.h["mouseover"] = "mouseover";
	_g.h["mouseout"] = "mouseout";
	_g.h["mousedown"] = "mousedown";
	_g.h["mouseup"] = "mouseup";
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mousedown";
	_g.h["touchend"] = "mouseup";
	_g.h["click"] = "click";
	_g.h["contextmenu"] = "rightclick";
	_g.h["dblclick"] = "doubleclick";
	_g.h["change"] = "change";
	_g.h["keydown"] = "keydown";
	_g.h["keyup"] = "keyup";
	_g.h["scroll"] = "scrollchange";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.MOUSE_TO_TOUCH = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["mousemove"] = "touchmove";
	_g.h["mousedown"] = "touchstart";
	_g.h["mouseup"] = "touchend";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_EventMapper.TOUCH_TO_MOUSE = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["touchmove"] = "mousemove";
	_g.h["touchstart"] = "mouseout";
	_g.h["touchend"] = "mousedown";
	$r = _g;
	return $r;
}(this));
haxe_ui_backend_html5_HtmlUtils._dpi = 0;
haxe_ui_backend_html5_util_FontDetect._initialized = false;
haxe_ui_backend_html5_util_FontDetect._aFallbackFonts = ["serif","sans-serif","monospace","cursive","fantasy"];
haxe_ui_components_CalendarEvent.DATE_CHANGE = "datechange";
haxe_ui_components_CalendarDropDownHandler.DATE_FORMAT = "%d/%m/%Y";
haxe_ui_components_DropDownBuilder.HANDLER_MAP = new haxe_ds_StringMap();
haxe_ui_components__$TabBar_Builder.SCROLL_INCREMENT = 20;
haxe_ui_containers_CalendarView.MONTH_NAMES = ["January","Febuary","March","April","May","June","July","August","September","October","November","December"];
haxe_ui_containers_CalendarView.DATE_FORMAT = "%Y-%m-%d";
haxe_ui_containers_ScrollViewEvents.INERTIAL_TIME_CONSTANT = 325;
haxe_ui_core_ItemRenderer.__meta__ = { fields : { allowHover : { clonable : null}}};
haxe_ui_containers_dialogs_DialogButton.SAVE = "{{dialog.save}}";
haxe_ui_containers_dialogs_DialogButton.YES = "{{dialog.yes}}";
haxe_ui_containers_dialogs_DialogButton.NO = "{{dialog.no}}";
haxe_ui_containers_dialogs_DialogButton.CLOSE = "{{dialog.close}}";
haxe_ui_containers_dialogs_DialogButton.OK = "{{dialog.ok}}";
haxe_ui_containers_dialogs_DialogButton.CANCEL = "{{dialog.cancel}}";
haxe_ui_containers_dialogs_DialogButton.APPLY = "{{dialog.apply}}";
haxe_ui_containers_dialogs_DialogEvent.DIALOG_CLOSED = "dialogClosed";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_INFO = "info";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_QUESTION = "question";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_WARNING = "warning";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_ERROR = "error";
haxe_ui_containers_dialogs_MessageBoxType.TYPE_YESNO = "yesno";
haxe_ui_containers_menus_MenuEvent.MENU_SELECTED = "menuselected";
haxe_ui_containers_menus_MenuEvent.MENU_OPENED = "menuopened";
haxe_ui_containers_menus_MenuEvent.MENU_CLOSED = "menuclosed";
haxe_ui_core_ComponentFieldMap.MAP = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["group"] = "componentGroup";
	_g.h["contentLayout"] = "contentLayoutName";
	$r = _g;
	return $r;
}(this));
haxe_ui_core_Platform.METRIC_VSCROLL_WIDTH = "patform.metrics.vscroll.width";
haxe_ui_core_Platform.METRIC_HSCROLL_HEIGHT = "patform.metrics.hscroll.height";
haxe_ui_data_DataSource.regexAlpha = new EReg("[^a-zA-Z]","g");
haxe_ui_data_DataSource.regexNumeric = new EReg("[^0-9]","g");
haxe_ui_events_ActionEvent.ACTION_START = "actionStart";
haxe_ui_events_ActionEvent.ACTION_END = "actionEnd";
haxe_ui_events_AnimationEvent.START = "animationstart";
haxe_ui_events_AnimationEvent.END = "animationend";
haxe_ui_events_DragEvent.DRAG_START = "dragStart";
haxe_ui_events_DragEvent.DRAG = "drag";
haxe_ui_events_DragEvent.DRAG_END = "dragEnd";
haxe_ui_events_FocusEvent.FOCUS_IN = "focusin";
haxe_ui_events_FocusEvent.FOCUS_OUT = "focusout";
haxe_ui_events_ItemEvent.COMPONENT_EVENT = "itemComponentEvent";
haxe_ui_events_KeyboardEvent.KEY_DOWN = "keydown";
haxe_ui_events_KeyboardEvent.KEY_PRESS = "keypress";
haxe_ui_events_KeyboardEvent.KEY_UP = "keyup";
haxe_ui_events_MouseEvent.MOUSE_MOVE = "mousemove";
haxe_ui_events_MouseEvent.MOUSE_OVER = "mouseover";
haxe_ui_events_MouseEvent.MOUSE_OUT = "mouseout";
haxe_ui_events_MouseEvent.MOUSE_DOWN = "mousedown";
haxe_ui_events_MouseEvent.MOUSE_UP = "mouseup";
haxe_ui_events_MouseEvent.MOUSE_WHEEL = "mousewheel";
haxe_ui_events_MouseEvent.CLICK = "click";
haxe_ui_events_MouseEvent.DBL_CLICK = "doubleclick";
haxe_ui_events_MouseEvent.RIGHT_CLICK = "rightclick";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_DOWN = "rightmousedown";
haxe_ui_events_MouseEvent.RIGHT_MOUSE_UP = "rightmouseup";
haxe_ui_events_ScrollEvent.CHANGE = "scrollchange";
haxe_ui_events_ScrollEvent.START = "scrollstart";
haxe_ui_events_ScrollEvent.STOP = "scrollstop";
haxe_ui_events_SortEvent.SORT_CHANGED = "sortchanged";
haxe_ui_events_ThemeEvent.THEME_CHANGED = "themeChanged";
haxe_ui_events_ValidationEvent.START = "ValidationStart";
haxe_ui_events_ValidationEvent.STOP = "ValidationStop";
haxe_ui_locale_LocaleEvent.LOCALE_CHANGED = "localeChanged";
haxe_ui_locale_LocaleManager._registeredComponents = new haxe_ds_ObjectMap();
haxe_ui_parsers_ui_ComponentParser._nextId = 0;
haxe_ui_styles_Parser.cssKeyframesRegex = new EReg("@keyframes\\s*(\\w+?)\\s*\\{([\\s\\S]*?\\}\\s*?)\\}","gi");
haxe_ui_styles_Parser.cssKeyframeSelectorRegex = new EReg("([\\w%]+)\\s*\\{\\s*([\\s\\S]*?)\\s*\\}","gi");
haxe_ui_styles_Parser.combinedCSSMediaRegex = new EReg("((\\s*?(?:/\\*[\\s\\S]*?\\*/)?\\s*?@media[\\s\\S]*?)\\{([\\s\\S]*?)\\}\\s*?\\})|(([\\s\\S]*?)\\{([\\s\\S]*?)\\})","gi");
haxe_ui_styles_Parser.cssCommentsRegex = new EReg("(/\\*[\\s\\S]*?\\*/)","gi");
haxe_ui_styles_Parser.cssImportStatementRegex = new EReg("@import .*?;","gi");
haxe_ui_styles_Parser.newlineRegex = new EReg("\n+","g");
haxe_ui_styles_ValueTools.timeEReg = new EReg("^(-?\\d+(?:\\.\\d+)?)(s|ms)$","gi");
haxe_ui_styles_ValueTools.colors = (function($this) {
	var $r;
	var _g = new haxe_ds_StringMap();
	_g.h["black"] = 0;
	_g.h["red"] = 16711680;
	_g.h["lime"] = 65280;
	_g.h["blue"] = 255;
	_g.h["white"] = 16777215;
	_g.h["aqua"] = 65535;
	_g.h["fuchsia"] = 16711935;
	_g.h["yellow"] = 16776960;
	_g.h["maroon"] = 8388608;
	_g.h["green"] = 32768;
	_g.h["navy"] = 128;
	_g.h["olive"] = 8421376;
	_g.h["purple"] = 8388736;
	_g.h["teal"] = 32896;
	_g.h["silver"] = 12632256;
	_g.h["gray"] = 8421504;
	_g.h["grey"] = 8421504;
	$r = _g;
	return $r;
}(this));
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DURATION = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DELAY = 0;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_ITERATION_COUNT = 1;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_EASING_FUNCTION = haxe_ui_styles_EasingFunction.EASE;
haxe_ui_styles_animation_AnimationOptions.DEFAULT_DIRECTION = "normal";
haxe_ui_styles_animation_AnimationOptions.DEFAULT_FILL_MODE = "forwards";
haxe_ui_themes_Theme.DEFAULT = "default";
haxe_ui_themes_Theme.DARK = "dark";
haxe_ui_tooltips_ToolTipManager.defaultDelay = 500;
haxe_ui_tooltips_ToolTipManager.fade = true;
haxe_ui_util_MathUtil.MAX_INT = 2147483647;
haxe_ui_util_MathUtil.MIN_INT = -2147483648;
haxe_ui_util_StyleUtil.style2ComponentEReg = new EReg("-(\\w)","g");
haxe_ui_util_StyleUtil.component2StyleEReg = new EReg("([A-Z])","g");
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	h.h["lt"] = "<";
	h.h["gt"] = ">";
	h.h["amp"] = "&";
	h.h["quot"] = "\"";
	h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
